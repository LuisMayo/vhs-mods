---@meta

---@class AAIBehaviourSetter : AActor
---@field mpAICharRef TWeakObjectPtr<ATPChar>
---@field mAIBehaviours TArray<FGameplayTag>
AAIBehaviourSetter = {}

---@param behaviourTag FGameplayTag
function AAIBehaviourSetter:SetBehaviour(behaviourTag) end
---@param pAIChar ATPChar
function AAIBehaviourSetter:LinkAICharacter(pAIChar) end
---@return UBlackboardComponent
function AAIBehaviourSetter:GetBlackBoardFromAIChar() end
---@return ATPChar
function AAIBehaviourSetter:GetAICharacter() end


---@class AAIWeaponSpawner : AActor
---@field mbAutoRespawnWeapon boolean
---@field mAutoRespawnInterval float
---@field mWeaponTypeToSpawn EWeaponTypeEnum
---@field mpAICharReference ATPChar
AAIWeaponSpawner = {}

function AAIWeaponSpawner:SpawnWeapon() end
---@param bSuccessful boolean
function AAIWeaponSpawner:OnWeaponSpawned(bSuccessful) end
---@param inAIChar ATPChar
function AAIWeaponSpawner:LinkAICharacter(inAIChar) end
---@return EWeaponTypeEnum
function AAIWeaponSpawner:GetSelectedWeaponType() end
---@param weaponType EWeaponTypeEnum
---@return FText
function AAIWeaponSpawner:GetLocNameForWeapon(weaponType) end
---@return boolean
function AAIWeaponSpawner:CanSpawnWeapon() end


---@class AAdrenalinePickup : APickupBase
AAdrenalinePickup = {}

function AAdrenalinePickup:MulticastAllPlayUseAdrenaline() end
function AAdrenalinePickup:MulticastAllPlayGainAdrenaline() end


---@class AAnimSpawnableItemBase : AActor
---@field mpSkeletalMeshComp USkeletalMeshComponent
---@field mpWorldEffectsManager UWorldEffectsManager
AAnimSpawnableItemBase = {}

---@param pSkeletalMesh USkeletalMesh
---@param pAnimSequence UAnimationAsset
function AAnimSpawnableItemBase:SetSkeletalMesh(pSkeletalMesh, pAnimSequence) end
---@return USkeletalMeshComponent
function AAnimSpawnableItemBase:GetSkelMesh() end


---@class ABaseChar : ACharacter
---@field mPrevForwardNavigation ESelectionNavigation
---@field mPrevRightNavigation ESelectionNavigation
---@field mpCachedGameplayPC AGameplayPC
---@field mSpawnedLobbyIdx int32
---@field mbAutoEquipLoadout boolean
---@field mpCharVisualization UCharVisualization
---@field mMovementInput FVector
---@field mLastMovementInputRotation FRotator
---@field mLastVelocityRotation FRotator
---@field mMoveInputAndVelocityDiff float
---@field mbManifested boolean
---@field mLookRotation FRotator
---@field mLookPosition FVector
---@field mAimYawRate float
---@field mAimYawDelta float
---@field mTargetRotation FRotator
---@field mCharacterRotation FRotator
---@field mRotationMode ERotationMode
---@field mRotationRateMultiplier float
---@field mManualRotation FRotator
---@field mManualRotationRate float
---@field mbUsingManualRotation boolean
---@field mDirection float
---@field mPreviousVelocityRotation FRotator
---@field mPreviousSpeed float
---@field mPositionLastPeriod FVector
---@field mDistanceTravelledOverLastPeriod float
---@field mDistanceTimeCounter float
---@field mDistanceRollover float
---@field mDistanceTravelledOverThisPeriodStep float
---@field mLastRolloverPercent float
---@field mDistanceValues TArray<float>
---@field mLeanGrounded FVector2D
---@field mSpawnTransform FTransform
---@field mVerticalMenuNav ESelectionNavigation
---@field mHorizontalMenuNav ESelectionNavigation
---@field mOverrideMenuNav ESelectionNavigation
---@field mMenuNavMovementTimer float
---@field mMenuNavCooldownTimer float
---@field mpLastRoomVolume ARoomVolume
---@field mCurrentRoomVolumes TArray<ARoomVolume>
---@field mTimeInNewRoomVolume float
---@field mCurrentCameraLocks TMap<FString, boolean>
---@field mbCanMoveCharacter boolean
---@field mbClientShouldSendMovementData boolean
---@field mFaction EFaction
---@field mpCorsairPeripheralComponet UCorsairPeripheralComponent
---@field mBaseCharPostUpdateTick FBaseCharPostUpdateTickFunction
---@field mbIsTutorialCharacter boolean
---@field mbIsFrontEndCharacter boolean
---@field mbIsAIControlledCharacter boolean
ABaseChar = {}

---@return boolean
function ABaseChar:UsingManualRotation() end
function ABaseChar:UpdateRotationMode() end
---@param DeltaTime float
function ABaseChar:UpdateRotation(DeltaTime) end
function ABaseChar:UpdateMovementFriction() end
---@param DeltaTime float
function ABaseChar:UpdateMovement(DeltaTime) end
function ABaseChar:UpdateMoveAxisInput() end
---@param DeltaTime float
function ABaseChar:UpdateMenuNavigation(DeltaTime) end
function ABaseChar:UpdateMenuAxisInput() end
function ABaseChar:UpdateLookAxisInput() end
---@param DeltaTime float
function ABaseChar:UpdateLongHoldInput(DeltaTime) end
---@param DeltaTime float
function ABaseChar:UpdateInputBuffers(DeltaTime) end
function ABaseChar:UpdateCharacterAuras() end
---@param SpawnTransform FTransform
function ABaseChar:SetSpawnTransform(SpawnTransform) end
---@param lobbyIdx int32
function ABaseChar:SetSpawnedLobbyIndex(lobbyIdx) end
---@param mulitplier float
function ABaseChar:SetRotationRateMultiplier(mulitplier) end
---@param RotationMode ERotationMode
function ABaseChar:SetRotationMode(RotationMode) end
---@param Val boolean
function ABaseChar:SetIsTutorialCharacter(Val) end
---@param bSet boolean
function ABaseChar:SetIsFrontEndCharacter(bSet) end
---@param Val boolean
function ABaseChar:SetIsAIControlledCharacter(Val) end
---@param faction EFaction
function ABaseChar:SetFaction(faction) end
---@param bCanMove boolean
function ABaseChar:SetCanMoveCharacter(bCanMove) end
---@param lockName FString
---@param bNewValue boolean
function ABaseChar:SetCameraLockValue(lockName, bNewValue) end
---@param bSet boolean
function ABaseChar:SetAutoEquipLoadout(bSet) end
---@param movementInput FVector
---@param lookRotation FRotator
---@param lookPosition FVector
---@param TargetRotation FRotator
---@param characterRotation FRotator
function ABaseChar:ServerSetMovementData(movementInput, lookRotation, lookPosition, TargetRotation, characterRotation) end
function ABaseChar:ResetAverageDistanceTravelled() end
---@param pOverlappedFrame ARoomVolume
function ABaseChar:RecieveRoomVolumeOverlap(pOverlappedFrame) end
function ABaseChar:OnRep_Manifested() end
---@param ActionType EGameActionType
function ABaseChar:OnBufferableAction(ActionType) end
---@param auraName FName
---@param bAuraActive boolean
---@param pLocalViewBaseChar ABaseChar
function ABaseChar:OnAuraUpdated(auraName, bAuraActive, pLocalViewBaseChar) end
---@param TargetRotation FRotator
---@param interpSpeed float
function ABaseChar:ModifyCharacterRotation(TargetRotation, interpSpeed) end
---@return boolean
function ABaseChar:IsTutorialCharacter() end
---@return boolean
function ABaseChar:IsReplayView() end
---@return boolean
function ABaseChar:IsPlayingInEditor() end
---@return boolean
function ABaseChar:IsPauseMenuActive() end
---@return boolean
function ABaseChar:IsObserverCharacter() end
---@return boolean
function ABaseChar:IsMoving() end
---@return boolean
function ABaseChar:IsManifested() end
---@return boolean
function ABaseChar:IsLocalOrSpectatorView() end
---@return boolean
function ABaseChar:IsInGame() end
---@return boolean
function ABaseChar:IsGoodCharacter() end
---@return boolean
function ABaseChar:IsFrontEndCharacter() end
---@return boolean
function ABaseChar:IsEvilCharacter() end
---@return boolean
function ABaseChar:IsAimingPing() end
---@return boolean
function ABaseChar:IsAIControlledCharacter() end
---@return boolean
function ABaseChar:HasMovementInput() end
---@return float
function ABaseChar:GetWalkSpeed() end
---@return FRotator
function ABaseChar:GetTargetRotation() end
---@return FName
function ABaseChar:GetSpineName() end
---@return FTransform
function ABaseChar:GetSpawnTransform() end
---@return float
function ABaseChar:GetRunSpeed() end
---@return float
function ABaseChar:GetRotationRateMultiplier() end
---@return ERotationMode
function ABaseChar:GetRotationMode() end
---@return UExtAkComponent
function ABaseChar:GetPrimaryAkEmitter() end
---@return float
function ABaseChar:GetPingVisibilityRadius() end
---@return float
function ABaseChar:GetMovementInputAndVelocityDiff() end
---@return FVector
function ABaseChar:GetMovementInput() end
---@return float
function ABaseChar:GetManualRotationRate() end
---@return FRotator
function ABaseChar:GetManualRotation() end
---@return FRotator
function ABaseChar:GetLookRotation() end
---@return FVector
function ABaseChar:GetLookPosition() end
---@return AGameplayHUD
function ABaseChar:GetLocalGameplayHUD() end
---@return FVector2D
function ABaseChar:GetLeanGrounded() end
---@return FRotator
function ABaseChar:GetLastVelocityRotation() end
---@return FRotator
function ABaseChar:GetLastMovementInputRotation() end
---@return float
function ABaseChar:GetHidePointOffset() end
---@return AGameplayPS
function ABaseChar:GetGameplayPS() end
---@param bUseCached boolean
---@return AGameplayPC
function ABaseChar:GetGameplayPC(bUseCached) end
---@return AGameplayGS
function ABaseChar:GetGameplayGS() end
---@return AGameplayGM
function ABaseChar:GetGameplayGM() end
---@return float
function ABaseChar:GetDistanceTravelledOverLastPeriod() end
---@return float
function ABaseChar:GetDirection() end
---@return ARoomVolume
function ABaseChar:GetCurrentRoomVolume() end
---@return UCorsairPeripheralComponent
function ABaseChar:GetCorsairPeripheralComponent() end
---@param CharacterType ECharacterType
---@return UClass
function ABaseChar:GetClassFromCharacterType(CharacterType) end
---@return UCharVisualization
function ABaseChar:GetCharVis() end
---@return FRotator
function ABaseChar:GetCharacterRotation() end
---@return UCameraComponent
function ABaseChar:GetCameraComponent() end
---@param bIgnoreModifiers boolean
---@return float
function ABaseChar:GetBaseSpeed(bIgnoreModifiers) end
---@return float
function ABaseChar:GetBasePingVisibilityRadius() end
function ABaseChar:DoServerUpdateManualRotation() end
---@param manualRotation FRotator
---@param RotationRate float
function ABaseChar:DoServerSetupManualRotation(manualRotation, RotationRate) end
---@param bSet boolean
function ABaseChar:DoServerSetManifested_WithNotify(bSet) end
---@param NewRot FRotator
function ABaseChar:DoServerSetCharacterRotationRaw(NewRot) end
---@param pEffect AEvilScreamEffect
function ABaseChar:DoServerReactToScream(pEffect) end
function ABaseChar:DoServerDebugKill() end
function ABaseChar:DoServerClearManualRotation() end
function ABaseChar:DoServerCheckScreams() end
---@return boolean
function ABaseChar:CreateCorsairPeripheralComponent() end
function ABaseChar:ClientUnregisterInputBindings() end
---@return boolean
function ABaseChar:ClientShouldSendMovementData() end
---@param bSet boolean
function ABaseChar:ClientSetShouldSendMovementData(bSet) end
function ABaseChar:ClientRegisterInputBindings() end
---@param pOverlappedFrame ARoomVolume
function ABaseChar:ClearRoomVolumeOverlap(pOverlappedFrame) end
---@return boolean
function ABaseChar:CanMoveCamera() end
---@return float
function ABaseChar:CalculateVelocityRotationRate() end
---@return float
function ABaseChar:CalculateSpeed() end
---@return float
function ABaseChar:CalculateLocomotionPlayRate() end
function ABaseChar:CalculateGroundedLeaningValues() end
---@return float
function ABaseChar:CalculateGaitValue() end
---@return boolean
function ABaseChar:AllowTutorialFunctions() end
---@return boolean
function ABaseChar:AllowMouseLook() end
---@return boolean
function ABaseChar:AllowedToMove() end
---@return boolean
function ABaseChar:AllowedToInputBuffer() end
---@return boolean
function ABaseChar:AllowDebugKeys() end


---@class ABaseHUD : AHUD
---@field mpNavWidgetManager UNavWidgetManager
---@field mPreviousScreen EMenuScreen
---@field mCurrentScreen EMenuScreen
---@field mTransitionOutScreen EMenuScreen
---@field mTransitionInScreen EMenuScreen
---@field mpActiveScreen UBaseScreen
---@field mpModalReturnScreen UBaseScreen
---@field mpButtonBarWidget UButtonBarWidget
---@field mButtonBarWidget TSubclassOf<UButtonBarWidget>
---@field mpTipsPanelWidget UTipsPanelWidget
---@field mTipsPanelWidgetClass TSubclassOf<UTipsPanelWidget>
---@field mpDebugVoiceChatWidget UDebugVoiceChatWidget
---@field mDebugVoiceChatWidgetClass TSubclassOf<UDebugVoiceChatWidget>
---@field mpPrimaryAkEmitter UExtAkComponent
---@field mbMasterHUDVisibility boolean
ABaseHUD = {}

---@param Duration float
function ABaseHUD:UpdateCurrentCameraLocation(Duration) end
---@param screen EMenuScreen
---@param bNoAnimation boolean
function ABaseHUD:TransitionToScreen(screen, bNoAnimation) end
---@param screen EMenuScreen
---@param bNoAnimation boolean
function ABaseHUD:ShowScreen(screen, bNoAnimation) end
---@param bSet boolean
function ABaseHUD:SetMasterHUDVisibility(bSet) end
function ABaseHUD:RethinkHUDVisibility() end
---@param wiseEventStr FString
function ABaseHUD:PlayUISound(wiseEventStr) end
function ABaseHUD:OnTransitionOutComplete() end
function ABaseHUD:OnTransitionInComplete() end
---@return boolean
function ABaseHUD:IsModalActive() end
---@return boolean
function ABaseHUD:IsMasterHUDVisible() end
---@param screen EMenuScreen
function ABaseHUD:HideScreen(screen) end
function ABaseHUD:HideModal() end
---@return UExtAkComponent
function ABaseHUD:GetPrimaryAkEmitter() end


---@class ABasePC : APlayerController
---@field mMouseInvertYScale float
---@field mControllerInvertYScale float
---@field mMouseSensitivity float
---@field mControllerSensitivity FVector2D
---@field mMouseWeaponSensitivity FVector2D
---@field mControllerWeaponSensitivity FVector2D
---@field mbKbdCrouchToggle boolean
---@field mbKbdSprintToggle boolean
---@field mbControllerCrouchToggle boolean
---@field mbControllerSprintToggle boolean
---@field mCowerCameraShakeClass TSubclassOf<UMatineeCameraShake>
---@field mTalismanBeamCameraShakeClass TSubclassOf<UMatineeCameraShake>
---@field mSlingshotCameraShakeClass TSubclassOf<UMatineeCameraShake>
---@field mLocalViewDataMaterialParameterCollection UMaterialParameterCollection
---@field mActiveLoadSteps TArray<UPlayerLoadStep>
ABasePC = {}

---@param Sensitivity FVector2D
function ABasePC:SetMouseWeaponSensitivity(Sensitivity) end
---@param Sensitivity float
function ABasePC:SetMouseSensitivity(Sensitivity) end
---@param invertYScale float
function ABasePC:SetMouseInvertYScale(invertYScale) end
---@param Val boolean
function ABasePC:SetKbdSprintToggle(Val) end
---@param Val boolean
function ABasePC:SetKbdCrouchToggle(Val) end
---@param Sensitivity FVector2D
function ABasePC:SetControllerWeaponSensitivity(Sensitivity) end
---@param Val boolean
function ABasePC:SetControllerSprintToggle(Val) end
---@param Sensitivity FVector2D
function ABasePC:SetControllerSensitivity(Sensitivity) end
---@param invertYScale float
function ABasePC:SetControllerInvertYScale(invertYScale) end
---@param Val boolean
function ABasePC:SetControllerCrouchToggle(Val) end
---@return boolean
function ABasePC:IsKbdSprintToggle() end
---@return boolean
function ABasePC:IsKbdCrouchToggle() end
---@return boolean
function ABasePC:IsControllerSprintToggle() end
---@return boolean
function ABasePC:IsControllerCrouchToggle() end
---@return EHBWorldType
function ABasePC:GetWorldType() end
---@return UAkComponent
function ABasePC:GetPlayerCameraAkListener() end
---@return FVector2D
function ABasePC:GetMouseWeaponSensitivity() end
---@return float
function ABasePC:GetMouseSensitivity() end
---@return float
function ABasePC:GetMouseInvertYScale() end
---@return float
function ABasePC:GetLoadStepsProgress() end
---@return TSubclassOf<UMatineeCameraShake>
function ABasePC:GetCowerCameraShake() end
---@return FVector2D
function ABasePC:GetControllerWeaponSensitivity() end
---@return FVector2D
function ABasePC:GetControllerSensitivity() end
---@return float
function ABasePC:GetControllerInvertYScale() end
---@param isEvil boolean
function ABasePC:ClientSetControllerSettings(isEvil) end
function ABasePC:ClientQueueReformLobby() end
---@return boolean
function ABasePC:CheckLoadStepsComplete() end


---@class ABoxPhysicsProp : APhysicsPropBase
---@field mpBoxCollision UBoxComponent
ABoxPhysicsProp = {}



---@class ACable : ASplineTubeActorBase
---@field mCables TArray<FCableLength>
---@field mpCableMesh UStaticMesh
---@field mLengthOffset float
---@field mRandomLength float
---@field mRandomTension float
---@field mRandomHeight float
---@field mResolutionOffset int32
---@field mSeed int32
---@field mRandomStream FRandomStream
---@field mpCableHangerMesh UStaticMesh
---@field bSwapHangerOrientation boolean
---@field mHangerHeightOffset float
---@field mCableRotations TArray<float>
---@field mpSplineComponentArray TArray<USplineComponent>
---@field mpSplineMeshComponentArray TArray<USplineMeshComponent>
---@field mpSceneComponentArray TArray<USceneComponent>
---@field mpCableHangerArray TArray<UStaticMeshComponent>
---@field bNeedsConstruction boolean
ACable = {}



---@class ACapsuleCollisionTester : AActor
---@field mpCapsuleComponent UCapsuleComponent
ACapsuleCollisionTester = {}

---@param HalfHeight float
---@param Radius float
function ACapsuleCollisionTester:SetCapsuleSize(HalfHeight, Radius) end
---@return UCapsuleComponent
function ACapsuleCollisionTester:GetCapsuleComponent() end


---@class ACinematicEnd : AActor
---@field mpCameraBoom USpringArmComponent
---@field mpCameraComponent UCameraComponent
---@field mpTPChar ATPChar
ACinematicEnd = {}



---@class AClientUpdaterGM : AGameMode
---@field mProgress float
---@field bShowProgressWidget boolean
AClientUpdaterGM = {}

function AClientUpdaterGM:ShowInstallerProgress() end
function AClientUpdaterGM:OnFailureExit() end
---@param chunk uint32
---@param bSuccess boolean
function AClientUpdaterGM:OnChunkInstallFinished(chunk, bSuccess) end
function AClientUpdaterGM:NotEnoughDiskSpace() end
---@return boolean
function AClientUpdaterGM:isFirstTimeInstall() end
---@return float
function AClientUpdaterGM:GetRequiredDiskSpace() end
function AClientUpdaterGM:GetRemoteBuildManifest() end
---@return float
function AClientUpdaterGM:GetLocalDiskFreeSpace() end
function AClientUpdaterGM:CheckPrerequisites() end
function AClientUpdaterGM:CheckPatchAvaliable() end


---@class AClientUpdaterHUD : AHUD
AClientUpdaterHUD = {}


---@class ACraftPoint : APointBase
---@field mbIsCrafting boolean
---@field mpStationBase AStationBase
---@field mbInitialSetup boolean
ACraftPoint = {}

---@return boolean
function ACraftPoint:IsCrafting() end
---@return AStationBase
function ACraftPoint:GetOwningStation() end
function ACraftPoint:DoServerBeginCrafting() end
---@param pOwningTPChar ATPChar
function ACraftPoint:DoServerActivate(pOwningTPChar) end


---@class ACrossWeapon : AWeaponBase
---@field mpSpotLight USpotLightComponent
---@field mpTargetCone UStaticMeshComponent
---@field mpPointLightComponent UPointLightComponent
---@field mpShadowMapCapture USceneCaptureComponent2D
---@field mpShadowMapRenderTarget UTextureRenderTarget2D
---@field mpDepthTestMaterialInstance UMaterialInstance
---@field mpCrossParticleSystemComponent UParticleSystemComponent
---@field mbDamageActive boolean
---@field mCrossActiveTime float
ACrossWeapon = {}

function ACrossWeapon:UpdateConeSize() end
function ACrossWeapon:MulticastAllStopCrossActive() end
function ACrossWeapon:MulticastAllPlayCrossActive() end
---@return boolean
function ACrossWeapon:IsDamageActive() end
---@return float
function ACrossWeapon:GetTimeToMaxEffect() end
---@return UStaticMeshComponent
function ACrossWeapon:GetTargetCone() end
---@return float
function ACrossWeapon:GetEffectiveRange() end
---@return float
function ACrossWeapon:GetCrossActiveTime() end


---@class ACustomCullDistanceVolume : AVolume
---@field mAutomaticCullDistanceSettings FCustomCullDistanceAutomaticSettings
---@field CullDistances TArray<FCustomCullDistanceSizePair>
---@field mbUseManualCullDistances boolean
---@field bEnabled boolean
---@field mPriority int32
---@field mAllowedClasses TArray<UClass>
ACustomCullDistanceVolume = {}

---@param pWorld UWorld
---@param ActorToUpdate AActor
---@param ComponentToUpdate UPrimitiveComponent
---@param bForceUpdate boolean
function ACustomCullDistanceVolume:UpdateCustomCullDistanceVolumes(pWorld, ActorToUpdate, ComponentToUpdate, bForceUpdate) end
---@param SaveFlags uint32
---@param World UWorld
function ACustomCullDistanceVolume:OnPreSaveWorld(SaveFlags, World) end


---@class ADamageSourcePreview : AActor
---@field mpDamageSourceSkin UItemDataAsset
---@field mpOverrideAimTarget AActor
---@field mpAnimOverride UAnimSequence
---@field mbShowAnimProperties boolean
---@field mAnimStartPosition float
---@field mAnimPlayRate float
---@field mbLoopAnim boolean
---@field mpDamageSource AActor
---@field mpPrimaryAkEmitter UExtAkComponent
---@field mbTickInEditor boolean
ADamageSourcePreview = {}

function ADamageSourcePreview:UpdateAnimation() end
function ADamageSourcePreview:SpawnDamageSource() end
---@return boolean
function ADamageSourcePreview:ShouldTickInEditor() end
---@param bActive boolean
---@param bAlternateMode boolean
function ADamageSourcePreview:SetWeaponActive(bActive, bAlternateMode) end
---@param bTickInEditor boolean
function ADamageSourcePreview:SetTickInEditor(bTickInEditor) end
---@param pDamageSourceSkin UItemDataAsset
function ADamageSourcePreview:SetDamageSourceSkin(pDamageSourceSkin) end
---@return UItemDataAsset
function ADamageSourcePreview:GetDamageSourceSkin() end
function ADamageSourcePreview:Deactivate() end
function ADamageSourcePreview:ActivateAlt() end
function ADamageSourcePreview:Activate() end


---@class ADarkShard : AActor
---@field mpDarkShardMaterialParameterCollection UMaterialParameterCollection
---@field mpDummyRoot USceneComponent
---@field mpShardFXContainer USceneComponent
---@field mpPrimaryAkEmitter UExtAkComponent
---@field mpUnattenuatedAkEmitter UExtAkComponent
---@field mpPostProcessComponent UPostProcessComponent
---@field mpVHSWorldPostProcessMaterial UMaterialInstance
---@field mbCanSpawn boolean
---@field mpIconMeshComponent UStaticMeshComponent
---@field mpRiftParticleSystem UParticleSystemComponent
---@field mpRiftBeamParticleSystem UParticleSystemComponent
---@field mTeenActivationProgress float
---@field mEvilActivationProgress float
---@field mbActivatedLastFrame boolean
---@field mActivationEffectAlpha float
---@field mCharactersActivating TArray<ATPChar>
---@field mRevealProgress float
---@field mLifetimeProgress float
---@field mExplodingProgress float
---@field mDestroyedProgress float
---@field mShardState EShardState
---@field mbServerIsQuickCompleteEnabled boolean
---@field mpUnrevealedIconMaterial UMaterialInterface
---@field mpDormantIconMaterial UMaterialInterface
---@field mpInProgressIconMaterial UMaterialInterface
---@field mpShardActivatedIconMaterial UMaterialInterface
---@field mbShouldBeVisible boolean
---@field mpPingCapsuleCollision UCapsuleComponent
---@field mbEmpowered boolean
ADarkShard = {}

---@param DeltaTime float
function ADarkShard:UpdateVisuals(DeltaTime) end
function ADarkShard:UpdateRenderCustomDepth() end
---@param DeltaTime float
function ADarkShard:UpdateIcon(DeltaTime) end
function ADarkShard:UpdateAkEmitters() end
---@param bSet boolean
function ADarkShard:SetShardVisible(bSet) end
function ADarkShard:OnRep_ShardState() end
function ADarkShard:OnRep_IsEmpowered() end
function ADarkShard:MulticastAllPlayReveal() end
---@param bActivated boolean
---@param bIsEvilEffect boolean
function ADarkShard:MulticastAllPlayDestroy(bActivated, bIsEvilEffect) end
---@return boolean
function ADarkShard:IsShardInProgress() end
---@return boolean
function ADarkShard:IsShardActivated() end
---@return boolean
function ADarkShard:IsRevealed() end
---@return boolean
function ADarkShard:IsQuickCompleteEnabled() end
---@return boolean
function ADarkShard:IsPendingReveal() end
---@return boolean
function ADarkShard:IsEmpowered() end
---@return boolean
function ADarkShard:IsBeingActivated() end
---@return UExtAkComponent
function ADarkShard:GetUnattenuatedAkEmitter() end
---@return float
function ADarkShard:GetTeenActivationProgress() end
---@return float
function ADarkShard:GetShardTimeProgressRequired() end
---@return EShardState
function ADarkShard:GetShardState() end
---@return float
function ADarkShard:GetShardProgressFactor() end
---@return USceneComponent
function ADarkShard:GetShardFXContainer() end
---@return float
function ADarkShard:GetRevealProgress() end
---@return UExtAkComponent
function ADarkShard:GetPrimaryAkEmitter() end
---@return float
function ADarkShard:GetLifetimeProgress() end
---@return float
function ADarkShard:GetIconMeshComponentHeight() end
---@return UStaticMeshComponent
function ADarkShard:GetIconMesh() end
---@return float
function ADarkShard:GetEvilActivationProgress() end
---@return float
function ADarkShard:GetDestroyedProgress() end
---@return TArray<ATPChar>
function ADarkShard:GetCharactersActivating() end
---@return float
function ADarkShard:GetActivationProgress() end
---@param DeltaSeconds float
function ADarkShard:DoServerUpdateShardState(DeltaSeconds) end
function ADarkShard:DoServerUpdateActivatingCharacters() end
---@param newState EShardState
function ADarkShard:DoServerSetShardState(newState) end
---@param bSet boolean
function ADarkShard:DoServerSetQuickCompleteEnabled(bSet) end
---@param Time float
function ADarkShard:DoServerSetLifetimeProgress(Time) end
---@param bNewValue boolean
function ADarkShard:DoServerSetEmpowered(bNewValue) end
---@param pChar TArray<ATPChar>
function ADarkShard:DoServerSetCharactersActivating(pChar) end
function ADarkShard:DoServerReveal() end
---@param bWasActivated boolean
---@param bIsEvilEffect boolean
function ADarkShard:DoServerDestroy(bWasActivated, bIsEvilEffect) end
---@param pOwnerChar ATPChar
function ADarkShard:DoServerCreateScream(pOwnerChar) end
function ADarkShard:DoServerBeginPendingReveal() end
---@return boolean
function ADarkShard:CanSpawn() end


---@class ADarkShardListener : AActor
---@field mpParticleSystemComponent UParticleSystemComponent
---@field mpPrimaryAkComponent UExtAkComponent
---@field mpSkeletalMeshComponent USkeletalMeshComponent
---@field mpBloodMaterial UMaterialInstance
---@field mbListenerActive boolean
---@field mTimeBeforeNextBloodDrop float
---@field mActivationProgress float
ADarkShardListener = {}

---@param DeltaSeconds float
function ADarkShardListener:UpdateEffects(DeltaSeconds) end
function ADarkShardListener:StopSounds() end
---@param timeBeforeNextBloodDrop float
function ADarkShardListener:SetTimeBeforeNextBloodDrop(timeBeforeNextBloodDrop) end
---@param bListenerActive boolean
function ADarkShardListener:SetListenerActive(bListenerActive) end
function ADarkShardListener:PlaySounds() end
function ADarkShardListener:OnDarkShardSpawned() end
function ADarkShardListener:OnDarkShardDestroyed() end
---@return boolean
function ADarkShardListener:IsListenerActive() end
---@return float
function ADarkShardListener:GetTimeBeforeNextBloodDrop() end
---@return USkeletalMeshComponent
function ADarkShardListener:GetSkeletalMeshComponent() end
---@return UExtAkComponent
function ADarkShardListener:GetPrimaryAkEmitter() end
---@return UParticleSystemComponent
function ADarkShardListener:GetParticleSystem() end
---@return UMaterialInstance
function ADarkShardListener:GetBloodMaterial() end
function ADarkShardListener:DropBloodDecal() end


---@class ADarkShardSpawner : AActor
---@field mpSpawnedDarkShard ADarkShard
---@field mpSpawnedEvilEnergy AEvilEnergyPowerup
---@field mpDarkShardClass UClass
---@field mpEvilEnergyClass UClass
ADarkShardSpawner = {}

---@return boolean
function ADarkShardSpawner:HasSpawnedEvilEnergy() end
---@return boolean
function ADarkShardSpawner:HasSpawnedDarkShard() end
---@return ADarkShard
function ADarkShardSpawner:GetSpawnedDarkShard() end
---@return AEvilEnergyPowerup
function ADarkShardSpawner:GetEvilEnergy() end
---@param inActors TArray<AActor>
---@return float
function ADarkShardSpawner:GetDistanceScoreToActors(inActors) end
---@return AEvilEnergyPowerup
function ADarkShardSpawner:DoServerSpawnEvilEnergy() end
---@return ADarkShard
function ADarkShardSpawner:DoServerSpawnDarkShard() end
function ADarkShardSpawner:DoServerDestroySpawnedEvilEnergy() end


---@class ADecalSpawner : AActor
---@field mpNiagaraSystem UNiagaraComponent
ADecalSpawner = {}



---@class ADemonSwordProjectile : AActor
---@field mpTrailParticleSystemComp UParticleSystemComponent
---@field mpExplosionParticleSystemComp UParticleSystemComponent
---@field mpProjectileMovementComponent UProjectileMovementComponent
---@field mpCollisionDepthTexture UTexture2D
---@field mpTrailCollisionContainer USceneComponent
---@field mpPrimaryAkEmitter UExtAkComponent
---@field mpTrailAkEmitter UExtAkComponent
---@field mpTrailDecalComponent UDecalComponent
---@field mpTrailMeshComponent UStaticMeshComponent
---@field mpPerceptionStimuliComponent UAIPerceptionStimuliSourceComponent
---@field mbHasHit boolean
---@field mbCleaningUp boolean
---@field mProjectileRotation FRotator
---@field mbIsHittingEvil boolean
---@field mServerLifetime float
---@field mbTrailDamageEnabled boolean
---@field mpDemonSwordSkin UDemonSwordSkinDataAsset
---@field mInitialLocation FVector
---@field mTimeCleaningUp float
---@field mCurrentMaxTrailLength float
---@field mCollisionDepthTextureDimensions FIntPoint
---@field mCollisionExtent FVector
---@field mMaxTrailDistance float
---@field mCollisionDistances TArray<float>
---@field mCollidingEvils TArray<AFPChar>
ADemonSwordProjectile = {}

function ADemonSwordProjectile:UpdateTrailEmitter() end
---@param DeltaTime float
function ADemonSwordProjectile:UpdateTrailEffects(DeltaTime) end
---@param DeltaTime float
function ADemonSwordProjectile:UpdateTrailCollision(DeltaTime) end
---@param HitComp UPrimitiveComponent
---@param OtherActor AActor
---@param OtherComp UPrimitiveComponent
---@param NormalImpulse FVector
---@param Hit FHitResult
function ADemonSwordProjectile:OnHit(HitComp, OtherActor, OtherComp, NormalImpulse, Hit) end
function ADemonSwordProjectile:MulticastAllStopWhistleSound() end
function ADemonSwordProjectile:MulticastAllStopTrailSound() end
---@param NewValue float
function ADemonSwordProjectile:MulticastAllSetProjectileSpeed(NewValue) end
function ADemonSwordProjectile:MulticastAllPlayWhistleSound() end
function ADemonSwordProjectile:MulticastAllPlayTrailSound() end
function ADemonSwordProjectile:MulticastAllExplode() end
---@return boolean
function ADemonSwordProjectile:IsTrailDamageEnabled() end
---@return boolean
function ADemonSwordProjectile:IsDamagingEvil() end
---@return boolean
function ADemonSwordProjectile:IsCleaningUp() end
---@return boolean
function ADemonSwordProjectile:HasHit() end
---@return float
function ADemonSwordProjectile:GetTrailLength() end
---@return float
function ADemonSwordProjectile:GetMaxSpeed() end
---@return EDamageType
function ADemonSwordProjectile:GetDamageType() end
---@return float
function ADemonSwordProjectile:GetBaseProjectileTrailDistance() end
---@param DeltaTime float
function ADemonSwordProjectile:DoServerUpdateLifetime(DeltaTime) end
---@param bSet boolean
function ADemonSwordProjectile:DoServerSetTrailDamageEnabled(bSet) end
function ADemonSwordProjectile:DoServerSetProjectileRotation() end
---@param LifeTime float
function ADemonSwordProjectile:DoServerSetLifetime(LifeTime) end
---@param bSet boolean
function ADemonSwordProjectile:DoServerSetIsDamagingEvil(bSet) end
---@param bSet boolean
function ADemonSwordProjectile:DoServerSetHasHit(bSet) end
---@param bSet boolean
function ADemonSwordProjectile:DoServerSetCleaningUp(bSet) end
---@return float
function ADemonSwordProjectile:DoServerGetLifetime() end
function ADemonSwordProjectile:DoServerExplode() end
function ADemonSwordProjectile:DoServerExpire() end
---@param DeltaSeconds float
function ADemonSwordProjectile:DoServerCheckTrailOverlap(DeltaSeconds) end
function ADemonSwordProjectile:DoServerCheckScreams() end
---@param bTrailDamageDuringCleanup boolean
function ADemonSwordProjectile:DoServerBeginCleanup(bTrailDamageDuringCleanup) end


---@class ADemonSwordWeapon : AProjectileWeaponBase
---@field mpSwipeParticleSystemComponent UParticleSystemComponent
---@field mSwordAlpha float
---@field mbInInitialFireSequence boolean
---@field mbIsInFiringState boolean
---@field mDemonSwordProjectileClass TSubclassOf<ADemonSwordProjectile>
ADemonSwordWeapon = {}

function ADemonSwordWeapon:MulticastAllPlayDemonSwordSlash() end
---@return boolean
function ADemonSwordWeapon:InInitialFireSequence() end
---@return FTransform
function ADemonSwordWeapon:GetProjectileSpawnTransform() end
---@return float
function ADemonSwordWeapon:GetProjectileBaseLifetime() end
---@return TSubclassOf<ADemonSwordProjectile>
function ADemonSwordWeapon:GetDemonSwordProjectileToSpawn() end
---@return float
function ADemonSwordWeapon:GetBaseProjectileSpeed() end
---@param particleEventName FName
function ADemonSwordWeapon:FireSwooshEffect(particleEventName) end
---@param mbValue boolean
function ADemonSwordWeapon:DoServerSetInInitialFireSequence(mbValue) end


---@class ADollMasterChar : AFPChar
---@field mpDLMRTrapPlacementMontage UAnimMontage
---@field mpDOLLTrapPlacementMontage UAnimMontage
---@field mpTrapPlacementSequenceMesh USkeletalMeshComponent
---@field mpChannelingParticleSystem UParticleSystemComponent
---@field mpTrapClass UClass
---@field mpDepartParticleBPClass UClass
---@field mpTrapPlacementVisual USkeletalMeshComponent
---@field mpTrapPlacementMID UMaterialInstanceDynamic
---@field mpTrapPlacementVisualIdle UAnimationAsset
---@field mpTrapCharacterSizeCapsule UCapsuleComponent
---@field mLastPlacementTransform FTransform
---@field mPlacementLocation FVector
---@field mbShowFinalPlacement boolean
---@field mFinalPlacementTransform FTransform
---@field mTraps TArray<ADollMasterTrap>
---@field mpSelectedTrap ADollMasterTrap
---@field mpFurthestTrap ADollMasterTrap
---@field mbUsingSelectedTrap boolean
---@field mbIsInTrapPlacementSequence boolean
---@field mpActiveDollMinion ADollMinionChar
---@field mTrapCooldown float
---@field mSummonCooldown float
---@field mTeleportCooldown float
---@field mTeleportSpeedBoostTimer float
---@field mbTeleportSpeedBoostActive boolean
---@field mTeleportHitRefreshTimer float
---@field mDoubleTeleportTimer float
---@field mbDoubleTeleportWindowActive boolean
---@field mbCloseToTrap boolean
---@field mpPossessMaterialInstance UMaterialInterface
---@field mOnReleasePossessPPTimer float
---@field mTimeSinceLastTrapTriggered float
---@field mTimeSinceLastTeleport float
---@field mTrapCountPenalty int32
ADollMasterChar = {}

function ADollMasterChar:UpdateTrapPlacementVisual() end
function ADollMasterChar:UpdateTrapMeshVisibility() end
function ADollMasterChar:UpdateSelectedTrap() end
---@param DeltaSeconds float
function ADollMasterChar:UpdatePossessPostProcess(DeltaSeconds) end
function ADollMasterChar:StopChannelingAkEvent() end
---@return boolean
function ADollMasterChar:ShowFinalPlacement() end
---@param pTrap ADollMasterTrap
function ADollMasterChar:ServerSetSelectedTrap(pTrap) end
function ADollMasterChar:PlayTrapTriggerNotifyAkEvent() end
function ADollMasterChar:PlayTrapDisarmNotifyAkEvent() end
function ADollMasterChar:PlayChannelingAkEvent() end
function ADollMasterChar:MulticastAllUpdatePlacementLoop() end
function ADollMasterChar:MulticastAllStopTrapPlacement() end
---@param v3DepartPos FVector
---@param v3ArrivePos FVector
---@param trapRot FRotator
function ADollMasterChar:MulticastAllPlayTrapTeleport(v3DepartPos, v3ArrivePos, trapRot) end
function ADollMasterChar:MulticastAllPlayTrapPlacementOutro() end
function ADollMasterChar:MulticastAllPlayTrapPlacementIntro() end
function ADollMasterChar:MulticastAllPlayTrapDisarmNotify() end
function ADollMasterChar:MulticastAllPlayMinionStunNotify() end
function ADollMasterChar:MulticastAllDollMinionRelease() end
---@param TimeRemaining float
function ADollMasterChar:MulticastAllCreateStunHUDAuraIndicator(TimeRemaining) end
---@return boolean
function ADollMasterChar:IsUsingSelectedTrap() end
---@return boolean
function ADollMasterChar:IsTeleportHitRefreshActive() end
---@return boolean
function ADollMasterChar:IsInTrapPlacementSequence() end
---@return boolean
function ADollMasterChar:IsDoubleTeleportWindowOpen() end
---@return boolean
function ADollMasterChar:IsCloseToTrap() end
---@return boolean
function ADollMasterChar:HasJustTeleportedForSpeedBoost() end
---@return boolean
function ADollMasterChar:HasActiveDollMinion() end
---@return TArray<ADollMasterTrap>
function ADollMasterChar:GetTraps() end
---@return int32
function ADollMasterChar:GetTrapCountPenalty() end
---@return float
function ADollMasterChar:GetTimeSinceLastTeleport() end
---@return float
function ADollMasterChar:GetTeleportSpeedBonusTimeRemaining() end
---@return float
function ADollMasterChar:GetTeleportSpeedBonusDuration() end
---@return float
function ADollMasterChar:GetTeleportSpeedBonus() end
---@return float
function ADollMasterChar:GetTeleportHitRefreshTimeRemaining() end
---@return float
function ADollMasterChar:GetTeleportHitRefreshTimer() end
---@return float
function ADollMasterChar:GetTeleportHitRefreshDuration() end
---@return ADollMasterTrap
function ADollMasterChar:GetSelectedTrap() end
---@return ADollMasterTrap
function ADollMasterChar:GetOldestTrap() end
---@return int32
function ADollMasterChar:GetNumTrapsRemaining() end
---@return int32
function ADollMasterChar:GetNumTrapsPlaced() end
---@return int32
function ADollMasterChar:GetNumSelectableTrapsPlaced() end
---@return int32
function ADollMasterChar:GetMaxTraps() end
---@return ADollMasterTrap
function ADollMasterChar:GetFurthestTrap() end
---@return float
function ADollMasterChar:GetDoubleTeleportWindowDuration() end
---@return float
function ADollMasterChar:GetDoubleTeleportTimeRemaining() end
---@return int32
function ADollMasterChar:GetAvailableTraps() end
---@return ADollMinionChar
function ADollMasterChar:GetActiveDollMinion() end
function ADollMasterChar:DoServerUpdateTraps() end
---@param Time float
function ADollMasterChar:DoServerUpdateTrapProximities(Time) end
function ADollMasterChar:DoServerUpdateTrapPlacement() end
---@param DeltaTime float
function ADollMasterChar:DoServerUpdateTeleportTimers(DeltaTime) end
function ADollMasterChar:DoServerThrowTrap() end
---@return boolean
function ADollMasterChar:DoServerTeleport() end
---@return boolean
function ADollMasterChar:DoServerSummon() end
function ADollMasterChar:DoServerStunFromMinionLoss() end
---@param trapCountPenalty int32
function ADollMasterChar:DoServerSetTrapCountPenalty(trapCountPenalty) end
---@param NewValue float
function ADollMasterChar:DoServerSetTimeSinceLastTrapTriggered(NewValue) end
---@param Time float
function ADollMasterChar:DoServerSetTimeSinceLastTeleport(Time) end
---@param Timer float
function ADollMasterChar:DoServerSetTeleportHitRefreshTimer(Timer) end
---@param bShow boolean
function ADollMasterChar:DoServerSetShowFinalPlacement(bShow) end
---@param pTrap ADollMasterTrap
function ADollMasterChar:DoServerSetSelectedTrap(pTrap) end
---@param pTrap ADollMasterTrap
function ADollMasterChar:DoServerSetFurthestTrap(pTrap) end
---@param bSet boolean
function ADollMasterChar:DoServerSetCloseToTrap(bSet) end
---@param pDollMinion ADollMinionChar
function ADollMasterChar:DoServerSetActiveDollMinion(pDollMinion) end
---@param abilityIndex int32
function ADollMasterChar:DoServerRequestBeginAbilityCharge(abilityIndex) end
---@param bCompleted boolean
function ADollMasterChar:DoServerRequestAbortAbilityCharge(bCompleted) end
---@return boolean
function ADollMasterChar:DoServerRemoveTrap() end
---@param Transform FTransform
---@param bSetTarget boolean
---@param bBeginInactive boolean
---@return ADollMasterTrap
function ADollMasterChar:DoServerPlaceTrapWithTransform(Transform, bSetTarget, bBeginInactive) end
function ADollMasterChar:DoServerPlaceTrap() end
---@return boolean
function ADollMasterChar:DoServerPerformTrapPlacement() end
---@param pTriggeredTrap ADollMasterTrap
function ADollMasterChar:DoServerHandleTrapTriggered(pTriggeredTrap) end
---@return float
function ADollMasterChar:DoServerGetTimeSinceLastTrapTriggered() end
---@param pTrap ADollMasterTrap
---@param reason ETrapDestroyReason
function ADollMasterChar:DoServerDestroyTrap(pTrap, reason) end
---@param bWithPenalty boolean
function ADollMasterChar:DoServerDestroyOldestTrap(bWithPenalty) end
---@param pNewTrap ADollMasterTrap
function ADollMasterChar:DoServerDestroyNearbyTraps(pNewTrap) end
function ADollMasterChar:DoServerDestroyAllTraps() end
function ADollMasterChar:DoServerDeactivateDoubleTeleport() end
---@param pTrap ADollMasterTrap
function ADollMasterChar:DoServerBeginSetSelectedTrap(pTrap) end
---@param pTrap ADollMasterTrap
function ADollMasterChar:DoServerAddTrap(pTrap) end
---@return boolean
function ADollMasterChar:CanTrap() end
---@return boolean
function ADollMasterChar:CanTeleport() end
---@return boolean
function ADollMasterChar:CanSummon() end
---@return boolean
function ADollMasterChar:CanRemoveTrap() end
---@param pLocalChar AFPChar
---@return boolean
function ADollMasterChar:AllowedToSelectTraps(pLocalChar) end


---@class ADollMasterTrap : AActor
---@field mpDisarmingTPChar ATPChar
---@field mbIsBeingThrown boolean
---@field mbIsSettling boolean
---@field mThrowTarget FTransform
---@field mThrowStart FTransform
---@field mThrowTimer FClientSmoothedTimer
---@field mClientThrowStart FTransform
---@field mbDidClientSetThrowStart boolean
---@field mProximityAlpha float
---@field mpDetectionMeshComponent UStaticMeshComponent
---@field mpSkeletalMeshComponent USkeletalMeshComponent
---@field mpTriggerParticleSystemComponent UParticleSystemComponent
---@field mpTrapIconMeshComponent UStaticMeshComponent
---@field mpSelectIconMeshComponent UStaticMeshComponent
---@field mpPrimaryAkEmitter UExtAkComponent
---@field mpDestroyedParticleSystem UParticleSystem
---@field mbTriggered boolean
---@field mTriggerYaw float
---@field mServerTriggeredTime float
---@field mpDollMaster ADollMasterChar
---@field mDisarmTime float
---@field mInactiveTimer float
---@field mpDynamicMaterials TArray<UMaterialInstanceDynamic>
---@field mTrapIconMeshes TArray<UStaticMesh>
---@field mpIncorporealMaterialInstance UMaterialInstance
---@field mpTrapIconScaleCurve UCurveVector
---@field mbIncorporeal boolean
---@field mbDisarmed boolean
---@field mbDisarming boolean
---@field mbSummoning boolean
---@field mbTeleporting boolean
---@field mbRemoving boolean
---@field mbIsBeingDestroyed boolean
---@field mDestroyTimeRemaining float
---@field mpDollMasterSkin UDollMasterSkinDataAsset
---@field mChargeTimeToAlphaCurve FInterpCurveFloat
---@field mImprovedDetectTimeRemaining float
---@field mpRemovalParticleBPClass UClass
ADollMasterTrap = {}

---@param DeltaTime float
function ADollMasterTrap:UpdateVisuals(DeltaTime) end
function ADollMasterTrap:UpdateVisibility() end
---@param DeltaSeconds float
function ADollMasterTrap:UpdateTrapStatus(DeltaSeconds) end
function ADollMasterTrap:UpdateRenderMeshAura() end
---@param DeltaSeconds float
function ADollMasterTrap:UpdatePositioning(DeltaSeconds) end
---@param DeltaSeconds float
function ADollMasterTrap:UpdateFacing(DeltaSeconds) end
---@param DeltaSeconds float
function ADollMasterTrap:UpdateDisintegration(DeltaSeconds) end
function ADollMasterTrap:UpdateAkEmitters() end
function ADollMasterTrap:StopTriggeredAkEvent() end
---@param bSet boolean
function ADollMasterTrap:SetTeleporting(bSet) end
---@param bSet boolean
function ADollMasterTrap:SetSummoning(bSet) end
---@param bSet boolean
function ADollMasterTrap:SetRemoving(bSet) end
---@param bSet boolean
function ADollMasterTrap:SetDisarming(bSet) end
function ADollMasterTrap:PlayTriggeredAkEvent() end
function ADollMasterTrap:PlayPlaceAkEvent() end
function ADollMasterTrap:MulticastAllStopTriggeredAkEvent() end
---@param v3Scale FVector
function ADollMasterTrap:MulticastAllSetDetectionMeshScale(v3Scale) end
function ADollMasterTrap:MulticastAllPlayTriggered() end
---@param reason ETrapDestroyReason
function ADollMasterTrap:MulticastAllPlayDestroyed(reason) end
---@return boolean
function ADollMasterTrap:IsTriggered() end
---@return boolean
function ADollMasterTrap:IsTeleporting() end
---@return boolean
function ADollMasterTrap:IsSummoning() end
---@return boolean
function ADollMasterTrap:IsSleepy() end
---@return boolean
function ADollMasterTrap:IsSettling() end
---@return boolean
function ADollMasterTrap:IsRepositioning() end
---@return boolean
function ADollMasterTrap:IsRemoving() end
---@return boolean
function ADollMasterTrap:IsIncorporeal() end
---@return boolean
function ADollMasterTrap:IsInactive() end
---@return boolean
function ADollMasterTrap:IsImprovedDetectActive() end
---@return boolean
function ADollMasterTrap:IsDisarming() end
---@return boolean
function ADollMasterTrap:IsDisarmed() end
---@return boolean
function ADollMasterTrap:IsBeingThrown() end
---@return boolean
function ADollMasterTrap:IsBeingDestroyed() end
---@return boolean
function ADollMasterTrap:IsActivelyBeingDisarmed() end
---@return boolean
function ADollMasterTrap:HasDisarmingTPChar() end
---@return AFPChar
function ADollMasterTrap:GetUsingFPChar() end
---@return float
function ADollMasterTrap:GetTriggerYaw() end
---@return UStaticMeshComponent
function ADollMasterTrap:GetTrapIconComponent() end
---@return FTransform
function ADollMasterTrap:GetThrowTarget() end
---@return UStaticMeshComponent
function ADollMasterTrap:GetSelectIconComponent() end
---@return float
function ADollMasterTrap:GetProximityAlpha() end
---@return UExtAkComponent
function ADollMasterTrap:GetPrimaryAkEmitter() end
---@return USkeletalMeshComponent
function ADollMasterTrap:GetMesh() end
---@return FVector
function ADollMasterTrap:GetLOSLocation() end
---@return float
function ADollMasterTrap:GetImprovedDetectTimeRemaining() end
---@return ADollMasterChar
function ADollMasterTrap:GetDollMaster() end
---@return float
function ADollMasterTrap:GetDisarmTime() end
---@return ATPChar
function ADollMasterTrap:GetDisarmingTPChar() end
---@return UStaticMeshComponent
function ADollMasterTrap:GetDetectionMeshComponent() end
---@return UStaticMesh
function ADollMasterTrap:GetCurrentIconMesh() end
---@return float
function ADollMasterTrap:GetBaseDisarmTime() end
---@param DeltaSeconds float
function ADollMasterTrap:DoServerUpdatePlacementTarget(DeltaSeconds) end
---@param DeltaSeconds float
function ADollMasterTrap:DoServerUpdateLifetime(DeltaSeconds) end
---@param DeltaSeconds float
function ADollMasterTrap:DoServerUpdateImprovedDetectTimeRemaining(DeltaSeconds) end
---@param DeltaSeconds float
function ADollMasterTrap:DoServerUpdateDetection(DeltaSeconds) end
---@param DeltaSeconds float
function ADollMasterTrap:DoServerUpdateCorporeal(DeltaSeconds) end
---@param pTriggerChar ATPChar
function ADollMasterTrap:DoServerTrigger(pTriggerChar) end
---@param targetTransform FTransform
function ADollMasterTrap:DoServerThrow(targetTransform) end
---@param triggerYaw float
function ADollMasterTrap:DoServerSetTriggerYaw(triggerYaw) end
---@param Time float
function ADollMasterTrap:DoServerSetTriggeredTime(Time) end
---@param bSet boolean
function ADollMasterTrap:DoServerSetTriggered(bSet) end
---@param Transform FTransform
function ADollMasterTrap:DoServerSetThrowTarget(Transform) end
---@param bSet boolean
function ADollMasterTrap:DoServerSetSettling(bSet) end
---@param Alpha float
function ADollMasterTrap:DoServerSetProximityAlpha(Alpha) end
---@param bIncorporeal boolean
function ADollMasterTrap:DoServerSetIncorporeal(bIncorporeal) end
---@param Time float
function ADollMasterTrap:DoServerSetInactiveTimer(Time) end
---@param Time float
function ADollMasterTrap:DoServerSetInactive(Time) end
---@param TimeRemaining float
function ADollMasterTrap:DoServerSetImprovedDetectTimeRemaining(TimeRemaining) end
---@param pDollMaster ADollMasterChar
function ADollMasterTrap:DoServerSetDollMaster(pDollMaster) end
---@param Time float
function ADollMasterTrap:DoServerSetDisarmTime(Time) end
---@param pTPChar ATPChar
function ADollMasterTrap:DoServerSetDisarmingTPChar(pTPChar) end
---@param bSet boolean
function ADollMasterTrap:DoServerSetDisarmed(bSet) end
---@param bSet boolean
function ADollMasterTrap:DoServerSetBeingThrown(bSet) end
function ADollMasterTrap:DoServerOnTrapDisarmed() end
---@return float
function ADollMasterTrap:DoServerGetTriggeredTime() end
function ADollMasterTrap:DoServerFinishThrowing() end
function ADollMasterTrap:DoServerDeactivate() end
function ADollMasterTrap:DoServerBeginDisarming() end
---@param reason ETrapDestroyReason
function ADollMasterTrap:DoServerBeginDestroy(reason) end
---@param pTPChar ATPChar
function ADollMasterTrap:DoServerActivate(pTPChar) end
---@return boolean
function ADollMasterTrap:CanBeTriggered() end
---@return boolean
function ADollMasterTrap:CanBeSelected() end
---@return boolean
function ADollMasterTrap:CanBeDisarmed() end


---@class ADollMinionChar : AFPChar
---@field mpDollMaster ADollMasterChar
---@field mpSummonParticleBPClass UClass
---@field mpReleaseParticleBPClass UClass
---@field mpDestroyedParticleSystem UParticleSystem
---@field mActiveTimeRemaining float
---@field mActiveTime float
---@field mpPossessMaterialInstance UMaterialInterface
---@field mpDollLifetimeVignetteMaterial UMaterialInterface
---@field mOnSpawnPossessPPTimer float
---@field mSummonCooldown float
---@field mNumTeensKnockedDown int32
---@field mDangerSenseFactorLastFrame float
---@field mbSummonedFromTriggeredTrap boolean
ADollMinionChar = {}

---@param DeltaSeconds float
function ADollMinionChar:UpdatePossessPostProcess(DeltaSeconds) end
function ADollMinionChar:UpdateLifetimePostProcess() end
---@param pTrap ADollMasterTrap
function ADollMinionChar:ServerSetSelectedTrap(pTrap) end
function ADollMinionChar:ServerRelease() end
function ADollMinionChar:MulticastAllStopLeapIntro() end
---@param bRetainTrap boolean
function ADollMinionChar:MulticastAllPlayRelease(bRetainTrap) end
function ADollMinionChar:MulticastAllPlayLeapIntro() end
function ADollMinionChar:MulticastAllPlayLeap() end
---@param summonRot FRotator
function ADollMinionChar:MulticastAllPerformSummon(summonRot) end
---@param TimeRemaining float
function ADollMinionChar:MulticastAllCreateStunHUDAuraIndicator(TimeRemaining) end
---@return ADollMasterChar
function ADollMinionChar:GetDollMaster() end
---@return float
function ADollMinionChar:GetActiveTimeRemaining() end
---@return float
function ADollMinionChar:GetActiveTime() end
---@param DeltaSeconds float
function ADollMinionChar:DoServerUpdateActiveTimeRemaining(DeltaSeconds) end
---@return boolean
function ADollMinionChar:DoServerSummon() end
---@param pDollMaster ADollMasterChar
function ADollMinionChar:DoServerSetDollMaster(pDollMaster) end
---@param TimeRemaining float
function ADollMinionChar:DoServerSetActiveTimeRemaining(TimeRemaining) end
---@param Time float
function ADollMinionChar:DoServerSetActiveTime(Time) end
---@param abilityIndex int32
function ADollMinionChar:DoServerRequestBeginAbilityCharge(abilityIndex) end
---@param bCompleted boolean
function ADollMinionChar:DoServerRequestAbortAbilityCharge(bCompleted) end
---@param bRetainTrap boolean
function ADollMinionChar:DoServerRelease(bRetainTrap) end
function ADollMinionChar:DoServerRefreshActiveTime() end
---@return int32
function ADollMinionChar:DoServerGetNumTeensKnockedDown() end
---@param pTrap ADollMasterTrap
function ADollMinionChar:DoServerBeginSetSelectedTrap(pTrap) end
function ADollMinionChar:DoServerAddTeenKnockedDown() end
---@return boolean
function ADollMinionChar:CanSummon() end
---@return boolean
function ADollMinionChar:AllowedToRelease() end


---@class AEffigyBase : AActor
---@field mpMesh USkeletalMeshComponent
---@field mEffigyType EEffigyType
---@field mpOwningFPChar AFPChar
---@field mpSquishEffect TSoftObjectPtr<UNiagaraSystem>
---@field mbVisibility boolean
---@field mbIsBeingUsed boolean
---@field mbIsBeingCreated boolean
---@field mpEffigySkinDataAsset UEffigySkinDataAsset
AEffigyBase = {}

---@param pSkin UItemDataAsset
function AEffigyBase:MulticastAllSetSkin(pSkin) end
function AEffigyBase:MulticastAllPlaySquishParticleEffect() end
---@return boolean
function AEffigyBase:IsBeingUsed() end
---@return boolean
function AEffigyBase:IsBeingCreated() end
---@param pGameplayGS AGameplayGS
---@param outEffigyTypes TArray<EEffigyType>
function AEffigyBase:GetValidSpawnableEffigyTypes(pGameplayGS, outEffigyTypes) end
---@return ECharacterType
function AEffigyBase:GetOwnerEvilCharType() end
---@param seasonalEventType ESeasonalEventType
---@return UEffigySkinDataAsset
function AEffigyBase:GetEffigySkinBySeasonalEventType(seasonalEventType) end
---@param pickupType EEffigyType
---@return UClass
function AEffigyBase:GetClassFromEffigyType(pickupType) end


---@class AEffigyOfAgony : AEffigyBase
AEffigyOfAgony = {}


---@class AEffigyOfDread : AEffigyBase
AEffigyOfDread = {}


---@class AEffigyOfPestilence : AEffigyBase
AEffigyOfPestilence = {}


---@class AEffigyOfPower : AEffigyBase
AEffigyOfPower = {}


---@class AEffigyOfRage : AEffigyBase
AEffigyOfRage = {}


---@class AEnergyPoint : APointBase
---@field mbIsPowered boolean
---@field mpStaticMeshComponent UStaticMeshComponent
---@field mpSparkParticleSystemComponent UParticleSystemComponent
---@field mpExplosionParticleSystemComponent UParticleSystemComponent
---@field mpArcParticleSystemComponent UParticleSystemComponent
---@field mpIconMeshComponent UStaticMeshComponent
---@field mpElectricArcPositionMeshComponent UStaticMeshComponent
---@field mpPrimaryAkEmitter UExtAkComponent
---@field mTimeUntilPowered float
---@field mpSwitchOn UMaterialInstanceDynamic
---@field mpSwitchOff UMaterialInstanceDynamic
---@field mpFuseToggle UMaterialInstanceDynamic
---@field mpElectricArc ARCCopterElectricity
---@field mBaseFailGlowTime float
---@field mFailGlowTimer float
AEnergyPoint = {}

function AEnergyPoint:UpdateAkEmitters() end
---@param bOn boolean
function AEnergyPoint:SetButtonFuseAudioVisuals(bOn) end
---@param On boolean
function AEnergyPoint:MulticastAllToggleButtonFuses(On) end
function AEnergyPoint:MulticastAllPlayExplosion() end
function AEnergyPoint:MulticastAllCreateHUDAuraIndicator() end
---@return boolean
function AEnergyPoint:IsUnpowered() end
---@return boolean
function AEnergyPoint:IsEnergizing() end
---@return boolean
function AEnergyPoint:HasFailureGlow() end
---@return float
function AEnergyPoint:GetBaseFailGlowTime() end
---@param DeltaTime float
function AEnergyPoint:DoServerUpdateFailGlowTimer(DeltaTime) end
---@param bVal boolean
function AEnergyPoint:DoServerSetPower(bVal) end
function AEnergyPoint:DoServerPowerOff() end
---@param pTPChar ATPChar
function AEnergyPoint:DoServerFailEnergize(pTPChar) end
function AEnergyPoint:DoServerBeginEnergizing() end
---@param pOwningTPChar ATPChar
function AEnergyPoint:DoServerActivate(pOwningTPChar) end


---@class AEntryServerGM : AGameMode
AEntryServerGM = {}


---@class AEntrySplashHUD : ABaseHUD
---@field mSplashScreenClass TSubclassOf<USplashScreen>
---@field mpSplashScreen USplashScreen
AEntrySplashHUD = {}



---@class AEntrySplashPC : ABasePC
AEntrySplashPC = {}


---@class AEradicatorBeamEffect : AActor
---@field mpTargetPyramidScanner UStaticMeshComponent
---@field mpScannerPivot USceneComponent
---@field mpBaseSceneComponent USceneComponent
---@field mpOwner AEradicatorChar
---@field mbIsScanning boolean
---@field mCharsHitThisScan TArray<ATPChar>
---@field mScannerOpenTime float
---@field mScannerWarmupTime float
---@field mScannerScanTeensTime float
---@field mScannerFadeoutTime float
---@field mScannerSize float
---@field mScannerDepth float
---@field mScannerStartAngle float
---@field mScannerEndAngle float
---@field mbIsMovingScanBeam boolean
---@field mScanBeamMovementTime float
---@field mpTargetPyramidMesh UStaticMeshComponent
---@field mScanTeenBatchTimer float
AEradicatorBeamEffect = {}

---@param DeltaTime float
function AEradicatorBeamEffect:UpdateBeam(DeltaTime) end
function AEradicatorBeamEffect:StartScan() end
function AEradicatorBeamEffect:StartMovingScanBeam() end
function AEradicatorBeamEffect:ShowBeam() end
---@param NewValue float
function AEradicatorBeamEffect:SetScanTeenBatchTimer(NewValue) end
---@param NewValue AEradicatorChar
function AEradicatorBeamEffect:SetEradOwner(NewValue) end
function AEradicatorBeamEffect:PerformScan() end
function AEradicatorBeamEffect:OnScanFinished() end
function AEradicatorBeamEffect:OnScanBeamMoveFinished() end
---@param pChar ATPChar
---@return boolean
function AEradicatorBeamEffect:IsTargetPyramidOverlappingTPChar(pChar) end
function AEradicatorBeamEffect:HideBeam() end
---@return boolean
function AEradicatorBeamEffect:HasLocalAuthority() end
---@return float
function AEradicatorBeamEffect:GetScanTeenBatchTimer() end
---@return USceneComponent
function AEradicatorBeamEffect:GetScannerPivot() end
---@return AEradicatorChar
function AEradicatorBeamEffect:GetEradOwner() end
---@return float
function AEradicatorBeamEffect:GetDepth() end
function AEradicatorBeamEffect:AbortScan() end


---@class AEradicatorChar : AFPChar
---@field mpOverlayHUD_StateMachine UStateMachineComponent
---@field mbVehicleMode boolean
---@field mbIsScanning boolean
---@field mbShowScanBeam boolean
---@field mpBeamEffect AEradicatorBeamEffect
---@field mpTargetedSurgeEffect AEradicatorTargetedSurgeEffect
---@field mpSkidmarkDecal UMaterialInterface
---@field mSkidmarkDecalDuration float
---@field mSkidmarkDecalSize FVector
---@field mElectricSurgeCooldown float
---@field mScannerBeamCooldown float
---@field mVehicleModeCooldown float
---@field mScanBeamProxyRotator FRotator
---@field mFastSurgeTimeRemaining float
---@field mbServerHasSetProxyRotatorForThisScan boolean
---@field mTargetedSurgeProxyRotator FRotator
---@field mVehicleModeSpeedBoostTimer float
---@field mbIsVehicleModeAttack boolean
---@field mbWasScanningLastFrame boolean
---@field mScanPercentageRemaining float
---@field mNumTargetedSurgesRemaining int32
---@field mbHasRecievedClientCameraRotation boolean
---@field mServerNumRotationFramesRecieved int32
---@field mCurrentPostProcessScanEffectValue float
---@field mCurrentPostProcessSurgeEffectValue float
---@field mbPlayingElectricAmbient boolean
---@field mbIsWheelEffectActive boolean
---@field mbDidCancelSurge boolean
---@field mpEradicatorScanBeamPPMaterial UMaterialInstance
---@field mpEradicatorVehicleModePPMaterial UMaterialInstance
---@field mpEradicatorTargetedSurgePPMaterial UMaterialInstance
---@field mBeamClass TSubclassOf<AEradicatorBeamEffect>
---@field mTargetedSurgeClass TSubclassOf<AEradicatorTargetedSurgeEffect>
---@field mLastPositionTPCharList TArray<ATPChar>
---@field mLastPositionVectorList TArray<FVector>
---@field mpChargeSpeedCurve UCurveFloat
---@field mVehicleModeAttackTransformTime float
---@field mServerTimeSinceLastModeSwap float
---@field mServerTimeSinceLastUsedTargetedSurge float
---@field mServerTimeSinceLastUsedScanBeam float
---@field mServerCharsHitOnThisScan TArray<ATPChar>
---@field mbProcessedTeenBatchForThisScan boolean
---@field mbServerLastScanAborted boolean
---@field mSnapshotSurgeFastCharge boolean
---@field mpSurgeParticleSystem UNiagaraSystem
---@field mClientLastSentSurgeRotation FRotator
---@field mServerNumHitsWhenLastAfterHitVoiceLineWasSpoken int32
---@field mServerAfterHitVoiceLines TArray<FString>
---@field mServerAfterKillVoiceLines TArray<FString>
---@field mMovementVectors TArray<FVector>
---@field mMaxNumberOfMovementVectors int32
---@field mVehicleModeSpeedBoostMultiplier float
---@field mInputClearTimer float
AEradicatorChar = {}

---@return boolean
function AEradicatorChar:WasScanningLastFrame() end
---@param DeltaTime float
function AEradicatorChar:UpdateVehicleModeMovementVectors(DeltaTime) end
---@param DeltaTime float
function AEradicatorChar:UpdateVehicleModeFriction(DeltaTime) end
---@param DeltaTime float
function AEradicatorChar:UpdateVehicleEffects(DeltaTime) end
---@param DeltaTime float
function AEradicatorChar:UpdateTargetedSurgeEffect(DeltaTime) end
---@param DeltaTime float
function AEradicatorChar:UpdateSlideEffects(DeltaTime) end
---@param DeltaTime float
function AEradicatorChar:UpdateScannerBeamEffect(DeltaTime) end
function AEradicatorChar:SpawnSkidmarkDecal() end
---@return boolean
function AEradicatorChar:ShouldShowScanBeam() end
---@param NewValue boolean
function AEradicatorChar:SetWasScanningLastFrame(NewValue) end
---@param bNewValue boolean
function AEradicatorChar:SetIsVehicleModeAttack(bNewValue) end
---@param NewValue float
function AEradicatorChar:SetCurrentScanPostProcessEffectValue(NewValue) end
---@param NewValue float
function AEradicatorChar:SetCurrentPostProcessSurgeValue(NewValue) end
---@param NewRotation FRotator
function AEradicatorChar:SetClientLastSentSurgeRotation(NewRotation) end
---@param pCharHit ATPChar
function AEradicatorChar:Server_OnScannerHitCharacter(pCharHit) end
---@param charsHit TArray<ATPChar>
---@param clientAngle FRotator
function AEradicatorChar:Server_OnElectrocuteTargets(charsHit, clientAngle) end
---@param clientAngle FRotator
function AEradicatorChar:Server_OnClientScanStarted(clientAngle) end
function AEradicatorChar:Server_OnClientReportedScanBatchCompleted() end
function AEradicatorChar:ScannerBeam_Scan_Stop() end
function AEradicatorChar:ScannerBeam_Scan_Play() end
function AEradicatorChar:OnRep_VehicleMode() end
function AEradicatorChar:OnAnimNotify_Surge_Release() end
function AEradicatorChar:MulticastAllTargetedSurgeMiss_Play() end
function AEradicatorChar:MulticastAllTargetedSurgeHit_Play() end
function AEradicatorChar:MulticastAllTargeted_Surge_Charge_Stop() end
function AEradicatorChar:MulticastAllTargeted_Surge_Charge_Play() end
function AEradicatorChar:MulticastAllScannerBeam_Charge_Stop() end
function AEradicatorChar:MulticastAllScannerBeam_Charge_Play() end
function AEradicatorChar:MulticastAllScanFinished() end
function AEradicatorChar:MulticastAllPlayVehicleSpeedBoost() end
function AEradicatorChar:MulticastAllPlaySkidSound() end
function AEradicatorChar:MulticastAllPerformTargetedSurge() end
function AEradicatorChar:MulticastAllPerformScan() end
function AEradicatorChar:MulticastAllOnVictoryPlay() end
function AEradicatorChar:MulticastAllOnTeenKill04Play() end
function AEradicatorChar:MulticastAllOnTeenKill03Play() end
function AEradicatorChar:MulticastAllOnTeenKill02Play() end
function AEradicatorChar:MulticastAllOnTeenKill01Play() end
function AEradicatorChar:MulticastAllOnTeenHit02Play() end
function AEradicatorChar:MulticastAllOnTeenHit01Play() end
function AEradicatorChar:MulticastAllModeSwap_Stop() end
function AEradicatorChar:MulticastAllModeSwap_Play() end
function AEradicatorChar:MulticastAbortScanBeamEffect() end
---@return boolean
function AEradicatorChar:IsVehicleModeTransforming() end
---@return boolean
function AEradicatorChar:IsVehicleModeAttack() end
---@return boolean
function AEradicatorChar:IsVehicleMode() end
---@return boolean
function AEradicatorChar:IsScanning() end
---@return boolean
function AEradicatorChar:IsAverageSpeedEnoughToTriggerSlide() end
---@return boolean
function AEradicatorChar:IsAllowedToScanBeam() end
---@return boolean
function AEradicatorChar:IsAllowedToModeSwap() end
---@return boolean
function AEradicatorChar:IsAllowedToElectricSurge() end
---@return boolean
function AEradicatorChar:HasRecievedClientCameraRotation() end
---@return float
function AEradicatorChar:GetVehicleModeTransformTime() end
---@return float
function AEradicatorChar:GetVehicleModeSpeedBoostTimeRemaining() end
---@return float
function AEradicatorChar:GetVehicleModeSpeedBoostTimer() end
---@return float
function AEradicatorChar:GetTargetedSurgesRemaining() end
---@return FRotator
function AEradicatorChar:GetTargetedSurgeProxyRotator() end
---@return AEradicatorTargetedSurgeEffect
function AEradicatorChar:GetTargetedSurgeEffect() end
---@param surgeWidth float
---@param surgeHeight float
function AEradicatorChar:GetSurgeSize(surgeWidth, surgeHeight) end
---@return FVector
function AEradicatorChar:GetSurgePivotScale() end
---@return FRotator
function AEradicatorChar:GetScanBeamProxyRotator() end
---@return float
function AEradicatorChar:GetNormalizedAverageSpeedProgress() end
---@return float
function AEradicatorChar:GetFastSurgeTimeRemaining() end
---@return float
function AEradicatorChar:GetEradicatorBaseOverchargeTime() end
---@return float
function AEradicatorChar:GetCurrentScanPostProcessEffectValue() end
---@return float
function AEradicatorChar:GetCurrentPostProcessSurgeValue() end
---@return FRotator
function AEradicatorChar:GetClientLastSentSurgeRotation() end
---@return AEradicatorBeamEffect
function AEradicatorChar:GetBeamEffect() end
---@return float
function AEradicatorChar:GetBaseVehicleModeTransformTime() end
---@return float
function AEradicatorChar:GetBaseVehicleModeSpeedBoostTime() end
---@return boolean
function AEradicatorChar:DoServerWasLastScanAborted() end
---@param DeltaTime float
function AEradicatorChar:DoServerUpdateVehicleModeTransformTime(DeltaTime) end
---@param DeltaTime float
function AEradicatorChar:DoServerUpdateVehicleModeMovement(DeltaTime) end
---@param DeltaTime float
function AEradicatorChar:DoServerUpdateTimeSinceUsedAbility(DeltaTime) end
---@param DeltaSeconds float
function AEradicatorChar:DoServerUpdateTimeSinceLastModeSwap(DeltaSeconds) end
---@param DeltaTime float
function AEradicatorChar:DoServerUpdateSpeedBoostTimer(DeltaTime) end
---@param Delta float
function AEradicatorChar:DoServerUpdateFastChargeTime(Delta) end
function AEradicatorChar:DoServerTransformOutOfVehicleMode() end
---@return boolean
function AEradicatorChar:DoServerStartScan() end
---@param NewValue float
function AEradicatorChar:DoServerSetVehicleModeTransformTime(NewValue) end
---@param Time float
function AEradicatorChar:DoServerSetVehicleModeSpeedBoostTimer(Time) end
---@param bNewValue boolean
function AEradicatorChar:DoServerSetVehicleMode(bNewValue) end
---@param Val float
function AEradicatorChar:DoServerSetTimeSinceModeSwap(Val) end
---@param NewValue float
function AEradicatorChar:DoServerSetTimeSinceLastUsedTargetedSurge(NewValue) end
---@param NewValue float
function AEradicatorChar:DoServerSetTimeSinceLastUsedScanBeam(NewValue) end
---@param NewValue FRotator
function AEradicatorChar:DoServerSetTargetedSurgeProxyRotator(NewValue) end
---@param bNewValue boolean
function AEradicatorChar:DoServerSetShouldShowScanBeam(bNewValue) end
---@param NewValue FRotator
function AEradicatorChar:DoServerSetScanBeamProxyRotator(NewValue) end
---@param bNewValue boolean
function AEradicatorChar:DoServerSetProcessedTeenBatchForThisScan(bNewValue) end
---@param NewValue int32
function AEradicatorChar:DoServerSetNumTargetedSurgesRemaining(NewValue) end
---@param numHitsSinceLastAfterHitVoiceLine int32
function AEradicatorChar:DoServerSetNumHitsWhenLastAfterHitVoiceLineWasSpoken(numHitsSinceLastAfterHitVoiceLine) end
---@param bNewValue boolean
function AEradicatorChar:DoServerSetLastScanAborted(bNewValue) end
---@param bNewValue boolean
function AEradicatorChar:DoServerSetIsScanning(bNewValue) end
---@param bNewValue boolean
function AEradicatorChar:DoServerSetHasSetProxyRotatorForThisScan(bNewValue) end
---@param bNewValue boolean
function AEradicatorChar:DoServerSetHasRecievedClientCameraRotation(bNewValue) end
---@param Value float
function AEradicatorChar:DoServerSetFastSurgeTimeRemaining(Value) end
function AEradicatorChar:DoServerProcessScannedCharacters() end
function AEradicatorChar:DoServerPlayRandomAfterKillVoiceLine() end
function AEradicatorChar:DoServerPlayRandomAfterHitVoiceLine() end
---@return boolean
function AEradicatorChar:DoServerPerformElectricSurge() end
---@param pChar ATPChar
---@param bUseMultiple boolean
function AEradicatorChar:DoServerOnSurgeHitCharacter(pChar, bUseMultiple) end
---@param pChar ATPChar
function AEradicatorChar:DoServerOnScannerHitCharacter(pChar) end
function AEradicatorChar:DoServerOnScanFinished() end
---@param DeltaTime float
function AEradicatorChar:DoServerInputClearTimer(DeltaTime) end
---@return boolean
function AEradicatorChar:DoServerHasSetProxyRotatorForThisScan() end
---@return boolean
function AEradicatorChar:DoServerHasProcessedTeenBatchForThisScan() end
---@return float
function AEradicatorChar:DoServerGetTimeSinceModeSwap() end
---@return float
function AEradicatorChar:DoServerGetTimeSinceLastUsedTargetedSurge() end
---@return float
function AEradicatorChar:DoServerGetTimeSinceLastUsedScanBeam() end
---@return int32
function AEradicatorChar:DoServerGetNumHitsWhenLastAfterHitVoiceLineWasSpoken() end
---@return TArray<FString>
function AEradicatorChar:DoServerGetAfterKillVoiceLines() end
---@return TArray<FString>
function AEradicatorChar:DoServerGetAfterHitVoiceLines() end
---@param numPlayersHit int32
function AEradicatorChar:DoServerAddSurgeScore(numPlayersHit) end
---@param numPlayersHit int32
function AEradicatorChar:DoServerAddScanScore(numPlayersHit) end
---@return boolean
function AEradicatorChar:CanSurgeFastCharge() end
---@return boolean
function AEradicatorChar:AllowedToAttemptSlide() end


---@class AEradicatorTargetedSurgeEffect : AEradicatorBeamEffect
AEradicatorTargetedSurgeEffect = {}

function AEradicatorTargetedSurgeEffect:DoClientElectrocuteTargets() end


---@class AEventPickup : APickupBase
---@field mEventPickupType EEventPickupType
---@field mpPostUseParticleSystem UNiagaraSystem
AEventPickup = {}

---@param eventPickupType EEventPickupType
function AEventPickup:SetEventPickupType(eventPickupType) end
function AEventPickup:PostInitializeComponents() end
function AEventPickup:MulticastAllSpawnPostUseParticleEmitter() end
function AEventPickup:MulticastAllPlayUsed() end
function AEventPickup:MulticastAllPlayOnUse() end
---@return UNiagaraSystem
function AEventPickup:GetPostUseParticleSystem() end
---@return EEventPickupType
function AEventPickup:GetEventPickupType() end


---@class AEvilEnergyPowerup : APowerupBase
---@field mbCanBeHitByEvil boolean
---@field mMeshBaseRelativeLocation FVector
---@field mHeightOffset float
---@field mWobbleSpeedMultiplier float
---@field mTimeSinceCollection float
---@field mpMainBodyNiagaraFXComponent UNiagaraComponent
---@field mMainBodyNiagaraSys FSoftObjectPath
---@field mEvilOnlyFlareNiagaraSys FSoftObjectPath
---@field mpAuraMesh UStaticMeshComponent
AEvilEnergyPowerup = {}

---@param pAbsorbingTPChar ATPChar
function AEvilEnergyPowerup:MulticastAllPlayOnEvilAttacked(pAbsorbingTPChar) end


---@class AEvilEventPropBase : AActor
---@field mpSkeletalMeshComp USkeletalMeshComponent
---@field mpStaticMesh UStaticMeshComponent
---@field mpPrimaryAkEmitter UExtAkComponent
---@field mTriggerCollisionShapeSpecs FCustomizeSimpleCollisionShape
---@field mpDestructionEffect UNiagaraSystem
---@field mpCurrentDestructionEffect UNiagaraComponent
---@field mpDestructionEffect_Cascade UParticleSystem
---@field mEffectVisibility FEffectVisibility
---@field mOmenSpawningSpecs FOmenSpawningSpecs
---@field mOmenObjects TArray<AInteractablePropBase>
---@field mOmenLifeTime float
---@field mWispsNiagaraSystem TSoftObjectPtr<UNiagaraSystem>
---@field mpWispsNiagaraComponent UNiagaraComponent
---@field mpTriggerCollision UShapeComponent
AEvilEventPropBase = {}

function AEvilEventPropBase:StopAuraLoop() end
function AEvilEventPropBase:PlayDestroyed() end
function AEvilEventPropBase:PlayAuraLoop() end
---@param pFPChar AFPChar
function AEvilEventPropBase:MulticastAllSpawnOmens(pFPChar) end
function AEvilEventPropBase:MulticastAllPlayEffects() end
---@param pFPChar AFPChar
function AEvilEventPropBase:MulticastAllDestroyedOnEvilHit(pFPChar) end
---@return TArray<AInteractablePropBase>
function AEvilEventPropBase:GetChildOmenObjects() end
---@param newIndex int32
function AEvilEventPropBase:DoServerSetPropPlacementIndex(newIndex) end
---@param EventType ESeasonalEventType
---@return AEvilEventPropBase
function AEvilEventPropBase:DoServerReplaceWithEventSpecificClass(EventType) end
---@return boolean
function AEvilEventPropBase:CanBeAttackedByEvil() end
---@param DeltaSeconds float
function AEvilEventPropBase:BP_UpdateVisibility(DeltaSeconds) end
function AEvilEventPropBase:BP_OnDestroyedOnEvilHit() end
---@param pEvilSource AFPChar
function AEvilEventPropBase:BP_DoServerOnHitByEvil(pEvilSource) end


---@class AEvilEventProp_Easter : AEvilEventPropBase
---@field mEvilEasterNiagaraSystemPath FSoftObjectPath
---@field mpEvilEasterNiagaraComponent UNiagaraComponent
---@field mEvilEasterNiagaraColor FColor
---@field mEggMaterials TArray<UMaterialInstance>
---@field mBrokenEggMaterials TArray<UMaterialInstance>
---@field mpBrokenEggMesh UStaticMesh
---@field mMaterialIndex int32
AEvilEventProp_Easter = {}

---@param Index int32
function AEvilEventProp_Easter:MulticastAll_SetEvilEasterNiagaraColor(Index) end


---@class AEvilEventProp_Halloween : AEvilEventPropBase
AEvilEventProp_Halloween = {}


---@class AEvilEventProp_Holiday : AEvilEventPropBase
---@field mpHeldOrnamentClass UClass
---@field mbContainsJackInTheBox boolean
AEvilEventProp_Holiday = {}

function AEvilEventProp_Holiday:MulticastAll_PlayOrnamentFound() end
function AEvilEventProp_Holiday:MulticastAll_PlayJackFound() end
---@param pClass UClass
function AEvilEventProp_Holiday:DoServerSetHeldOrnamentClass(pClass) end
---@param bNewValue boolean
function AEvilEventProp_Holiday:DoServerSetContainsJackInTheBox(bNewValue) end


---@class AEvilPing : APing
---@field mpSpotLightComponent USpotLightComponent
---@field mSpotlightMaxIntensity float
---@field mLifetimeSeconds float
---@field mbPlayingAmbientAudio boolean
AEvilPing = {}



---@class AEvilScreamEffect : AActor
---@field mpScreamSkin UEvilScreamDataAsset
---@field mpSurfaceWarpMaterial UMaterialInstance
---@field mpShockwaveMaterial UMaterialInstance
---@field mpInvertedShockwaveMaterial UMaterialInstance
---@field mScreamShockwaves TArray<FEvilScreamShockwave>
---@field mOuterSphereComponent UStaticMeshComponent
---@field mpBanismentScreamEffect UEvilScreamDataAsset
---@field mpTeenRiftScreamEffect UEvilScreamDataAsset
---@field mpEvilRiftScreamEffect UEvilScreamDataAsset
---@field mSphereMesh UStaticMesh
---@field mInvertedSphereMesh UStaticMesh
---@field mCurrentVictims TArray<AActor>
---@field mShockwaveTimer float
---@field mShockwavesRemaining int32
---@field mMaxShockwaves int32
---@field mTritonVerticalOffset float
---@field mLastShockwaveSortPriority int32
---@field mPostProcessSettings FPostProcessSettings
---@field mbIsScreamActive boolean
---@field mScreamType EScreamType
---@field mScreamRange float
---@field mEffectDuration float
---@field mSubduedTime float
---@field mbIsEmpoweredScream boolean
---@field mbIgnoreTriton boolean
---@field mbAllowedToAffectVictims boolean
---@field Settings FPostProcessSettings
AEvilScreamEffect = {}

---@return boolean
function AEvilScreamEffect:IsEmpowered() end
---@return boolean
function AEvilScreamEffect:IsAllowedToAffectVictims() end
---@return float
function AEvilScreamEffect:GetTritonVerticalOffset() end
---@return float
function AEvilScreamEffect:GetSubduedTime() end
---@return EScreamType
function AEvilScreamEffect:GetScreamType() end
---@return float
function AEvilScreamEffect:GetScreamRange() end
---@return int32
function AEvilScreamEffect:GetMaxShockwaves() end
---@return float
function AEvilScreamEffect:GetEffectDuration() end
---@return TArray<AActor>
function AEvilScreamEffect:GetCurrentVictims() end
---@param tritonVerticalOffset float
function AEvilScreamEffect:DoServerSetTritonVerticalOffset(tritonVerticalOffset) end
---@param Time float
function AEvilScreamEffect:DoServerSetSubduedTime(Time) end
---@param screamType EScreamType
function AEvilScreamEffect:DoServerSetScreamType(screamType) end
---@param Range float
function AEvilScreamEffect:DoServerSetScreamRange(Range) end
---@param maxShockWaves int32
function AEvilScreamEffect:DoServerSetMaxShockwaves(maxShockWaves) end
---@param bNewValue boolean
function AEvilScreamEffect:DoServerSetIsEmpoweredScream(bNewValue) end
---@param bNewValue boolean
function AEvilScreamEffect:DoServerSetIsAllowedToAffectVictims(bNewValue) end
---@param bNewValue boolean
function AEvilScreamEffect:DoServerSetIgnoreTriton(bNewValue) end
---@param Duration float
function AEvilScreamEffect:DoServerSetEffectDuration(Duration) end
function AEvilScreamEffect:ClearShockwaves() end
---@param pVictim AActor
---@return boolean
function AEvilScreamEffect:CheckWithinBoundsOfEffect(pVictim) end


---@class AEvilShockwaveEffect : AActor
---@field mpOwner AFPChar
---@field mHitTPChars TArray<ATPChar>
---@field mNumPlayersHit int32
---@field mCurrentRadius float
---@field mExpansionRate float
---@field mTimeAlive float
---@field mMaxRange float
AEvilShockwaveEffect = {}

function AEvilShockwaveEffect:UpdateVisibility() end
---@param pOwningChar AFPChar
function AEvilShockwaveEffect:SetOwningFPChar(pOwningChar) end
---@return AFPChar
function AEvilShockwaveEffect:GetOwningFPChar() end
---@return float
function AEvilShockwaveEffect:GetExpansionRate() end
---@return float
function AEvilShockwaveEffect:GetBaseLifespan() end
---@param bForceUpdate boolean
function AEvilShockwaveEffect:DoServerUpdatePlayerCollision(bForceUpdate) end
---@param pCharHit ATPChar
function AEvilShockwaveEffect:DoServerOnHitTPChar(pCharHit) end


---@class AEvilTransformationEffect : AActor
---@field mpAmbientParticleSystemComponent UParticleSystemComponent
AEvilTransformationEffect = {}



---@class AExtAcousticsRuntimeVolume : AAcousticsRuntimeVolume
---@field HorizontalTransitionSize float
---@field VerticalTransitionSize float
AExtAcousticsRuntimeVolume = {}

---@param Position FVector
---@param NewDesignParameters FAcousticsDesignParams
function AExtAcousticsRuntimeVolume:Apply(Position, NewDesignParameters) end


---@class AExtAkAmbientSound : AActor
---@field mpExtAkComponent UExtAkComponent
---@field mStopWhenOwnerIsDestroyed boolean
---@field mAutoPost boolean
AExtAkAmbientSound = {}

function AExtAkAmbientSound:StopAmbientSound() end
function AExtAkAmbientSound:StartAmbientSound() end


---@class AExtPlayerStart : APlayerStart
---@field mNumberOfTimesUsed int32
---@field mbSpawnHere boolean
---@field mStartType EPlayerStartType
---@field mbSelectedByEvil boolean
---@field mpAssociatedStation AStationBase
AExtPlayerStart = {}

---@param bNewValue boolean
function AExtPlayerStart:SetSelectedByEvil(bNewValue) end
function AExtPlayerStart:OnServerSpawnedSomethingHere() end
---@return boolean
function AExtPlayerStart:IsSelectedByEvil() end
---@param StationBase AStationBase
---@return boolean
function AExtPlayerStart:IsAttachedToStation(StationBase) end
---@param NumPlayers int32
---@return TArray<FVector>
function AExtPlayerStart:GetSpawnPositionsForGroup(NumPlayers) end
---@return int32
function AExtPlayerStart:GetServerNumberOfTimesUsed() end
---@return EPlayerStartType
function AExtPlayerStart:GetPlayerStartType() end
function AExtPlayerStart:ClearServerNumberOfTimesUsed() end


---@class AExtWindSource : AInfo
---@field mpWindSourceComponent UExtWindDirectionalSourceComponent
AExtWindSource = {}



---@class AExtWorldSettings : AWorldSettings
---@field mpFogPresetTable UDataTable
---@field mMinPercentAdrenalineInSearchables float
---@field mMaxPercentAdrenalineInSearchables float
---@field mMinPercentPillsInSearchables float
---@field mMaxPercentPillsInSearchables float
---@field mMinPercentWalkieInSearchables float
---@field mMaxPercentWalkieInSearchables float
---@field mMinPercentNoisemakerInSearchables float
---@field mMaxPercentNoisemakerInSearchables float
---@field mMinPercentSmokeBombInSearchables float
---@field mMaxPercentSmokeBombInSearchables float
---@field mClockStartTimeHours float
---@field mClockStartTimeMinutes float
---@field mClockStartTimeSeconds float
---@field mbDebugEnableAllItems boolean
---@field mDebugMatchMods TArray<EMatchModType>
---@field mDebugSeasonalEventTypes TArray<ESeasonalEventType>
---@field mpOverrideLoadoutManager ULoadoutManager
---@field mpDefaultOverrideSettings UCustomizationOverrideSettings
---@field mRoomLabelsGeneratorFileToAppend FString
---@field mDebugMatchSettings FMatchSettings
AExtWorldSettings = {}

---@return boolean
function AExtWorldSettings:HasPresetTable() end
---@return FString
function AExtWorldSettings:GetRoomLabelsGeneratorFileToAppend() end
---@param pickupType EPickupType
---@return FVector2D
function AExtWorldSettings:GetMinAndMaxPercentForPickupType(pickupType) end
---@return ULoadoutManager
function AExtWorldSettings:GetLoadoutManagerOverride() end
---@param PresetName FName
---@return FRoomFrameFogSettings
function AExtWorldSettings:GetFogPreset(PresetName) end
---@return TArray<ESeasonalEventType>
function AExtWorldSettings:GetDebugSeasonalEventTypes() end
---@return FMatchSettings
function AExtWorldSettings:GetDebugMatchSettings() end
---@return TArray<EMatchModType>
function AExtWorldSettings:GetDebugMatchMods() end
---@return UCustomizationOverrideSettings
function AExtWorldSettings:GetCustomizationOverrideSettings() end
---@param Hours float
---@param Minutes float
---@param Seconds float
function AExtWorldSettings:GetClockStartData(Hours, Minutes, Seconds) end
---@return boolean
function AExtWorldSettings:DoEnableAllItems() end


---@class AFEChar : ABaseChar
AFEChar = {}


---@class AFEND_CustomizationFX : AActor
---@field NeonGroupLeft AActor
---@field NeonGroupRight AActor
---@field NeonGroupLeftShowPosition AActor
---@field NeonGroupLeftHidePosition AActor
---@field NeonGroupRightShowPosition AActor
---@field NeonGroupRightHidePosition AActor
---@field NeonLights TArray<AActor>
---@field mpFrontendColorPalette UDataTable
AFEND_CustomizationFX = {}

---@param bSet boolean
---@param Duration float
function AFEND_CustomizationFX:SetCustomizeDuckLights(bSet, Duration) end
---@return FFrontEndLightCustomizationPalette
function AFEND_CustomizationFX:GetColorPaletteFromLocalCharType() end


---@class AFPChar : ATPChar
---@field mFPHideMontages TArray<FFPHideMontageData>
---@field mpFPCameraBoom USpringArmComponent
---@field mpFPCameraComponent UCameraComponent
---@field mpFPMesh USkeletalMeshComponent
---@field mpVictimFinderFrustum UStaticMeshComponent
---@field mpReticleAssistFrustum UStaticMeshComponent
---@field mpSpeedLinesComponent UStaticMeshComponent
---@field mpEvilDamageParticlesComponent UEvilDamageParticlesComponent
---@field mpEvilSkinComponent UEvilSkinComponent
---@field mpRageParticlesComponent UNiagaraComponent
---@field mpRageFPParticlesComponent UNiagaraComponent
---@field mpPestilenceEffigyTPParticlesComponent UNiagaraComponent
---@field mpPestilenceEffigyFPParticlesComponent UNiagaraComponent
---@field mpPestilenceEffigyAttackHitParticleSystem UNiagaraSystem
---@field mpFeastEffectComponent UFeastEffectComponent
---@field mpForwardWallDetectionCapsuleComponent UCapsuleComponent
---@field mpFeastNiagaraComponent UNiagaraComponent
---@field mpFPFeastNiagaraComponent UNiagaraComponent
---@field mpEvilSeasonalEventComponent UEvilSeasonalEventComponent
---@field mAttachedAbilities TArray<UBaseEvilAbilityComponent>
---@field mpEvilDataMaterialParameterCollection UMaterialParameterCollection
---@field mpHitDetectionPhysicsAsset UPhysicsAsset
---@field mDebugForceThirdPersonCamera boolean
---@field mCurrentWeaponTypeDamageStatus TArray<FWeaponTypeDamageStatus>
---@field mCurrentRecordedDamage TArray<FRecordedDamage>
---@field mLastRecordedDamage FRecordedDamage
---@field mIncorporealTimeRemaining float
---@field mIncorporealTime float
---@field mpProjectileOwner ATPChar
---@field mpFeastingTarget ATPChar
---@field mbAttackResolving boolean
---@field mbHasAttackSucceeded boolean
---@field mbHasAttackBounced boolean
---@field mbIsEnraged boolean
---@field mbAttackEnraged boolean
---@field mbAttackHasPestilenceEffigyBuff boolean
---@field mAbilityChargeTime float
---@field mSelectedAbilityIndex int32
---@field mCompletedAbilityIndex int32
---@field mDangerSenseFactor float
---@field mbDangerSenseStunOnly boolean
---@field mbCanHearCrafting boolean
---@field mUpdateCanHearCraftingTimer float
---@field mpDangerSenseMaterial UMaterialInterface
---@field mpDangerSenseCurve UCurveFloat
---@field mDamagedCameraShakeClass TSubclassOf<UMatineeCameraShake>
---@field mpTPAttackMontage UAnimMontage
---@field mpFPAttackMontage UAnimMontage
---@field mpDefaultAIBehaviorTree UBehaviorTree
---@field mpDecalCurve UCurveFloat
---@field mpIncorporealMaterial UMaterialInstance
---@field mServerAttackHeldTime float
---@field mLastAttackHeldTime float
---@field mbServerRequestReleaseAttack boolean
---@field mbServerTriedHit boolean
---@field mbServerHitWindowOpen boolean
---@field mbClientHasAttackTarget boolean
---@field mbHasClientStartedAttackScan boolean
---@field mbScreaming boolean
---@field mbForwardWallDetected boolean
---@field mpSelectedFeastChar ATPChar
---@field mStunContext FStunContext
---@field mbIsVanquished boolean
---@field mScanAttackTargets TArray<AActor>
---@field mDamagedWeaponType EWeaponTypeEnum
---@field mTickDamageType EWeaponTypeEnum
---@field mCurrentRage float
---@field mMaxRage float
---@field mCurrentVengeance float
---@field mMaxVengeance float
---@field mpHeldEffigy AEffigyBase
---@field mUsingEffigyType EEffigyType
---@field mCreatingEffigyType EEffigyType
---@field pEffigyTypeToAnimMap TMap<EEffigyType, UAnimSequence>
---@field pEffigyTypeToCreateAnimMap TMap<EEffigyType, UAnimSequence>
---@field pEffigyTypeToNiagaraSystemMap TMap<EEffigyType, UNiagaraSystem>
---@field mpEvilOverlayPanelClass TSubclassOf<UHUDEvilOverlayPanel>
---@field mEffigyChargeHits int32
---@field mFuryEffigyTimeRemaining float
---@field mPowerEffigyTimeRemaining float
---@field mRotationZLastFrame float
---@field mDeltaRotationZ float
---@field mbServerIsInCombat boolean
---@field mServerInCombatTimer float
---@field mRaygunRevealTime float
---@field mDemonSwordRevealTime float
---@field mLeapTimeRemaining float
---@field mLeapCooldown float
---@field mAbilityLockoutTimeRemaining TArray<float>
---@field mbServerHasAttackReleased boolean
---@field mpLeapablesComponent USceneComponent
---@field mpLeapHeightCurve UCurveFloat
---@field mpStunCollisionCapsuleCurve UCurveFloat
---@field mStunOutroTimer float
---@field mLeapOriginalCameraRelativeLocation FVector
---@field mLeapStartingAbsoluteLocation FVector
---@field mbTPMeshVisibleLastFrame boolean
---@field mbStartedLeaping boolean
---@field mLeapTime float
---@field mLeapFallSpeed float
---@field mpCharacterInLeapPath ABaseChar
---@field mpLeapTargetingDecal UDecalComponent
---@field mpEvilSkinDataAsset UEvilSkinDataAsset
---@field mTimeSinceUnsuccessfulAbilityUse TArray<float>
---@field mTimeSinceSuccessfulAbilityUse TArray<float>
---@field mTimeSinceLastAbilityTipShown TArray<float>
---@field mLastUnsuccessfulAbilityUseReasons TArray<EAbilityUnuseableReason>
---@field mTimeSinceLastUnsuccessfulAttack float
---@field mLastUnsuccessfulAttackUseReason EAbilityUnuseableReason
---@field mEvilActionBlockDelayTimer float
---@field mBlockedGameActionsList TArray<EGameActionType>
---@field mServerFeastDrainEssenseTime float
---@field mSlowRecoveryTimeRemaining float
---@field mbWasAnyWeaponTypeJustApplied boolean
---@field mTeenCollisionTimer float
---@field mCurrentFlinchTime float
---@field mBaseFlinchTime float
---@field mpClientVictimChar ABaseChar
---@field mpClientVictimEvilAttackableObject AActor
---@field mReticleAssistChar ABaseChar
---@field mbWasFaceGuarding boolean
---@field mServerLastHitType ELastHitType
---@field mbOverrideAllowedToUseEffigies boolean
---@field mOnHitTeen FFPCharOnHitTeen
---@field mbServerEvilEnergyInView boolean
---@field mbHitAttackableObject boolean
AFPChar = {}

---@return boolean
function AFPChar:WasAnyWeaponTypeJustApplied() end
---@return boolean
function AFPChar:ViewTeenAurasAsInvisibleAuras() end
---@return boolean
function AFPChar:UseFPCameraAnimation() end
---@param DeltaSeconds float
function AFPChar:UpdateVictimFinderScale(DeltaSeconds) end
---@param DeltaSeconds float
function AFPChar:UpdateUnsuccessfulAbilityUse(DeltaSeconds) end
---@param DeltaSeconds float
function AFPChar:UpdateSuccessfulAbilityUse(DeltaSeconds) end
---@param DeltaTime float
function AFPChar:UpdatePeripherals(DeltaTime) end
function AFPChar:UpdateForwardWallDetection() end
function AFPChar:UpdateFaceGuard() end
function AFPChar:UpdateDangerSenseEffects() end
function AFPChar:UpdateDangerSense() end
---@param DeltaSeconds float
function AFPChar:UpdateAttackPlayRate(DeltaSeconds) end
function AFPChar:StopGroanAkEvent() end
function AFPChar:StopFlinchAkEvent() end
function AFPChar:StopFeastAkEvent() end
function AFPChar:StopDamagedAkEvent() end
function AFPChar:StopAttackChargeAkEvent() end
---@return boolean
function AFPChar:ShouldPlayFaceGuard() end
---@param bSet boolean
function AFPChar:SetUsingThirdPersonCamera(bSet) end
---@param NewValue float
function AFPChar:SetTimeSinceUnsuccessfulAttackUse(NewValue) end
---@param abilityIndex int32
---@param Time float
function AFPChar:SetTimeSinceUnsuccessfulAbilityUse(abilityIndex, Time) end
---@param abilityIndex int32
---@param Time float
function AFPChar:SetTimeSinceSuccessfulAbilityUse(abilityIndex, Time) end
---@param abilityIndex int32
---@param Time float
function AFPChar:SetTimeSinceLastAbilityTipShown(abilityIndex, Time) end
---@param pAssistChar ABaseChar
function AFPChar:SetReticleAssistChar(pAssistChar) end
---@param abilityIndex int32
---@param reason EAbilityUnuseableReason
function AFPChar:SetLastUnsuccessfulAbilityUseReason(abilityIndex, reason) end
---@param bSet boolean
function AFPChar:SetHasClientStartedAttackScan(bSet) end
---@param bSet boolean
function AFPChar:SetForwardWallDetected(bSet) end
---@param bSet boolean
function AFPChar:SetDangerSenseStunOnly(bSet) end
---@param Factor float
function AFPChar:SetDangerSenseFactor(Factor) end
---@param pAttackableObject AActor
function AFPChar:SetClientVictimEvilAttackableObject(pAttackableObject) end
---@param pVictimChar ABaseChar
function AFPChar:SetClientVictimChar(pVictimChar) end
---@param NewValue EAbilityUnuseableReason
function AFPChar:SetAttackUnuseableReason(NewValue) end
function AFPChar:ServerUseHeldEffigy() end
---@param pFeastTarget ATPChar
function AFPChar:ServerSetFeastTarget(pFeastTarget) end
function AFPChar:ServerSendHasClientStartedAttackScan() end
---@param abilityIndex int32
function AFPChar:ServerRequestStopChargeAbility(abilityIndex) end
---@param pCandidates TArray<AActor>
function AFPChar:ServerRequestScanAttackTargets(pCandidates) end
function AFPChar:ServerRequestReleaseAttack() end
---@param abilityIndex int32
function AFPChar:ServerRequestBeginChargeAbility(abilityIndex) end
function AFPChar:ServerRequestAttack() end
function AFPChar:ServerRequestAbortFeast() end
---@param Val int32
function AFPChar:ServerDebugUpdateEffigyHitCount(Val) end
function AFPChar:ServerDebugStun() end
function AFPChar:ServerDebugSetIncorporeal() end
function AFPChar:ServerDebugSetCorporeal() end
function AFPChar:ServerDebugResetAllCooldowns() end
function AFPChar:ServerDebugPerformScream() end
---@param rageModifier float
function AFPChar:ServerDebugModifyMainEvilRage(rageModifier) end
function AFPChar:ServerDebugFlinch() end
---@param effigyType EEffigyType
function AFPChar:ServerDebugEquipEffigy(effigyType) end
function AFPChar:ServerDebugActivateAllCooldowns() end
function AFPChar:ServerCreateEffigy() end
---@return boolean
function AFPChar:ReceivesCooldownBonusFromScreaming() end
---@param effigyType EEffigyType
function AFPChar:PlayUseEffigyAkEvent(effigyType) end
function AFPChar:PlayTransformedAkEvent() end
function AFPChar:PlaySlashAkEvent() end
function AFPChar:PlayRecoveredAkEvent() end
function AFPChar:PlayGroanAkEvent() end
function AFPChar:PlayFeastAkEvent() end
function AFPChar:PlayDamagedAkEvent() end
function AFPChar:PlayCreateEffigyReadyAkEvent() end
---@param effigyType EEffigyType
function AFPChar:PlayCreateEffigyAkEvent(effigyType) end
function AFPChar:PlayAttackChargeAkEvent() end
function AFPChar:PlayAttackAkEvent() end
function AFPChar:OnRep_IsEnraged() end
function AFPChar:OnRep_EffigyChargeHitsChanged() end
function AFPChar:OnRep_CanHearCrafting() end
function AFPChar:OnReleasedInputFeast() end
function AFPChar:OnReleasedAttack() end
function AFPChar:OnPressedInputFeast() end
function AFPChar:OnPressedAttack() end
---@return FOnHitTeenReturnValue
function AFPChar:OnHitTeen() end
function AFPChar:OnEvilSkinUpdated() end
---@param pOtherActor AActor
---@param pOtherComponent UPrimitiveComponent
---@param numDecals int32
---@param timeSeed float
function AFPChar:MulticastSpawnAttackEffects(pOtherActor, pOtherComponent, numDecals, timeSeed) end
---@param abilityIndex int32
---@param reason EAbilityUnuseableReason
function AFPChar:MulticastAllUnsuccessfulAbilityUse(abilityIndex, reason) end
---@param abilityIndex int32
function AFPChar:MulticastAllSuccessfulAbilityUse(abilityIndex) end
function AFPChar:MulticastAllStopIncorporealWind() end
function AFPChar:MulticastAllStopFlinchAkEvent() end
---@param Message FString
---@param messageDuration float
function AFPChar:MulticastAllShowMonsterMessage(Message, messageDuration) end
---@param pDamageOwner ATPChar
---@param damageOrigin FVector
---@param bShowOrigin boolean
---@param wepaonType EWeaponTypeEnum
function AFPChar:MulticastAllShowDamage(pDamageOwner, damageOrigin, bShowOrigin, wepaonType) end
---@param bAttackEnraged boolean
function AFPChar:MulticastAllReleaseAttack(bAttackEnraged) end
function AFPChar:MulticastAllPlayWoundedSound() end
function AFPChar:MulticastAllPlayVanquished() end
---@param effigyType EEffigyType
function AFPChar:MulticastAllPlayUseEffigySound(effigyType) end
function AFPChar:MulticastAllPlayStunned() end
---@param DamageType EDamageType
function AFPChar:MulticastAllPlayStigmaWoundSound(DamageType) end
function AFPChar:MulticastAllPlayScreamSound() end
function AFPChar:MulticastAllPlayIncorporealWind() end
function AFPChar:MulticastAllPlayFlinchAkEvent() end
function AFPChar:MulticastAllPlayEvilPerkPingSound() end
function AFPChar:MulticastAllPlayEvilEnragedSound() end
function AFPChar:MulticastAllPlayEffigyReadySound() end
---@param effigyType EEffigyType
function AFPChar:MulticastAllPlayCreateEffigySound(effigyType) end
function AFPChar:MulticastAllPlayBanishmentScream() end
---@param bAttackEnraged boolean
function AFPChar:MulticastAllPerformAttack(bAttackEnraged) end
---@param pTeenHit ATPChar
---@param bAttackEnraged boolean
function AFPChar:MulticastAllOnHitTeenChar(pTeenHit, bAttackEnraged) end
---@param DamageType EDamageType
function AFPChar:MulticastAllOnEvilWounded(DamageType) end
function AFPChar:MulticastAllOnEvilStunEnded() end
---@param DamageType EDamageType
function AFPChar:MulticastAllOnEvilBecomeStunned(DamageType) end
function AFPChar:MulticastAllOnEvilBecomeIncorporeal() end
function AFPChar:MulticastAllOnEvilBecomeCorporeal() end
function AFPChar:MulticastAllOnEndTransformation() end
---@param serverLastHitType ELastHitType
function AFPChar:MulticastAllOnEndScream(serverLastHitType) end
function AFPChar:MulticastAllDamagedShake() end
---@param pTargetTPChar ATPChar
---@param revealTime float
function AFPChar:MulticastAllCreatePickupUseRevealIndicator(pTargetTPChar, revealTime) end
---@param pTargetTPChar ATPChar
---@param Time float
function AFPChar:MulticastAllCreateCrowdRevealHUDAuraIndicator(pTargetTPChar, Time) end
---@param bounceHitResult FHitResult
function AFPChar:MulticastAllBounceAttack(bounceHitResult) end
function AFPChar:MulticastAllAbortAttack() end
---@param HitLocation FVector
---@param hitDirection FVector
function AFPChar:MulticastAll_OnPestilenceEffigyAttackHit(HitLocation, hitDirection) end
---@return boolean
function AFPChar:IsWeaponDamageApplied() end
---@return boolean
function AFPChar:IsVanquished() end
---@param pTPChar ATPChar
---@return boolean
function AFPChar:IsValidAttackTarget(pTPChar) end
---@return boolean
function AFPChar:IsUsingThirdPersonCamera() end
---@return boolean
function AFPChar:IsUsingEffigy() end
---@return boolean
function AFPChar:IsScreaming() end
---@return boolean
function AFPChar:IsRevealedByRaygun() end
---@return boolean
function AFPChar:IsRevealedByDemonSword() end
---@return boolean
function AFPChar:IsReleasingAttack() end
---@return boolean
function AFPChar:IsRecoveringFromAttack() end
---@return boolean
function AFPChar:IsPowerEffigyActive() end
---@return boolean
function AFPChar:IsMimicking() end
---@return boolean
function AFPChar:IsLeaping() end
---@return boolean
function AFPChar:IsHoldingAttack() end
---@return boolean
function AFPChar:IsForwardWallDetected() end
---@return boolean
function AFPChar:IsFocusing() end
---@return boolean
function AFPChar:IsFlinching() end
---@return boolean
function AFPChar:IsEvilEnergyInView() end
---@return boolean
function AFPChar:IsEvilActionBlockDelayActive() end
---@return boolean
function AFPChar:IsEnraged() end
---@return boolean
function AFPChar:IsEffigyCharged() end
---@return boolean
function AFPChar:IsDangerSenseStunOnly() end
---@param DamageType EDamageType
---@return boolean
function AFPChar:IsDamageTypeBeingApplied(DamageType) end
---@param DamageType EDamageType
---@return boolean
function AFPChar:IsDamageTypeActive(DamageType) end
---@return boolean
function AFPChar:IsCreatingEffigy() end
---@param pChar ABaseChar
---@return boolean
function AFPChar:IsCharacterInLeapPath(pChar) end
---@return boolean
function AFPChar:IsBeingDamaged() end
---@return boolean
function AFPChar:IsBeginningAttack() end
---@return boolean
function AFPChar:IsAttackResolving() end
---@return boolean
function AFPChar:IsAttacking() end
---@return boolean
function AFPChar:IsAttackEnraged() end
---@return boolean
function AFPChar:IsAnyDamageActive() end
---@return boolean
function AFPChar:IsAnyAbilityOnCooldown() end
---@param abilityIndex int32
---@return boolean
function AFPChar:IsAbilityOnCooldown(abilityIndex) end
---@param abilityIndex int32
---@return boolean
function AFPChar:IsAbilityCooldownOverridden(abilityIndex) end
---@return boolean
function AFPChar:HasHitAttackableObject() end
---@return boolean
function AFPChar:HasEffigy() end
---@return boolean
function AFPChar:HasClientStartedAttackScan() end
---@return boolean
function AFPChar:HasAttackSucceeded() end
---@return boolean
function AFPChar:HasAttackBounced() end
---@param abilityIndex int32
---@return boolean
function AFPChar:HasAtLeastOneChargeOfMultichargeAbility(abilityIndex) end
---@param weaponType EWeaponTypeEnum
---@return float
function AFPChar:GetWeaponTypeRunSpeedMultiplier(weaponType) end
---@param weaponType EWeaponTypeEnum
---@return float
function AFPChar:GetWeaponTypeRequiredTime(weaponType) end
---@param weaponType EWeaponTypeEnum
---@return float
function AFPChar:GetWeaponTypeCompletion(weaponType) end
---@param weaponType EWeaponTypeEnum
---@return float
function AFPChar:GetWeaponTypeBaseRunSpeedMultiplier(weaponType) end
---@param weaponType EWeaponTypeEnum
---@return float
function AFPChar:GetWeaponTypeAppliedTime(weaponType) end
---@param weaponType EWeaponTypeEnum
---@param bUseNormal boolean
---@return float
function AFPChar:GetWeaponDirectionalRunSpeedMultiplier(weaponType, bUseNormal) end
---@return float
function AFPChar:GetVigilanceExposeTime() end
---@return UStaticMeshComponent
function AFPChar:GetVictimFinderFrustum() end
---@return float
function AFPChar:GetVengeanceSpeedBonus() end
---@return EEffigyType
function AFPChar:GetUsingEffigyType() end
---@param abilityIndex int32
---@return float
function AFPChar:GetTimeUntilNextChargeOfMultipleChargeAbility(abilityIndex) end
---@param abilityIndex int32
---@return float
function AFPChar:GetTimeToUseAbility(abilityIndex) end
---@return float
function AFPChar:GetTimeSinceUnsuccessfulAttackUse() end
---@param abilityIndex int32
---@return float
function AFPChar:GetTimeSinceUnsuccessfulAbilityUse(abilityIndex) end
---@return EWeaponTypeEnum
function AFPChar:GetTickDamageType() end
---@return float
function AFPChar:GetTeenCollisionTimer() end
---@return ATPChar
function AFPChar:GetTeenCharMimicking() end
---@return float
function AFPChar:GetStunTimeRemaining() end
---@return float
function AFPChar:GetStunTimeMultiplier() end
---@return float
function AFPChar:GetStunTime() end
---@return float
function AFPChar:GetStunResistanceTimeRemaining() end
---@return float
function AFPChar:GetStunResistanceTime() end
---@return float
function AFPChar:GetStunResistanceMultiplier() end
---@return float
function AFPChar:GetStunOutroTimer() end
---@return float
function AFPChar:GetSlowRecoveryTimeRemaining() end
---@return ATPChar
function AFPChar:GetSelectedFeastChar() end
---@return int32
function AFPChar:GetSelectedAbilityIndex() end
---@return TArray<AActor>
function AFPChar:GetScanAttackTargets() end
---@return UStaticMeshComponent
function AFPChar:GetReticleAssistFrustum() end
---@return ABaseChar
function AFPChar:GetReticleAssistChar() end
---@param outResonanceSpecs FResonanceCloneTriggerSpecs
---@return boolean
function AFPChar:GetResonanceCloneVisualSpecs(outResonanceSpecs) end
---@return float
function AFPChar:GetRaygunRevealTime() end
---@return float
function AFPChar:GetRageSpeedAugmentBonus() end
---@param bFirstPerson boolean
---@return UNiagaraComponent
function AFPChar:GetRageParticleComponent(bFirstPerson) end
---@return float
function AFPChar:GetPowerEffigyTimeRemaining() end
---@return int32
function AFPChar:GetNumSuccessfulHits() end
---@return float
function AFPChar:GetMinTensionDistance() end
---@return float
function AFPChar:GetMinAttackHoldTime() end
---@return float
function AFPChar:GetMaxVengeance() end
---@return float
function AFPChar:GetMaxTensionDistance() end
---@return float
function AFPChar:GetMaxRage() end
---@param abilityIndex int32
---@return int32
function AFPChar:GetMaxNumChargesForAbility(abilityIndex) end
---@return float
function AFPChar:GetMaxLeapHeight() end
---@return float
function AFPChar:GetMaxAttackHoldTime() end
---@param pWorldContextObject UObject
---@return AFPChar
function AFPChar:GetMainEvil(pWorldContextObject) end
---@return float
function AFPChar:GetLeapTimeRemaining() end
---@return float
function AFPChar:GetLeapSpeedDamaged() end
---@return float
function AFPChar:GetLeapSpeed() end
---@return float
function AFPChar:GetLeapMinAccelerationScale() end
---@return float
function AFPChar:GetLeapMaxAccelerationScale() end
---@return USceneComponent
function AFPChar:GetLeapablesComponent() end
---@param abilityIndex int32
---@return EAbilityUnuseableReason
function AFPChar:GetLastUnsuccessfulAbilityUseReason(abilityIndex) end
---@return FRecordedDamage
function AFPChar:GetLastRecordedDamage() end
---@return float
function AFPChar:GetLastAttackHeldTime() end
---@return float
function AFPChar:GetIncorporealTimeRemaining() end
---@return float
function AFPChar:GetIncorporealTime() end
---@return float
function AFPChar:GetIncorporealSpeed() end
---@return USkeletalMeshComponent
function AFPChar:GetHitDetectionMesh() end
---@return float
function AFPChar:GetHighestDamagePercentage() end
---@return EEffigyType
function AFPChar:GetHeldEffigyType() end
---@return AEffigyBase
function AFPChar:GetHeldEffigy() end
---@return float
function AFPChar:GetFuryEffigyTimeRemaining() end
---@return USkeletalMeshComponent
function AFPChar:GetFPMesh() end
---@param hideObjectType EHideObjectType
---@return UAnimMontage
function AFPChar:GetFPHideMontage(hideObjectType) end
---@return UCameraComponent
function AFPChar:GetFPCameraComponent() end
---@return USpringArmComponent
function AFPChar:GetFPCameraBoomComponent() end
---@return float
function AFPChar:GetFlinchTimeRemaining() end
---@return ATPChar
function AFPChar:GetFeastingTarget() end
---@return UFeastEffectComponent
function AFPChar:GetFeastEffectComponent() end
---@return TArray<AActor>
function AFPChar:GetFeastCandidates() end
---@return float
function AFPChar:GetEvilActionBlockDelayTimer() end
---@return float
function AFPChar:GetEvilActionBlockDelay() end
---@param CharType ECharacterType
---@return TArray<EEvilAbilityType>
function AFPChar:GetEvilAbilitiesFromCharacter(CharType) end
---@return int32
function AFPChar:GetEffigyChargeHitsRequired() end
---@return int32
function AFPChar:GetEffigyChargeHits() end
---@return float
function AFPChar:GetDisperseSpeed() end
---@return float
function AFPChar:GetDisintegrationRunSpeed() end
---@return float
function AFPChar:GetDemonSwordRevealTime() end
---@return float
function AFPChar:GetDeltaRotationLastFrame() end
---@return float
function AFPChar:GetDangerSenseRange() end
---@return AFPChar
function AFPChar:GetDangerSenseOrigin() end
---@return float
function AFPChar:GetDangerSenseMultiplier() end
---@return float
function AFPChar:GetDangerSenseFactor() end
---@param dangerousActors TArray<AActor>
function AFPChar:GetDangerousActors(dangerousActors) end
---@return EWeaponTypeEnum
function AFPChar:GetDamageWeaponType() end
---@param pBaseChar ABaseChar
---@return EDamageType
function AFPChar:GetDamageTypeCurrentlyAppliedByCharacter(pBaseChar) end
---@param DamageType EDamageType
---@return float
function AFPChar:GetDamageTypeCompletion(DamageType) end
---@return float
function AFPChar:GetDamagedRunSpeedMultiplier() end
---@return float
function AFPChar:GetCurrentVengeance() end
---@return TArray<FRecordedDamage>
function AFPChar:GetCurrentRecordedDamage() end
---@return float
function AFPChar:GetCurrentRage() end
---@param abilityIndex int32
---@return int32
function AFPChar:GetCurrentNumChargesForAbility(abilityIndex) end
---@return EEffigyType
function AFPChar:GetCreatingEffigyType() end
---@param DeltaSeconds float
---@param abilityIndex int32
---@return float
function AFPChar:GetCooldownSpeedModifier(DeltaSeconds, abilityIndex) end
---@param DeltaSeconds float
---@param abilityIndex int32
---@return float
function AFPChar:GetCooldownReductionBonuses(DeltaSeconds, abilityIndex) end
---@return int32
function AFPChar:GetCompletedAbilityIndex() end
---@return AActor
function AFPChar:GetClientVictimEvilAttackableObject() end
---@return ABaseChar
function AFPChar:GetClientVictimChar() end
---@return boolean
function AFPChar:GetCanHearCrafting() end
---@return UBehaviorTree
function AFPChar:GetBehaviorTree() end
---@return FVector
function AFPChar:GetBaseVictimFinderScale() end
---@param abilityIndex int32
---@return float
function AFPChar:GetBaseTimeUntilChargeOfMultipleChargeAbility(abilityIndex) end
---@return float
function AFPChar:GetBaseStunTime() end
---@return float
function AFPChar:GetBaseRaygunRevealTime() end
---@return float
function AFPChar:GetBaseLeapTime() end
---@return float
function AFPChar:GetBaseFlinchTime() end
---@return float
function AFPChar:GetBaseDemonSwordRevealTime() end
---@return float
function AFPChar:GetBaseDangerSenseRange() end
---@return EAbilityUnuseableReason
function AFPChar:GetAttackUnuseableReason() end
---@return float
function AFPChar:GetAttackRecoverRunSpeed() end
---@return float
function AFPChar:GetAttackLungeMinAcceleration() end
---@return float
function AFPChar:GetAttackLungeMaxAcceleration() end
---@return float
function AFPChar:GetAttackHeldRunSpeed() end
---@return TArray<UBaseEvilAbilityComponent>
function AFPChar:GetAttachedAbilities() end
---@param pWorldContextObject UObject
---@return AFPChar
function AFPChar:GetActiveEvilFPChar(pWorldContextObject) end
---@param Index int32
---@return EGameActionType
function AFPChar:GetActionTypeForAbilityIndex(Index) end
---@param abilityIndex int32
---@return EAbilityUnuseableReason
function AFPChar:GetAbilityUnuseableReason(abilityIndex) end
---@param abilityIndex int32
---@return float
function AFPChar:GetAbilityOnHitLockoutTime(abilityIndex) end
---@param abilityIndex int32
---@return float
function AFPChar:GetAbilityLockoutRemaining(abilityIndex) end
---@param abilityIndex int32
---@return float
function AFPChar:GetAbilityCooldownRemaining(abilityIndex) end
---@param abilityIndex int32
---@return float
function AFPChar:GetAbilityCooldown(abilityIndex) end
---@return float
function AFPChar:GetAbilityChargeTime() end
---@param abilityIndex int32
---@return float
function AFPChar:GetAbilityChargeRunSpeed(abilityIndex) end
---@param outPercent float
---@param outAbilityIndex int32
function AFPChar:GetAbilityChargePercent(outPercent, outAbilityIndex) end
---@param DeltaSeconds float
---@param pDamagingActor AActor
---@param damageSourceLocation FVector
---@param bInstantStrike boolean
---@param bIsDirectHit boolean
---@param timeScalingDuration float
---@param damageDecayDelay float
function AFPChar:DoServerWeaponHit(DeltaSeconds, pDamagingActor, damageSourceLocation, bInstantStrike, bIsDirectHit, timeScalingDuration, damageDecayDelay) end
---@param weaponType EWeaponTypeEnum
---@return boolean
function AFPChar:DoServerWasWeaponTypeAppliedThisFrame(weaponType) end
---@return boolean
function AFPChar:DoServerWasAnyWeaponTypeAppliedThisFrame() end
function AFPChar:DoServerUsedEffigy() end
---@param DeltaSeconds float
function AFPChar:DoServerUpdateVengeance(DeltaSeconds) end
---@param DeltaTime float
function AFPChar:DoServerUpdateUseEffigy(DeltaTime) end
---@param DeltaTime float
function AFPChar:DoServerUpdateTeenCollision(DeltaTime) end
---@param Delta float
function AFPChar:DoServerUpdateStunResistanceResetTime(Delta) end
---@param TimeRemaining float
function AFPChar:DoServerUpdateSlowRecoveryTime(TimeRemaining) end
---@param DeltaSeconds float
function AFPChar:DoServerUpdateRecordedDamage(DeltaSeconds) end
---@param DeltaTime float
function AFPChar:DoServerUpdateRaygunReveal(DeltaTime) end
---@param DeltaSeconds float
function AFPChar:DoServerUpdateRage(DeltaSeconds) end
---@param DeltaTime float
function AFPChar:DoServerUpdateProneReveal(DeltaTime) end
---@param DeltaTime float
function AFPChar:DoServerUpdatePowerEffigy(DeltaTime) end
---@param DeltaSeconds float
function AFPChar:DoServerUpdateOpenHitWindow(DeltaSeconds) end
---@param DeltaSeconds float
function AFPChar:DoServerUpdateLeapTimeRemaining(DeltaSeconds) end
---@param DeltaSeconds float
function AFPChar:DoServerUpdateIncorporealTime(DeltaSeconds) end
---@param DeltaTime float
function AFPChar:DoServerUpdateHealSenseForEvil(DeltaTime) end
---@param DeltaTime float
function AFPChar:DoServerUpdateFuryEffigy(DeltaTime) end
---@param DeltaTime float
function AFPChar:DoServerUpdateFlinch(DeltaTime) end
---@param DeltaSeconds float
function AFPChar:DoServerUpdateFeasting(DeltaSeconds) end
---@param DeltaTime float
function AFPChar:DoServerUpdateFeastDrainEssense(DeltaTime) end
---@param DeltaTime float
function AFPChar:DoServerUpdateDemonSwordReveal(DeltaTime) end
---@param DeltaSeconds float
function AFPChar:DoServerUpdateDamageTime(DeltaSeconds) end
---@param DeltaTime float
function AFPChar:DoServerUpdateCrowdReveal(DeltaTime) end
---@param DeltaTime float
function AFPChar:DoServerUpdateCreateEffigy(DeltaTime) end
---@param DeltaSeconds float
function AFPChar:DoServerUpdateCombatStatus(DeltaSeconds) end
---@param DeltaTime float
function AFPChar:DoServerUpdateCanHearCrafting(DeltaTime) end
---@param DeltaSeconds float
function AFPChar:DoServerUpdateBlockedActionDelay(DeltaSeconds) end
---@param DeltaTime float
function AFPChar:DoServerUpdateAbilityLockouts(DeltaTime) end
---@param DeltaSeconds float
function AFPChar:DoServerUpdateAbilityCooldowns(DeltaSeconds) end
---@param DeltaSeconds float
function AFPChar:DoServerUpdateAbilityCharge(DeltaSeconds) end
---@return boolean
function AFPChar:DoServerTriedHit() end
function AFPChar:DoServerStun() end
function AFPChar:DoServerSpawnBanishmentScream() end
---@return boolean
function AFPChar:DoServerShouldRemoveWeaponForHit() end
---@param weaponType EWeaponTypeEnum
---@param Duration float
function AFPChar:DoServerSetWeaponTypeHitTimer(weaponType, Duration) end
---@param weaponType EWeaponTypeEnum
---@param Duration float
function AFPChar:DoServerSetWeaponTypeDamageDecayTimer(weaponType, Duration) end
---@param weaponType EWeaponTypeEnum
---@param Time float
function AFPChar:DoServerSetWeaponTypeAppliedTime(weaponType, Time) end
---@param weaponType EWeaponTypeEnum
---@param bSet boolean
function AFPChar:DoServerSetWasWeaponTypeAppliedThisFrame(weaponType, bSet) end
---@param bSet boolean
function AFPChar:DoServerSetWasAnyWeaponTypeJustApplied(bSet) end
---@param bSet boolean
function AFPChar:DoServerSetVanquished(bSet) end
---@param bSet boolean
function AFPChar:DoServerSetTriedHit(bSet) end
---@param tickDamageType EWeaponTypeEnum
function AFPChar:DoServerSetTickDamageType(tickDamageType) end
---@param NewValue float
function AFPChar:DoServerSetTeenCollisionTimer(NewValue) end
---@param TimeRemaining float
function AFPChar:DoServerSetStunTimeRemaining(TimeRemaining) end
---@param Val float
function AFPChar:DoServerSetStunResistanceRemaining(Val) end
---@param Val float
function AFPChar:DoServerSetStunResistanceMultiplier(Val) end
---@param Val float
function AFPChar:DoServerSetStunOutroTimer(Val) end
---@param bSet boolean
function AFPChar:DoServerSetStunned(bSet) end
function AFPChar:DoServerSetSpawnCooldowns() end
---@param TimeRemaining float
function AFPChar:DoServerSetSlowRecoveryTimeRemaining(TimeRemaining) end
---@param Index int32
function AFPChar:DoServerSetSelectedAbilityIndex(Index) end
---@param bSet boolean
function AFPChar:DoServerSetScreaming(bSet) end
---@param pScanAttackTargets TArray<AActor>
function AFPChar:DoServerSetScanAttackTargets(pScanAttackTargets) end
---@param bSet boolean
function AFPChar:DoServerSetRequestReleaseAttack(bSet) end
---@param NewValue float
function AFPChar:DoServerSetRaygunRevealTimeRemaining(NewValue) end
---@param Time float
function AFPChar:DoServerSetPowerEffigyTimeRemaining(Time) end
---@param maxVengeance float
function AFPChar:DoServerSetMaxVengeance(maxVengeance) end
---@param maxRage float
function AFPChar:DoServerSetMaxRage(maxRage) end
---@param newLeapTime float
function AFPChar:DoServerSetLeapTimeRemaining(newLeapTime) end
---@param lastHitType ELastHitType
function AFPChar:DoServerSetLastHitType(lastHitType) end
---@param Time float
function AFPChar:DoServerSetLastAttackHeldTime(Time) end
---@param bSet boolean
function AFPChar:DoServerSetIsInCombat(bSet) end
---@param TimeRemaining float
function AFPChar:DoServerSetIncorporealTimeRemaining(TimeRemaining) end
---@param Time float
function AFPChar:DoServerSetIncorporealTime(Time) end
---@param Time float
function AFPChar:DoServerSetIncorporeal(Time) end
---@param bSet boolean
function AFPChar:DoServerSetHitWindowOpen(bSet) end
---@param bHitAttackableObject boolean
function AFPChar:DoServerSetHitAttackableObject(bHitAttackableObject) end
---@param bSet boolean
function AFPChar:DoServerSetHasAttackSucceeded(bSet) end
---@param bNewValue boolean
function AFPChar:DoServerSetHasAttackReleased(bNewValue) end
---@param bHasAttackBounced boolean
function AFPChar:DoServerSetHasAttackBounced(bHasAttackBounced) end
---@param Time float
function AFPChar:DoServerSetFuryEffigyTimeRemaining(Time) end
---@param NewValue float
function AFPChar:DoServerSetFlinchTimeRemaining(NewValue) end
---@param pTPChar ATPChar
function AFPChar:DoServerSetFeastingTarget(pTPChar) end
---@param NewValue float
function AFPChar:DoServerSetFeastDrainEssenseTime(NewValue) end
---@param NewValue float
function AFPChar:DoServerSetEvilActionBlockDelayTimer(NewValue) end
---@param chargeHits int32
function AFPChar:DoServerSetEffigyChargeHits(chargeHits) end
---@param NewValue float
function AFPChar:DoServerSetDemonSwordRevealTimeRemaining(NewValue) end
---@param tickDamageType EWeaponTypeEnum
function AFPChar:DoServerSetDamagedType(tickDamageType) end
---@param currentVengeance float
function AFPChar:DoServerSetCurrentVengeance(currentVengeance) end
---@param currentRage float
function AFPChar:DoServerSetCurrentRage(currentRage) end
function AFPChar:DoServerSetCorporeal() end
---@param abilityIndex int32
function AFPChar:DoServerSetCompletedChargingAbility(abilityIndex) end
---@param bVal boolean
function AFPChar:DoServerSetCanHearCrafting(bVal) end
---@param Time float
function AFPChar:DoServerSetBaseFlinchTime(Time) end
---@param bSet boolean
function AFPChar:DoServerSetAttackResolving(bSet) end
---@param TimeHeld float
function AFPChar:DoServerSetAttackHeldTime(TimeHeld) end
---@param bNewValue boolean
function AFPChar:DoServerSetAttackHasPestilenceEffigyBuff(bNewValue) end
---@param bSet boolean
function AFPChar:DoServerSetAttackEnraged(bSet) end
---@param abilityIndex int32
---@param lockoutRemaining float
function AFPChar:DoServerSetAbilityLockoutRemaining(abilityIndex, lockoutRemaining) end
---@param abilityIndex int32
---@param cooldownRemaining float
function AFPChar:DoServerSetAbilityCooldownRemaining(abilityIndex, cooldownRemaining) end
function AFPChar:DoServerScreamAttack() end
---@param pTPChar ATPChar
---@param bKnockdown boolean
---@param bDead boolean
function AFPChar:DoServerRewardHit(pTPChar, bKnockdown, bDead) end
---@param damageSource FRecordedDamage
function AFPChar:DoServerRecordDamage(damageSource) end
function AFPChar:DoServerReactDamagedByWeapon() end
function AFPChar:DoServerPlayScreamAnimSequence() end
function AFPChar:DoServerOpenHitWindow() end
---@param pTPChar ATPChar
---@param pickupType EPickupType
function AFPChar:DoServerOnTPCharUsedPickup(pTPChar, pickupType) end
---@param pPoint AHidePoint
function AFPChar:DoServerOnTPCharLeftHidePoint(pPoint) end
function AFPChar:DoServerOnEndScream() end
---@return boolean
function AFPChar:DoServerLeap() end
function AFPChar:DoServerLandLeap() end
---@return boolean
function AFPChar:DoServerIsInCombat() end
---@return boolean
function AFPChar:DoServerIsBeingZoned() end
---@return boolean
function AFPChar:DoServerInHitWindow() end
---@param pHitTPChar ATPChar
function AFPChar:DoServerHitTPChar(pHitTPChar) end
function AFPChar:DoServerHideEffigy() end
---@param weaponType EWeaponTypeEnum
---@return float
function AFPChar:DoServerGetWeaponTypeHitTimer(weaponType) end
---@param weaponType EWeaponTypeEnum
---@return float
function AFPChar:DoServerGetWeaponTypeDamageDecayTimer(weaponType) end
---@param outEffigyTypes TArray<EEffigyType>
function AFPChar:DoServerGetValidSpawnableEffigyTypes(outEffigyTypes) end
---@return float
function AFPChar:DoServerGetUnresponsiveMaxAttackHoldTime() end
---@return FText
function AFPChar:DoServerGetTeenDamagedEvilText() end
---@return float
function AFPChar:DoServerGetTargetMarredTimeOnAttack() end
---@return boolean
function AFPChar:DoServerGetRequestReleaseAttack() end
---@return float
function AFPChar:DoServerGetMaxTeenDamagedEvilScore() end
---@return ELastHitType
function AFPChar:DoServerGetLastHitType() end
---@return boolean
function AFPChar:DoServerGetHasAttackReleased() end
---@return float
function AFPChar:DoServerGetGreatestWeaponDecayTimer() end
---@return float
function AFPChar:DoServerGetFeastDrainEssenseTime() end
---@return float
function AFPChar:DoServerGetAttackHeldTime() end
---@param Time float
function AFPChar:DoServerFlinch(Time) end
---@param pActor AActor
function AFPChar:DoServerDoHit(pActor) end
function AFPChar:DoServerDoAbilityLockouts() end
function AFPChar:DoServerCreatedEffigy() end
function AFPChar:DoServerCloseHitWindow() end
function AFPChar:DoServerClearScreamAttack() end
function AFPChar:DoServerClearMainEvilRageWhenDamaged() end
function AFPChar:DoServerClearMainEvilRageFromUse() end
function AFPChar:DoServerClearLeap() end
function AFPChar:DoServerClearLastRecordedDamage() end
---@param DamageType EDamageType
function AFPChar:DoServerClearDamageTypeAppliedTime(DamageType) end
function AFPChar:DoServerClearDamageAppliedTime() end
function AFPChar:DoServerClearCreatingEffigy() end
---@param bFromKnockdownHit boolean
function AFPChar:DoServerClearActiveAbilities(bFromKnockdownHit) end
---@param pGivenEvilChar AFPChar
---@return boolean
function AFPChar:DoServerCheckEffigyReady(pGivenEvilChar) end
---@param pAttackerActor AActor
---@param weaponType EWeaponTypeEnum
---@param DamageType EDamageType
function AFPChar:DoServerAttemptStrikeEvil(pAttackerActor, weaponType, DamageType) end
function AFPChar:DoServerAttack() end
---@param pVictimChar ATPChar
function AFPChar:DoServerApplyOnInjuryStatus(pVictimChar) end
function AFPChar:DoServerAnalyticRecordAbility() end
---@return boolean
function AFPChar:DoServerActivateSelectedAbility() end
---@param abilityIndex int32
function AFPChar:DoServerActivateCooldown(abilityIndex) end
function AFPChar:DoServerActivateAllCooldowns() end
function AFPChar:DoServerAbortUsingEffigy() end
---@param abilityIndex int32
---@return boolean
function AFPChar:DoesAbilityHaveMultipleCharges(abilityIndex) end
function AFPChar:ClientUpdateVictims() end
---@param DeltaSeconds float
function AFPChar:ClientUpdateAttack(DeltaSeconds) end
---@param bSet boolean
function AFPChar:ClientSetHasAttackTarget(bSet) end
---@return boolean
function AFPChar:ClientHasAttackTarget() end
---@return boolean
function AFPChar:CanUseSelectedAbility() end
---@param abilityIndex int32
---@return boolean
function AFPChar:CanUseAbility(abilityIndex) end
---@return boolean
function AFPChar:CanLeap() end
---@return boolean
function AFPChar:CanBeDamaged() end
---@return float
function AFPChar:CalculateIncorporealTime() end
---@return boolean
function AFPChar:AttackHasPestilenceEffigyBuff() end
---@return boolean
function AFPChar:AllowTeensToPassThrough() end
---@return boolean
function AFPChar:AllowedToUpdateVictimFinder() end
---@return boolean
function AFPChar:AllowedToStartFeasting() end
---@return boolean
function AFPChar:AllowedToSpawnBanishmentScream() end
---@return boolean
function AFPChar:AllowedToFeast() end
---@return boolean
function AFPChar:AllowedToBeInstantStruckByWeapons() end
---@return boolean
function AFPChar:AllowedToBecomeCorporeal() end
---@return boolean
function AFPChar:AllowedToAttack() end
---@return boolean
function AFPChar:AllowedToAbilityCharge() end
---@param pTPChar ATPChar
function AFPChar:AddRequiredStatusComponentsToTPChar(pTPChar) end


---@class AFlameMineChar : ARemoteCharBase
---@field mpFlameMineSkinDataAsset UFlameMineSkinDataAsset
---@field mDisintegrationLevel float
---@field mpTargetContainer USceneComponent
---@field mpTargetMesh UStaticMeshComponent
---@field mpCubeCaptureComponent USceneCaptureComponentCube
---@field mpCubeCaptureRenderTarget UTextureRenderTargetCube
---@field mpFloatingParticleSystemComponent UParticleSystemComponent
---@field mpTargetingDecal UDecalComponent
---@field mpBeamComponent ARCCopterElectricity
---@field mbFiring boolean
---@field mTargetBeamLocation FVector
---@field mbHitWall boolean
---@field mbIsHittingEvil boolean
---@field mbDetectsEvil boolean
---@field mbEvilViewing boolean
---@field mpAuraMesh USkeletalMeshComponent
---@field mpAuraMeshMaterial UMaterialInterface
---@field mbIsStopped boolean
---@field mpOwningWeapon AFlameMineWeapon
AFlameMineChar = {}

function AFlameMineChar:UpdateVisuals() end
function AFlameMineChar:StopBeamStartupAkEvent() end
function AFlameMineChar:StopBeamActiveAkEvent() end
function AFlameMineChar:SetBeamParticles() end
function AFlameMineChar:Server_RequestAbortFire() end
function AFlameMineChar:PlayBeamStartupAkEvent() end
function AFlameMineChar:PlayBeamShutdownAkEvent() end
function AFlameMineChar:PlayBeamActiveAkEvent() end
function AFlameMineChar:OnRep_TargetBeamLocation() end
---@param bPressed boolean
function AFlameMineChar:OnInputAction_FlameMinePrimaryFire(bPressed) end
---@param HitComp UPrimitiveComponent
---@param OtherActor AActor
---@param OtherComp UPrimitiveComponent
---@param NormalImpulse FVector
---@param Hit FHitResult
function AFlameMineChar:OnHit(HitComp, OtherActor, OtherComp, NormalImpulse, Hit) end
function AFlameMineChar:MulticastAllStopBeam() end
function AFlameMineChar:MulticastAllStartBeam() end
---@return boolean
function AFlameMineChar:IsHittingEvil() end
---@return boolean
function AFlameMineChar:IsFiring() end
---@return boolean
function AFlameMineChar:IsEvilViewing() end
---@param pEvil AFPChar
---@return boolean
function AFlameMineChar:IsEvilInFiringRange(pEvil) end
---@return boolean
function AFlameMineChar:IsDisabled() end
---@return FVector
function AFlameMineChar:GetTargetBeamLocation() end
---@return boolean
function AFlameMineChar:GetServerIsStopped() end
---@return AFlameMineWeapon
function AFlameMineChar:GetOwningWeapon() end
---@param DeltaSeconds float
function AFlameMineChar:DoServerUpdateMovement(DeltaSeconds) end
---@param DeltaSeconds float
function AFlameMineChar:DoServerUpdateFiringAndDetection(DeltaSeconds) end
function AFlameMineChar:DoServerStartSeeking() end
---@param pOwningWeapon AFlameMineWeapon
function AFlameMineChar:DoServerSetOwningWeapon(pOwningWeapon) end
---@param bNewValue boolean
function AFlameMineChar:DoServerSetIsStopped(bNewValue) end
---@param bSet boolean
function AFlameMineChar:DoServerSetFiring(bSet) end
---@param bSet boolean
function AFlameMineChar:DoServerSetEvilViewing(bSet) end
---@param percent float
function AFlameMineChar:DoServerSetDisintegrationLevel(percent) end
---@param bSet boolean
function AFlameMineChar:DoServerSetDetectsEvil(bSet) end
---@return boolean
function AFlameMineChar:DetectsEvil() end


---@class AFlameMineWeapon : AWeaponBase
---@field mpSummoningParticleSystem UParticleSystemComponent
---@field mpDiscNiagaraComponent UNiagaraComponent
---@field mMineToSpawn TSubclassOf<AFlameMineChar>
---@field mpSummoningMine AFlameMineChar
---@field mMines TArray<AFlameMineChar>
---@field mEvilViewingTime float
---@field mbMineViewedThisFrame boolean
AFlameMineWeapon = {}

function AFlameMineWeapon:UpdateSummoningParticles() end
function AFlameMineWeapon:UpdateDiscParticles() end
function AFlameMineWeapon:MulticastAllPlayFireStartup() end
function AFlameMineWeapon:MulticastAllPlayFireShutdown() end
function AFlameMineWeapon:MulticastAllPlayFireLoop() end
---@return boolean
function AFlameMineWeapon:IsSummoningPastCancelTime() end
---@return boolean
function AFlameMineWeapon:IsSummoning() end
---@return boolean
function AFlameMineWeapon:IsBeingViewedByEvil() end
---@return boolean
function AFlameMineWeapon:HasMines() end
---@return float
function AFlameMineWeapon:GetTimeSummoningCancelOldMine() end
---@return TArray<AFlameMineChar>
function AFlameMineWeapon:GetMines() end
---@return int32
function AFlameMineWeapon:GetMaxMinesAtOnce() end
---@return float
function AFlameMineWeapon:GetEvilViewingTime() end
---@return float
function AFlameMineWeapon:GetCurrentDrainFactor() end
---@param DeltaSeconds float
function AFlameMineWeapon:DoServerUpdateSummoningMode(DeltaSeconds) end
---@param DeltaSeconds float
function AFlameMineWeapon:DoServerUpdateFiringMode(DeltaSeconds) end
---@param DeltaSeconds float
function AFlameMineWeapon:DoServerUpdateEvilViewingTime(DeltaSeconds) end
---@param Time float
function AFlameMineWeapon:DoServerSetEvilViewingTime(Time) end
---@param pFlameMineChar AFlameMineChar
function AFlameMineWeapon:DoServerRemoveFlameMine(pFlameMineChar) end
function AFlameMineWeapon:DoServerOnChargeExhausted() end
function AFlameMineWeapon:DoServerCancelMines() end
---@param pFlameMineChar AFlameMineChar
function AFlameMineWeapon:DoServerAddFlameMine(pFlameMineChar) end


---@class AFlamethrowerProjectile : AActor
---@field mpStaticMeshComponent UStaticMeshComponent
---@field mpProjectileMovement UProjectileMovementComponent
---@field mpCollisionCapsuleComponent UCapsuleComponent
---@field mpDamageCapsuleComponent UCapsuleComponent
---@field mpDamageBoxComponent UBoxComponent
---@field mpParticleSystem UParticleSystemComponent
---@field mpScorchSystem UParticleSystem
---@field mpTrailingProjectile AFlamethrowerProjectile
---@field mProjectileSlowdownRate float
---@field mLifetime float
---@field mLifetimeRemaining float
---@field mpOwningFlamethrower AFlamethrowerWeapon
---@field mFalloffTime float
---@field mDrag float
---@field mDamageType EDamageType
---@field mTrailingDamagePoints TArray<FTrailingDamagePoint>
---@field mFurthestTrailingDamage FVector
AFlamethrowerProjectile = {}

---@param Velocity FVector
function AFlamethrowerProjectile:SetVelocity(Velocity) end
---@param LifeTime float
function AFlamethrowerProjectile:SetLifetime(LifeTime) end
---@param Drag float
function AFlamethrowerProjectile:SetDrag(Drag) end
---@param Result FHitResult
---@param ImpactVelocity FVector
function AFlamethrowerProjectile:OnProjectileBounce(Result, ImpactVelocity) end
---@param DeltaSeconds float
---@param pOwningTPChar ATPChar
function AFlamethrowerProjectile:DoServerWeaponUsageTick(DeltaSeconds, pOwningTPChar) end
---@param DeltaSeconds float
function AFlamethrowerProjectile:DoServerUpdateDamageCapsule(DeltaSeconds) end


---@class AFlamethrowerWeapon : AWeaponBase
---@field mTargetDirection FRotator
---@field mLaggedDirection FRotator
---@field mReticleOffset FVector2D
---@field mpIdleFlameParticleComponent UParticleSystemComponent
---@field mpFlamethrowerParticleComponent UParticleSystemComponent
---@field mBaseFireRate float
---@field mFireRate float
---@field mProjectileSpeedScale float
---@field mProjectileSpeedRamp float
---@field mTimeFiring float
---@field mGlowTimer float
---@field mBaseSpeed float
---@field mDrag float
---@field mCurrentAcceleration float
---@field mSpawnedProjectiles TArray<AFlamethrowerProjectile>
---@field mpNozzleProjectile AFlamethrowerProjectile
---@field mFlamethrowerProjectileToSpawn TSubclassOf<AFlamethrowerProjectile>
---@field mInjuredFreeFireTime float
---@field mPreviousTransform FTransform
AFlamethrowerWeapon = {}

---@param DeltaSeconds float
function AFlamethrowerWeapon:UpdateSpeedAndAcceleration(DeltaSeconds) end
---@param DeltaSeconds float
function AFlamethrowerWeapon:UpdateParticles(DeltaSeconds) end
---@param DeltaSeconds float
function AFlamethrowerWeapon:UpdateNozzleGlow(DeltaSeconds) end
function AFlamethrowerWeapon:MulticastAllStopFlamethrowerActive() end
function AFlamethrowerWeapon:MulticastAllPlayFlamethrowerActive() end
---@return TSubclassOf<AFlamethrowerProjectile>
function AFlamethrowerWeapon:GetFlamethrowerProjectileToSpawn() end


---@class AFrontEndCameraActor : ACameraActor
---@field mpZoomOutTargetCamera AFrontEndCameraActor
---@field mpFocalTargetLocator ATransformLocator
---@field mbFlipZoomDirection boolean
---@field mBaseZoom float
AFrontEndCameraActor = {}

---@param Source FPostProcessSettings
---@param Target FPostProcessSettings
---@param Alpha float
---@return FPostProcessSettings
function AFrontEndCameraActor:LerpPostProcessSettings(Source, Target, Alpha) end
---@param Zoom float
---@return FPostProcessSettings
function AFrontEndCameraActor:GetZoomedPostProcessSettings(Zoom) end
---@return FPostProcessSettings
function AFrontEndCameraActor:GetPostProcessSettings() end
---@param Zoom float
---@return FTransform
function AFrontEndCameraActor:GetCameraTransform(Zoom) end
---@param Zoom float
---@return float
function AFrontEndCameraActor:GetCameraFieldOfView(Zoom) end
---@return float
function AFrontEndCameraActor:GetCameraBaseZoom() end


---@class AFrontEndCameraPool : AActor
---@field MainCamera AFrontEndCameraActor
---@field Cameras TMap<EFrontEndLocation, ACameraActor>
AFrontEndCameraPool = {}



---@class AFrontEndGM : AGameMode
AFrontEndGM = {}


---@class AFrontEndHUD : ABaseHUD
---@field mpGuideSystem UGuideSystem
---@field mpModalManager UModalManager
---@field mMainMenuClass TSubclassOf<UMainMenuWidget>
---@field mpMainMenu UMainMenuWidget
---@field mBottomBorderClass TSubclassOf<ULetterboxBordersWidget>
---@field mpBottomBorder ULetterboxBordersWidget
---@field mScreenHeaderClass TSubclassOf<UScreenHeaderWidget>
---@field mpScreenHeaderWidget UScreenHeaderWidget
---@field mToasterClass TSubclassOf<UToasterWidget>
---@field mpToasterWidget UToasterWidget
---@field mContextMenuClass TSubclassOf<UContextMenuWidget>
---@field mpContextMenu UContextMenuWidget
---@field mpCameraActor AFrontEndCameraActor
---@field mpCameraAttract AFrontEndCameraActor
---@field mpCameraMainMenu AFrontEndCameraActor
---@field mpCameraLobby AFrontEndCameraActor
---@field mpCameraCustomize AFrontEndCameraActor
---@field mpCameraSeasonPass AFrontEndCameraActor
---@field mpCameraOptions AFrontEndCameraActor
---@field mpCameraMutations AFrontEndCameraActor
---@field mpCameraCharacterSelect AFrontEndCameraActor
---@field mpCameraCharacterSelectBio AFrontEndCameraActor
---@field mpCameraCustomizeTeenCostume AFrontEndCameraActor
---@field mpCameraCustomizeTeenHead AFrontEndCameraActor
---@field mpCameraCustomizeTeenTop AFrontEndCameraActor
---@field mpCameraCustomizeTeenOuter AFrontEndCameraActor
---@field mpCameraCustomizeTeenHands AFrontEndCameraActor
---@field mpCameraCustomizeTeenBottom AFrontEndCameraActor
---@field mpCameraCustomizeTeenSocks AFrontEndCameraActor
---@field mpCameraCustomizeTeenFeet AFrontEndCameraActor
---@field mpCameraCustomizeEvilCostume AFrontEndCameraActor
---@field mpCameraCustomizeEvilEffect AFrontEndCameraActor
---@field mpCameraCustomizeEvilAccessoryUpper AFrontEndCameraActor
---@field mpCameraCustomizeEvilAccessoryMid AFrontEndCameraActor
---@field mpCameraCustomizeEvilAccessoryLower AFrontEndCameraActor
---@field mpCameraCustomizeEmote AFrontEndCameraActor
---@field mpCameraWeaponSkins AFrontEndCameraActor
---@field mpCameraWeaponInfo AFrontEndCameraActor
---@field mpCameraWeaponPowers AFrontEndCameraActor
---@field mpCameraMoviePreview AFrontEndCameraActor
---@field mpCameraScenesPreview AFrontEndCameraActor
---@field mpCameraMiniGame AFrontEndCameraActor
---@field mpCameraPool AFrontEndCameraPool
---@field mpActiveOverlay UBaseOverlay
---@field mpAttractScreen UAttractScreen
---@field mAttractScreenClass TSubclassOf<UAttractScreen>
---@field mpMatchmakingScreen UMatchmakingScreen
---@field mMatchmakingScreenClass TSubclassOf<UMatchmakingScreen>
---@field mpLobbyScreen ULobbyScreen
---@field mLobbyScreenClass TSubclassOf<ULobbyScreen>
---@field mpEventScreen UEventScreen
---@field mEventScreenClass TSubclassOf<UEventScreen>
---@field mpServerBrowserOverlayWidget UServerBrowserOverlayWidget
---@field mServerBrowserOverlayWidgetClass TSubclassOf<UServerBrowserOverlayWidget>
---@field mpPlayerAccountScreen UPlayerAccountScreen
---@field mPlayerAccountScreenClass TSubclassOf<UPlayerAccountScreen>
---@field mpWeaponsScreen UWeaponsScreen
---@field mWeaponsScreenClass TSubclassOf<UWeaponsScreen>
---@field mpWeaponCustomizationScreen UWeaponCustomizationScreen
---@field mWeaponCustomizationScreenClass TSubclassOf<UWeaponCustomizationScreen>
---@field mpLoadoutScreen ULoadoutScreen
---@field mLoadoutScreenClass TSubclassOf<ULoadoutScreen>
---@field mpMoviesScreen UMoviesScreen
---@field mMoviesScreenClass TSubclassOf<UMoviesScreen>
---@field mpScenesScreen UScenesScreen
---@field mScenesScreenClass TSubclassOf<UScenesScreen>
---@field mpNewsScreen UNewsScreen
---@field mNewsScreenClass TSubclassOf<UNewsScreen>
---@field mpStoreScreen UStoreScreen
---@field mStoreScreenClass TSubclassOf<UStoreScreen>
---@field mpJourneyScreen UJourneyScreen
---@field mJourneyScreenClass TSubclassOf<UJourneyScreen>
---@field mpSeasonPassPreviewScreen USeasonPassPreviewScreen
---@field mSeasonPassPreviewScreenClass TSubclassOf<USeasonPassPreviewScreen>
---@field mpSeasonPassScreen USeasonPassScreen
---@field mSeasonPassScreenClass TSubclassOf<USeasonPassScreen>
---@field mpCharacterSelectScreen UCharacterSelectScreen
---@field mCharacterSelectScreenClass TSubclassOf<UCharacterSelectScreen>
---@field mpOptionsScreen UOptionsScreen
---@field mOptionsScreenClass TSubclassOf<UOptionsScreen>
---@field mpEndOfRoundScreen UEndOfRoundScreen
---@field mEndOfRoundScreenClass TSubclassOf<UEndOfRoundScreen>
---@field mpSystemScreen USystemScreen
---@field mSystemScreenClass TSubclassOf<USystemScreen>
---@field mpLoadoutClothingMenuScreen ULoadoutClothingMenuScreen
---@field mLoadoutClothingMenuScreenClass TSubclassOf<ULoadoutClothingMenuScreen>
---@field mpLoadoutPerksMenuScreen ULoadoutPerksMenuScreen
---@field mLoadoutPerksMenuScreenClass TSubclassOf<ULoadoutPerksMenuScreen>
---@field mpMutationsScreen UMutationsScreen
---@field mMutationsScreenClass TSubclassOf<UMutationsScreen>
---@field mpStorePreviewMenuScreen UStorePreviewMenuScreen
---@field mStorePreviewMenuScreenClass TSubclassOf<UStorePreviewMenuScreen>
---@field mpStoreItemContentsPreviewMenuScreen UStoreItemContentsPreviewMenuScreen
---@field mStoreItemContentsPreviewMenuScreen TSubclassOf<UStoreItemContentsPreviewMenuScreen>
---@field mpAssetFeatureScreen UAssetFeatureScreen
---@field mClaimRewardScreenClass TSubclassOf<URewardClaimScreen>
---@field mpClaimRewardScreen URewardClaimScreen
---@field mpCreditsScreen UHBCreditsScreen
---@field mCreditsScreenClass TSubclassOf<UHBCreditsScreen>
---@field mAssetFeatureScreenClass TSubclassOf<UAssetFeatureScreen>
---@field mpLobbyStatus ULobbyStatusWidget
---@field mLobbyStatusClass TSubclassOf<ULobbyStatusWidget>
---@field mpCopyrightWidget UUserWidget
---@field mCopyrightWidgetClass TSubclassOf<UUserWidget>
---@field mpIssueTrackerWidget UIssueTrackerWidget
---@field mIssueTrackerWidgetClass TSubclassOf<UIssueTrackerWidget>
---@field mpCharacterSelectBioScreen UCharacterSelectBioScreen
---@field mCharacterSelectBioScreenClass TSubclassOf<UCharacterSelectBioScreen>
---@field mpCharacterSelectOverlayWidget UCharacterSelectOverlayWidget
---@field mCharacterSelectOverlayWidgetClass TSubclassOf<UCharacterSelectOverlayWidget>
---@field mpLobbyMatchSettingsOverlayWidget ULobbyMatchSettingsOverlayWidget
---@field mpLobbyMatchSettingsOverlayWidgetClass TSubclassOf<ULobbyMatchSettingsOverlayWidget>
---@field mpBotSettingsOverlayWidget UBotSettingsOverlayWidget
---@field mpBotSettingsOverlayWidgetClass TSubclassOf<UBotSettingsOverlayWidget>
---@field mpSocialWidget USocialWidget
---@field mSocialWidgetClass TSubclassOf<USocialWidget>
---@field mpSocialOverlayWidget USocialOverlayWidget
---@field mSocialOverlayWidgetClass TSubclassOf<USocialOverlayWidget>
---@field mpPrizeMenuOverlayWidget UPrizeMenuOverlayWidget
---@field mPrizeMenuOverlayWidgetClass TSubclassOf<UPrizeMenuOverlayWidget>
---@field mpPrizePackOverlayWidget UPrizePackOverlayWidget
---@field mPrizePackOverlayWidgetClass TSubclassOf<UPrizePackOverlayWidget>
---@field mpPrizeRevealOverlayWidget UPrizeRevealOverlayWidget
---@field mPrizeRevealOverlayWidgetClass TSubclassOf<UPrizeRevealOverlayWidget>
---@field mpLoadoutRadialOverlayWidget ULoadoutRadialOverlayWidget
---@field mLoadoutRadialOverlayWidgetClass TSubclassOf<ULoadoutRadialOverlayWidget>
---@field mpPerkEquipmentOverlayWidget UPerkEquipmentOverlayWidget
---@field mPerkEquipmentOverlayWidgetClass TSubclassOf<UPerkEquipmentOverlayWidget>
---@field mpSceneSummaryOverlayWidget USceneSummaryOverlayWidget
---@field mSceneSummaryOverlayWidgetClass TSubclassOf<USceneSummaryOverlayWidget>
---@field mpAnnouncementOverlayWidget UAnnouncementOverlayWidget
---@field mAnnouncementOverlayWidgetClass TSubclassOf<UAnnouncementOverlayWidget>
---@field mpNewsOverlayWidget UNewsOverlayWidget
---@field mNewsOverlayWidgetClass TSubclassOf<UNewsOverlayWidget>
---@field mpGameModeOverlayWidget UGameModeOverlayWidget
---@field mGameModeOverlayWidgetClass TSubclassOf<UGameModeOverlayWidget>
---@field mpTutorialsTrainingOverlayWidget UTutorialsTrainingOverlayWidget
---@field mTutorialsTrainingOverlayWidgetClass TSubclassOf<UTutorialsTrainingOverlayWidget>
---@field mpSignOutModal UBusyModalWidget
---@field mpDiscoverBusyModal UBusyModalWidget
---@field mpLoginEntitlementModal UConfirmationModalWidget
---@field mMainMenuTabIndex int32
---@field mpSourceCamera AFrontEndCameraActor
---@field mpTargetCamera AFrontEndCameraActor
---@field mCurrentCameraTransformTime float
---@field mTargetCameraTransformTime float
---@field mStoreDioramaLevelBySku TMap<FName, ULevelStreamingDynamic>
---@field mCurrentStoreDioramaLevel FName
---@field mCurrentLoadingSKUPurchaseLevel FName
---@field mbCurrentlyPlayingSKUPurchaseAnimation boolean
---@field mbFEMusicIsPlaying boolean
AFrontEndHUD = {}

function AFrontEndHUD:UpdateVerifyVoiceChatClient() end
function AFrontEndHUD:UpdateStoreEntitlementCheck() end
function AFrontEndHUD:UpdateSetScreen() end
function AFrontEndHUD:UpdateMainMenuVisibility() end
function AFrontEndHUD:UpdateLobbyCountdownSounds() end
function AFrontEndHUD:UpdateCheckMinigame() end
---@param DeltaTime float
function AFrontEndHUD:UpdateCameraTransform(DeltaTime) end
function AFrontEndHUD:ToggleFEDebug() end
function AFrontEndHUD:StartMenuPlaylist() end
function AFrontEndHUD:Shutdown() end
function AFrontEndHUD:ShowTutorialsTrainingOverlay() end
---@param Category ESocialCategoryType
function AFrontEndHUD:ShowSocialOverlay(Category) end
function AFrontEndHUD:ShowSignOutModal() end
function AFrontEndHUD:ShowServerBrowserOverlay() end
function AFrontEndHUD:ShowSceneSummaryOverlay() end
function AFrontEndHUD:ShowRestartRequiredModal() end
function AFrontEndHUD:ShowReplayModal() end
function AFrontEndHUD:ShowPrizeRevealOverlay() end
---@param bReturnToPrizeMenu boolean
function AFrontEndHUD:ShowPrizePackOverlay(bReturnToPrizeMenu) end
---@param faction EFaction
function AFrontEndHUD:ShowPrizeMenuOverlay(faction) end
function AFrontEndHUD:ShowNewsOverlay() end
function AFrontEndHUD:ShowLobbyMatchSettingsOverlay() end
function AFrontEndHUD:ShowLeaveLobbyModal() end
function AFrontEndHUD:ShowGameModeOverlay() end
function AFrontEndHUD:ShowExitModal() end
function AFrontEndHUD:ShowDiscardOptionsModal() end
function AFrontEndHUD:ShowDeclineEulaModal() end
---@param botIdx int32
function AFrontEndHUD:ShowBotSettingsOverlay(botIdx) end
function AFrontEndHUD:ShowAnnouncementOverlay() end
---@param State ELobbyClientState
function AFrontEndHUD:SetLobbyState(State) end
---@param LobbyDetails FLobbyDetails
function AFrontEndHUD:SetLobbyDetails(LobbyDetails) end
---@param sku FName
---@param Level FString
function AFrontEndHUD:SetActiveStoreDiorama(sku, Level) end
function AFrontEndHUD:ResumeNavigation() end
function AFrontEndHUD:RefreshSocialWidgets() end
function AFrontEndHUD:RefreshPartyWidgets() end
function AFrontEndHUD:RefreshLobby() end
function AFrontEndHUD:RefreshActiveScreen() end
---@param menuData FContextMenuData
---@param pAnchorWidget UWidget
---@param bPreferLeft boolean
function AFrontEndHUD:PresentContextMenu(menuData, pAnchorWidget, bPreferLeft) end
function AFrontEndHUD:OnStoreEntitlementCheckAccepted() end
function AFrontEndHUD:OnStoreDioramaFinishedLoading() end
---@param sku FName
---@param Level FString
function AFrontEndHUD:OnSKUPurchased(sku, Level) end
function AFrontEndHUD:OnSKUPurchaseAnimationComplete() end
function AFrontEndHUD:OnSignOut() end
function AFrontEndHUD:OnSaveOptions() end
function AFrontEndHUD:OnPresentLicenseModal() end
function AFrontEndHUD:OnPartyForcedCharacterChange() end
---@param bFoundEntitlements boolean
function AFrontEndHUD:OnLoginEntitlementCheckComplete(bFoundEntitlements) end
function AFrontEndHUD:OnLeaveLobby() end
function AFrontEndHUD:OnExitGame() end
function AFrontEndHUD:OnDiscardOptions() end
function AFrontEndHUD:OnDeviceTypeChanged() end
---@return boolean
function AFrontEndHUD:IsTextEntryFocused() end
---@return boolean
function AFrontEndHUD:IsOverlayActive() end
---@return boolean
function AFrontEndHUD:IsCountdownLocked() end
---@return boolean
function AFrontEndHUD:IsContextMenuVisible() end
function AFrontEndHUD:HideOverlay() end
function AFrontEndHUD:HideContextMenuIfUnselected() end
function AFrontEndHUD:HideContextMenu() end
---@return int32
function AFrontEndHUD:GetStoredMainMenuTabIndex() end
---@return UServerBrowserOverlayWidget
function AFrontEndHUD:GetServerBrowserOverlayWidget() end
---@return UScreenHeaderWidget
function AFrontEndHUD:GetScreenHeader() end
---@return ULobbyScreen
function AFrontEndHUD:GetLobbyScreen() end
---@return FLobbyDetails
function AFrontEndHUD:GetLobbyDetails() end
---@return UIssueTrackerWidget
function AFrontEndHUD:GetIssueTracker() end
function AFrontEndHUD:DoCharacterSelectSpectator() end
function AFrontEndHUD:BeginLockdownAndCommitChanges() end
function AFrontEndHUD:BeginFEMusicPlayback() end
---@param sku FName
function AFrontEndHUD:ActivateSKUPurchasedScene(sku) end


---@class AFrontEndLevel : ALevelBase
---@field mSeasonalMapData TMap<ESeasonalEventType, UMapDataAsset>
AFrontEndLevel = {}



---@class AFrontEndPC : ABasePC
---@field mAllConnectedPlayerInfo TArray<FNetPlayerInfoStruct>
---@field mLobbyCharSlots TArray<FLobbyCharSlotData>
---@field mpEvilAvatarChar ATPChar
---@field mMainCharLocator FTransform
---@field mCustomizeCharLocator FTransform
---@field mCustomizeSpawnableCharLocator FTransform
---@field mEvilAvatarCharLocator FTransform
---@field mWeaponLocator FTransform
---@field mSpectralLocator FTransform
---@field mMoviePreviewLocator FTransform
---@field mCurrentCameraLocation EFrontEndLocation
---@field mSelectedCharacter ECharacterType
---@field mpLobbyScreen ULobbyScreen
---@field mpLobbyBeaconClient ALobbyBeaconClient
---@field mpFrontEndChar ATPChar
---@field mFrontEndCharType ECharacterType
---@field mCustomizationCharType ECharacterType
---@field mFrontEndOverrideCharType ECharacterType
---@field mpCustomizeChar ATPChar
---@field mpCustomizeCharSpawnable ATPChar
---@field mpCustomizeFeastTargetChar ATPChar
---@field mpCustomizeWeapon AWeaponBase
---@field mpTempCustomizeWeapon AWeaponBase
---@field mpCustomizeWeaponSpawnable AActor
---@field mpTempCustomizeWeaponSpawnable AActor
---@field mpCustomizeSpectral AActor
---@field mpTempCustomizeSpectral AActor
---@field mpMoviePreviewActor AStaticMeshActor
---@field mCustomizeCharRotation FRotator
---@field mCustomizeCharZoom float
---@field mCustomizeCharBaseZoom float
---@field mMoviePreviewRotation FRotator
---@field mFrontendCharRotation FRotator
---@field mFrontEndCharacterDisintegrationLevel float
---@field mCustomizeCharacterDisintegrationLevel float
---@field mEvilAvatarCharacterDisintegrationLevel float
---@field mEvilAvatarDistintegrationTarget float
---@field mEvilAvatarDisintegrationSpeed float
---@field mLobbyFlavorCooldownTimer float
---@field mServerMatchMode EServerMatchMode
---@field mbCustomizeCharacterLoadoutDirty boolean
---@field mCustomizationModelMode ECustomizationModel
---@field mCustomizationPreviewMode ECustomizationPreviewMode
---@field mbCustomizeWeaponIsVisible boolean
---@field mbCustomizeSpectralIsVisible boolean
---@field mbFrontEndCharacterIsVisible boolean
---@field mbMoviePreviewIsVisible boolean
---@field mWeaponDataAssets TArray<TSoftObjectPtr<UItemDataAsset>>
---@field mSpectralDataAsset TSoftObjectPtr<UItemDataAsset>
---@field mbEquipInProgress boolean
---@field mpFrontendMaterialParameterCollection UMaterialParameterCollection
---@field mpMoviePreviewMesh UStaticMesh
---@field mpFeastPreviewRoot UClothingItemDataAsset
---@field mpFeastPreviewTop UClothingItemDataAsset
---@field mpFeastPreviewBtm UClothingItemDataAsset
---@field mpLobbyEvilSpectralDataAsset UEvilSpectralDataAsset
---@field mRotationClamp float
---@field mTimeSpentOnCharacter TMap<ECharacterType, float>
---@field mCountSpentOnCharacter TMap<ECharacterType, int32>
AFrontEndPC = {}

---@param connectedPlayers TArray<FNetPlayerInfoStruct>
function AFrontEndPC:UpdateAllLobbyPlayerInfo(connectedPlayers) end
function AFrontEndPC:ToggleReady() end
---@param Text FText
function AFrontEndPC:SubmitChatText(Text) end
---@param pChar ATPChar
---@param Type ECharacterType
---@param avatarType EAvatarType
function AFrontEndPC:SpawnTPChar(pChar, Type, avatarType) end
---@param playerInfo FNetPlayerInfoStruct
---@param Slot FLobbyCharSlotData
function AFrontEndPC:SpawnLobbyTPCharAtSlot(playerInfo, Slot) end
---@param pMovieTexture UTexture2D
function AFrontEndPC:SetMoviePreviewTexture(pMovieTexture) end
---@param bSet boolean
function AFrontEndPC:SetFrontEndCharacterVisible(bSet) end
---@param Type ECharacterType
---@param bSaveToSettings boolean
function AFrontEndPC:SetFrontEndCharacterType(Type, bSaveToSettings) end
---@param Amount FRotator
function AFrontEndPC:SetFrontendCharacterRotation(Amount) end
---@param Zoom float
function AFrontEndPC:SetCustomizeCharacterBaseZoom(Zoom) end
---@param skinId FDbItemId
function AFrontEndPC:SetCustomizationWeaponBySkin(skinId) end
---@param skinId FDbItemId
function AFrontEndPC:SetCustomizationSpectralSkin(skinId) end
---@param Model ECustomizationModel
---@param Preview ECustomizationPreviewMode
function AFrontEndPC:SetCustomizationMode(Model, Preview) end
---@param bDuck boolean
---@param Duration float
function AFrontEndPC:SetCustomizationDuckLights(bDuck, Duration) end
---@param Type ECharacterType
---@param bForceCharChange boolean
function AFrontEndPC:SetCustomizationCharacterType(Type, bForceCharChange) end
function AFrontEndPC:ResetMainCharacterDisintegration() end
function AFrontEndPC:ResetCustomizeRotation() end
function AFrontEndPC:ResetCustomizeCharacterZoom() end
function AFrontEndPC:ResetCustomizationCharacterType() end
---@param Type ECharacterType
function AFrontEndPC:OverrideFrontEndCharacterModel(Type) end
function AFrontEndPC:OnSKUPurchaseAnimationComplete() end
function AFrontEndPC:OnCustomizeCharacterEquipmentUpdated() end
function AFrontEndPC:OnClientUpdateQuitPressed() end
---@param lobbyIndex int32
---@param weaponType EWeaponTypeEnum
function AFrontEndPC:MarkLobbyWeaponLoadoutDirty(lobbyIndex, weaponType) end
---@param lobbyIndex int32
---@param CharType ECharacterType
function AFrontEndPC:MarkLobbyCharacterLoadoutDirty(lobbyIndex, CharType) end
---@param lobbyIndex int32
---@param abilityType EEvilAbilityType
function AFrontEndPC:MarkLobbyAbilityLoadoutDirty(lobbyIndex, abilityType) end
---@return boolean
function AFrontEndPC:IsReady() end
---@return boolean
function AFrontEndPC:IsASpectator() end
---@return boolean
function AFrontEndPC:IsAHost() end
---@return boolean
function AFrontEndPC:IsAClient() end
function AFrontEndPC:InitializePlayerInformationFromSettings() end
---@param Index int32
---@return ATPChar
function AFrontEndPC:GetTPCharForIndex(Index) end
---@return ECharacterType
function AFrontEndPC:GetSelectedCharacter() end
---@return FNetPlayerInfoStruct
function AFrontEndPC:GetPlayerInfo() end
---@return ECharacterType
function AFrontEndPC:GetOverrideFrontEndCharacterType() end
---@return ALobbyBeaconClient
function AFrontEndPC:GetLobbyClient() end
---@return ECharacterType
function AFrontEndPC:GetFrontEndCharacterType() end
---@return ATPChar
function AFrontEndPC:GetFrontEndCharacter() end
---@return ECharacterType
function AFrontEndPC:GetFeastingPreviewCharacterType() end
---@return ATPChar
function AFrontEndPC:GetCustomizeSpawnableCharacter() end
---@return ATPChar
function AFrontEndPC:GetCustomizeFeastTargetChar() end
---@return ATPChar
function AFrontEndPC:GetCustomizeCharacter() end
---@return ECharacterType
function AFrontEndPC:GetCustomizationCharacterType() end
---@return TArray<FNetPlayerInfoStruct>
function AFrontEndPC:GetAllConnectedPlayerInfo() end
function AFrontEndPC:DestroyLobbyClientBeacon() end
function AFrontEndPC:DestroyFrontEndChars() end
---@param URL FURL
---@param Port int32
---@return boolean
function AFrontEndPC:CreateLobbyClientBeaconFromURL(URL, Port) end
function AFrontEndPC:ConnectToStoredSession() end
function AFrontEndPC:ClearReady() end
function AFrontEndPC:ClearLobbyCharacters() end
---@return boolean
function AFrontEndPC:CancelMatchmaking() end
function AFrontEndPC:AsyncLoadWeaponDataAsset() end
function AFrontEndPC:AsyncLoadSpectralDataAsset() end
---@param Rotation FRotator
function AFrontEndPC:AddMoviePreviewRotation(Rotation) end
---@param Amount FRotator
function AFrontEndPC:AddFrontendCharacterRotation(Amount) end
---@param Zoom float
function AFrontEndPC:AddCustomizeCharacterZoom(Zoom) end
---@param Rotation FRotator
function AFrontEndPC:AddCustomizeCharacterRotation(Rotation) end


---@class AFrontEndSession : AGameSession
AFrontEndSession = {}

-- Gameplay managerrr let's goooo
---@class AGameplayGM : AGameMode
---@field mTimerHandle FTimerHandle
---@field mAllPlayerControllers TArray<APlayerController>
---@field mMatchSummaryData FMatchSummaryInfoData
---@field mAllPlayerColors TArray<FColor>
---@field mPlayer1Color FColor
---@field mPlayer2Color FColor
---@field mPlayer3Color FColor
---@field mPlayer4Color FColor
---@field mPlayer5Color FColor
---@field mPlayer6Color FColor
---@field mPlayer7Color FColor
---@field mSortedByPositionPlayers TArray<AGameplayPS>
---@field mSortedByPositionSpawnTransforms TArray<FTransform>
---@field mbDidGameEndFromDisconnect boolean
---@field mbHasConsumedPrizes boolean
---@field mbWaitingOnPrizeConsumption boolean
---@field mbAllScoresAppended boolean
---@field mbHasFinishedLoading boolean
---@field mbRequestAbortMatch boolean
---@field mGameExpiryTime float
AGameplayGM = {}

function AGameplayGM:VerifyVoiceChatUsers() end
---@param DeltaSeconds float
function AGameplayGM:UpdateStationCraftingDecay(DeltaSeconds) end
---@param pTPChar ATPChar
function AGameplayGM:TeleportToLeastUsedSpawnLocation(pTPChar) end
---@param pPowerupClass UClass
---@param SpawnTransform FTransform
---@param pOwner AActor
---@return APowerupBase
function AGameplayGM:SpawnPowerup(pPowerupClass, SpawnTransform, pOwner) end
---@param pPickupClass UClass
---@param SpawnTransform FTransform
---@param pOwningTPChar ATPChar
---@return APickupBase
function AGameplayGM:SpawnPickup(pPickupClass, SpawnTransform, pOwningTPChar) end
---@param pAnimSpawnableClass UClass
---@param SpawnTransform FTransform
---@return AAnimSpawnableItemBase
function AGameplayGM:SpawnAnimSpawnableItem(pAnimSpawnableClass, SpawnTransform) end
---@param typeToSpawn ECharacterType
---@param AIControllerClass TSubclassOf<AAIController>
---@param SpawnTransform FTransform
---@param diffLevel EAIDifficultyLevel
---@return ATPChar
function AGameplayGM:SpawnAIBot(typeToSpawn, AIControllerClass, SpawnTransform, diffLevel) end
---@param pEvilHit AFPChar
---@return boolean
function AGameplayGM:ShouldRemoveWeaponOnEvilHit(pEvilHit) end
---@param pTargetHit ATPChar
---@param weaponType EWeaponTypeEnum
---@return float
function AGameplayGM:ShouldGameModeTakeAwayChargeOnHit(pTargetHit, weaponType) end
---@return boolean
function AGameplayGM:ShouldGameModeSkipHuntStage() end
---@param bSet boolean
function AGameplayGM:SetRequestAbortMatch(bSet) end
---@param numGoodActorsDown int32
function AGameplayGM:SetNumberOfGoodPlayerMainTPCharsDown(numGoodActorsDown) end
---@param bSet boolean
function AGameplayGM:SetHasFinishedLoading(bSet) end
---@param bSet boolean
function AGameplayGM:SetGameEndedFromDisconnect(bSet) end
---@param Val int32
function AGameplayGM:SetCurrentRoundNumber(Val) end
---@param placedLocations TArray<FTransform>
---@param placedPlayers TArray<AGameplayPS>
function AGameplayGM:SetAllPlayerSpawnsByMatchMod(placedLocations, placedPlayers) end
---@param pGameplayPC AGameplayPC
function AGameplayGM:SendPlayerDisconnectedMatchEventQueue(pGameplayPC) end
function AGameplayGM:SaveMatchSummaryState() end
---@param pPlayerController APlayerController
---@param pCharacterClass UClass
function AGameplayGM:RespawnPlayer(pPlayerController, pCharacterClass) end
function AGameplayGM:ResetAllEvilBotBehaviors() end
---@param pController APlayerController
function AGameplayGM:ReportPlayerDisconnect(pController) end
---@param pPlayerController APlayerController
function AGameplayGM:RemovePlayerController(pPlayerController) end
function AGameplayGM:RemoveDownGoodPlayerMainTPChar() end
---@param pGameplayPC AGameplayPC
---@param pGameplayPS AGameplayPS
---@param playerInfo FNetPlayerInfoStruct
function AGameplayGM:RecordAnalyticsFinishedGameStatsForCharacter(pGameplayPC, pGameplayPS, playerInfo) end
function AGameplayGM:QuitGame() end
function AGameplayGM:ProcessEndGameData_CheckAllPlayersLeft() end
function AGameplayGM:PopulateSearchablesAndPickupSpawnGroups() end
function AGameplayGM:PopulateEvilWeaponDamageRequired() end
function AGameplayGM:P2PHostRequestsEndGame() end
---@param pExitingController AController
function AGameplayGM:OnSomeoneLoggedOut(pExitingController) end
---@param bSuccess boolean
function AGameplayGM:OnPlayerLoadoutsReady(bSuccess) end
---@param pNewPlayer APlayerController
function AGameplayGM:OnJoinGame(pNewPlayer) end
function AGameplayGM:OnEvilTookFatalDamage() end
function AGameplayGM:OnDestroyed() end
---@return int32
function AGameplayGM:NumberOfPlayerControllers() end
function AGameplayGM:NobodyWins() end
---@param pGivenPlayerController AGameplayPC
function AGameplayGM:KickPlayerFromVoiceChat(pGivenPlayerController) end
---@param UniqueId FString
function AGameplayGM:KickParticipantFromVoiceChatDueToInvalidPS(UniqueId) end
---@return boolean
function AGameplayGM:IsShippingBuild() end
---@return boolean
function AGameplayGM:IsRequestAbortMatch() end
---@return boolean
function AGameplayGM:IsPlayingInEditor() end
---@param pPlayerController APlayerController
---@return boolean
function AGameplayGM:HasPlayerController(pPlayerController) end
---@return boolean
function AGameplayGM:HasFinishedLoading() end
---@param pGameplayPC AGameplayPC
function AGameplayGM:HandleDisconnectRequest(pGameplayPC) end
function AGameplayGM:GoodWins() end
---@return float
function AGameplayGM:GetWeaponCraftSpeedTimeMultiplier() end
---@return FTransform
function AGameplayGM:GetRandomSpawnTransform() end
---@param searchType ESpawnSearchType
---@param spawnAwayFromLocation FVector
---@return AExtPlayerStart
function AGameplayGM:GetRandomSpawnPointWithRestrictions(searchType, spawnAwayFromLocation) end
---@return TArray<AGameplayPS>
function AGameplayGM:GetPromotedEvils() end
---@return AGameplayPS
function AGameplayGM:GetPromotedEvil() end
---@param Index int32
---@return APlayerController
function AGameplayGM:GetPlayerControllerByIndex(Index) end
---@return int32
function AGameplayGM:GetNumberOfGoodPlayerMainTPCharsDown() end
---@return AExtPlayerStart
function AGameplayGM:GetLeastUsedSpawnLocation() end
---@return boolean
function AGameplayGM:GetIsTutorialModeActive() end
---@return float
function AGameplayGM:GetIncubatingStageTime() end
---@return AGameplayGS
function AGameplayGM:GetGameplayGS() end
---@param spawnPointList TArray<AActor>
---@return AExtPlayerStart
function AGameplayGM:GetFirstLeastUsedSpawnPointFromList(spawnPointList) end
---@return float
function AGameplayGM:GetBaseWaitingStageTime() end
---@return float
function AGameplayGM:GetBaseTransformingStageTime() end
---@return float
function AGameplayGM:GetBaseStartupStageTime() end
---@return TArray<APlayerController>
function AGameplayGM:GetAllPlayerControllers() end
---@param pPlayerController APlayerController
---@param Index int32
---@return boolean
function AGameplayGM:FindPlayerController(pPlayerController, Index) end
function AGameplayGM:FinalizePlayerPositions() end
function AGameplayGM:EvilWins() end
---@param newStage EGameplayStage
function AGameplayGM:EndGame(newStage) end
---@param pPlayerController APlayerController
---@param pCharacterClass UClass
---@param SpawnTransform FTransform
function AGameplayGM:DoRespawnPlayer(pPlayerController, pCharacterClass, SpawnTransform) end
function AGameplayGM:DoFirstTickSetup() end
---@return boolean
function AGameplayGM:DoesGameModeAllowPermMarred() end
function AGameplayGM:DoBeginWaitingStage() end
function AGameplayGM:DoBeginTVIntroStage() end
function AGameplayGM:DoBeginTransformingStage() end
function AGameplayGM:DoBeginStartupStage() end
function AGameplayGM:DoBeginIncubatingStage() end
function AGameplayGM:DoBeginHuntingStage() end
---@return boolean
function AGameplayGM:DidGameEndFromDisconnect() end
---@param PlayerMatchInfoData FPlayerMatchInfoData
---@param pGameplayPC AGameplayPC
function AGameplayGM:DetermineEOMState(PlayerMatchInfoData, pGameplayPC) end
function AGameplayGM:DetermineCharacterTypes() end
function AGameplayGM:DestroyAllTeenBots() end
function AGameplayGM:DestroyAllEvilBots() end
---@param pActor AActor
---@param bPlayerLeaving boolean
function AGameplayGM:DestroyActor(pActor, bPlayerLeaving) end
function AGameplayGM:DebugDarkShard() end
function AGameplayGM:ConsumePrizesForPlayers() end
function AGameplayGM:CollectStartOfMatchAnalytics() end
function AGameplayGM:CollectEndOfMatchAnalytics() end
function AGameplayGM:ClearSortedPlayerControllers() end
---@param DeltaSeconds float
function AGameplayGM:CheckIfGameIsExpired(DeltaSeconds) end
function AGameplayGM:CheckAllPlayersPresent() end
---@param PlayerMatchInfoData FPlayerMatchInfoData
---@param pGameplayPC AGameplayPC
function AGameplayGM:CalculateRankAdjustment(PlayerMatchInfoData, pGameplayPC) end
function AGameplayGM:BlockVoiceChatTeenPlayers() end
function AGameplayGM:BeginShutdownStage() end
function AGameplayGM:BeginSendFinalAnalyticsDataStage() end
function AGameplayGM:BeginProcessEndGameDataStage() end
function AGameplayGM:AwardEndGameScoreBonuses() end
function AGameplayGM:AttemptKickEvilFromVoiceChat() end
---@param pOldPlayerController APlayerController
---@param pNewPlayerController APlayerController
function AGameplayGM:AssignStoredPlayerInfoToGameplayPS(pOldPlayerController, pNewPlayerController) end
function AGameplayGM:AssignPlayerColors() end
function AGameplayGM:AssignMatchModStartingPickups() end
function AGameplayGM:AssignMatchMods() end
function AGameplayGM:AssignMatchModResurrectModifiers() end
function AGameplayGM:AssignMatchModGlobalMultiplier() end
---@param pGameplayPS AGameplayPS
---@param pFPChar AFPChar
function AGameplayGM:AssignMatchModEffigy(pGameplayPS, pFPChar) end
function AGameplayGM:AppendPlayingAsAgainstEvents() end
---@param eventSucceeded boolean
---@param responseCode int32
---@param Response FString
function AGameplayGM:AnalyticsEventDelegateResponse(eventSucceeded, responseCode, Response) end
---@param pPlayerController APlayerController
---@param Index int32
function AGameplayGM:AddPlayerController(pPlayerController, Index) end
---@param pDownedTPChar ATPChar
function AGameplayGM:AddDownGoodPlayerMainTPChar(pDownedTPChar) end


---@class AGameplayGS : AGameState
---@field mGameplayStage EGameplayStage
---@field mTimeRemaining float
---@field mTotalStageTime float
---@field mEvilDamageRequired TArray<int32>
---@field mEvilWeaponTypeHit TArray<EWeaponTypeEnum>
---@field mAllMainTPChars TArray<ATPChar>
---@field mAllPickups TArray<APickupBase>
---@field mpPingSystemComponent UPingSystemComponent
---@field mpDarkShardManager UDarkShardManager
---@field mpSearchablePointManagerComponent USearchablePointManagerComponent
---@field mpStickerSystemComponent UStickerSystemComponent
---@field mEvilScreams TArray<AEvilScreamEffect>
---@field mInactivePlayers TArray<FDisconnectedPlayerStruct>
---@field mActiveResurrectModifiers TArray<EResurrectModifier>
---@field mClientActiveSeasonalEvents TArray<ESeasonalEventType>
---@field mMatchSettings FMatchSettings
---@field mGameplayNiagaraParameterCollection UNiagaraParameterCollection
---@field mpGameplayMaterialParameterCollection UMaterialParameterCollection
---@field mServerCoopScoreCandidates TMap<ATPChar, FCoopAssistData>
---@field mEvilTimesWounded TArray<int32>
---@field mpCinematicEnd ACinematicEnd
---@field mbIsUsingMonkey boolean
---@field mbIsScoreDataDirty boolean
---@field mpMatchModManager UMatchModManager
---@field mGlobalPointMultiplier float
---@field mLifeEssenceSpawnerList TArray<ALifeEssenceSpawner>
---@field mTimeSinceLastLifeEssenceSpawned float
---@field mServerNumSinceLargeLifeEssence int32
---@field mServerTotalLifeEssenceSpawned int32
---@field mpWorldEffectsManager UWorldEffectsManager
---@field mStationList TArray<AStationBase>
---@field mEnergyPointList TArray<AEnergyPoint>
---@field mHidePointList TArray<AHidePoint>
---@field mpInteractablePropManager UInteractablePropManager
---@field mNoisemakerActorList TArray<ANoisemakerActor>
---@field mFlameMineCharExposedEvilList TArray<AFlameMineChar>
---@field mbEvilWon boolean
---@field mSharedMatchSummaryInfoData FMatchSummaryInfoData
---@field mbGameAborted boolean
---@field mTimeSpentIncubating float
---@field mbResurrectPickupUsed boolean
---@field mbHaveTeensSeenTheEvil boolean
---@field mbLockboxDiscovered boolean
---@field mTimeSecondsWhenGameplayBegan float
---@field mEffigySeasonalEventType ESeasonalEventType
AGameplayGS = {}

---@return boolean
function AGameplayGS:WasResurrectPickupUsed() end
---@return boolean
function AGameplayGS:ShowDollsDamagePanel() end
---@param bSet boolean
function AGameplayGS:SetScoreDataDirty(bSet) end
---@param isUsing boolean
function AGameplayGS:SetIsUsingMonkey(isUsing) end
---@param pBaseChar ABaseChar
---@param Event EAnalyticsEventType
function AGameplayGS:SendEvent(pBaseChar, Event) end
---@param pBaseChar ABaseChar
function AGameplayGS:SendCraftingStationEvent(pBaseChar) end
---@param Min float
---@param Max float
---@param searchType ESearchableType
function AGameplayGS:OverrideSearchableMinAndMaxRechargeTime(Min, Max, searchType) end
function AGameplayGS:OnRep_MatchSettings() end
function AGameplayGS:OnRep_InactivePlayers() end
function AGameplayGS:OnRep_GameplayStage() end
---@return int32
function AGameplayGS:NumberOfGoodPlayers() end
function AGameplayGS:MulticastAllStartCinematicEnd() end
---@param pTPChar ATPChar
function AGameplayGS:MulticastAllSpawnCinematicEnd(pTPChar) end
---@param Val float
function AGameplayGS:MulticastAllAdjustHearingMultiplier(Val) end
---@param pWorldEffectsTrigger AWorldEffectsTrigger
function AGameplayGS:MulicastAllWorldEffectsTrigger(pWorldEffectsTrigger) end
---@param aStage EGameplayStage
---@return boolean
function AGameplayGS:IsStage(aStage) end
---@return boolean
function AGameplayGS:IsScoreDataDirty() end
---@return boolean
function AGameplayGS:IsPlayingInEditor() end
---@param pBaseChar ABaseChar
---@return boolean
function AGameplayGS:IsMainEvil(pBaseChar) end
---@return boolean
function AGameplayGS:IsLockboxDiscovered() end
---@return boolean
function AGameplayGS:IsInHuntStage() end
---@return boolean
function AGameplayGS:IsGameScored() end
---@return boolean
function AGameplayGS:IsGameFinished() end
---@return boolean
function AGameplayGS:IsGameAborted() end
---@param pTPChar ATPChar
---@return boolean
function AGameplayGS:IsFlameMineCharExposedEvil(pTPChar) end
---@return boolean
function AGameplayGS:IsAnyTeenInjured() end
---@param pBaseChar ABaseChar
---@return boolean
function AGameplayGS:IsActiveEvil(pBaseChar) end
---@return boolean
function AGameplayGS:HaveTeensSeenTheEvil() end
---@return boolean
function AGameplayGS:HasGameStarted() end
---@return UWorldEffectsManager
function AGameplayGS:GetWorldEffectsManager() end
---@param bTeamGood boolean
---@return FText
function AGameplayGS:GetWinConditionText(bTeamGood) end
---@return float
function AGameplayGS:GetTimeSpentIncubating() end
---@return float
function AGameplayGS:GetTimeSecondsWhenGameplayBegan() end
---@return float
function AGameplayGS:GetTimeSecondsSinceGameplayBegan() end
---@return ATPChar
function AGameplayGS:GetTeenBecomingEvil() end
---@return UStickerSystemComponent
function AGameplayGS:GetStickerSystemComponent() end
---@param DamageType EDamageType
---@return TArray<AStationBase>
function AGameplayGS:GetStationsOfType(DamageType) end
---@return TArray<AStationBase>
function AGameplayGS:GetStationList() end
---@return float
function AGameplayGS:GetStageTimeRemaining() end
---@return EGameplayStage
function AGameplayGS:GetStage() end
---@return FMatchSummaryInfoData
function AGameplayGS:GetSharedMatchInfoData() end
---@return USearchablePointManagerComponent
function AGameplayGS:GetSearchablePointManagerComponent() end
---@return TArray<EResurrectModifier>
function AGameplayGS:GetResurrectModifiers() end
---@return ANoisemakerActor
function AGameplayGS:GetPrimaryRevealingNoisemaker() end
---@param pCurrentGameplayPS AGameplayPS
---@return AGameplayPS
function AGameplayGS:GetPreviousGameplayPS(pCurrentGameplayPS) end
---@return UPingSystemComponent
function AGameplayGS:GetPingSystemComponent() end
---@return int32
function AGameplayGS:GetNumTeensProne() end
---@return int32
function AGameplayGS:GetNumTeensDead() end
---@return int32
function AGameplayGS:GetNumTeensAlive() end
---@return int32
function AGameplayGS:GetNumMarredTeens() end
---@return int32
function AGameplayGS:GetNumberOfAliveEvils() end
---@return int32
function AGameplayGS:GetNumArmedTeens() end
---@return int32
function AGameplayGS:GetNumActiveTeens() end
---@param pCurrentGameplayPS AGameplayPS
---@return AGameplayPS
function AGameplayGS:GetNextGameplayPS(pCurrentGameplayPS) end
---@return int32
function AGameplayGS:GetMaxEvilDamageRequired() end
---@return int32
function AGameplayGS:GetMaxAllowedLifeEssenceOnMap() end
---@return FMatchSettings
function AGameplayGS:GetMatchSettings() end
---@return UMatchModManager
function AGameplayGS:GetMatchModManager() end
---@return AFPChar
function AGameplayGS:GetMainEvil() end
---@return UInteractablePropManager
function AGameplayGS:GetInteractablePropManager() end
---@return TArray<AHidePoint>
function AGameplayGS:GetHidePointList() end
---@return TArray<ATPChar>
function AGameplayGS:GetGoodTPChars() end
---@return TArray<AGameplayPS>
function AGameplayGS:GetGoodPlayers() end
---@return EGameplayStage
function AGameplayGS:GetGameplayStage() end
---@param pBaseChar ABaseChar
---@return AGameplayPS
function AGameplayGS:GetGameplayPSFromPlayerMainTPChar(pBaseChar) end
---@return TArray<EWeaponTypeEnum>
function AGameplayGS:GetEvilWeaponTypeHit() end
---@return TArray<int32>
function AGameplayGS:GetEvilTimesWhenWounded() end
---@return TArray<AEvilScreamEffect>
function AGameplayGS:GetEvilScreams() end
---@param DamageType EDamageType
---@return int32
function AGameplayGS:GetEvilDamageRequiredByDamageType(DamageType) end
---@return TArray<int32>
function AGameplayGS:GetEvilDamageRequiredArray() end
---@return TArray<AEnergyPoint>
function AGameplayGS:GetEnergyPointList() end
---@return ESeasonalEventType
function AGameplayGS:GetEffigySeasonalEventType() end
---@return TArray<FDisconnectedPlayerStruct>
function AGameplayGS:GetDisconnectedPlayers() end
---@return UDarkShardManager
function AGameplayGS:GetDarkShardManager() end
---@return int32
function AGameplayGS:GetCurrentEvilDamageTaken() end
---@return int32
function AGameplayGS:GetCurrentEvilDamageRequired() end
---@return TArray<ESeasonalEventType>
function AGameplayGS:GetClientActiveSeasonalEvents() end
---@return AActor
function AGameplayGS:GetCinematicEnd() end
---@param bExcludeObserver boolean
---@return TArray<ATPChar>
function AGameplayGS:GetAllTPChars(bExcludeObserver) end
---@return TArray<ANoisemakerActor>
function AGameplayGS:GetAllRegisteredNoisemakers() end
---@return TArray<ATPChar>
function AGameplayGS:GetAllPlayerMainTPChars() end
---@return TArray<APickupBase>
function AGameplayGS:GetAllPickups() end
---@return TArray<ATPChar>
function AGameplayGS:GetAllMainTPChars() end
---@return TArray<AFPChar>
function AGameplayGS:GetAllEvils() end
---@return TArray<ATPChar>
function AGameplayGS:GetAllActiveTPChars() end
---@return AFPChar
function AGameplayGS:GetActiveEvilFPChar() end
---@return ATPChar
function AGameplayGS:GetActiveEvil() end
---@param DeltaTime float
function AGameplayGS:DoServerUpdateLifeEssenceSpawners(DeltaTime) end
---@param DeltaSeconds float
function AGameplayGS:DoServerUpdateEvilSpectrals(DeltaSeconds) end
---@param pEvil AFPChar
---@param pAttackerActor AActor
---@param awardType EWeaponHitType
function AGameplayGS:DoServerUpdateCoopCandidatesOnHit(pEvil, pAttackerActor, awardType) end
---@param DeltaTime float
function AGameplayGS:DoServerUpdateCoopCandidates(DeltaTime) end
---@param pStation AStationBase
function AGameplayGS:DoServerUnregisterStation(pStation) end
---@param pHidePoint AHidePoint
function AGameplayGS:DoServerUnregisterHidePoint(pHidePoint) end
---@param pEnergyPoint AEnergyPoint
function AGameplayGS:DoServerUnregisterEnergyPoint(pEnergyPoint) end
---@param pDarkShardSpawner ADarkShardSpawner
function AGameplayGS:DoServerUnregisterDarkShardSpawner(pDarkShardSpawner) end
function AGameplayGS:DoServerSpawnLifeEssence() end
---@param Total int32
function AGameplayGS:DoServerSetTotalLifeEssenceSpawned(Total) end
function AGameplayGS:DoServerSetTimeWounded() end
---@param timeIncubating float
function AGameplayGS:DoServerSetTimeSpentIncubating(timeIncubating) end
---@param NewValue float
function AGameplayGS:DoServerSetTimeSinceLastLifeEssenceSpawned(NewValue) end
---@param TimeSeconds float
function AGameplayGS:DoServerSetTimeSecondsWhenGameplayBegan(TimeSeconds) end
---@param TimeRemaining float
function AGameplayGS:DoServerSetStageTimeRemaining(TimeRemaining) end
---@param seasonalEvent TArray<ESeasonalEventType>
function AGameplayGS:DoServerSetSeasonalEvents(seasonalEvent) end
---@param bSet boolean
function AGameplayGS:DoServerSetResurrectPickupUsed(bSet) end
---@param Val int32
function AGameplayGS:DoServerSetNumberOfAliveEvils(Val) end
---@param MatchSettings FMatchSettings
function AGameplayGS:DoServerSetMatchSettings(MatchSettings) end
---@param bSet boolean
function AGameplayGS:DoServerSetLockboxDiscovered(bSet) end
---@param bSet boolean
function AGameplayGS:DoServerSetHaveTeensSeenTheEvil(bSet) end
---@param stage EGameplayStage
---@param timeRemainingInStage float
function AGameplayGS:DoServerSetGameplayStage(stage, timeRemainingInStage) end
---@param bAborted boolean
function AGameplayGS:DoServerSetGameAborted(bAborted) end
---@param bNewValue boolean
function AGameplayGS:DoServerSetEvilWon(bNewValue) end
---@param DamageType EDamageType
---@param newDamageRequired int32
function AGameplayGS:DoServerSetEvilDamageRequiredByDamageType(DamageType, newDamageRequired) end
---@param weaponType EWeaponTypeEnum
function AGameplayGS:DoServerSetEvilDamageHitByWeaponType(weaponType) end
---@param effigySeasonalEventType ESeasonalEventType
function AGameplayGS:DoServerSetEffigySeasonalEventType(effigySeasonalEventType) end
function AGameplayGS:DoServerResetGameplayStage() end
---@param pTPChar ATPChar
function AGameplayGS:DoServerRemoveMainTPChar(pTPChar) end
---@param pFlameMineChar AFlameMineChar
function AGameplayGS:DoServerRemoveFlameMineCharExposedEvil(pFlameMineChar) end
---@param newScream AEvilScreamEffect
function AGameplayGS:DoServerRemoveEvilScream(newScream) end
---@param pCandidate ATPChar
function AGameplayGS:DoServerRemoveCoopScoreCandidate(pCandidate) end
---@param pStation AStationBase
function AGameplayGS:DoServerRegisterStation(pStation) end
---@param pNoisemaker ANoisemakerActor
function AGameplayGS:DoServerRegisterNoisemaker(pNoisemaker) end
---@param pSpawner ALifeEssenceSpawner
function AGameplayGS:DoServerRegisterLifeEssenceSpawner(pSpawner) end
---@param pHidePoint AHidePoint
function AGameplayGS:DoServerRegisterHidePoint(pHidePoint) end
---@param pEnergyPoint AEnergyPoint
function AGameplayGS:DoServerRegisterEnergyPoint(pEnergyPoint) end
---@param pDarkShardSpawner ADarkShardSpawner
function AGameplayGS:DoServerRegisterDarkShardSpawner(pDarkShardSpawner) end
function AGameplayGS:DoServerOnEvilHitTeen() end
---@return int32
function AGameplayGS:DoServerGetTotalLifeEssenceSpawned() end
---@return float
function AGameplayGS:DoServerGetTimeUntilLifeEssenceSpawn() end
---@return float
function AGameplayGS:DoServerGetTimeSinceLastLifeEssenceSpawned() end
---@return float
function AGameplayGS:DoServerGetGlobalPointMultiplier() end
---@param pCandidate ATPChar
---@return float
function AGameplayGS:DoServerGetDamagingAssistTimeRemaining(pCandidate) end
---@param pEvil AFPChar
function AGameplayGS:DoServerAwardCoopCandidates(pEvil) end
---@param pEvil AFPChar
function AGameplayGS:DoServerApplyScoreOnMimicBreak(pEvil) end
---@param newMod EResurrectModifier
function AGameplayGS:DoServerAddResurrectModifier(newMod) end
function AGameplayGS:DoServerAddRandomResurrectModifier() end
---@param pTPChar ATPChar
function AGameplayGS:DoServerAddMainTPChar(pTPChar) end
---@param toAdd float
function AGameplayGS:DoServerAddGlobalPointMultiplier(toAdd) end
---@param pFlameMineChar AFlameMineChar
function AGameplayGS:DoServerAddFlameMineCharExposedEvil(pFlameMineChar) end
---@param newScream AEvilScreamEffect
function AGameplayGS:DoServerAddEvilScream(newScream) end
---@param pCandidate ATPChar
---@param assistData FCoopAssistData
function AGameplayGS:DoServerAddCoopScoreCandidate(pCandidate, assistData) end
---@param pWorldEffectsTrigger AWorldEffectsTrigger
function AGameplayGS:DoServerActivateWorldEffectsTrigger(pWorldEffectsTrigger) end
---@param Event EAnalyticsEventType
---@param delaySend boolean
function AGameplayGS:DoEvent(Event, delaySend) end
---@return boolean
function AGameplayGS:DidGoodWin() end
---@return boolean
function AGameplayGS:DidEvilWin() end
---@param CharacterType ECharacterType
function AGameplayGS:ChangeCharacter(CharacterType) end
---@param pWeapon AWeaponBase
---@return boolean
function AGameplayGS:CanWeaponHarmEvil(pWeapon) end
---@param DamageType EDamageType
---@return boolean
function AGameplayGS:CanDamageTypeHarmEvil(DamageType) end
---@return boolean
function AGameplayGS:AllowTutorialFunctions() end
---@return boolean
function AGameplayGS:AllowDebugKeys() end


---@class AGameplayHUD : ABaseHUD
---@field mpTrackedTPChar ATPChar
---@field mMaximumEvilVignetteAlpha float
---@field mMaximumTeenSpectralVignetteAlpha float
---@field mHighSurvivorVignetteAlpha float
---@field mLowSurvivorVignetteAlpha float
---@field mpRobotoFont UFont
---@field mpDamageVignetteTexture UTexture2D
---@field mpTalismanVignetteTexture UTexture2D
---@field mpDangerVignetteTexture UTexture2D
---@field mpActiveOverlay UBaseOverlay
---@field mpTeenHUDInterface UGameplayHUDInterface
---@field mTeenHUDInterfaceClass TSubclassOf<UGameplayHUDInterface>
---@field mpEvilHUDInterface UGameplayHUDInterface
---@field mEvilHUDInterfaceClass TSubclassOf<UGameplayHUDInterface>
---@field mpStatusPanelsHUD UHUDStatusPanels
---@field mpStatusPanelsHUDClass TSubclassOf<UHUDStatusPanels>
---@field mPingIndicatorHUDClass TSubclassOf<UHUDPingIndicatorWidget>
---@field mAuraIndicatorHUDClass TSubclassOf<UHUDAuraIndicatorWidget>
---@field mFailedStationIndicatorHUDClass TSubclassOf<UHUDFailedStationIndicatorWidget>
---@field mpOptionsScreen UOptionsScreen
---@field mOptionsScreenHUD TSubclassOf<UOptionsScreen>
---@field mpPauseMenuScreen UPauseMenuScreen
---@field mPauseMenuScreenHUD TSubclassOf<UPauseMenuScreen>
---@field mpWinLoseScreen UWinLoseScreen
---@field mWinLoseScreenClass TSubclassOf<UWinLoseScreen>
---@field mpDebugScreen UDebugScreen
---@field mScenarioLoaderClass TSubclassOf<UScenarioLoaderWidget>
---@field mpScenarioLoader UScenarioLoaderWidget
---@field mDebugScreenHUD TSubclassOf<UDebugScreen>
---@field mpEvilPanelHUD UHUDEvilPanel
---@field mEvilPanelHUDClass TSubclassOf<UHUDEvilPanel>
---@field mpEvilWheelPanelHUD UHUDEvilWheelPanel
---@field mEvilWheelPanelHUDClass TSubclassOf<UHUDEvilWheelPanel>
---@field mTutorialPanelHUDClass TSubclassOf<UHUDTutorialPanel>
---@field mpTutorialPanelHUD UHUDTutorialPanel
---@field mpPickupPanelHUD UHUDPickupPanel
---@field mpEffigyPanelHUD UHUDEffigyPanel
---@field mpAugmentPanelHUD UHUDAugmentPanel
---@field mpWeaponPanelHUD UHUDWeaponPanel
---@field mpAnnouncementPanelHUD UHUDAnnouncementPanel
---@field mpServerTypeWidgetHUD UHUDServerTypeWidget
---@field mReticleHUDClass TSubclassOf<UHUDReticle>
---@field mpReticleHUD UHUDReticle
---@field mpDangerSenseHUDClass TSubclassOf<UHUDDangerSenseWidget>
---@field mpDangerSenseHUD UHUDDangerSenseWidget
---@field mPickupPanelHUDClass TSubclassOf<UHUDPickupPanel>
---@field mEffigyPanelHUDClass TSubclassOf<UHUDEffigyPanel>
---@field mAugmentPanelHUDClass TSubclassOf<UHUDAugmentPanel>
---@field mWeaponPanelHUDClass TSubclassOf<UHUDWeaponPanel>
---@field mAnnouncementPanelHUDClass TSubclassOf<UHUDAnnouncementPanel>
---@field mUHUDTabScreenClass TSubclassOf<UHUDTabScreen>
---@field mHUDServerTypeWidgetClass TSubclassOf<UHUDServerTypeWidget>
---@field mHUDScorePopupClass TSubclassOf<UHUDScorePopup>
---@field mpTabScreen UHUDTabScreen
---@field mHUDStickerMenuClass TSubclassOf<UHUDStickerMenu>
---@field mpStickerMenuHUD UHUDStickerMenu
---@field mpVoiceChatMenuScreen UVoiceChatMenuScreen
---@field mVoiceChatMenuScreenClass TSubclassOf<UVoiceChatMenuScreen>
---@field mpPlayerDetailsScreen UPlayerDetailsMenuScreen
---@field mpPlayerDetailsScreenClass TSubclassOf<UPlayerDetailsMenuScreen>
---@field mpCinematicCameraControlPanel UCinematicCameraControlPanel
---@field mpCinematicCameraControlPanelClass TSubclassOf<UCinematicCameraControlPanel>
---@field mpEvilOverlayPanel UHUDEvilOverlayPanel
---@field mpCurrentEvilOverlayClass TSubclassOf<UHUDEvilOverlayPanel>
---@field mpEmoteMenuHUD UHUDEmoteMenu
---@field mpEmoteMenuClass TSubclassOf<UHUDEmoteMenu>
---@field mpPlayerNameWidgetList TArray<UHUDPlayerName>
---@field mpPlayerNameClass TSubclassOf<UHUDPlayerName>
---@field mpReplayPanelClass TSubclassOf<UHUDReplayPanel>
---@field mpMinigameRotatorClass TSubclassOf<UHUDMinigame_Rotator>
---@field mpMinigameRotatorWidget UHUDMinigame_Rotator
---@field mpMinigameRingAligningClass TSubclassOf<UHUDMinigame_RingAligning>
---@field mpMinigameRingAligningWidget UHUDMinigame_RingAligning
---@field mpMinigameBarTimingClass TSubclassOf<UHUDMinigame_BarTiming>
---@field mpMinigameBarTimingWidget UHUDMinigame_BarTiming
---@field mpActionPromptClass TSubclassOf<UHUDActionPromptPanel>
---@field mpActionPromptWidget UHUDActionPromptPanel
---@field mpWeaponSelectionWheelClass TSubclassOf<UHUDWeaponSelectionWheel>
---@field mpWeaponSelectionWheelWidget UHUDWeaponSelectionWheel
---@field mpReplayPanelHUD UHUDReplayPanel
---@field mCurrentlyDisplayedScorePopup TArray<UHUDScorePopup>
---@field mCurrentlyDisplayedAuraIndicators TArray<UHUDAuraIndicatorWidget>
AGameplayHUD = {}

function AGameplayHUD:UpdateScorePopupQueue() end
---@param pTrackedChar ATPChar
function AGameplayHUD:UpdateGameplayHUDInterfaces(pTrackedChar) end
function AGameplayHUD:UpdateGameplayCursorState() end
---@param bAnimateLeft boolean
function AGameplayHUD:UpdateEvilSelection(bAnimateLeft) end
function AGameplayHUD:ToggleCinematicCameraControlPanel() end
function AGameplayHUD:ShowPlayerDetailsScreen() end
function AGameplayHUD:ShowLeaveMatchModal() end
function AGameplayHUD:ShowInGameScores() end
function AGameplayHUD:ShowExitGameModal() end
function AGameplayHUD:ShowEvilSelection() end
function AGameplayHUD:ShowEndMatchModal() end
function AGameplayHUD:ShowDiscardOptionsModal() end
function AGameplayHUD:ShowCinematicCameraControlPanel() end
---@param bConfirmationOverlay boolean
function AGameplayHUD:SetTutorialTextMode(bConfirmationOverlay) end
---@param Visibility ESlateVisibility
function AGameplayHUD:SetTutorialTextBoxVisibility(Visibility) end
---@param tutorialText FText
---@param timeToPrint float
function AGameplayHUD:SetTutorialText(tutorialText, timeToPrint) end
---@param Visibility ESlateVisibility
function AGameplayHUD:SetTutorialSubTextBoxVisibility(Visibility) end
---@param subText FText
---@param timeToPrint float
function AGameplayHUD:SetTutorialSubText(subText, timeToPrint) end
---@param Visibility ESlateVisibility
function AGameplayHUD:SetTutorialPanelVisibility(Visibility) end
---@param Val boolean
function AGameplayHUD:SetTutorialHideUI(Val) end
---@param pTrackedTPChar ATPChar
function AGameplayHUD:SetTrackedTPChar(pTrackedTPChar) end
function AGameplayHUD:SetShowingCursor() end
---@param bNewValue boolean
function AGameplayHUD:SetDisableStatusBar(bNewValue) end
---@param bNewValue boolean
function AGameplayHUD:SetDisableSpeechIndicators(bNewValue) end
---@param bNewValue boolean
function AGameplayHUD:SetDisablePlayerCards(bNewValue) end
---@param bNewValue boolean
function AGameplayHUD:SetDisablePings(bNewValue) end
---@param bNewValue boolean
function AGameplayHUD:SetDisablePickupPanel(bNewValue) end
---@param bNewValue boolean
function AGameplayHUD:SetDisableItemGlint(bNewValue) end
---@param bNewValue boolean
function AGameplayHUD:SetDisableEvilAbilityPanel(bNewValue) end
---@param bNewValue boolean
function AGameplayHUD:SetDisableDamagePanel(bNewValue) end
---@param bNewValue boolean
function AGameplayHUD:SetDisableCraftingIcons(bNewValue) end
---@param bNewValue boolean
function AGameplayHUD:SetDisableActionPanel(bNewValue) end
---@param pOverlayScreen UBaseOverlay
function AGameplayHUD:SetActiveOverlay(pOverlayScreen) end
---@param pActor AActor
function AGameplayHUD:RemoveHUDAuraIndicatorForActor(pActor) end
function AGameplayHUD:OnTrackedCharChanged() end
---@param Direction int32
function AGameplayHUD:OnScrolled(Direction) end
function AGameplayHUD:OnSaveOptions() end
function AGameplayHUD:OnLeaveMatch() end
function AGameplayHUD:OnExitGame() end
function AGameplayHUD:OnEndMatch() end
function AGameplayHUD:OnDiscardOptions() end
---@return boolean
function AGameplayHUD:IsTutorialOverlayActive() end
---@return boolean
function AGameplayHUD:IsTrackingOwnedTPChar() end
---@return boolean
function AGameplayHUD:IsTabScreenActive() end
---@return boolean
function AGameplayHUD:IsStatusBarDisabled() end
---@return boolean
function AGameplayHUD:IsSpeechIndicatorsDisabled() end
---@return boolean
function AGameplayHUD:IsScorePopupsDisabled() end
---@return boolean
function AGameplayHUD:IsReticleDisabled() end
---@return boolean
function AGameplayHUD:IsPlayerCardsDisabled() end
---@return boolean
function AGameplayHUD:IsPingsDisabled() end
---@return boolean
function AGameplayHUD:IsPickupPanelDisabled() end
---@return boolean
function AGameplayHUD:IsItemGlintDisabled() end
---@return boolean
function AGameplayHUD:IsGameHUDDisabled() end
---@return boolean
function AGameplayHUD:IsEvilAbilityPanelDisabled() end
---@return boolean
function AGameplayHUD:IsDamagePanelDisabled() end
---@return boolean
function AGameplayHUD:IsCraftingIconsDisabled() end
---@return boolean
function AGameplayHUD:IsActionPanelDisabled() end
function AGameplayHUD:HidePlayerDetailsScreen() end
function AGameplayHUD:HideOverlay() end
function AGameplayHUD:HideInGameScores() end
function AGameplayHUD:HideEvilSelection() end
function AGameplayHUD:HideCinematicCameraControlPanel() end
---@return boolean
function AGameplayHUD:HasActiveOverlay() end
---@return UHUDWeaponSelectionWheel
function AGameplayHUD:GetWeaponSelectionWheel() end
---@return UVoiceChatMenuScreen
function AGameplayHUD:GetVoiceChatMenuOverlay() end
---@return ATPChar
function AGameplayHUD:GetTrackedTPChar() end
---@return UHUDStickerMenu
function AGameplayHUD:GetStickerMenu() end
---@return UHUDReticle
function AGameplayHUD:GetReticleHUD() end
---@return UPlayerDetailsMenuScreen
function AGameplayHUD:GetPlayerDetailsMenuScreen() end
---@return UHUDPlayerCardPanel
function AGameplayHUD:GetPlayerCardPanel() end
---@return ATPChar
function AGameplayHUD:GetOwningTPChar() end
---@return UHUDNotificationsPanel
function AGameplayHUD:GetNotificationsPanel() end
---@return TSubclassOf<UHUDEvilOverlayPanel>
function AGameplayHUD:GetEvilOverlayPanelClass() end
---@return UHUDEvilOverlayPanel
function AGameplayHUD:GetEvilOverlayPanel() end
---@return UHUDEvilDamagePanel
function AGameplayHUD:GetEvilDamagePanel() end
---@return UHUDEmoteMenu
function AGameplayHUD:GetEmoteMenu() end
---@return UHUDEffigyPanel
function AGameplayHUD:GetEffigyPanel() end
---@return UHUDRadialMenu
function AGameplayHUD:GetCurrentlyDisplayedRadialMenu() end
---@return UGameplayHUDInterface
function AGameplayHUD:GetCurrentHUDInterface() end
---@return UCinematicCameraControlPanel
function AGameplayHUD:GetCinematicCameraControlPanel() end
---@return UHUDAnnouncementPanel
function AGameplayHUD:GetAnnouncementPanel() end
---@param bCancel boolean
function AGameplayHUD:ForceCloseAnyOpenRadialMenus(bCancel) end
---@param Text FText
---@param baseAmount int32
---@param bonusAmount int32
function AGameplayHUD:EnqueueScorePopup(Text, baseAmount, bonusAmount) end
function AGameplayHUD:DrawTalismanVignetteOverlay() end
function AGameplayHUD:DrawDamageVignetteOverlay() end
function AGameplayHUD:CycleEvilSelectionRight() end
function AGameplayHUD:CycleEvilSelectionLeft() end
---@param pPingToAdd APing
function AGameplayHUD:CreateHUDPingIndicator(pPingToAdd) end
---@param pStation AStationBase
function AGameplayHUD:CreateHUDFailedStationIndicator(pStation) end
---@param pPingToRemove AActor
function AGameplayHUD:ClearHUDPingIndicator(pPingToRemove) end
---@param pStation AStationBase
function AGameplayHUD:ClearHUDFailedStationIndicator(pStation) end
---@return boolean
function AGameplayHUD:AreAnyRadialMenusCurrentlyVisible() end
---@return boolean
function AGameplayHUD:AllowWeaponSelectionWheel() end
---@return boolean
function AGameplayHUD:AllowWeaponPanel() end
---@return boolean
function AGameplayHUD:AllowStatusPanels() end
---@return boolean
function AGameplayHUD:AllowReticle() end
---@return boolean
function AGameplayHUD:AllowPlayerCardPanel() end
---@return boolean
function AGameplayHUD:AllowPings() end
---@return boolean
function AGameplayHUD:AllowPickupPanel() end
---@return boolean
function AGameplayHUD:AllowNotificationsPanel() end
---@return boolean
function AGameplayHUD:AllowEvilRagePanel() end
---@return boolean
function AGameplayHUD:AllowEvilPanel() end
---@return boolean
function AGameplayHUD:AllowEvilDamagePanel() end
---@return boolean
function AGameplayHUD:AllowEffigyPanel() end
---@return boolean
function AGameplayHUD:AllowDarkShardOverlay() end
---@return boolean
function AGameplayHUD:AllowAugmentPanel() end
---@return boolean
function AGameplayHUD:AllowAnnouncementPanel() end
---@return boolean
function AGameplayHUD:AllowActionPrompt() end
---@return boolean
function AGameplayHUD:AllowActionBarPanel() end
---@param Text FText
---@param baseAmount int32
---@param bonusAmount int32
function AGameplayHUD:AddScoreScorePopup(Text, baseAmount, bonusAmount) end


---@class AGameplayPC : ABasePC
---@field mpComponentToAlign UPrimitiveComponent
---@field mComponentAlignType EComponentAlignType
---@field mUniquePlayerIndex int32
---@field mpBusyModal UBusyModalWidget
---@field mbKbForwardPressed boolean
---@field mbKbRightPressed boolean
---@field mbKbBackwardPressed boolean
---@field mbKbLeftpressed boolean
---@field mbCharacterSpawned boolean
---@field mPingCooldownPenalty float
---@field mPingCooldown float
---@field mbDidDoubleClickPingThisClick boolean
---@field mStickerCooldownTimer float
---@field mEmoteCooldownTimer float
---@field mSelectedStickerIndex int32
---@field mbDebugAugmentsPanelEnabled boolean
---@field mStickerHoldDownTimer float
---@field mHoldingDownStickerButton boolean
---@field mPingHoldDownTimer float
---@field mHoldingDownPingButton boolean
---@field mbHoldingDownEmoteButton boolean
---@field mEmoteHoldDownTimer float
---@field mLastPickedEmoteSlot int32
---@field mbWaitingToDisconnect boolean
---@field mTimeSinceLastIconPingRequest float
---@field mbLastPingRequestSelfType boolean
---@field mbWaitingForReleaseAfterClosingRadialMenu boolean
---@field mbWaitingOnSecondPingClick boolean
---@field mbDeathenticateAccepted boolean
---@field mbServerRequestedDeauthenticate boolean
---@field mbServerDeauthenticateGranted boolean
---@field mDeauthenticateTimeoutTimer float
---@field mTritonSpatializationMode ETritonSpatializationMode
---@field mpDamageIndicatorManager UDamageIndicatorManager
AGameplayPC = {}

---@return boolean
function AGameplayPC:WaitingForReleaseAfterClosingRadialMenu() end
function AGameplayPC:UpdateStickerHoldDownTimer() end
function AGameplayPC:UpdateRunningMode() end
---@param DeltaTime float
function AGameplayPC:UpdateRequestLeaveMatch(DeltaTime) end
function AGameplayPC:UpdatePingRequestTimer() end
function AGameplayPC:UpdatePingHoldDownTimer() end
function AGameplayPC:UpdateMatchStarted() end
function AGameplayPC:UpdateEmoteHoldDownTimer() end
---@param DeltaSeconds float
function AGameplayPC:UpdateAlignToComponent(DeltaSeconds) end
function AGameplayPC:StickerStopHoldDown() end
function AGameplayPC:StickerStartHoldDown() end
---@param bNewValue boolean
function AGameplayPC:SetWaitingToDisconnect(bNewValue) end
---@param bNewValue boolean
function AGameplayPC:SetWaitingOnSecondPingClick(bNewValue) end
---@param Index int32
function AGameplayPC:SetUniquePlayerIndex(Index) end
---@param Mode ETritonSpatializationMode
function AGameplayPC:SetTritonSpatializationMode(Mode) end
---@param NewValue float
function AGameplayPC:SetTimeSinceLastIconPingRequest(NewValue) end
---@param selectedSticker int32
function AGameplayPC:SetSelectedSticker(selectedSticker) end
---@param Names TArray<FString>
function AGameplayPC:SetLoadingScreenToWait(Names) end
---@param typeToSpawn ECharacterType
---@param AIControllerClass TSubclassOf<AAIController>
---@param SpawnTransform FTransform
---@param aiDiffLevel EAIDifficultyLevel
function AGameplayPC:ServerSpawnAICharacter(typeToSpawn, AIControllerClass, SpawnTransform, aiDiffLevel) end
---@param pNewViewTarget AActor
---@param Params FViewTargetTransitionParams
function AGameplayPC:ServerSetViewTarget(pNewViewTarget, Params) end
function AGameplayPC:ServerRequestLeaveMatch() end
function AGameplayPC:ServerRequestDisconnect() end
function AGameplayPC:ServerReportClientSpawned() end
---@param Progress float
function AGameplayPC:ServerReportClientLoadProgress(Progress) end
function AGameplayPC:ServerReportClientLoadComplete() end
---@param aPlayerInfoStructSettings FNetPlayerInfoStruct
function AGameplayPC:ServerPassCharacterInfoToServer(aPlayerInfoStructSettings) end
---@param bKillTeens boolean
---@param bKillEvils boolean
function AGameplayPC:ServerKillAICharacters(bKillTeens, bKillEvils) end
---@param bEnabled boolean
---@param bDestroySpawnedOrbs boolean
function AGameplayPC:ServerDebugSpawnEvilEnergy(bEnabled, bDestroySpawnedOrbs) end
---@param mod float
function AGameplayPC:ServerDebugModifyTimeScale(mod) end
function AGameplayPC:ServerDebugDarkShard() end
---@param CharacterType ECharacterType
function AGameplayPC:ServerChangeCharacter(CharacterType) end
---@param pPing APing
function AGameplayPC:ServerAttemptRemovePing(pPing) end
---@param pingType EPingType
---@param WorldLocation FVector
---@param WorldDirection FVector
---@param colorOverride FColor
function AGameplayPC:ServerAttemptPing(pingType, WorldLocation, WorldDirection, colorOverride) end
function AGameplayPC:RequestExitMatch() end
function AGameplayPC:ReleaseRadialCameraLock() end
function AGameplayPC:PingStopHoldDown() end
function AGameplayPC:PingStartHoldDown() end
---@param bPressed boolean
---@param bSelfType boolean
function AGameplayPC:OnPingInput(bPressed, bSelfType) end
---@return boolean
function AGameplayPC:IsWaitingToDisconnect() end
---@return boolean
function AGameplayPC:IsWaitingOnSecondPingClick() end
---@return boolean
function AGameplayPC:IsProgressionEligible() end
---@return boolean
function AGameplayPC:IsPlayingInEditor() end
---@return int32
function AGameplayPC:GetUniquePlayerIndex() end
---@return ETritonSpatializationMode
function AGameplayPC:GetTritonSpatializationMode() end
---@return float
function AGameplayPC:GetTimeUntilCanPlaceSticker() end
---@return float
function AGameplayPC:GetTimeUntilCanEmote() end
---@return float
function AGameplayPC:GetTimeSinceLastIconPingRequest() end
---@return float
function AGameplayPC:GetStickerCooldownTimer() end
---@return int32
function AGameplayPC:GetSelectedSticker() end
---@return float
function AGameplayPC:GetPingCooldownPenalty() end
---@return float
function AGameplayPC:GetPingCooldown() end
---@return AGameplayPS
function AGameplayPC:GetGameplayPS() end
---@return AGameplayHUD
function AGameplayPC:GetGameplayHUD() end
---@return UPrimitiveComponent
function AGameplayPC:GetComponentToAlign() end
function AGameplayPC:EmoteStopHoldDown() end
function AGameplayPC:EmoteStartHoldDown() end
---@param pComponentToAlign UPrimitiveComponent
---@param componentAlignType EComponentAlignType
function AGameplayPC:DoServerSetComponentToAlign(pComponentToAlign, componentAlignType) end
---@param mod float
function AGameplayPC:DoServerModifyTimeScale(mod) end
function AGameplayPC:DoServerGrantDisconnect() end
function AGameplayPC:DisconnectTutorial() end
function AGameplayPC:DisconnectMatch() end
---@param Names TArray<FString>
function AGameplayPC:ClientSetLoadingScreenToWait(Names) end
---@param Val FMatchSummaryInfoData
function AGameplayPC:ClientSetFinalMatchSummaryInfo(Val) end
function AGameplayPC:ClientBeginTVIntroStage() end
function AGameplayPC:ClientBeginStartupStage() end
function AGameplayPC:ClientBeginHuntStage() end
---@param bAborted boolean
---@param bReturningToLobby boolean
function AGameplayPC:ClientBeginEndGameStage(bAborted, bReturningToLobby) end
function AGameplayPC:ClientAskToDisconnectFromVoice() end
function AGameplayPC:ClientAllowDisconnect() end
---@return boolean
function AGameplayPC:CanPlaceSticker() end
---@return boolean
function AGameplayPC:CanPing() end
---@return boolean
function AGameplayPC:CanEmote() end
function AGameplayPC:BeginFadeOutLoadingScreen() end
---@param pPing APing
function AGameplayPC:AttemptRemovePing(pPing) end
---@param stickerIndex int32
function AGameplayPC:AttemptPlaceSticker(stickerIndex) end
---@param pingType EPingType
function AGameplayPC:AttemptPing(pingType) end
---@return boolean
function AGameplayPC:AllowDebugKeys() end


---@class AGameplayPS : APlayerState
---@field mbRunningMode boolean
---@field mbCrouchingMode boolean
---@field mbIsSpeakingLocally boolean
---@field mbIsKbdCrouchToggle boolean
---@field mbIsKbdSprintToggle boolean
---@field mbIsControllerCrouchToggle boolean
---@field mbIsControllerSprintToggle boolean
---@field mPlayerInfo FNetPlayerInfoStruct
---@field mbRequestedDisconnect boolean
---@field mCharacterStats FCharStatsStruct
---@field mbShowCharVisualization boolean
---@field mbHasActivatedSeasonalEvilSpectrals boolean
---@field mAnalyticServerCharacterStats FAnalyticServerCharStatsStruct
---@field mLocalPlayerMatchInfoData FPlayerMatchInfoData
AGameplayPS = {}

function AGameplayPS:ToggleShowCharVisualization() end
---@param bNewValue boolean
function AGameplayPS:SetIsSpeakingLocally(bNewValue) end
---@param steamId FString
function AGameplayPS:ServerSetSteamId(steamId) end
---@param bRunning boolean
function AGameplayPS:ServerSetRunningMode(bRunning) end
---@param bVal boolean
function AGameplayPS:ServerSetKbdToggleSprint(bVal) end
---@param bVal boolean
function AGameplayPS:ServerSetKbdToggleCrouch(bVal) end
---@param bCrouching boolean
function AGameplayPS:ServerSetCrouchingMode(bCrouching) end
---@param bVal boolean
function AGameplayPS:ServerSetControllerToggleSprint(bVal) end
---@param bVal boolean
function AGameplayPS:ServerSetControllerToggleCrouch(bVal) end
function AGameplayPS:ServerRequestPossession() end
---@return boolean
function AGameplayPS:RequestedDisconnect() end
function AGameplayPS:OnRep_PlayerInfo() end
---@param bRunning boolean
function AGameplayPS:MulticastOtherSetRunningMode(bRunning) end
---@param bCrouching boolean
function AGameplayPS:MulticastOtherSetCrouchingMode(bCrouching) end
---@return boolean
function AGameplayPS:IsSpeakingLocally() end
---@return boolean
function AGameplayPS:IsPromotedEvil() end
---@return boolean
function AGameplayPS:GetShowCharVisualization() end
---@return ECharacterType
function AGameplayPS:GetPreferredTeenCharacterType() end
---@return ECharacterType
function AGameplayPS:GetPreferredEvilCharacterType() end
---@param pTPChar ATPChar
---@param pCharLoadout UCharacterLoadout
---@param playerLoadoutData FPlayerEOMLoadOutData
---@param pPlayerLoadout UPlayerLoadout
function AGameplayPS:GetPlayerLoadoutInfo(pTPChar, pCharLoadout, playerLoadoutData, pPlayerLoadout) end
---@return FNetPlayerInfoStruct
function AGameplayPS:GetPlayerInfo() end
---@return ATPChar
function AGameplayPS:GetMainTPChar() end
---@return FPlayerMatchInfoData
function AGameplayPS:GetLocalPlayerMatchInfoData() end
---@return ECharacterType
function AGameplayPS:GetEvilOriginalCharacterType() end
---@return FCharStatsStruct
function AGameplayPS:GetCharStatsStruct() end
---@return FAnalyticServerCharStatsStruct
function AGameplayPS:GetAnalyticServerCharStats() end
---@param Type FCharStatType
---@param Time float
function AGameplayPS:DoServerSetTimeStat(Type, Time) end
---@param bSet boolean
function AGameplayPS:DoServerSetRequestedDisconnect(bSet) end
---@param rankAdjustment int32
function AGameplayPS:DoServerSetRankAdjustment(rankAdjustment) end
---@param bVal boolean
function AGameplayPS:DoServerSetKbdToggleSprint(bVal) end
---@param bVal boolean
function AGameplayPS:DoServerSetKbdToggleCrouch(bVal) end
---@param bVal boolean
function AGameplayPS:DoServerSetControllerToggleSprint(bVal) end
---@param bVal boolean
function AGameplayPS:DoServerSetControllerToggleCrouch(bVal) end
---@param Type FCharStatType
---@param DeltaTime float
function AGameplayPS:DoServerIncrementTimeStat(Type, DeltaTime) end
---@param Type FCharStatType
---@param Amount int32
function AGameplayPS:DoServerIncrementStats(Type, Amount) end
---@param Category EScoringCategory
---@param scoreIncrease float
---@param Multiplier float
---@param outBaseIncrease float
---@param outBonusIncrease float
function AGameplayPS:DoServerIncreaseScore(Category, scoreIncrease, Multiplier, outBaseIncrease, outBonusIncrease) end


---@class AHeatmapGenerator : AActor
---@field mHeatmap TArray<FVector>
---@field mHeatmapAlpha TArray<float>
---@field mHorizontalResolution int32
---@field mVerticalSlicesSqrt int32
---@field mpHeatmapVolume UBoxComponent
---@field mCharacterPixelDimensions FIntPoint
---@field mbEvilCharacterMovement boolean
---@field mbGoodCharacterMovement boolean
---@field mbWeaponUsage boolean
---@field mbFramerate boolean
---@field mpHeatmapVisualizer UPostProcessComponent
---@field mHeatmapPath FString
---@field mHeatmapSourceLocation EHeatmapFileLocation
---@field mpHeatmapToVisualize UTexture2D
---@field mHeatmapAccumulationMethod EHeatmapAccumulationMethod
---@field mbVisualizeHeatmap boolean
---@field mpAccumulateHeatmapsTexture UTexture2D
---@field mpHeatmapVisualizerMaterial UMaterialInstanceConstant
---@field mbHeatmapPathDirty boolean
---@field mCurrentHeatmaps TArray<FString>
---@field mHeatmapPathPreviewSettings TArray<FHeatmapPreviewSettings>
AHeatmapGenerator = {}



---@class AHidePoint : APointBase
---@field mHideState EHideState
---@field mpInspectorTPChar ATPChar
---@field mEnteringHideMoveType EHideMoveType
---@field mExitingHideMoveType EHideMoveType
---@field mpSkeletalMeshComponent USkeletalMeshComponent
---@field mpHalloweenSkeletonMeshComponent USkeletalMeshComponent
---@field mpSkeletonMesh USkeletalMesh
---@field mSkeletonAnimInstanceClass TSubclassOf<UAnimInstance>
---@field mpSkeletonOutMontage UAnimMontage
---@field mbCanSpawnSkeleton boolean
---@field mbIsSkeletonActive boolean
---@field mpPingCapsuleCollision UCapsuleComponent
---@field mpEvilCapsuleComponent UCapsuleComponent
---@field mpEvilGoodSprite UBillboardComponent
---@field mpEvilBadSprite UBillboardComponent
---@field mpPrimaryAkEmitter UExtAkComponent
---@field mbServer_OwnerRequestExit boolean
---@field mHideObjectType EHideObjectType
---@field mbQuietEntry boolean
---@field mbGlintEnabled boolean
---@field mbOutlineEnabled boolean
---@field mTimeBeforeHideSenseReveal float
---@field mHideSenseRevealTime float
---@field mbHideSenseRevealedLastFrame boolean
AHidePoint = {}

---@return boolean
function AHidePoint:WasRevealedByHideSenseLastFrame() end
function AHidePoint:UpdateAkEmitters() end
---@param bNewValue boolean
function AHidePoint:SetRevealedByHideSenseLastFrame(bNewValue) end
---@param bSet boolean
function AHidePoint:SetCollisionVisibilityTrace(bSet) end
---@param pMontage UAnimMontage
---@param bInterrupted boolean
function AHidePoint:OnSkeletonOut(pMontage, bInterrupted) end
function AHidePoint:OnRep_HideState() end
function AHidePoint:MulticastAllSpawnSkeleton() end
---@return boolean
function AHidePoint:IsRevealedByHideSense() end
---@return boolean
function AHidePoint:IsQuietEntryEnabled() end
---@return boolean
function AHidePoint:IsInteractable() end
---@return UCapsuleComponent
function AHidePoint:GetTargetEvilCapsule() end
---@param pTPChar ATPChar
---@return UCapsuleComponent
function AHidePoint:GetTargetCapsuleByFaction(pTPChar) end
---@return UCapsuleComponent
function AHidePoint:GetTargetCapsule() end
---@return USkeletalMeshComponent
function AHidePoint:GetSkeletalMesh() end
---@return FVector
function AHidePoint:GetPingAnchorLocation() end
---@return EHideObjectType
function AHidePoint:GetObjectType() end
---@return ATPChar
function AHidePoint:GetInspectorTPChar() end
---@return EHideState
function AHidePoint:GetHideState() end
---@return float
function AHidePoint:GetHideSenseRevealTime() end
---@return EHideMoveType
function AHidePoint:GetExitingHideMoveType() end
---@return EHideMoveType
function AHidePoint:GetEnteringHideMoveType() end
---@return EHideMoveType
function AHidePoint:GetActiveHideMoveType() end
function AHidePoint:DoServerVerifyMinimumRootMotionPerformed() end
---@param DeltaTime float
function AHidePoint:DoServerUpdateHideSense(DeltaTime) end
---@param NewValue float
function AHidePoint:DoServerSetTimeBeforeHideSenseReveal(NewValue) end
---@param bSet boolean
function AHidePoint:DoServerSetQuietEntry(bSet) end
---@param bRequestExit boolean
function AHidePoint:DoServerSetOwnerRequestExit(bRequestExit) end
---@param NewValue float
function AHidePoint:DoServerSetHideSenseRevealTime(NewValue) end
---@param pInspectorTPChar ATPChar
function AHidePoint:DoServerInspect(pInspectorTPChar) end
---@return float
function AHidePoint:DoServerGetTimeBeforeHideSenseReveal() end
---@return boolean
function AHidePoint:DoServerGetOwnerRequestExit() end
function AHidePoint:DoServerDeactivateInspector() end
---@param pOwningTPChar ATPChar
function AHidePoint:DoServerClaim(pOwningTPChar) end
function AHidePoint:DoServerAttackOwner() end


---@class AHighschoolFountain : AActor
---@field mpPrimaryAkEmitter UExtAkComponent
AHighschoolFountain = {}



---@class AHighschoolFurnace : AActor
---@field mpPrimaryAkEmitter UExtAkComponent
AHighschoolFurnace = {}



---@class AHolySlingshotProjectile : AActor
---@field mpCollisionComponent USphereComponent
---@field mpRotationComponent USceneComponent
---@field mpStaticMeshComponent UStaticMeshComponent
---@field mpProjectileMovementComponent UProjectileMovementComponent
---@field mpTrailParticleSystemComp UParticleSystemComponent
---@field mpLightBeamsParticleSystemComp UParticleSystemComponent
---@field mpEvilBeamParticleSystemComp UParticleSystemComponent
---@field mpExplosionParticles UParticleSystem
---@field mpDecalComponent UDecalComponent
---@field mpDamageSphereComponent USphereComponent
---@field mpPrimaryAkEmitter UExtAkComponent
---@field mpPerceptionStimuliComponent UAIPerceptionStimuliSourceComponent
---@field mpHolySlingshotSkinDataAsset UHolySlingshotSkinDataAsset
---@field mbHasHit boolean
---@field mbCleaningUp boolean
---@field mServerLifetime float
---@field mbServerStuckToArmor boolean
---@field mbServerStuckToMimic boolean
---@field mpStuckEvil AFPChar
---@field mStuckEvilBoneName FName
---@field mImpactReflection FVector
---@field mImpactLocation FVector
---@field mTrailUpdateTimer float
---@field mTrailLocationToUpdate uint8
AHolySlingshotProjectile = {}

---@param DeltaSeconds float
function AHolySlingshotProjectile:UpdateStuckToEvilAttachment(DeltaSeconds) end
function AHolySlingshotProjectile:UpdateEvilBeamParticle() end
---@param DeltaTime float
function AHolySlingshotProjectile:UpdateEffects(DeltaTime) end
---@param HitComp UPrimitiveComponent
---@param OtherActor AActor
---@param OtherComp UPrimitiveComponent
---@param NormalImpulse FVector
---@param Hit FHitResult
function AHolySlingshotProjectile:OnHit(HitComp, OtherActor, OtherComp, NormalImpulse, Hit) end
---@param pOverlappedComponent UPrimitiveComponent
---@param pOtherActor AActor
---@param pOtherComp UPrimitiveComponent
---@param OtherBodyIndex int32
---@param bFromSweep boolean
---@param SweepResult FHitResult
function AHolySlingshotProjectile:OnComponentBeginOverlap(pOverlappedComponent, pOtherActor, pOtherComp, OtherBodyIndex, bFromSweep, SweepResult) end
function AHolySlingshotProjectile:MulticastAllStopWhistleSound() end
function AHolySlingshotProjectile:MulticastAllStopSparklesSound() end
---@param Hit FHitResult
function AHolySlingshotProjectile:MulticastAllStickToSurface(Hit) end
---@param Hit FHitResult
function AHolySlingshotProjectile:MulticastAllPositionCollidedEmitter(Hit) end
function AHolySlingshotProjectile:MulticastAllPlayWhistleSound() end
function AHolySlingshotProjectile:MulticastAllPlaySparklesSound() end
function AHolySlingshotProjectile:MulticastAllPlayHolyGrenadeExplosion() end
---@param bStuckEvil boolean
function AHolySlingshotProjectile:MulticastAllExplode(bStuckEvil) end
function AHolySlingshotProjectile:MulticastAllClearVisibility() end
---@return boolean
function AHolySlingshotProjectile:IsStuckToEvil() end
---@return boolean
function AHolySlingshotProjectile:IsCleaningUp() end
---@return boolean
function AHolySlingshotProjectile:HasHit() end
---@return FName
function AHolySlingshotProjectile:GetStuckEvilBoneName() end
---@return AFPChar
function AHolySlingshotProjectile:GetStuckEvil() end
---@param DeltaTime float
function AHolySlingshotProjectile:DoServerUpdateLifetime(DeltaTime) end
---@param bStuckToArmor boolean
function AHolySlingshotProjectile:DoServerSetStuckToArmor(bStuckToArmor) end
---@param BoneName FName
function AHolySlingshotProjectile:DoServerSetStuckEvilBoneName(BoneName) end
---@param pStuckEvil AFPChar
function AHolySlingshotProjectile:DoServerSetStuckEvil(pStuckEvil) end
---@param LifeTime float
function AHolySlingshotProjectile:DoServerSetLifetime(LifeTime) end
---@param pSkinDataAsset UHolySlingshotSkinDataAsset
function AHolySlingshotProjectile:DoServerSetHolySlingshotSkin(pSkinDataAsset) end
---@param bSet boolean
function AHolySlingshotProjectile:DoServerSetHasHit(bSet) end
---@param bSet boolean
function AHolySlingshotProjectile:DoServerSetCleaningUp(bSet) end
---@return boolean
function AHolySlingshotProjectile:DoServerIsStuckToArmor() end
---@return float
function AHolySlingshotProjectile:DoServerGetLifetime() end
function AHolySlingshotProjectile:DoServerExplode() end
function AHolySlingshotProjectile:DoServerExpire() end
function AHolySlingshotProjectile:DoServerCheckScreams() end
function AHolySlingshotProjectile:DoServerBeginCleanup() end


---@class AHolySlingshotWeapon : AWeaponBase
---@field mpTargetContainer USceneComponent
---@field mpTargetMesh UStaticMeshComponent
---@field mpTargetDecal UDecalComponent
---@field mReloadTime float
---@field mNumBullets int32
---@field mbRequestCancel boolean
---@field mpProjectionHitResultActor AActor
---@field mSlingshotProjectileToSpawn TSubclassOf<AHolySlingshotProjectile>
---@field mpSlingshotMesh USkeletalMeshComponent
AHolySlingshotWeapon = {}

---@param DeltaSeconds float
function AHolySlingshotWeapon:UpdateTargetingVisuals(DeltaSeconds) end
function AHolySlingshotWeapon:MulticastAllStopSlingshotActive() end
function AHolySlingshotWeapon:MulticastAllSlingshotShake() end
function AHolySlingshotWeapon:MulticastAllPlaySlingshotActive() end
function AHolySlingshotWeapon:MulticastAllPlayHolyGrenadeThrowSound() end
---@return boolean
function AHolySlingshotWeapon:IsReloading() end
---@return USkeletalMeshComponent
function AHolySlingshotWeapon:GetSlingshotMesh() end
---@return boolean
function AHolySlingshotWeapon:GetRequestCancel() end
---@return float
function AHolySlingshotWeapon:GetReloadTime() end
---@return float
function AHolySlingshotWeapon:GetProjectileLifetime() end
---@return int32
function AHolySlingshotWeapon:GetNumBullets() end
---@return int32
function AHolySlingshotWeapon:GetMaxNumBullets() end
---@return TSubclassOf<AHolySlingshotProjectile>
function AHolySlingshotWeapon:GetHolySlingshotProjectileToFire() end
function AHolySlingshotWeapon:DoServerUpdateInput() end
function AHolySlingshotWeapon:DoServerUpdateBuffer() end
---@param bulletNumber int32
function AHolySlingshotWeapon:DoServerSetMaxNumBullets(bulletNumber) end
function AHolySlingshotWeapon:DoServerRequestCancel() end


---@class AHolyStaffBeam : AActor
---@field mTargetPosition FVector
---@field mpBeamStaticMesh UStaticMeshComponent
---@field mbIsBeamActivated boolean
---@field mExpansionTime float
AHolyStaffBeam = {}

function AHolyStaffBeam:UpdateVisibility() end
---@param DeltaTime float
function AHolyStaffBeam:UpdateSize(DeltaTime) end
---@param DeltaTime float
function AHolyStaffBeam:UpdatePosition(DeltaTime) end
---@param NewPosition FVector
function AHolyStaffBeam:SetTargetPosition(NewPosition) end
---@param bNewValue boolean
function AHolyStaffBeam:SetIsBeamActivated(bNewValue) end


---@class AHolyStaffWeapon : AWeaponBase
---@field mpNiagaraEffectsComponent UNiagaraComponent
---@field mbDrainingHealth boolean
---@field mpCollisionComponent USphereComponent
---@field mbLockedOn boolean
---@field mbIsHittingEvil boolean
---@field mHitBoneIdx int32
---@field mpHitEvil AFPChar
---@field mpTargetCone UStaticMeshComponent
---@field mbInFrontEnd boolean
---@field mFrontEndGlow float
---@field mbPowered boolean
---@field mTimeUntilPowered float
AHolyStaffWeapon = {}

function AHolyStaffWeapon:UpdateTargetCone() end
function AHolyStaffWeapon:StopStaffPoweredAkEvent() end
function AHolyStaffWeapon:PlayStaffPoweredAkEvent() end
function AHolyStaffWeapon:MulticastAllStopHolyStaffBeamActive() end
function AHolyStaffWeapon:MulticastAllPlayHolyStaffBeamStartup() end
function AHolyStaffWeapon:MulticastAllPlayHolyStaffBeamShutdown() end
function AHolyStaffWeapon:MulticastAllPlayHolyStaffBeamActive() end
---@return boolean
function AHolyStaffWeapon:IsLockedOn() end
---@return boolean
function AHolyStaffWeapon:IsHittingEvil() end
---@return EWise_WEP_HolyStaff
function AHolyStaffWeapon:GetHolyStaffSwitchName() end
---@return USphereComponent
function AHolyStaffWeapon:GetCollisionComponent() end
function AHolyStaffWeapon:DoServerOnFullyCharged() end
function AHolyStaffWeapon:DoServerOnAllChargeSpent() end
---@param pEvilHitting AFPChar
---@param DeltaSeconds float
function AHolyStaffWeapon:DoServerHitEvil(pEvilHitting, DeltaSeconds) end
function AHolyStaffWeapon:DoServerDebugTogglePower() end
---@param DeltaTime float
function AHolyStaffWeapon:DoServerAddHealingCharge(DeltaTime) end


---@class AInGameLevel : ALevelBase
---@field mMapDataAssets TArray<UMapDataAsset>
---@field mbPlayAmbientMusic boolean
---@field mbSkipToHuntStage boolean
---@field mpAcousticsSpaceActor AActor
AInGameLevel = {}

function AInGameLevel:StopMatchEndedWinAkEvent() end
function AInGameLevel:StopMatchEndedLoseAkEvent() end
function AInGameLevel:StopMatchEndedAkEvent() end
---@param bSet boolean
function AInGameLevel:SetSkipToHuntStage(bSet) end
---@param bPlay boolean
function AInGameLevel:SetPlayAmbientMusic(bPlay) end
function AInGameLevel:PlayMatchEndedWinAkEvent() end
function AInGameLevel:PlayMatchEndedLoseAkEvent() end
function AInGameLevel:PlayMatchEndedAkEvent() end
---@param Min float
---@param Max float
---@param searchType ESearchableType
function AInGameLevel:OverrideSearchableMinAndMaxRechargeTime(Min, Max, searchType) end
function AInGameLevel:MulticastAllPlayEvilSpawns() end
function AInGameLevel:MulticastAllPlayDisconnect() end
---@return boolean
function AInGameLevel:IsTutorialLevel() end
---@param LevelType ELevelType
---@return TArray<ESubLevelType>
function AInGameLevel:GetSelectableSubLevelTypes(LevelType) end
---@return TArray<ELevelType>
function AInGameLevel:GetSelectableLevelTypes() end
---@param pCurrentWorld UWorld
---@return TArray<ELevelType>
function AInGameLevel:GetRandomLevelTypes(pCurrentWorld) end
---@return ELevelType
function AInGameLevel:GetCurrentLevelType() end
---@return ESubLevelType
function AInGameLevel:GetActiveSubLevel() end
---@return boolean
function AInGameLevel:CanPlayAmbientMusic() end


---@class AInteractablePropBase : AActor
---@field mpSoundImpactComponent USoundImpactComponent
---@field mPropType EInteractablePropType
---@field mCollisionShape ETriggerCollisionShape
---@field mPropVisibility FEffectVisibility
---@field mInteractionVisibility FEffectVisibility
---@field mpPropFadeMaterial UMaterialInstance
---@field mpSpectralTransitionParticles UParticleSystem
---@field mImpactableComponents TArray<FImpactableComponent>
---@field mWobbleMultiplier float
---@field mWobbleTime float
---@field mImpactCooldown float
---@field mWeightForThreshold float
---@field mCollisionTransform FTransform
---@field mImpulseOffset FVector
---@field mRadius float
---@field mCapsuleHalfHeight float
---@field mBoxExtent FVector
---@field mpTriggerCollision UShapeComponent
---@field mbHasAlreadySimulated boolean
---@field mActivationTime float
---@field mbSimulating boolean
---@field mbWobbling boolean
---@field mbEnableEvilSpectralSpawn boolean
---@field mLastImpactTime float
---@field mpFloatCurve UCurveFloat
---@field mbAllowMovement boolean
---@field mbIsFading boolean
---@field mbIsSpectral boolean
---@field mpSpectralTargetActor AActor
---@field mpSpectralMeshComponent USkeletalMeshComponent
---@field mpSpawnedSkeletalMeshComp USkeletalMeshComponent
---@field mbNeedTick boolean
---@field mWeaponsInTriggerRange TArray<AWeaponBase>
---@field mTeensOverlappingTrigger TArray<ATPChar>
AInteractablePropBase = {}

---@param Velocity FVector
---@param interactionType FPropInteractionProperties
---@param pHitComponent UPrimitiveComponent
---@param pSourceComponent USceneComponent
function AInteractablePropBase:StartImpact(Velocity, interactionType, pHitComponent, pSourceComponent) end
---@param Velocity FVector
---@param interactionType FPropInteractionProperties
function AInteractablePropBase:StartExternalImpact(Velocity, interactionType) end
---@param propType EInteractablePropType
function AInteractablePropBase:SetPropType(propType) end
---@param bPropHidden boolean
function AInteractablePropBase:SetPropHidden(bPropHidden) end
---@param bAllowMovement boolean
function AInteractablePropBase:SetAllowMovement(bAllowMovement) end
function AInteractablePropBase:OnPropStartedSimulating() end
---@param Velocity FVector
---@param interactionType FPropInteractionProperties
---@param pSourceComponent USceneComponent
---@param pTargetComponent UPrimitiveComponent
function AInteractablePropBase:OnPropStartedCustomImpact(Velocity, interactionType, pSourceComponent, pTargetComponent) end
---@param Velocity FVector
---@param interactionType FPropInteractionProperties
---@param pSourceComponent USceneComponent
function AInteractablePropBase:OnImpact(Velocity, interactionType, pSourceComponent) end
---@param pHitComponent UPrimitiveComponent
---@param pOtherActor AActor
---@param pOtherComp UPrimitiveComponent
---@param NormalImpulse FVector
---@param Hit FHitResult
function AInteractablePropBase:OnActorHit(pHitComponent, pOtherActor, pOtherComp, NormalImpulse, Hit) end
---@param pComponent UPrimitiveComponent
---@param Velocity FVector
function AInteractablePropBase:LaunchComponent(pComponent, Velocity) end
---@return boolean
function AInteractablePropBase:IsEvilSpectralSpawnEnabled() end
---@return boolean
function AInteractablePropBase:IsBlueprintTickRequired() end
---@return USoundImpactComponent
function AInteractablePropBase:GetSoundImpactComponent() end
---@return EInteractablePropType
function AInteractablePropBase:GetPropType() end
---@return float
function AInteractablePropBase:GetCooldownTimeRemaining() end
function AInteractablePropBase:EnableActorTickWithComponent() end
function AInteractablePropBase:DisableActorTickWithComponent() end
---@param pSkeletalMesh USkeletalMesh
function AInteractablePropBase:AddSkeletalMesh(pSkeletalMesh) end
---@param pOverlappedComponent UPrimitiveComponent
---@param pOtherActor AActor
---@param pOtherComp UPrimitiveComponent
---@param OtherBodyIndex int32
function AInteractablePropBase:ActorEndOverlap(pOverlappedComponent, pOtherActor, pOtherComp, OtherBodyIndex) end
---@param pOverlappedComponent UPrimitiveComponent
---@param pOtherActor AActor
---@param pOtherComp UPrimitiveComponent
---@param OtherBodyIndex int32
---@param bFromSweep boolean
---@param SweepResult FHitResult
function AInteractablePropBase:ActorBeginOverlap(pOverlappedComponent, pOtherActor, pOtherComp, OtherBodyIndex, bFromSweep, SweepResult) end


---@class AKeyboardMonkey : AActor
---@field mbMonkeyActive boolean
---@field mMonkeySpeed int32
AKeyboardMonkey = {}



---@class ALevelBase : ALevelScriptActor
---@field mpPrimaryAkEmitter UExtAkComponent
---@field mpLevelMaterialParameterCollection UMaterialParameterCollection
---@field mpActiveMapDataAsset UMapDataAsset
---@field mDynamicStreamedInLevels TArray<ULevelStreamingDynamic>
ALevelBase = {}

function ALevelBase:StartLevelTypeAmbientSounds() end
---@param currentEvents TArray<ESeasonalEventType>
function ALevelBase:OnSeasonalEventsUpdated(currentEvents) end
function ALevelBase:OnActiveMapDataChanged() end


---@class ALifeEssencePowerup : APowerupBase
---@field mMeshBaseRelativeLocation FVector
---@field mHeightOffset float
---@field mWobbleSpeedMultiplier float
---@field mpCollectingTeenSpectral ATeenSpectralChar
---@field mTimeSinceCollection float
---@field mpNiagaraFXComponent UNiagaraComponent
---@field mNiagaraSystemPath FSoftObjectPath
---@field mpAuraMesh UStaticMeshComponent
---@field mEssenceSizeAlpha float
ALifeEssencePowerup = {}

function ALifeEssencePowerup:UpdateAkEmitters() end
---@param pAbsorbingTPChar ATPChar
function ALifeEssencePowerup:MulticastAllPlayAbsorb(pAbsorbingTPChar) end
function ALifeEssencePowerup:DoServerUpdateTeenSpectralOverlaps() end
---@param Size float
function ALifeEssencePowerup:DoServerSetEssenceSize(Size) end
function ALifeEssencePowerup:DoServerDestroyEssence() end


---@class ALifeEssenceSpawner : AActor
---@field mpVisualIndicatorComponent UStaticMeshComponent
---@field mServerSpawnerCooldown float
ALifeEssenceSpawner = {}

---@return boolean
function ALifeEssenceSpawner:HasSpawnedLifeEssence() end
function ALifeEssenceSpawner:DoServerSpawnLifeEssence() end
---@param Time float
function ALifeEssenceSpawner:DoServerSetSpawnerCooldown(Time) end
---@return boolean
function ALifeEssenceSpawner:DoServerIsAllowedToSpawnLifeEssence() end
---@return float
function ALifeEssenceSpawner:DoServerGetSpawnerCooldown() end
---@return int32
function ALifeEssenceSpawner:DoServerGetNumEssencesSpawned() end


---@class ALobbyBeaconClient : AOnlineBeaconClient
---@field mPlayerInfo FNetPlayerInfoStruct
---@field mpLobbyState ALobbyBeaconState
---@field mTimeoutStrikes int32
---@field mDisconnectReason ELobbyDisconnectReason
---@field mbMatchStarted boolean
---@field mServerTimeout float
---@field mpLobbyHostObject ALobbyBeaconHostObject
---@field mPlayFabId FString
---@field mUsername FString
---@field mbHasGeneratedLoadout boolean
---@field mbClientAddedToVoiceKickQueue boolean
---@field mbInLobby boolean
ALobbyBeaconClient = {}

---@param bNewValue boolean
function ALobbyBeaconClient:SetHasGeneratedLoadout(bNewValue) end
---@param bSet boolean
function ALobbyBeaconClient:ServerUpdateReadyStatus(bSet) end
---@param playerInfo FNetPlayerInfoStruct
function ALobbyBeaconClient:ServerUpdatePlayerInfo(playerInfo) end
function ALobbyBeaconClient:ServerToggleReadyStatus() end
---@param Text FText
function ALobbyBeaconClient:ServerSubmitChatMessage(Text) end
---@param MatchSettings FMatchSettings
function ALobbyBeaconClient:ServerSetMatchSettings(MatchSettings) end
---@param pMapData UMapDataAsset
function ALobbyBeaconClient:ServerSetMap(pMapData) end
function ALobbyBeaconClient:ServerSetInLoadoutLockdown() end
---@param CharType ECharacterType
function ALobbyBeaconClient:ServerSetCharacterType(CharType) end
function ALobbyBeaconClient:ServerRequestUpdate() end
---@param reason ELobbyDisconnectReason
function ALobbyBeaconClient:ServerRequestLeaveLobby(reason) end
---@param Grantable FGrantable
function ALobbyBeaconClient:ServerRequestChangePortrait(Grantable) end
---@param aChange FLoadoutChange
function ALobbyBeaconClient:ServerRequestChangeLoadout(aChange) end
---@param lobbyIdx int32
---@param CharacterType ECharacterType
function ALobbyBeaconClient:ServerReplaceBotPlayer(lobbyIdx, CharacterType) end
function ALobbyBeaconClient:ServerPong() end
---@param Val int32
function ALobbyBeaconClient:ServerAddToGameModeIndex(Val) end
---@param playerInfo FNetPlayerInfoStruct
---@param matchmakingInfo FMatchmakingPlayerInfo
function ALobbyBeaconClient:ServerAddPlayerInfo(playerInfo, matchmakingInfo) end
function ALobbyBeaconClient:OnRep_LobbyState() end
---@return boolean
function ALobbyBeaconClient:IsReady() end
function ALobbyBeaconClient:IncrementTimeoutStrikes() end
---@return boolean
function ALobbyBeaconClient:HasGeneratedLoadout() end
---@return int32
function ALobbyBeaconClient:GetTimeoutStrikes() end
---@return FNetPlayerInfoStruct
function ALobbyBeaconClient:GetPlayerInfo() end
---@return ALobbyBeaconHostObject
function ALobbyBeaconClient:GetLobbyHostObject() end
---@param bSet boolean
function ALobbyBeaconClient:DoServerSetReadyStatus(bSet) end
function ALobbyBeaconClient:DoServerCallUpate() end
---@param allPlayers TArray<FNetPlayerInfoStruct>
function ALobbyBeaconClient:ClientUpdateAllPlayerInfo(allPlayers) end
---@param LevelType ELevelType
---@param SubLevelType ESubLevelType
---@param clientCharacterType ECharacterType
function ALobbyBeaconClient:ClientShowPrizes(LevelType, SubLevelType, clientCharacterType) end
---@param lobbyIndex int32
function ALobbyBeaconClient:ClientSetLobbyIndex(lobbyIndex) end
function ALobbyBeaconClient:ClientRemoveLockdown() end
---@param aLobbyIndexToUpdate int16
---@param aCharToUpdate ECharacterType
---@param aWeaponToUpdate EWeaponTypeEnum
---@param aPlayerSlot EPlayerSlot
---@param aNewGrantable FString
function ALobbyBeaconClient:ClientRecieveReplicatedLoadoutData_WeaponSlotType(aLobbyIndexToUpdate, aCharToUpdate, aWeaponToUpdate, aPlayerSlot, aNewGrantable) end
---@param aLobbyIndexToUpdate int16
---@param aWeaponToUpdate EWeaponTypeEnum
---@param aPointTypeToUpdate EPointType
---@param aNewValue int32
function ALobbyBeaconClient:ClientRecieveReplicatedLoadoutData_WeaponPointType(aLobbyIndexToUpdate, aWeaponToUpdate, aPointTypeToUpdate, aNewValue) end
---@param aLobbyIndexToUpdate int16
---@param aCharType ECharacterType
---@param aWeaponToUpdate EWeaponTypeEnum
function ALobbyBeaconClient:ClientRecieveReplicatedLoadoutData_WeaponIsUpToDate(aLobbyIndexToUpdate, aCharType, aWeaponToUpdate) end
---@param aLobbyIndexToUpdate int16
---@param uiSlotExtended uint16
---@param aNewGrantable FString
function ALobbyBeaconClient:ClientRecieveReplicatedLoadoutData_PlayerSlot(aLobbyIndexToUpdate, uiSlotExtended, aNewGrantable) end
---@param aLobbyIndexToUpdate int16
---@param aPointTypeToUpdate EPointType
---@param aNewValue int32
function ALobbyBeaconClient:ClientRecieveReplicatedLoadoutData_PlayerPointType(aLobbyIndexToUpdate, aPointTypeToUpdate, aNewValue) end
---@param aLobbyIndexToUpdate int16
function ALobbyBeaconClient:ClientRecieveReplicatedLoadoutData_PlayerIsUpToDate(aLobbyIndexToUpdate) end
---@param aLobbyIndexToUpdate int16
---@param aCharToUpdate ECharacterType
---@param uiSlotExtended uint16
---@param aNewGrantable FString
function ALobbyBeaconClient:ClientRecieveReplicatedLoadoutData_CharacterUiSlot(aLobbyIndexToUpdate, aCharToUpdate, uiSlotExtended, aNewGrantable) end
---@param aLobbyIndexToUpdate int16
---@param aCharToUpdate ECharacterType
---@param aPointTypeToUpdate EPointType
---@param aNewValue int32
function ALobbyBeaconClient:ClientRecieveReplicatedLoadoutData_CharacterPointType(aLobbyIndexToUpdate, aCharToUpdate, aPointTypeToUpdate, aNewValue) end
---@param aLobbyIndexToUpdate int16
---@param aCharToUpdate ECharacterType
function ALobbyBeaconClient:ClientRecieveReplicatedLoadoutData_CharacterIsUpToDate(aLobbyIndexToUpdate, aCharToUpdate) end
---@param aLobbyIndexToUpdate int16
---@param aCharToUpdate ECharacterType
---@param aAffinityDiscountToUpdate EPerkAffinityType
---@param aNewValue int32
function ALobbyBeaconClient:ClientRecieveReplicatedLoadoutData_CharacterAffinityDiscount(aLobbyIndexToUpdate, aCharToUpdate, aAffinityDiscountToUpdate, aNewValue) end
---@param aLobbyIndexToUpdate int16
---@param aCharToUpdate ECharacterType
---@param aAbilityToUpdate EEvilAbilityType
---@param aPlayerSlot EPlayerSlot
---@param aNewGrantable FString
function ALobbyBeaconClient:ClientRecieveReplicatedLoadoutData_AbilitySlotType(aLobbyIndexToUpdate, aCharToUpdate, aAbilityToUpdate, aPlayerSlot, aNewGrantable) end
---@param aLobbyIndexToUpdate int16
---@param aCharType ECharacterType
---@param aAbilityToUpdate EEvilAbilityType
function ALobbyBeaconClient:ClientRecieveReplicatedLoadoutData_AbilityIsUpToDate(aLobbyIndexToUpdate, aCharType, aAbilityToUpdate) end
function ALobbyBeaconClient:ClientPing() end
---@param InChannelName FString
---@param InChannelCredentials FString
function ALobbyBeaconClient:ClientJoinVoiceChannel(InChannelName, InChannelCredentials) end
function ALobbyBeaconClient:ClientJoinStagingSession() end
---@param InLobbyId FString
function ALobbyBeaconClient:ClientJoinLobby(InLobbyId) end
---@param Text FText
function ALobbyBeaconClient:ClientDisplayLobbyMessage(Text) end
---@param aReason ELobbyDisconnectReason
function ALobbyBeaconClient:ClientDisconnectPlayer(aReason) end
---@param connectionUID int32
function ALobbyBeaconClient:ClientConnected(connectionUID) end
function ALobbyBeaconClient:ClientBeginLockdownAndCommitPendingChanges() end
---@param lobbyIndex int32
function ALobbyBeaconClient:ClientAddLobbyIndex(lobbyIndex) end


---@class ALobbyBeaconHost : AOnlineBeaconHost
---@field mbIsInitialized boolean
ALobbyBeaconHost = {}

---@return boolean
function ALobbyBeaconHost:Start() end
function ALobbyBeaconHost:RemoveHost() end
---@param pHostObject AOnlineBeaconHostObject
function ALobbyBeaconHost:AddHost(pHostObject) end


---@class ALobbyBeaconHostObject : AOnlineBeaconHostObject
---@field mpLobbyBeaconState ALobbyBeaconState
---@field mConnectedUnitializedClients TMap<uint32, ALobbyBeaconClient>
---@field mAllClients TMap<uint32, ALobbyBeaconClient>
---@field mCountdownTimer float
---@field mLobbyDetailsUpdateTimer float
---@field mTimeoutTimer float
---@field mLobbyHostState ELobbyHostState
---@field mServerMatchMode EServerMatchMode
---@field mRequestBackfillTime float
---@field mbIsInitialBackfillDone boolean
---@field mInvalidGameLiftPlayerSessionCheckTime float
---@field mDispatchTicks int32
---@field mDirtyKeys TArray<uint32>
---@field mPendingRediscovers TArray<uint32>
---@field mbVotedOnMapSelection boolean
---@field mbQueueFinalizeCharacterTypes boolean
---@field mbQueueReportP2PClientLeave boolean
---@field mbReportP2pClientLeaveProcess boolean
ALobbyBeaconHostObject = {}

---@param Mode EServerMatchMode
function ALobbyBeaconHostObject:SetServerMatchMode(Mode) end
---@param UniqueId FString
function ALobbyBeaconHostObject:KickParticipantFromVoiceChatDueToInvalidPS(UniqueId) end
---@return EServerMatchMode
function ALobbyBeaconHostObject:GetServerMatchMode() end
---@return int32
function ALobbyBeaconHostObject:GetNumTeens() end
---@return int32
function ALobbyBeaconHostObject:GetNumPlayersReady() end
---@return int32
function ALobbyBeaconHostObject:GetNumEvils() end
---@return int32
function ALobbyBeaconHostObject:GetNumCurrentSpectators() end
---@return int32
function ALobbyBeaconHostObject:GetNumCurrentPlayers() end
---@return int32
function ALobbyBeaconHostObject:GetNumConnectingPlayers() end
---@return ULobbyManager
function ALobbyBeaconHostObject:GetLobbyManager() end
---@return ELobbyHostState
function ALobbyBeaconHostObject:GetLobbyHostState() end
---@return FLobbyDetails
function ALobbyBeaconHostObject:GetLobbyDetails() end
---@param lobbyIndex int32
---@return ALobbyBeaconClient
function ALobbyBeaconHostObject:FindLobbyBeaconClientByLobbyIndex(lobbyIndex) end
---@param pBackendManager UBackendManager
---@return ALobbyBeaconClient
function ALobbyBeaconHostObject:FindLobbyBeaconClientByBackendManager(pBackendManager) end
function ALobbyBeaconHostObject:DoTimeoutCheck() end
function ALobbyBeaconHostObject:DoServerStorePlayerInformation() end
---@param pMapData UMapDataAsset
function ALobbyBeaconHostObject:DoServerSetMap(pMapData) end
---@param pGameModeData UGameModeDataAsset
function ALobbyBeaconHostObject:DoServerSetGameMode(pGameModeData) end
---@param lobbyIndex int32
function ALobbyBeaconHostObject:DoServerOnClientConnectedAndReportedIn(lobbyIndex) end
---@return uint32
function ALobbyBeaconHostObject:DoServerGenerateUniqueID() end
---@param pClient ALobbyBeaconClient
---@param reason ELobbyDisconnectReason
function ALobbyBeaconHostObject:DoServerDisconnectPlayerFromLobby(pClient, reason) end
function ALobbyBeaconHostObject:DoServerClearLoadoutLockdownState() end
function ALobbyBeaconHostObject:DoServerCheckReadyStatus() end
function ALobbyBeaconHostObject:DoServerCallEveryoneUpdate() end
---@param Text FText
function ALobbyBeaconHostObject:DoServerBroadcastMessage(Text) end
function ALobbyBeaconHostObject:DoServerBroadcastMatchStart() end
function ALobbyBeaconHostObject:DoServerBroadcastLobbyDetails() end
function ALobbyBeaconHostObject:DoServerBroadcastClientPrizesScreen() end
function ALobbyBeaconHostObject:DoServerBroadcastClientLoadingScreen() end
function ALobbyBeaconHostObject:DoServerBeginDisbandingLobby() end
function ALobbyBeaconHostObject:DoServerAssignLobbyAuthority() end
---@return boolean
function ALobbyBeaconHostObject:DoServerAreAllClientsInLoadoutLockdown() end
function ALobbyBeaconHostObject:DoInvalidClientCheck() end
---@param DeltaSeconds float
function ALobbyBeaconHostObject:DoCheckGameLiftPlayerSessionsOfGameLift(DeltaSeconds) end
function ALobbyBeaconHostObject:DisplayChosenMap() end
function ALobbyBeaconHostObject:DetermineLevelByVotes() end
---@param pLobbyBeaconClient ALobbyBeaconClient
---@return boolean
function ALobbyBeaconHostObject:AssignLobbyIndexToLobbyBeaconClient(pLobbyBeaconClient) end
---@param pTargetBeaconClient ALobbyBeaconClient
function ALobbyBeaconHostObject:AssignGenericNameToLobbyBeaconClient(pTargetBeaconClient) end


---@class ALobbyBeaconState : AInfo
---@field mMatchSettings FMatchSettings
---@field mLobbyDetails FLobbyDetails
---@field mMatchId FString
---@field mLobbyCode FString
ALobbyBeaconState = {}

function ALobbyBeaconState:OnRep_MatchSettings() end
function ALobbyBeaconState:OnRep_MatchId() end
function ALobbyBeaconState:OnRep_LobbyDetails() end
function ALobbyBeaconState:OnRep_LobbyCode() end


---@class AMagazineActor : AActor
---@field mPageClass TSubclassOf<APageActor>
---@field DefaultPageWidget TSubclassOf<UIssuePageWidget>
---@field mpIssueDefTable UDataTable
---@field mpIssueDefines UDataTable
AMagazineActor = {}

function AMagazineActor:UpdatePageMouseInteraction() end
function AMagazineActor:OnTurnRight() end
function AMagazineActor:OnTurnLeft() end


---@class AMagicSphere : ARemoteCharBase
---@field mpTargetingDecal UDecalComponent
---@field mpTargetingParticleSystem UParticleSystemComponent
---@field mpMagicSphereParticleSystem UParticleSystemComponent
---@field mpExplosionParticleSystem UParticleSystem
---@field mDetonationChargeTime float
---@field mpParchmentSkinDataAsset UParchmentSkinDataAsset
---@field mDisintegrationLevel float
---@field mTeleportChargeTime float
---@field mbChargingTeleport boolean
---@field mTimeSinceEvilLastSeen float
---@field mRevealedEvil AFPChar
---@field mpOwningWeapon AParchmentWeapon
---@field mbDamagingMimic boolean
AMagicSphere = {}

---@param DeltaSeconds float
function AMagicSphere:UpdatePulseEffects(DeltaSeconds) end
function AMagicSphere:ServerRequestReleasePrimaryFire() end
function AMagicSphere:ServerRequestBeginPrimaryFire() end
function AMagicSphere:OnRep_DamagingMimic() end
function AMagicSphere:OnRep_ChargingTeleport() end
---@param sourcePosition FVector
---@param destinationPosition FVector
function AMagicSphere:MulticastAllSphereTeleport_Play(sourcePosition, destinationPosition) end
function AMagicSphere:MulticastAllSphereActive_Play() end
---@param Size float
function AMagicSphere:MulticastAllSetSphereSize(Size) end
---@return boolean
function AMagicSphere:IsFocusing() end
---@return boolean
function AMagicSphere:IsDamagingMimic() end
---@return boolean
function AMagicSphere:IsChargingTeleport() end
---@return float
function AMagicSphere:GetTeleportChargeTime() end
---@return AParchmentWeapon
function AMagicSphere:GetOwningWeapon() end
---@return float
function AMagicSphere:GetDetonationChargeTime() end
---@return float
function AMagicSphere:GetDamageRadius() end
---@return float
function AMagicSphere:GetBaseEvilCollisionRadius() end
---@param NewTime float
function AMagicSphere:DoServerSetTimeSinceEvilLastSeen(NewTime) end
---@param pChar AFPChar
function AMagicSphere:DoServerSetRevealedEvil(pChar) end
---@param pOwningWeapon AParchmentWeapon
function AMagicSphere:DoServerSetOwningWeapon(pOwningWeapon) end
---@return float
function AMagicSphere:DoServerGetTimeSinceEvilLastSeen() end
---@return AFPChar
function AMagicSphere:DoServerGetRevealedEvil() end
function AMagicSphere:ClientParchementEvilSense_Play() end


---@class AMedKitPoint : APointBase
---@field mbIsHealing boolean
---@field mpStaticMeshComponent UStaticMeshComponent
---@field mpPingSphereCollision USphereComponent
AMedKitPoint = {}

function AMedKitPoint:UpdateRenderCustomDepth() end
---@return boolean
function AMedKitPoint:IsHealing() end
---@return FVector
function AMedKitPoint:GetPingCollisionSphereOffset() end
---@return FVector
function AMedKitPoint:GetPingAnchorLocation() end
function AMedKitPoint:DoServerBeginHealing() end
---@param pOwningTPChar ATPChar
function AMedKitPoint:DoServerActivate(pOwningTPChar) end


---@class AMergedActor : AActor
---@field mMergedActors TArray<AActor>
AMergedActor = {}



---@class AMeshPhysicsProp : APhysicsPropBase
AMeshPhysicsProp = {}


---@class AMiscMacroLibrary : AActor
AMiscMacroLibrary = {}


---@class AMolotovDebris : AActor
---@field mpDummyRoot USceneComponent
---@field mpProjectileMovement UProjectileMovementComponent
---@field mpMeshComponent UStaticMeshComponent
---@field mpCollisionSphereComponent USphereComponent
---@field mpPerceptionStimuliComponent UAIPerceptionStimuliSourceComponent
---@field mFadeTime float
---@field mStartLightIntensity float
---@field mbServerWindTriggered boolean
---@field mpEvilChars TArray<AFPChar>
---@field mpOwningProjectile AActor
---@field mbServerIsActive boolean
---@field mWindDirection FVector
---@field mbHasSpread boolean
---@field mbSpawnedBlueParticles boolean
---@field mSpreadTimer float
---@field mSpreadLevel int32
AMolotovDebris = {}

---@param pProjectile AActor
function AMolotovDebris:SetOwningProjectile(pProjectile) end
function AMolotovDebris:OnStopEmitting() end
function AMolotovDebris:OnRemove() end
function AMolotovDebris:MulticastAllStopEmitting() end
---@return FVector
function AMolotovDebris:GetWindDirection() end
---@return ATPChar
function AMolotovDebris:GetOwningTPChar() end
---@return AActor
function AMolotovDebris:GetOwningProjectile() end
---@param DeltaSeconds float
function AMolotovDebris:DoServerUpdateOverlaps(DeltaSeconds) end
---@param DeltaSeconds float
function AMolotovDebris:DoServerUpdateLifetime(DeltaSeconds) end
function AMolotovDebris:DoServerTerminate() end
---@param Val boolean
function AMolotovDebris:DoServerSetWindTriggered(Val) end
---@param spreadTimer float
function AMolotovDebris:DoServerSetSpreadTimer(spreadTimer) end
---@param spreadLevel int32
function AMolotovDebris:DoServerSetSpreadLevel(spreadLevel) end
---@param Val boolean
function AMolotovDebris:DoServerSetActive(Val) end
---@param Direction FVector
function AMolotovDebris:DoServerScreamOccurred(Direction) end
---@return boolean
function AMolotovDebris:DoServerIsActive() end
---@return boolean
function AMolotovDebris:DoServerGetWindTriggered() end
function AMolotovDebris:DoServerExpireOwnerChildren() end
function AMolotovDebris:DoServerCheckScreams() end


---@class AMolotovProjectile : AActor
---@field mpCollisionComponent USphereComponent
---@field mpRotationComponent USceneComponent
---@field mpProjectileMovementComponent UProjectileMovementComponent
---@field mpSkeletalMeshComponent USkeletalMeshComponent
---@field mpParticleSystemComponent UParticleSystemComponent
---@field mpFallingFlamesParticleSystem UParticleSystemComponent
---@field mpFlamePoolParticleSystem UParticleSystemComponent
---@field mpExplosionParticleSystemComponent UParticleSystemComponent
---@field mpPrimaryAkEmitter UExtAkComponent
---@field mpMolotovDebrisClass UClass
---@field mpMolotovSkinDataAsset UMolotovSkinDataAsset
---@field mImpactLocation FVector
---@field mImpactReflection FVector
---@field mImpactNormal FVector
---@field mMaxDamageZones int32
---@field mDamageSpread float
---@field mMinDebrisSpeed float
---@field mMaxDebrisSpeed float
---@field mpChildDebris TArray<AActor>
---@field mLifetime float
---@field mbIsDetonated boolean
---@field mbIsCleaningUp boolean
---@field mParticleProgress float
---@field mbShouldBounce boolean
---@field mNumberOfBounces int32
---@field mTotalDebrisDuration float
---@field mpServerFPCharStuckTo AFPChar
---@field mbServerStuckToArmor boolean
AMolotovProjectile = {}

---@param DeltaTime float
function AMolotovProjectile:UpdateVisuals(DeltaTime) end
---@param DeltaTime float
function AMolotovProjectile:UpdateParticleProgress(DeltaTime) end
---@param HitComp UPrimitiveComponent
---@param OtherActor AActor
---@param OtherComp UPrimitiveComponent
---@param NormalImpulse FVector
---@param Hit FHitResult
function AMolotovProjectile:OnHit(HitComp, OtherActor, OtherComp, NormalImpulse, Hit) end
function AMolotovProjectile:MulticastAllStopWhistleSound() end
function AMolotovProjectile:MulticastAllStopBurnSound() end
---@param Velocity FVector
---@param Gravity float
function AMolotovProjectile:MulticastAllSetVelocity(Velocity, Gravity) end
---@param Hit FHitResult
function AMolotovProjectile:MulticastAllPositionCollidedEmitter(Hit) end
function AMolotovProjectile:MulticastAllPlayWhistleSound() end
function AMolotovProjectile:MulticastAllPlayBurnSound() end
function AMolotovProjectile:MulticastAllPlayBounceSound() end
---@param trans FTransform
function AMolotovProjectile:MulticastAllMolotovExplosion(trans) end
function AMolotovProjectile:MulticastAllClearVisibility() end
---@return boolean
function AMolotovProjectile:IsDetonated() end
---@return boolean
function AMolotovProjectile:IsCleaningUp() end
---@return float
function AMolotovProjectile:GetTotalDebrisDuration() end
---@return float
function AMolotovProjectile:GetParticleProgress() end
---@return float
function AMolotovProjectile:GetMolotovLifetime() end
---@param ShootDirection FVector
---@param powerMultiplier float
function AMolotovProjectile:FireInDirection(ShootDirection, powerMultiplier) end
---@param DeltaTime float
function AMolotovProjectile:DoServerUpdateStuckFPChar(DeltaTime) end
---@param DeltaTime float
function AMolotovProjectile:DoServerUpdateLifetime(DeltaTime) end
function AMolotovProjectile:DoServerUpdateEvilHit() end
function AMolotovProjectile:DoServerSpawnDebris() end
---@param TotalDuration float
function AMolotovProjectile:DoServerSetTotalDebrisDuration(TotalDuration) end
---@param bSet boolean
function AMolotovProjectile:DoServerSetStuckToArmor(bSet) end
---@param bNewValue boolean
function AMolotovProjectile:DoServerSetShouldBounce(bNewValue) end
---@param LifeTime float
function AMolotovProjectile:DoServerSetMolotovLifetime(LifeTime) end
---@param pChar AFPChar
function AMolotovProjectile:DoServerSetFPCharStuckTo(pChar) end
---@param bSet boolean
function AMolotovProjectile:DoServerSetCleaningUp(bSet) end
function AMolotovProjectile:DoServerOnDetonate() end
---@return boolean
function AMolotovProjectile:DoServerGetStuckToArmor() end
---@return AFPChar
function AMolotovProjectile:DoServerGetFPCharStuckTo() end
function AMolotovProjectile:DoServerExpireChildren() end
function AMolotovProjectile:DoServerDestroyAll() end
function AMolotovProjectile:DoServerCheckScreams() end
---@param pDebris AMolotovDebris
function AMolotovProjectile:DoServerAddChildDebris(pDebris) end


---@class AMolotovWeapon : AWeaponBase
---@field mpTargetContainer USceneComponent
---@field mpTargetDecal UDecalComponent
---@field mpProjectionBeamParticles TArray<UParticleSystemComponent>
---@field mpIdleFlameParticleComponent UParticleSystemComponent
---@field mpIdleFlameLightComponent UPointLightComponent
---@field mpProjectionHitResultActor AActor
---@field mMolotovProjectileClass UClass
---@field mbBufferFire boolean
---@field mbRequestCancel boolean
---@field mCurrentReloadTime float
AMolotovWeapon = {}

function AMolotovWeapon:UpdateMolotovProjection() end
function AMolotovWeapon:MulticastAllStopMolotovActive() end
function AMolotovWeapon:MulticastAllPlayMolotovActive() end
---@return boolean
function AMolotovWeapon:GetRequestCancel() end
---@return TSubclassOf<AMolotovProjectile>
function AMolotovWeapon:GetMolotovProjectileToSpawn() end
---@return float
function AMolotovWeapon:GetMolotovDebrisDuration() end
---@param DeltaTime float
function AMolotovWeapon:DoServerUpdateReloadTime(DeltaTime) end
function AMolotovWeapon:DoServerUpdateInput() end
---@param bNewValue boolean
function AMolotovWeapon:DoServerSetRequestCancel(bNewValue) end
---@param NewValue float
function AMolotovWeapon:DoServerSetReloadTime(NewValue) end
function AMolotovWeapon:ClearMolotovProjection() end


---@class ANavigationCleaner : AActor
---@field Prefix FString
---@field Affect boolean
ANavigationCleaner = {}

function ANavigationCleaner:UpdateVaultPointNavLinks() end
function ANavigationCleaner:UpdateCanAffectNavigation() end


---@class ANoisemakerActor : AActor
---@field mRevealTimeRemaining float
---@field mbDetectedEvil boolean
---@field mZAngleFacing float
---@field mpOwningTPChar ATPChar
---@field mbShuttingDown boolean
---@field mpMeshComponent USkeletalMeshComponent
---@field mpSphereComponent USphereComponent
---@field mpPrimaryAkEmitter UExtAkComponent
---@field mpUnattenuatedAkEmitter UExtAkComponent
---@field mpVHSEffectCurve UCurveFloat
---@field mVHSEffectAlpha float
---@field mbFadeOut boolean
---@field mpEffectMaterial UMaterialInstance
---@field mPostShutdownLifetime float
---@field mpVHSEffectsComponent UBillboardEffectsComponent
---@field mpLocallyRevealedEvil AFPChar
---@field mpPickupSkinDataAsset UPickupSkinDataAsset
ANoisemakerActor = {}

---@param DeltaTime float
function ANoisemakerActor:UpdateVisualEffects(DeltaTime) end
function ANoisemakerActor:UpdateRotation() end
---@param pNewValue AFPChar
function ANoisemakerActor:SetLocallyRevealedEvil(pNewValue) end
---@param bNewValue boolean
function ANoisemakerActor:SetIsFadingOut(bNewValue) end
function ANoisemakerActor:MulticastAllStopNoisemakerIdleLoop() end
function ANoisemakerActor:MulticastAllStopNoisemakerAlertLoop() end
---@param pSkin UItemDataAsset
function ANoisemakerActor:MulticastAllSetSkin(pSkin) end
function ANoisemakerActor:MulticastAllPlayNoisemakerShutdown() end
function ANoisemakerActor:MulticastAllPlayNoisemakerIdleLoop() end
function ANoisemakerActor:MulticastAllPlayNoisemakerAlertLoop() end
---@param pNewEvil AFPChar
function ANoisemakerActor:MulticastAllCreateHUDAuraIndicator(pNewEvil) end
---@return boolean
function ANoisemakerActor:HasDetectedEvil() end
---@return float
function ANoisemakerActor:GetZAngleFacing() end
---@return UExtAkComponent
function ANoisemakerActor:GetUnattenuatedAkEmitter() end
---@return float
function ANoisemakerActor:GetRevealTimeRemaining() end
---@return UExtAkComponent
function ANoisemakerActor:GetPrimaryAkEmitter() end
---@return ATPChar
function ANoisemakerActor:GetOwningTPChar() end
---@return USkeletalMeshComponent
function ANoisemakerActor:GetMesh() end
---@return AFPChar
function ANoisemakerActor:GetLocallyRevealedEvil() end
---@return boolean
function ANoisemakerActor:GetIsFadingOut() end
---@return float
function ANoisemakerActor:GetBaseRevealTime() end
function ANoisemakerActor:FinishDeathAnimation() end
---@param DeltaTime float
function ANoisemakerActor:DoServerUpdateDetection(DeltaTime) end
---@param NewValue float
function ANoisemakerActor:DoServerSetZAngleFacing(NewValue) end
---@param bNewValue boolean
function ANoisemakerActor:DoServerSetShuttingDown(bNewValue) end
---@param NewValue float
function ANoisemakerActor:DoServerSetRevealTimeRemaining(NewValue) end
---@param pNewValue ATPChar
function ANoisemakerActor:DoServerSetOwningTPChar(pNewValue) end
---@param bNewValue boolean
function ANoisemakerActor:DoServerSetHasDetectedEvil(bNewValue) end
---@return boolean
function ANoisemakerActor:DoServerGetIsShuttingDown() end


---@class ANoisemakerPickup : APickupBase
ANoisemakerPickup = {}


---@class AObserverChar : ATPChar
---@field mbObserving boolean
---@field mbFastMode boolean
---@field mbCinematicMode boolean
---@field mbEnginePaused boolean
---@field mbFOVOverridingRoll boolean
---@field mbAllowedToTakeInput boolean
---@field mTVPosition FVector
---@field mOrbitOffset FVector
---@field mAttachedActor AActor
---@field mTrackedActor AActor
---@field mbZLocked boolean
---@field mFOVValue float
---@field mbHUDEnabled boolean
---@field mCurrentCameraMode ECameraMode
---@field mbRollLeft boolean
---@field mbRollRight boolean
---@field mbCraneUp boolean
---@field mbCraneDown boolean
---@field mbCameraFOVIncrease boolean
---@field mbCameraFOVDecrease boolean
---@field mbTriggersAndBumpersSwapped boolean
---@field mbAlreadySwappedCommand boolean
---@field mBaseAttachedObjectOffset FVector
---@field mpAttachedObject AActor
---@field mAttachDistance float
---@field mFlySpeedMultiplier float
---@field mFlyAccelerationMultiplier float
---@field mRotateSpeedMultiplier float
---@field mCraneSpeedMultiplier float
---@field mRollSpeedMultiplier float
---@field mFOVSpeedMultiplier float
---@field mbDOFEnabled boolean
---@field mTimescaleOverride float
---@field mCurrentDOFIntensity float
---@field mCurrentFocusPlane float
---@field mPrePausePosition FVector
---@field mpCinematicCameraComponent UCineCameraComponent
---@field mpOwnerPanel UCinematicCameraControlPanel
---@field mTimeSinceLastLStickPress float
---@field mTimeSinceLastRStickPress float
AObserverChar = {}

---@param DeltaTime float
function AObserverChar:UpdateCinematicMode(DeltaTime) end
---@param NewValue float
---@param bFromUI boolean
---@return float
function AObserverChar:SetTimescale(NewValue, bFromUI) end
---@param NewValue float
---@param bNeedsAdjusting boolean
---@return float
function AObserverChar:SetRotateSpeedMultiplier(NewValue, bNeedsAdjusting) end
---@param NewValue float
---@return float
function AObserverChar:SetRollSpeedMultiplier(NewValue) end
---@param bNewValue boolean
function AObserverChar:SetRollRight(bNewValue) end
---@param bNewValue boolean
function AObserverChar:SetRollLeft(bNewValue) end
---@param pPanel UCinematicCameraControlPanel
function AObserverChar:SetOwnerPanel(pPanel) end
---@param NewValue float
---@return float
function AObserverChar:SetFOVSpeedMultiplier(NewValue) end
---@param bNewValue boolean
function AObserverChar:SetFOVOverridingRoll(bNewValue) end
---@param NewValue float
---@param bNeedsAdjusting boolean
---@return float
function AObserverChar:SetFlySpeedMultiplier(NewValue, bNeedsAdjusting) end
---@param NewValue float
function AObserverChar:SetFlySpeed(NewValue) end
---@param NewValue float
---@return float
function AObserverChar:SetFlyAccelerationMultiplier(NewValue) end
---@param NewValue float
function AObserverChar:SetFlyAcceleration(NewValue) end
---@param bNewValue boolean
function AObserverChar:SetEnginePaused(bNewValue) end
---@param bNewValue boolean
function AObserverChar:SetEnableDOF(bNewValue) end
---@param NewValue float
---@return float
function AObserverChar:SetDOFIntensity(NewValue) end
---@param NewValue float
---@return float
function AObserverChar:SetDOFFocusPlane(NewValue) end
---@param NewMode ECameraMode
function AObserverChar:SetCurrentCameraMode(NewMode) end
---@param NewValue float
---@return float
function AObserverChar:SetCraneSpeedMultiplier(NewValue) end
---@param bNewValue boolean
function AObserverChar:SetCameraFOVIncrease(bNewValue) end
---@param bNewValue boolean
function AObserverChar:SetCameraFOVDecrease(bNewValue) end
---@param NewValue float
---@param bAddValue boolean
---@param bNeedsScaling boolean
---@return float
function AObserverChar:SetCameraFOV(NewValue, bAddValue, bNeedsScaling) end
---@param NewValue FVector
function AObserverChar:SetBaseAttachedObjectOffset(NewValue) end
---@param newObj AActor
function AObserverChar:SetAttachedObject(newObj) end
---@param bNewValue boolean
function AObserverChar:SetAlreadySwappedCommand(bNewValue) end
---@param bNewValue boolean
function AObserverChar:SetAllowedToTakeInput(bNewValue) end
function AObserverChar:ServerStopObserving() end
---@param PlayerIndex int32
function AObserverChar:ServerSelectSpectatorTarget(PlayerIndex) end
---@param NewValue float
function AObserverChar:ServerDebugSetTimeScale(NewValue) end
function AObserverChar:ResetRoll() end
function AObserverChar:ResetFOV() end
---@param NewValue float
function AObserverChar:MulticastAllSetTimeScale(NewValue) end
---@return boolean
function AObserverChar:IsTriggersAndBumpersSwapped() end
---@return boolean
function AObserverChar:IsObserving() end
---@return boolean
function AObserverChar:IsEnginePaused() end
---@return boolean
function AObserverChar:IsCinematicMode() end
---@return boolean
function AObserverChar:IsAttachedToObject() end
---@param bPressed boolean
function AObserverChar:InputAction_TogglePauseEngine(bPressed) end
---@param bPressed boolean
function AObserverChar:InputAction_ToggleFastMode(bPressed) end
---@param bPressed boolean
function AObserverChar:InputAction_SwapTriggerAndBumperFunctions(bPressed) end
---@param bPressed boolean
function AObserverChar:InputAction_SwapRollAndFOV(bPressed) end
---@param bPressed boolean
function AObserverChar:InputAction_RollRight(bPressed) end
---@param bPressed boolean
function AObserverChar:InputAction_RollLeft(bPressed) end
---@param bPressed boolean
function AObserverChar:InputAction_IncreaseCameraRotateSpeed(bPressed) end
---@param bPressed boolean
function AObserverChar:InputAction_IncreaseCameraMoveSpeed(bPressed) end
---@param bPressed boolean
function AObserverChar:InputAction_FOVIncrease(bPressed) end
---@param bPressed boolean
function AObserverChar:InputAction_FOVDecrease(bPressed) end
---@param bPressed boolean
function AObserverChar:InputAction_DecreaseCameraRotateSpeed(bPressed) end
---@param bPressed boolean
function AObserverChar:InputAction_DecreaseCameraMoveSpeed(bPressed) end
---@param bPressed boolean
function AObserverChar:InputAction_CycleCurrentMode(bPressed) end
---@param bPressed boolean
function AObserverChar:InputAction_CraneUp(bPressed) end
---@param bPressed boolean
function AObserverChar:InputAction_CraneDown(bPressed) end
---@param bPressed boolean
function AObserverChar:InputAction_AttemptAttach(bPressed) end
---@return float
function AObserverChar:GetTimeScaleOverride() end
---@return float
function AObserverChar:GetSpeedMultiplierMax() end
---@return float
function AObserverChar:GetRotateSpeedMultiplier() end
---@return float
function AObserverChar:GetRollSpeedMultiplier() end
---@return boolean
function AObserverChar:GetRollRight() end
---@return boolean
function AObserverChar:GetRollLeft() end
---@return UCinematicCameraControlPanel
function AObserverChar:GetOwnerPanel() end
---@return FVector
function AObserverChar:GetMovementForwardVector() end
---@return boolean
function AObserverChar:GetIsAlreadySwappedCommand() end
---@return float
function AObserverChar:GetFOVSpeedMultiplier() end
---@return boolean
function AObserverChar:GetFOVOverridingRoll() end
---@return float
function AObserverChar:GetFlySpeedMultiplier() end
---@return float
function AObserverChar:GetFlyAccelerationMultiplier() end
---@return float
function AObserverChar:GetFastModeSpeedMultiplier() end
---@return float
function AObserverChar:GetDPadIncrementAmount() end
---@return boolean
function AObserverChar:GetDOFEnabled() end
---@return ECameraMode
function AObserverChar:GetCurrentCameraMode() end
---@return UCameraComponent
function AObserverChar:GetCurrentCamera() end
---@return float
function AObserverChar:GetCraneSpeedMultiplier() end
---@param Mode ECameraMode
---@return boolean
function AObserverChar:GetCanMoveCharacterForMode(Mode) end
---@param Mode ECameraMode
---@return boolean
function AObserverChar:GetCanMoveCameraForMode(Mode) end
---@return boolean
function AObserverChar:GetCameraFOVIncrease() end
---@return boolean
function AObserverChar:GetCameraFOVDecrease() end
---@return float
function AObserverChar:GetBaseFlySpeed() end
---@return float
function AObserverChar:GetBaseFlyAcceleration() end
---@return FVector
function AObserverChar:GetBaseAttachedObjectOffset() end
---@return float
function AObserverChar:GetAttachDistance() end
---@return boolean
function AObserverChar:GetAllowedToTakeInput() end
---@param bSet boolean
function AObserverChar:DoServerSetObserving(bSet) end
---@param PlayerIndex int32
function AObserverChar:DoServerSelectSpectatorTarget(PlayerIndex) end
---@param Direction float
function AObserverChar:DoRoll(Direction) end
---@param Value float
function AObserverChar:DoOrbitZoom(Value) end
---@param Value float
function AObserverChar:DoCrane(Value) end


---@class APageActor : AActor
---@field mpPageMesh UStaticMeshComponent
---@field mpTurnCurve UCurveVector
---@field mpFrontWidget UMeshWidgetComponent
---@field mpBackWidget UMeshWidgetComponent
---@field mpMaterialInstance UMaterialInstance
---@field mpDynFrontMaterialInstance UMaterialInstanceDynamic
---@field mpDynBackMaterialInstance UMaterialInstanceDynamic
APageActor = {}



---@class AParchmentAIController : AAIController
---@field mBlackboardComponent UBlackboardComponent
---@field mBehaviorTree_CDO UBehaviorTree
AParchmentAIController = {}



---@class AParchmentWeapon : AWeaponBase
---@field mpParchmentParticleSystem UParticleSystemComponent
---@field mSphereToSpawn TSubclassOf<AMagicSphere>
---@field mbServerDidPlaySenseEvilAudio boolean
---@field mpMagicSphere AMagicSphere
AParchmentWeapon = {}

---@return AMagicSphere
function AParchmentWeapon:DoServerSpawnMagicSphere() end
---@param pMagicSphere AMagicSphere
function AParchmentWeapon:DoServerSetMagicSphere(pMagicSphere) end
function AParchmentWeapon:DoServerPossessMagicSphere() end


---@class APatrolEvilSpawner : AActor
---@field mEvilList TArray<ECharacterType>
APatrolEvilSpawner = {}



---@class APhysicsPropBase : AActor
---@field mpSoundImpactComponent USoundImpactComponent
---@field mImpactCooldown float
---@field mbDespawnsAfterTouched boolean
---@field mBaseDespawnTime float
---@field mbHasBeenTouched boolean
---@field mTimeUntilDespawn float
---@field mpStaticMesh UStaticMeshComponent
APhysicsPropBase = {}

---@param pOverlappedComponent UPrimitiveComponent
---@param pOtherActor AActor
---@param pOtherComp UPrimitiveComponent
---@param OtherBodyIndex int32
---@param bFromSweep boolean
---@param SweepResult FHitResult
function APhysicsPropBase:ActorBeginOverlap(pOverlappedComponent, pOtherActor, pOtherComp, OtherBodyIndex, bFromSweep, SweepResult) end


---@class APickupBase : AActor
---@field mpMesh USkeletalMeshComponent
---@field mpGlintMesh USkeletalMeshComponent
---@field mpGlintOverlayMaterial UMaterialInstance
---@field mpDynamicGlintMaterial UMaterialInstanceDynamic
---@field mpBoxCollision UBoxComponent
---@field mpPingSphereCollision USphereComponent
---@field mPickupType EPickupType
---@field mPickupInfoStruct FPickupInfoStruct
---@field mpOwningSearchablePoint ASearchablePoint
---@field mpGrabbingTPChar ATPChar
---@field mpOwningTPChar ATPChar
---@field mbGlintEnabled boolean
---@field mpGoodSprite UBillboardComponent
---@field mpBadSprite UBillboardComponent
---@field mpLockoutChar ATPChar
---@field mLockoutTimeLeft float
---@field mbPositionIsValid boolean
---@field mRelevantNetConnections TArray<UNetConnection>
---@field mbAllowedToBePickedUp boolean
---@field mpPickupSkinDataAsset UPickupSkinDataAsset
---@field mPickupText FText
APickupBase = {}

function APickupBase:UpdatePingCollision() end
---@return boolean
function APickupBase:ShouldGlintBeDisabled() end
---@param pPoint ASearchablePoint
function APickupBase:SetOwningSearchablePoint(pPoint) end
---@param bOwnerNoSee boolean
function APickupBase:SetOwnerNoSee(bOwnerNoSee) end
---@param pSkin UItemDataAsset
function APickupBase:MulticastAllSetSkin(pSkin) end
---@return USphereComponent
function APickupBase:GetPingResponderSphere() end
---@return FText
function APickupBase:GetPickupTypeName() end
---@return EPickupType
function APickupBase:GetPickupType() end
---@param seasonalEventType ESeasonalEventType
---@return UPickupSkinDataAsset
function APickupBase:GetPickupSkinBySeasonalEventType(seasonalEventType) end
---@return FPickupInfoStruct
function APickupBase:GetPickupInfoStruct() end
---@return ATPChar
function APickupBase:GetOwningTPChar() end
---@return ASearchablePoint
function APickupBase:GetOwningSearchablePoint() end
---@return ATPChar
function APickupBase:GetLockoutChar() end
---@return ATPChar
function APickupBase:GetGrabbingTPChar() end
---@param pickupType EPickupType
---@param eventPickupType EEventPickupType
---@return UClass
function APickupBase:GetClassFromPickupType(pickupType, eventPickupType) end
---@return float
function APickupBase:GetCharge() end
---@return UBoxComponent
function APickupBase:GetBoxCollision() end
---@param DeltaTime float
function APickupBase:DoServerUpdateLockout(DeltaTime) end
---@param DeltaSeconds float
function APickupBase:DoServerUpdateCharge(DeltaSeconds) end
---@param newPickupInfo FPickupInfoStruct
function APickupBase:DoServerSetPickupInfoStruct(newPickupInfo) end
---@param pOwningTPChar ATPChar
function APickupBase:DoServerSetOwningTPChar(pOwningTPChar) end
---@param pTPChar ATPChar
function APickupBase:DoServerSetLockoutChar(pTPChar) end
---@param pGrabbingTPChar ATPChar
function APickupBase:DoServerSetGrabbingTPChar(pGrabbingTPChar) end
---@param charge float
function APickupBase:DoServerSetCharge(charge) end
---@param bNewValue boolean
function APickupBase:DoServerSetAllowedToBePickedUp(bNewValue) end
function APickupBase:DoServerRemovePickupFromWorld() end
function APickupBase:DoServerOnUsePickupPressed() end
function APickupBase:DoServerOnUsed() end
function APickupBase:DoServerOnPickupDeactivated() end
function APickupBase:DoServerOnPickupActivated() end
function APickupBase:DoServerOnPickedUp() end
function APickupBase:DoServerAddPickupToWorld() end
---@return boolean
function APickupBase:CanBeUsed() end
---@return boolean
function APickupBase:AllowedToBePickedUp() end


---@class APillsPickup : APickupBase
APillsPickup = {}

function APillsPickup:MulticastAllPlayUsePills() end
function APillsPickup:MulticastAllPlayPillsHeal() end


---@class APing : AActor
---@field mpPrimaryAkEmitter UExtAkComponent
---@field mStartingScale float
---@field mPingData FPingData
---@field mbSetVisibilityToHiddenOverride boolean
---@field mbHoveredOnClient boolean
---@field mpCurrentPlaneMesh UStaticMeshComponent
---@field mpPlaneMesh UStaticMesh
---@field mpLineMatInstDynamic UMaterialInstanceDynamic
---@field mpLineMatInst UMaterialInstance
---@field mbLineDisabled boolean
---@field mpSelectedIconTexture UTexture2D
---@field mpSelectedBackgroundBorder UTexture2D
---@field mpHoveredIndicatorTexture UTexture2D
---@field mpSelectedBackgroundFill UTexture2D
---@field mpOffscreenTexture UTexture2D
---@field mbShowProgressBar boolean
---@field mProgressPercentage float
APing = {}

function APing:UpdateVisibility() end
---@return boolean
function APing:ShouldShowProgressBar() end
---@return boolean
function APing:ShouldRenderPing() end
---@param Val boolean
function APing:SetVisibilityHiddenOverride(Val) end
---@param PingData FPingData
function APing:SetProperties(PingData) end
---@param Val UExtAkComponent
function APing:SetPrimaryAkEmitter(Val) end
---@param bNewValue boolean
function APing:SetHoveredOnClient(bNewValue) end
function APing:OnRep_PingData() end
---@return boolean
function APing:IsHoveredOnClient() end
---@return UTexture2D
function APing:GetSelectedIconTexture() end
---@return UTexture2D
function APing:GetSelectedBackgroundFill() end
---@return UTexture2D
function APing:GetSelectedBackgroundBorder() end
---@return FPingData
function APing:GetProperties() end
---@return float
function APing:GetProgressPercentage() end
---@return UExtAkComponent
function APing:GetPrimaryAkEmitter() end
---@return UTexture2D
function APing:GetOffscreenTexture() end
---@return UTexture2D
function APing:GetHoveredIndicatorTexture() end
---@param bShowProgressBar boolean
function APing:DoServerSetShowProgressBar(bShowProgressBar) end
---@param pSelectedIconTexture UTexture2D
function APing:DoServerSetSelectedIconTexture(pSelectedIconTexture) end
---@param pSelectedBackgroundFill UTexture2D
function APing:DoServerSetSelectedBackgroundFill(pSelectedBackgroundFill) end
---@param pSelectedBackgroundBorder UTexture2D
function APing:DoServerSetSelectedBackgroundBorder(pSelectedBackgroundBorder) end
---@param progressPercentage float
function APing:DoServerSetProgressPercentage(progressPercentage) end
---@param pOffscreenTexture UTexture2D
function APing:DoServerSetOffscreenTexture(pOffscreenTexture) end
---@param pHoveredIndicatorTexture UTexture2D
function APing:DoServerSetHoveredIndicatorTexture(pHoveredIndicatorTexture) end
function APing:DestroyPing() end


---@class APipeActor : ASplineTubeActorBase
---@field mpSpline USplineComponent
---@field mForwardAxis ESplineMeshAxis::Type
---@field mpPipeBaseMesh UStaticMesh
---@field mStartScale float
---@field mEndScale float
---@field mbEnableEndcaps boolean
---@field mpEndCapMesh UStaticMesh
---@field mpEndCapArray TArray<UStaticMeshComponent>
---@field mpSplineMeshComponentArray TArray<USplineMeshComponent>
---@field mAccessoryComponents TArray<FPipeAccessory>
---@field mpAccessoryComponentArray TArray<UStaticMeshComponent>
---@field mAccessoryDistanceArray TArray<float>
---@field mAccessoryRotationArray TArray<float>
---@field mAccessoryScaleArray TArray<float>
---@field mDistributedPipeAccessories TArray<FDistributedPipeAccessories>
---@field mpDistributedStaticMeshComponents TArray<UStaticMeshComponent>
---@field mNumberOfComponents int32
---@field isInit boolean
---@field bNeedsConstruction boolean
APipeActor = {}



---@class APointBase : AActor
---@field mpOwningTPChar ATPChar
---@field mPointState EPointState
---@field mpArrowComponent UArrowComponent
---@field mpCollisionComponent UBoxComponent
---@field mpZoneCylinderComponent UStaticMeshComponent
---@field mpCapsuleComponent UCapsuleComponent
---@field mpSplineComponent USplineComponent
---@field mServerOwnerRootMotionStartPos FVector
---@field mValidLocationColor FLinearColor
---@field mInvalidLocationColor FLinearColor
APointBase = {}

function APointBase:OnRep_PointState() end
---@return boolean
function APointBase:IsVacant() end
---@return boolean
function APointBase:IsActive() end
---@return boolean
function APointBase:HasOwnerBecomeInvalid() end
---@return FRotator
function APointBase:GetTargetApproachRotation() end
---@return USplineComponent
function APointBase:GetSplineComponent() end
---@return EPointState
function APointBase:GetPointState() end
---@return ATPChar
function APointBase:GetOwningTPChar() end
---@return FVector
function APointBase:GetCandidateSelectionPos() end
function APointBase:DoServerValidateRefs() end
---@param DeltaSeconds float
function APointBase:DoServerUpdatePointState(DeltaSeconds) end
---@param DeltaSeconds float
---@return boolean
function APointBase:DoServerUpdateApproachState(DeltaSeconds) end
---@param pointState EPointState
function APointBase:DoServerSetPointState(pointState) end
---@param StartPos FVector
function APointBase:DoServerSetOwnerRootMotionStartPos(StartPos) end
---@return FVector
function APointBase:DoServerGetOwnerRootMotionStartPos() end
function APointBase:DoServerDeactivate() end


---@class APowerupBase : AActor
---@field mpBoxCollision UBoxComponent
---@field mPowerupType EPowerupType
---@field mpPrimaryAkEmitter UExtAkComponent
---@field mCurrentMovementDirection FVector
---@field mbHasHitFloor boolean
---@field mLastFloorHitPosition FVector
APowerupBase = {}

function APowerupBase:UpdateVisuals() end
---@return UExtAkComponent
function APowerupBase:GetPrimaryAkEmitter() end
---@return EPowerupType
function APowerupBase:GetPowerupType() end
---@param powerupType EPowerupType
---@return UClass
function APowerupBase:GetClassFromPowerupType(powerupType) end
---@param DeltaTime float
function APowerupBase:DoServerUpdatePositioning(DeltaTime) end
---@param pOverlappedActor AActor
---@param pOtherActor AActor
function APowerupBase:DoServerActorBeginOverlap(pOverlappedActor, pOtherActor) end


---@class AProjectileWeaponBase : AWeaponBase
---@field mProjectileLoadTime float
---@field mbIsProjectileLoaded boolean
---@field mbIsLoadingProjectile boolean
---@field mbIsFiring boolean
---@field mNumShotsRemaining int32
---@field mbWantsToShoot boolean
---@field mbBeginUsingBuffer boolean
---@field mProjectileSpawnPosition FVector
---@field mbIsWaitingForLaunch boolean
---@field mServerPendingClientFireRequests int32
AProjectileWeaponBase = {}

---@return boolean
function AProjectileWeaponBase:WantsToShoot() end
---@return boolean
function AProjectileWeaponBase:UseAimMagnetism() end
---@return boolean
function AProjectileWeaponBase:ShouldBeginUsingBuffer() end
---@return boolean
function AProjectileWeaponBase:IsWaitingForLaunch() end
---@return boolean
function AProjectileWeaponBase:IsProjectileLoaded() end
---@return boolean
function AProjectileWeaponBase:IsLoadingProjectile() end
---@return boolean
function AProjectileWeaponBase:IsFiring() end
---@return float
function AProjectileWeaponBase:GetShotPercentageRemaining() end
---@return float
function AProjectileWeaponBase:GetProjectileLoadTime() end
---@return int32
function AProjectileWeaponBase:GetNumShotsRemaining() end
---@return int32
function AProjectileWeaponBase:GetMaxNumShots() end
---@return float
function AProjectileWeaponBase:GetBaseProjectileLoadTime() end
function AProjectileWeaponBase:DoServerStopUsingWeapon() end
---@param bNewValue boolean
function AProjectileWeaponBase:DoServerSetWantsToShoot(bNewValue) end
---@param NewValue float
function AProjectileWeaponBase:DoServerSetProjectileLoadTime(NewValue) end
---@param NewValue int32
function AProjectileWeaponBase:DoServerSetNumShotsRemaining(NewValue) end
---@param bSet boolean
function AProjectileWeaponBase:DoServerSetIsWaitingForLaunch(bSet) end
---@param bNewValue boolean
function AProjectileWeaponBase:DoServerSetIsProjectileLoaded(bNewValue) end
---@param bNewValue boolean
function AProjectileWeaponBase:DoServerSetIsLoadingProjectile(bNewValue) end
---@param bNewValue boolean
function AProjectileWeaponBase:DoServerSetIsFiring(bNewValue) end
---@param bNewValue boolean
function AProjectileWeaponBase:DoServerSetBeginUsingBuffer(bNewValue) end
function AProjectileWeaponBase:DoServerOnAnimNotify() end
function AProjectileWeaponBase:DoServerIncrementPendingClientFireRequests() end
---@return int32
function AProjectileWeaponBase:DoServerGetPendingClientFireRequests() end
function AProjectileWeaponBase:DoServerDecrementPendingClientFireRequests() end
function AProjectileWeaponBase:DoServerClearPendingClientFireRequests() end
---@param trans FTransform
function AProjectileWeaponBase:CreateAndLaunchProjectile(trans) end


---@class ARCCopter : ARemoteCharBase
---@field mpTargetCone UStaticMeshComponent
---@field mpRCCopterParticleSystemComponent UParticleSystemComponent
---@field mpPropCollisionComponent USphereComponent
---@field mActorRotation FVector
---@field mTargetBeamLocation FVector
---@field mbIsFiring boolean
---@field mbHitWall boolean
---@field mbIsHittingEvil boolean
---@field mpExplosionParticleSystem UParticleSystem
---@field mpRCCopterSkinDataAsset URCCopterSkinDataAsset
---@field mDeltaRotation FVector
---@field mpElectricBomb ARCCopterElectricity
---@field mAimTargetHitResult FHitResult
---@field mbServerUnequipOnRelease boolean
---@field mWarmupTime float
---@field mbIsWarmingUp boolean
---@field mpOwningWeapon ARCCopterWeapon
ARCCopter = {}

function ARCCopter:UpdateTargetCone() end
function ARCCopter:UpdateAimTargetHitResult() end
---@param Rotation FVector
function ARCCopter:ServerUpdateRotation(Rotation) end
function ARCCopter:ServerRequestStopPrimaryFire() end
function ARCCopter:ServerRequestBeginPrimaryFire() end
function ARCCopter:OnRep_TargetBeamLocation() end
function ARCCopter:MulticastAllStopWarmup() end
function ARCCopter:MulticastAllStopBeam() end
function ARCCopter:MulticastAllStartWarmup() end
function ARCCopter:MulticastAllStartBeam() end
---@return boolean
function ARCCopter:IsHittingEvil() end
---@return ARCCopterWeapon
function ARCCopter:GetOwningWeapon() end
---@param startPoint FVector
---@return FVector
function ARCCopter:GetDirectionToAimTarget(startPoint) end
---@return float
function ARCCopter:GetCurrentRange() end
---@return float
function ARCCopter:GetBaseRange() end
---@return boolean
function ARCCopter:DoServerUnequipOnRelease() end
---@param NewValue float
function ARCCopter:DoServerSetWarmupTime(NewValue) end
---@param bNewValue boolean
function ARCCopter:DoServerSetWarmingUp(bNewValue) end
---@param bSet boolean
function ARCCopter:DoServerSetUnequipOnRelease(bSet) end
function ARCCopter:DoServerOnHitByEvil() end


---@class ARCCopterAIController : AAIController
---@field mBlackboardComponent UBlackboardComponent
---@field mBehaviorTree_CDO UBehaviorTree
ARCCopterAIController = {}



---@class ARCCopterArc : AActor
---@field mpSplineComponent USplineComponent
---@field mpSplineMeshComponent USplineMeshComponent
---@field mpPointLightComponent UPointLightComponent
---@field mpEmissionParticleSystemComponent UParticleSystemComponent
---@field mpSplineStaticMesh UStaticMesh
---@field mpSplineMaterialInstance UMaterialInstanceDynamic
---@field mpOriginActor ARCCopterElectricity
---@field mArcColor FLinearColor
---@field mHitLocation FVector
---@field mHitNormal FVector
---@field mStartTangent FVector
---@field mTargetHitLocation FVector
---@field mArcLifetime float
---@field mPlayRate float
---@field mTimePast float
---@field mMaxDistance float
---@field mMaxArcRotation float
---@field mbArcHasSpawned boolean
---@field mbIsFocused boolean
---@field mbDidTraceHit boolean
---@field mbEnableParticles boolean
---@field mSpawnIndex int32
ARCCopterArc = {}



---@class ARCCopterElectricity : AActor
---@field mpSphereComponent USphereComponent
---@field mpSplineMeshComponent USplineMeshComponent
---@field mpRocketsComponent USplineInterpComponent
---@field mpEmissionParticleSystemComponent UParticleSystemComponent
---@field mTargetHitLocation FVector
---@field mCurrentStartTangentWorld FVector
---@field mbIsSplineDataDirty boolean
---@field mbIsFiring boolean
---@field mbHitEvil boolean
---@field mbHitSurface boolean
---@field mbEnableParticles boolean
---@field mbIsWaitingForTargetUpdate boolean
---@field mbIsWarmingUp boolean
---@field mpRCCopterSkinDataAsset URCCopterSkinDataAsset
---@field mpFlameMineSkinDataAsset UFlameMineSkinDataAsset
ARCCopterElectricity = {}

---@param Transform FTransform
function ARCCopterElectricity:OnRocketExpired(Transform) end
---@param Transform FTransform
function ARCCopterElectricity:OnRocketArrived(Transform) end


---@class ARCCopterWeapon : AWeaponBase
---@field mCopterToSpawn TSubclassOf<ARCCopter>
---@field mpRCCopter ARCCopter
ARCCopterWeapon = {}

function ARCCopterWeapon:DoServerSpawnRCCopter() end


---@class ARayGunWeapon : AProjectileWeaponBase
---@field mRayGunProjectileClass TSubclassOf<ARaygunProjectile>
---@field mServerQueuedRaygunHits TArray<AFPChar>
---@field mpRayGunSkin URayGunSkinDataAsset
ARayGunWeapon = {}

---@param trans FTransform
function ARayGunWeapon:ServerCreateAndLaunchProjectile(trans) end
function ARayGunWeapon:PlayFireAkEvent() end
function ARayGunWeapon:MulticastAllPlayFireSound() end
---@return TSubclassOf<ARaygunProjectile>
function ARayGunWeapon:GetRaygunProjectileToSpawn() end
---@return float
function ARayGunWeapon:GetProjectileBaseLifetime() end
function ARayGunWeapon:ClientRequestFireWeapon() end


---@class ARaygunProjectile : AActor
---@field mpCollisionComponent USphereComponent
---@field mpStaticMeshComponent UStaticMeshComponent
---@field mpProjectileMovementComponent UProjectileMovementComponent
---@field mpTrailParticleSystemComp UParticleSystemComponent
---@field mpExplosionParticleSystemComp UParticleSystemComponent
---@field mpDecalComponent UDecalComponent
---@field mpDamageSphereComponent USphereComponent
---@field mpPrimaryAkEmitter UExtAkComponent
---@field mpPerceptionStimuliComponent UAIPerceptionStimuliSourceComponent
---@field mpRayGunSkin URayGunSkinDataAsset
---@field mInitialLocation FVector
---@field mCurrentBeamLength float
---@field mbHasHit boolean
---@field mbServerHitEvil boolean
---@field mbCleaningUp boolean
---@field mAuthorityLifetime float
---@field mbShouldBounce boolean
---@field mNumberOfBounces int32
---@field mTimeCleaningUp float
---@field mProjectileIndex int32
---@field mServerLastBounceLocation FVector
ARaygunProjectile = {}

---@param pOverlappedComponent UPrimitiveComponent
---@param pOtherActor AActor
---@param pOtherComp UPrimitiveComponent
---@param OtherBodyIndex int32
---@param bFromSweep boolean
---@param SweepResult FHitResult
function ARaygunProjectile:OnComponentBeginOverlap(pOverlappedComponent, pOtherActor, pOtherComp, OtherBodyIndex, bFromSweep, SweepResult) end
function ARaygunProjectile:MulticastAllStopWhistleSound() end
---@param Level float
function ARaygunProjectile:MulticastAllSetVolume(Level) end
function ARaygunProjectile:MulticastAllPlayWhistleSound() end
function ARaygunProjectile:MulticastAllClearVisibility() end
---@return boolean
function ARaygunProjectile:IsCleaningUp() end
---@return boolean
function ARaygunProjectile:HasHit() end
---@return FVector
function ARaygunProjectile:GetInitialLocation() end
function ARaygunProjectile:DoServerSetHitEvil() end
---@return boolean
function ARaygunProjectile:DoServerHasHitEvil() end
---@return FVector
function ARaygunProjectile:DoServerGetClientReportStartCheckLocation() end
---@param DeltaTime float
function ARaygunProjectile:DoAuthorityUpdateLifetime(DeltaTime) end
---@param bNewValue boolean
function ARaygunProjectile:DoAuthoritySetShouldBounce(bNewValue) end
---@param Index int32
function ARaygunProjectile:DoAuthoritySetProjectileIndex(Index) end
---@param LifeTime float
function ARaygunProjectile:DoAuthoritySetLifetime(LifeTime) end
---@param bSet boolean
function ARaygunProjectile:DoAuthoritySetHasHit(bSet) end
---@param bSet boolean
function ARaygunProjectile:DoAuthoritySetCleaningUp(bSet) end
---@param HitComp UPrimitiveComponent
---@param OtherActor AActor
---@param OtherComp UPrimitiveComponent
---@param NormalImpulse FVector
---@param Hit FHitResult
function ARaygunProjectile:DoAuthorityOnHit(HitComp, OtherActor, OtherComp, NormalImpulse, Hit) end
---@return float
function ARaygunProjectile:DoAuthorityGetLifetime() end
---@param pHitEvil AFPChar
function ARaygunProjectile:DoAuthorityExplode(pHitEvil) end
function ARaygunProjectile:DoAuthorityExpire() end
function ARaygunProjectile:DoAuthorityCheckScreams() end
function ARaygunProjectile:DoAuthorityBeginCleanup() end


---@class ARaygunProjectileHitEffects : AActor
---@field mpExplosionParticleSystemComp UParticleSystemComponent
---@field mpDecalComponent UDecalComponent
---@field mpPrimaryAkEmitter UExtAkComponent
---@field mpRayGunSkin URayGunSkinDataAsset
---@field mpOwningTPChar ATPChar
ARaygunProjectileHitEffects = {}



---@class ARemoteCharBase : ABaseChar
---@field mRemoteCharState ERemoteCharState
---@field mpOwningTPChar ATPChar
---@field mpCameraBoom USpringArmComponent
---@field mpCameraComponent UCameraComponent
---@field mpPerceptionStimuliSource UAIPerceptionStimuliSourceComponent
---@field mpEvilCollisionComponent UCapsuleComponent
---@field mCurrentLifespan float
---@field mpPointLightComponent UPointLightComponent
---@field mpPrimaryAkEmitter UExtAkComponent
---@field mRemoteCharType ERemoteCharType
---@field mStateTimer float
---@field mbServerIsZoningEvil boolean
---@field mFrontEndRotation FRotator
ARemoteCharBase = {}

---@param DeltaSeconds float
function ARemoteCharBase:UpdateRemoteCharState(DeltaSeconds) end
function ARemoteCharBase:UpdateAkEmitters() end
function ARemoteCharBase:ServerRequestBeginSecondaryFire() end
function ARemoteCharBase:ServerRequestBeginAction1() end
function ARemoteCharBase:ServerOnClientViewTargetBlendComplete() end
function ARemoteCharBase:ServerDebugToggleSubdued() end
function ARemoteCharBase:ServerDebugToggleProne() end
function ARemoteCharBase:ServerDebugToggleCowering() end
function ARemoteCharBase:ServerDebugKill() end
function ARemoteCharBase:ServerDebugDisintegrate() end
---@param life float
---@param bSetUndead boolean
function ARemoteCharBase:ServerDebugBecomeAlive(life, bSetUndead) end
function ARemoteCharBase:RefreshSkinSwitch() end
function ARemoteCharBase:PlaySeekingEndAudio() end
function ARemoteCharBase:PlayExplosionEffects() end
function ARemoteCharBase:PlayExplosionAudio() end
function ARemoteCharBase:OnReactedToEvilScream() end
function ARemoteCharBase:MulticastAllPlaySeekingEnd() end
function ARemoteCharBase:MulticastAllPlayExplosion() end
function ARemoteCharBase:MulticastAllCowerShake() end
---@return boolean
function ARemoteCharBase:IsInFrontEnd() end
---@return boolean
function ARemoteCharBase:IsClientFinishedViewBlend() end
---@return ERemoteCharType
function ARemoteCharBase:GetRemoteCharType() end
---@return ERemoteCharState
function ARemoteCharBase:GetRemoteCharState() end
---@return FRotator
function ARemoteCharBase:GetFrontEndRotation() end
---@return float
function ARemoteCharBase:GetCurrentLifespan() end
---@param DeltaSeconds float
function ARemoteCharBase:DoServerUpdateZoningEvil(DeltaSeconds) end
---@param DeltaSeconds float
function ARemoteCharBase:DoServerUpdateRemoteCharState(DeltaSeconds) end
---@param bSet boolean
function ARemoteCharBase:DoServerSetZoningEvil(bSet) end
---@param Timer float
function ARemoteCharBase:DoServerSetStateTimer(Timer) end
---@param desiredState ERemoteCharState
function ARemoteCharBase:DoServerSetRemoteCharState(desiredState) end
function ARemoteCharBase:DoServerRelease() end
function ARemoteCharBase:DoServerOnOwningTPCharSet() end
---@return boolean
function ARemoteCharBase:DoServerIsZoningEvil() end
function ARemoteCharBase:DoServerDetonate() end
---@param bImmediately boolean
function ARemoteCharBase:DoServerCancel(bImmediately) end
---@param bSet boolean
function ARemoteCharBase:DoClientSetFinishedViewBlend(bSet) end
---@return float
function ARemoteCharBase:CalculateAcceleration() end
---@return boolean
function ARemoteCharBase:AllowedToSwitchViewTargetToThis() end


---@class AReplayPC : ABasePC
---@field mpViewTargetTPChar ATPChar
---@field mbIsSpeedUpPressed boolean
---@field mbIsSlowDownPressed boolean
---@field mbSkipForwardPressed boolean
---@field mbSkipBackwardPressed boolean
---@field mSkipTimer float
---@field mbUsingFreeCam boolean
---@field mbIsDilationModifiedByTriggers boolean
---@field mPauseFrameDelay uint8
---@field mSavedTimeDilation float
AReplayPC = {}

---@return boolean
function AReplayPC:IsUsingFreeCam() end


---@class AResonanceClone : AActor
---@field mpPostProcessComponent UPostProcessComponent
---@field mTeenViewNiagaraSystemPath FSoftObjectPath
---@field mInitialDelay float
---@field mCloneParameters FResonanceCloneParameters
---@field mpEvilViewNiagaraComponent UNiagaraComponent
---@field mpTeenViewNiagaraComponent UNiagaraComponent
---@field mbCreatedIndicator boolean
AResonanceClone = {}

---@param pComponent UNiagaraComponent
function AResonanceClone:OnTeenViewSystemFinished(pComponent) end
---@param pComponent UNiagaraComponent
function AResonanceClone:OnEvilViewSystemFinished(pComponent) end


---@class AResurrectPickup : APickupBase
---@field mWispsNiagaraSystem TSoftObjectPtr<UNiagaraSystem>
---@field mpWispsNiagaraComponent UNiagaraComponent
---@field mpPrimaryAkEmitter UExtAkComponent
AResurrectPickup = {}



---@class ARoomFrame : AActor
---@field mRoomName FText
---@field mRoomColor FLinearColor
---@field mRoomAttributes TArray<FRoomFrameAttribute>
---@field mFogPresetName FName
---@field mpDefaultMeshAsset UStaticMesh
---@field mpDefaultMaterialAsset UMaterial
---@field mpTextBillboardMaterial UMaterialInstance
ARoomFrame = {}



---@class ARoomFrameCollider : AActor
---@field mpStaticMeshComponent UStaticMeshComponent
---@field mCollisionType EColliderType
---@field mpCustomColliderMesh UStaticMesh
---@field mpBoxMesh UStaticMesh
---@field mpSphereMesh UStaticMesh
---@field mpCapsuleMesh UStaticMesh
---@field mpOwner ARoomFrame
ARoomFrameCollider = {}



---@class ARoomFrameManager : AActor
ARoomFrameManager = {}


---@class ARoomVolume : ACustomCullDistanceVolume
---@field mRoomName FText
---@field mRoomAttributes TArray<FRoomFrameAttribute>
ARoomVolume = {}

---@param pRoomFrame ARoomFrame
function ARoomVolume:SpawnRoomVolumesFromRoomFrame(pRoomFrame) end
---@param pOverlappedComponent UPrimitiveComponent
---@param pOtherActor AActor
---@param pOtherComp UPrimitiveComponent
---@param OtherBodyIndex int32
function ARoomVolume:OnComponentEndOverlap(pOverlappedComponent, pOtherActor, pOtherComp, OtherBodyIndex) end
---@param pOverlappedComponent UPrimitiveComponent
---@param pOtherActor AActor
---@param pOtherComp UPrimitiveComponent
---@param OtherBodyIndex int32
---@param bFromSweep boolean
---@param SweepResult FHitResult
function ARoomVolume:OnComponentBeginOverlap(pOverlappedComponent, pOtherActor, pOtherComp, OtherBodyIndex, bFromSweep, SweepResult) end


---@class ASearchableEventObject : ASearchablePoint
---@field mbIsSetToLocalPlayer boolean
---@field mLocalPlayerLightBrightness float
---@field mOtherPlayerLightBrightness float
---@field mPlayerColors TArray<FColor>
---@field mPlayerLightMultipliers TArray<float>
---@field mpPivotComponent USceneComponent
---@field mSearchableEventObjectType ESearchableEventObjectType
---@field mpPostLootSkelMesh USkeletalMesh
---@field mSearchableSpawnIndex int32
ASearchableEventObject = {}

---@param pPostLootSkelMesh USkeletalMesh
function ASearchableEventObject:SetPostLootSkelMesh(pPostLootSkelMesh) end
function ASearchableEventObject:OnRep_SearchableSpawnIndex() end
function ASearchableEventObject:MulticastAllOnLooted() end
---@return int32
function ASearchableEventObject:GetSpawnIndex() end
---@return ESeasonalEventType
function ASearchableEventObject:GetSeasonalEventType() end
---@return ESearchableEventObjectType
function ASearchableEventObject:GetSearchableEventObjectType() end
---@return USkeletalMesh
function ASearchableEventObject:GetPostLootSkelMesh() end
---@return EEventPickupType
function ASearchableEventObject:GetEventPickupType() end
---@param pManager USearchablePointManagerComponent
function ASearchableEventObject:DoServerSetupSpawnedBP(pManager) end
---@param Index int32
function ASearchableEventObject:DoServerSetSpawnIndex(Index) end
---@param EventType ESeasonalEventType
---@return ASearchableEventObject
function ASearchableEventObject:DoServerReplaceWithEventSpecificClass(EventType) end


---@class ASearchableEventObject_Easter : ASearchableEventObject
---@field mbContainsJackInTheBox boolean
---@field mWispsNiagaraSystem TSoftObjectPtr<UNiagaraSystem>
---@field mpWispsNiagaraComponent UNiagaraComponent
---@field mTeenEasterNiagaraSystemPath FSoftObjectPath
---@field mpTeenEasterNiagaraComponent UNiagaraComponent
---@field mEasterNiagaraColor FColor
---@field mpNiagaraPivot USceneComponent
---@field mBasketMaterials TArray<UMaterialInstance>
---@field mPaperMaterials TArray<UMaterialInstance>
ASearchableEventObject_Easter = {}

function ASearchableEventObject_Easter:MulticastAllPlaySearchFinished() end


---@class ASearchableEventObject_Halloween : ASearchableEventObject
---@field mpOwnerPS AGameplayPS
---@field mpParticleSystemComponent UParticleSystemComponent
---@field mbDebugOverrideIsActiveAsLocal boolean
---@field mpLocalTPCharParticleSystem UParticleSystem
---@field mpOtherTPCharParticleSystem UParticleSystem
---@field mpPointLightComponent UPointLightComponent
ASearchableEventObject_Halloween = {}

function ASearchableEventObject_Halloween:UpdateSearchableParticleEffects() end
---@param PlayerIndex int32
---@param Brightness float
function ASearchableEventObject_Halloween:SetPointLightIntensity(PlayerIndex, Brightness) end
---@param pParticleSystemComponent UParticleSystemComponent
function ASearchableEventObject_Halloween:SetParticleSystem(pParticleSystemComponent) end
---@return UPointLightComponent
function ASearchableEventObject_Halloween:GetPointLightComponent() end
---@param Color FColor
---@return int32
function ASearchableEventObject_Halloween:GetPlayerNumberByColor(Color) end
---@return UParticleSystemComponent
function ASearchableEventObject_Halloween:GetParticleSystemComponent() end
---@return AGameplayPS
function ASearchableEventObject_Halloween:GetOwnerPS() end
---@return UParticleSystem
function ASearchableEventObject_Halloween:GetOtherTPCharParticleSystem() end
---@return UParticleSystem
function ASearchableEventObject_Halloween:GetLocalTPCharParticleSystem() end
---@param pOwnerPS AGameplayPS
function ASearchableEventObject_Halloween:DoServerSetOwnerPS(pOwnerPS) end
---@param bIsActiveAsLocal boolean
function ASearchableEventObject_Halloween:DoServerSetDebugOverrideIsActiveAsLocal(bIsActiveAsLocal) end
---@return boolean
function ASearchableEventObject_Halloween:DebugOverrideIsActiveAsLocal() end


---@class ASearchableEventObject_Holiday : ASearchableEventObject
---@field mbContainsJackInTheBox boolean
---@field mWispsNiagaraSystem TSoftObjectPtr<UNiagaraSystem>
---@field mpWispsNiagaraComponent UNiagaraComponent
ASearchableEventObject_Holiday = {}

function ASearchableEventObject_Holiday:MulticastAllPlayPresentFinished() end
function ASearchableEventObject_Holiday:MulticastAllPlayJackInTheBox() end
function ASearchableEventObject_Holiday:MulticastAllPlayEffects() end
function ASearchableEventObject_Holiday:DoServerSetContainsJackInTheBox() end


---@class ASearchableLockbox : ASearchablePoint
---@field mLockboxWispsNiagaraSystem TSoftObjectPtr<UNiagaraSystem>
---@field mpLockboxWispsNiagaraComponent UNiagaraComponent
---@field mpGameplayTasksComponent UGameplayTasksComponent
---@field mbTeenDeathSetup boolean
---@field mCurrentAuraAttenuationRampTime float
---@field mpAuraAkEmitter UExtAkComponent
ASearchableLockbox = {}

function ASearchableLockbox:OnRep_AuraAttenuationChanged() end
function ASearchableLockbox:MulticastAllPlayLockboxFinish() end
function ASearchableLockbox:MulticastAllPlayDisintegrationEffect() end
function ASearchableLockbox:MulticastAllPlayAuraLoop() end
---@param bCollisionEnabled boolean
function ASearchableLockbox:MulticastAllEnableCollision(bCollisionEnabled) end
function ASearchableLockbox:DoServerSimulateTeenDeath() end
function ASearchableLockbox:DoServerHideLockboxOnFirstTimeSpawning() end
function ASearchableLockbox:DoServerBecomeInteractable() end


---@class ASearchablePoint : APointBase
---@field mAdrenalineDropChance float
---@field mPillsDropChance float
---@field mWalkieDropChance float
---@field mNoiseMakerDropChance float
---@field mSmokeBombDropChance float
---@field mBookOfDeadDropChance float
---@field mMinTimeToRecharge float
---@field mMaxTimeToRecharge float
---@field mBaseSearchPuzzles int32
---@field mpSkelMeshComponent USkeletalMeshComponent
---@field mpPrimaryAkEmitter UExtAkComponent
---@field mSpawnedPickupLocation FVector
---@field mSpawnPickupRotation FRotator
---@field mSearchableType ESearchableType
---@field mpManager USearchablePointManagerComponent
---@field mPickupToGive EPickupType
---@field mpSpawnedPickup APickupBase
---@field mbOneTimeUsage boolean
---@field mbReadyImmediately boolean
---@field mServerSearchableRechargeTime float
---@field mbIsBeingSearched boolean
---@field mCurrentSearchableState ESearchableState
---@field mCurrentSearchableStateTime float
---@field mCurrentLockoutTime float
ASearchablePoint = {}

function ASearchablePoint:UpdateVisibility() end
function ASearchablePoint:UpdateRenderCustomDepth() end
---@return boolean
function ASearchablePoint:TutorialAbleToTakePickup() end
---@param pManager USearchablePointManagerComponent
function ASearchablePoint:SetManager(pManager) end
---@param Min float
---@param Max float
function ASearchablePoint:OverrideMinAndMaxSearchableRechargeTimes(Min, Max) end
function ASearchablePoint:MulticastAllStopActiveSearchLoop() end
function ASearchablePoint:MulticastAllPlayActiveSearchLoop() end
---@return boolean
function ASearchablePoint:IsUsable() end
---@return boolean
function ASearchablePoint:IsSearching() end
---@param pSearcher ATPChar
---@return boolean
function ASearchablePoint:IsSearcherValid(pSearcher) end
---@return boolean
function ASearchablePoint:IsOneTimeUsage() end
---@return boolean
function ASearchablePoint:IsInUsedState() end
---@return boolean
function ASearchablePoint:IsInPostSearchState() end
---@return boolean
function ASearchablePoint:IsAbleToBeSearched() end
---@return FRotator
function ASearchablePoint:GetSpawnPickupRotation() end
---@return FVector
function ASearchablePoint:GetSpawnPickupLocation() end
---@return ESearchableType
function ASearchablePoint:GetSearchableType() end
---@return float
function ASearchablePoint:GetSearchableStateTime() end
---@return float
function ASearchablePoint:GetSearchablePreSearchSetupTime() end
---@return FRotator
function ASearchablePoint:GetRewardReferenceRotation() end
---@return UExtAkComponent
function ASearchablePoint:GetPrimaryAkEmitter() end
---@return FVector
function ASearchablePoint:GetPingAnchorLocation() end
---@return EPickupType
function ASearchablePoint:GetPickupToGive() end
---@return float
function ASearchablePoint:GetMinTimeToRecharge() end
---@return USkeletalMeshComponent
function ASearchablePoint:GetMesh() end
---@return float
function ASearchablePoint:GetMaxTimeToRecharge() end
---@return float
function ASearchablePoint:GetLockoutSetupTime() end
---@return ESearchableState
function ASearchablePoint:GetCurrentSearchableState() end
---@return float
function ASearchablePoint:GetCurrentLockoutTime() end
---@return int32
function ASearchablePoint:GetBaseSearchPuzzles() end
function ASearchablePoint:DoUpdateGlint() end
---@param DeltaTime float
function ASearchablePoint:DoServerUpdateUsability(DeltaTime) end
function ASearchablePoint:DoServerSetUsed() end
---@param newState ESearchableState
function ASearchablePoint:DoServerSetSearchableState(newState) end
---@param Value float
function ASearchablePoint:DoServerSetSearchableRechargeTime(Value) end
---@param Type EPickupType
function ASearchablePoint:DoServerSetPickupToGive(Type) end
---@param Value float
function ASearchablePoint:DoServerSetMinTimeToRecharge(Value) end
---@param Value float
function ASearchablePoint:DoServerSetMaxTimeToRecharge(Value) end
---@param Value boolean
function ASearchablePoint:DoServerSetIsOneTimeUsage(Value) end
---@param pPickup APickupBase
function ASearchablePoint:DoServerSetDroppedPickupActor(pPickup) end
---@param NewValue float
function ASearchablePoint:DoServerSetCurrentSearchableStateTime(NewValue) end
---@param NewValue float
function ASearchablePoint:DoServerSetBaseSearchableLockoutTime(NewValue) end
---@param pTPChar ATPChar
function ASearchablePoint:DoServerGiveSearchableReward(pTPChar) end
---@return float
function ASearchablePoint:DoServerGetSearchableRechargeTime() end
---@param Type EPickupType
function ASearchablePoint:DoServerForceGivePickup(Type) end
function ASearchablePoint:DoServerDetermineNextPickup() end
function ASearchablePoint:DoServerDebugForceFillSearchable() end
function ASearchablePoint:DoServerBeginSearching() end
---@param pTPChar ATPChar
function ASearchablePoint:DoServerAwardSearchScore(pTPChar) end
---@param pOwningTPChar ATPChar
function ASearchablePoint:DoServerActivate(pOwningTPChar) end
---@return boolean
function ASearchablePoint:AllowedToGivePickup() end
---@return boolean
function ASearchablePoint:AbleToTakePickup() end


---@class ASearchableVendingMachine : ASearchablePoint
---@field mpEvilAttackCollision UCapsuleComponent
---@field mMaxBrightness float
---@field mTimeToFlickerBeforeReady float
---@field mFlickerRate float
---@field mFlickerVariation float
---@field mpLockoutParticleSystem UNiagaraSystem
---@field mLightComponents TMap<ULightComponent, float>
---@field mbPlayedResetSound boolean
---@field mWorldStartRotation FRotator
---@field mMeshStartWorldLocation FVector
ASearchableVendingMachine = {}

function ASearchableVendingMachine:MulticastAllPlayVendingMachineReset() end
function ASearchableVendingMachine:MulticastAllPlayVendingMachineHit() end
function ASearchableVendingMachine:MulticastAllPlayVendingMachineDrinkDrop() end
function ASearchableVendingMachine:MulticastAllPlayVendingMachineCoinDrop() end
---@param HitLocation FVector
---@param hitDirection FVector
function ASearchableVendingMachine:MulticastAllHitByEvil(HitLocation, hitDirection) end


---@class ASearchableWasteBasket : ASearchablePoint
---@field mbTippingOver boolean
---@field mpSearcherTPChar ATPChar
---@field mpPivotComponent USceneComponent
ASearchableWasteBasket = {}

function ASearchableWasteBasket:MulticastAllPlayWasteBasketFinish() end
---@return boolean
function ASearchableWasteBasket:IsTippingOver() end
---@return USceneComponent
function ASearchableWasteBasket:GetPivot() end
---@return float
function ASearchableWasteBasket:GetDesiredTipAngle() end
---@param NewValue ATPChar
function ASearchableWasteBasket:DoServerSetSearcherChar(NewValue) end
---@param bNewValue boolean
function ASearchableWasteBasket:DoServerSetIsTippingOver(bNewValue) end
---@return ATPChar
function ASearchableWasteBasket:DoServerGetSearcherChar() end


---@class ASeasonalEventCenterpiecePoint : APointBase
---@field mpOwningEventCenterpiece ASeasonalEventCenterpiece_Base
ASeasonalEventCenterpiecePoint = {}

---@return boolean
function ASeasonalEventCenterpiecePoint:IsTPCharAllowedToManuallyLeave() end
---@return ESeasonalEventType
function ASeasonalEventCenterpiecePoint:GetSeasonalEventType() end
---@return ASeasonalEventCenterpiece_Base
function ASeasonalEventCenterpiecePoint:GetOwningEventCenterpiece() end
function ASeasonalEventCenterpiecePoint:DoServerUpdateTPChars() end
---@param pCenterpiece ASeasonalEventCenterpiece_Base
function ASeasonalEventCenterpiecePoint:DoServerSetOwningEventCenterpiece(pCenterpiece) end
function ASeasonalEventCenterpiecePoint:DoServerBeginInteraction() end
---@param pOwningTPChar ATPChar
function ASeasonalEventCenterpiecePoint:DoServerActivate(pOwningTPChar) end


---@class ASeasonalEventCenterpiece_Base : AActor
---@field mSeasonalEventType ESeasonalEventType
---@field mpSkeletalMeshComponent USkeletalMeshComponent
---@field mChildPoints TArray<ASeasonalEventCenterpiecePoint>
---@field mpPrimaryAkEmitter UExtAkComponent
ASeasonalEventCenterpiece_Base = {}

---@param pTPChar ATPChar
---@return boolean
function ASeasonalEventCenterpiece_Base:TPCharAllowedToInteract(pTPChar) end
---@return boolean
function ASeasonalEventCenterpiece_Base:IsTPCharAllowedToManuallyLeave() end
---@return ESeasonalEventType
function ASeasonalEventCenterpiece_Base:GetSeasonalEventType() end
---@param EventType ESeasonalEventType
---@return ASeasonalEventCenterpiece_Base
function ASeasonalEventCenterpiece_Base:DoServerReplaceSelfWithEventSpecificClass(EventType) end
function ASeasonalEventCenterpiece_Base:DoServerOnTPCharBeginInteractionAnimation() end
---@param pTPChar ATPChar
function ASeasonalEventCenterpiece_Base:DoServerOnTPCharBeginInteraction(pTPChar) end
---@param pPoint ASeasonalEventCenterpiecePoint
function ASeasonalEventCenterpiece_Base:DoServerAddChildPoint(pPoint) end


---@class ASeasonalEventCenterpiece_Holiday : ASeasonalEventCenterpiece_Base
---@field mOrnamentSockets TArray<USceneComponent>
---@field mPlacedOrnamentActors TArray<AActor>
---@field mTreeDecorationLayers TArray<UStaticMeshComponent>
---@field mCurrentOrnamentSocketIndex int32
---@field mSpawnedEvilOrnamentActors TArray<ASeasonalEvent_EvilOrnament>
---@field mContributingChars TArray<ATPChar>
---@field mpEvilCollisionComponent USphereComponent
---@field mEvilOrnamentAnimationDataList TArray<FEvilOrnamentAnimationData>
---@field mDecorationLayerDissolveAlphaList TArray<float>
---@field mpIconMeshComponent UStaticMeshComponent
---@field mpNiagaraSystemComponent UNiagaraComponent
---@field mpIconBorderMeshComponent UStaticMeshComponent
ASeasonalEventCenterpiece_Holiday = {}

function ASeasonalEventCenterpiece_Holiday:UpdateRenderCustomDepth() end
function ASeasonalEventCenterpiece_Holiday:UpdateIconFacing() end
---@param DeltaSeconds float
function ASeasonalEventCenterpiece_Holiday:UpdateDecorationLayerEffects(DeltaSeconds) end
function ASeasonalEventCenterpiece_Holiday:MulticastAll_PlayOrnamentOnUsed_Evil() end
function ASeasonalEventCenterpiece_Holiday:MulticastAll_PlayOrnamentOnUsed() end
function ASeasonalEventCenterpiece_Holiday:MulticastAll_PlayOrnamentOnUse() end
function ASeasonalEventCenterpiece_Holiday:MulticastAll_PlayOrnamentOnPlace() end
function ASeasonalEventCenterpiece_Holiday:MulticastAll_PlayMusicLoop() end
function ASeasonalEventCenterpiece_Holiday:MulticastAll_PlayCenterpieceCompleted() end
---@param newData FEvilOrnamentAnimationData
function ASeasonalEventCenterpiece_Holiday:MulticastAll_AddEvilOrnamentAnimationData(newData) end
---@return boolean
function ASeasonalEventCenterpiece_Holiday:IsCompleted() end
---@return boolean
function ASeasonalEventCenterpiece_Holiday:HasRoomForAdditionalOrnament() end
function ASeasonalEventCenterpiece_Holiday:DoServerUpdateOverlapChecks() end
---@param DeltaSeconds float
function ASeasonalEventCenterpiece_Holiday:DoServerUpdateEvilOrnamentAnimations(DeltaSeconds) end
---@param pOrnamentClass UClass
function ASeasonalEventCenterpiece_Holiday:DoServerOnOrnamentClassAdded(pOrnamentClass) end
---@param pOrnamentClass AActor
function ASeasonalEventCenterpiece_Holiday:DoServerOnOrnamentActorAdded(pOrnamentClass) end
---@param pFPChar AFPChar
function ASeasonalEventCenterpiece_Holiday:DoServerOnFPCharEntered(pFPChar) end


---@class ASeasonalEventObject_Holiday_JackInTheBox : AActor
---@field mpJackInTheBoxMontage UAnimMontage
---@field mpSkeletalMeshComp USkeletalMeshComponent
ASeasonalEventObject_Holiday_JackInTheBox = {}



---@class ASeasonalEvent_EvilOrnament : AActor
---@field mpSkeletalMesh USkeletalMeshComponent
---@field mCurrentLifetime float
---@field mbHideOrnamentMesh boolean
---@field mShrinkStartScale float
---@field mLocalShrinkTime float
---@field mbPlayedDisappearParticles boolean
---@field mpOrnamentDisappearParticles UParticleSystem
ASeasonalEvent_EvilOrnament = {}

---@return boolean
function ASeasonalEvent_EvilOrnament:ShowOrnamentString() end
function ASeasonalEvent_EvilOrnament:PlayOrnamentDisappearAnimation() end
---@param DeltaSeconds float
function ASeasonalEvent_EvilOrnament:DoServerUpdateLifetime(DeltaSeconds) end
---@param NewValue float
function ASeasonalEvent_EvilOrnament:DoServerSetOrnamentLifetime(NewValue) end
---@param bNewValue boolean
function ASeasonalEvent_EvilOrnament:DoServerSetHideOrnamentMesh(bNewValue) end
---@return boolean
function ASeasonalEvent_EvilOrnament:AllowedToShowOrnamentMesh() end


---@class AServerBeaconClient : AOnlineBeaconClient
AServerBeaconClient = {}

---@param Info FP2PMatchmakingInfo
function AServerBeaconClient:ServerSetMatchmakingInfo(Info) end
---@param code FString
function AServerBeaconClient:ClientJoinLobbyWithCode(code) end
function AServerBeaconClient:ClientJoinLobby() end
function AServerBeaconClient:ClientJoinGame() end


---@class AServerBeaconHost : AOnlineBeaconHost
---@field mbIsInitialized boolean
AServerBeaconHost = {}



---@class AServerBeaconHostObject : AOnlineBeaconHostObject
AServerBeaconHostObject = {}


---@class ASingleShotParticleSystem : AActor
---@field mpSphere USphereComponent
---@field mpParticleSystemComponent UParticleSystemComponent
---@field mMaxLifetime float
---@field mEffectVisibility FEffectVisibility
ASingleShotParticleSystem = {}

---@param FinishedComponent UParticleSystemComponent
function ASingleShotParticleSystem:OnParticleSystemFinished(FinishedComponent) end


---@class ASmartTeenController : ATrainingTeenAIControllerV2
ASmartTeenController = {}


---@class ASmokeBombActor : AActor
---@field mpMeshComponent USkeletalMeshComponent
---@field mpCapsuleInnerCollider UCapsuleComponent
---@field mpSmokeEmittingNiagara UNiagaraSystem
---@field mpDisintegrationGameplayTasksComponent UGameplayTasksComponent
---@field disintegrationTask UGameplayTask_PlayMaterialEffects
---@field mpPrimaryAkEmitter UExtAkComponent
---@field mIsEvilInSmokeRadius boolean
---@field mbCleaningUp boolean
---@field mpOwningTPChar ATPChar
---@field mEffectiveTimeRemaining float
---@field mNiagaraCleaningTimeRemaining float
---@field mpExplosionNiagaraInst UNiagaraComponent
ASmokeBombActor = {}

function ASmokeBombActor:TryHideSmokeVisualEffectOnTeen() end
---@param Duration float
function ASmokeBombActor:PlayDisintegrationEffect(Duration) end
function ASmokeBombActor:MulticastAllStopSmokeEmittingLoop() end
function ASmokeBombActor:MulticastAllStopNiagara() end
function ASmokeBombActor:MulticastAllStartExtinguish() end
function ASmokeBombActor:MulticastAllSpawnExplosionNiagara() end
function ASmokeBombActor:MulticastAllPlaySmokeEmittingLoop() end
function ASmokeBombActor:MulticastAllPlaySmokeBombExplode() end
function ASmokeBombActor:MulticastAllPlaySelfCleaningDisintegration() end
---@return UExtAkComponent
function ASmokeBombActor:GetPrimaryAkEmitter() end
---@return USkeletalMeshComponent
function ASmokeBombActor:GetMesh() end
---@return boolean
function ASmokeBombActor:GetIsOutOfCharges() end
---@return boolean
function ASmokeBombActor:GetIsCleaningUp() end
---@return float
function ASmokeBombActor:GetEffectiveTimeRemaining() end
---@return float
function ASmokeBombActor:GetBaseEffectiveTime() end
---@param pNewValue ATPChar
function ASmokeBombActor:DoServerSetOwningTPChar(pNewValue) end
---@param NewValue float
function ASmokeBombActor:DoServerSetEffectiveTimeRemaining(NewValue) end
function ASmokeBombActor:DoServerInflictBlindToEvilInRadius() end
---@return ATPChar
function ASmokeBombActor:DoServerGetOwningTPChar() end


---@class ASmokeBombPickup : APickupBase
ASmokeBombPickup = {}

function ASmokeBombPickup:MulticastAllPlayOnUse() end


---@class ASmokeTestCameraLocation : ACameraActor
ASmokeTestCameraLocation = {}


---@class ASpawnGroupManager : AActor
---@field mpStaticMesh UStaticMeshComponent
---@field mpSpawnGroupArray TArray<FSpawnGroup>
---@field mSpawnGroupType ESpawnGroupType
---@field mbDebugKeepAllItems boolean
---@field mLockBoxSpawningContext FLockBoxSpawningContext
ASpawnGroupManager = {}

function ASpawnGroupManager:SpawnLockboxOnTeenDead() end
---@param bNewValue boolean
function ASpawnGroupManager:SetDebugKeepAllItems(bNewValue) end
function ASpawnGroupManager:SelectRandom() end
---@return boolean
function ASpawnGroupManager:IsEvilPropSpawnGroup() end
---@param pickupType EPickupType
---@return ESpawnGroupType
function ASpawnGroupManager:GetSpawnGroupTypeFromPickupType(pickupType) end
---@return ESpawnGroupType
function ASpawnGroupManager:GetSpawnGroupType() end
---@return TArray<FSpawnGroup>
function ASpawnGroupManager:GetSpawnGroupArray() end
---@return int32
function ASpawnGroupManager:GetLeastUsedSpawnGroupIndex() end
function ASpawnGroupManager:DetermineEventSpecificGroupCounts() end
---@param pActor AActor
function ASpawnGroupManager:DestroyActorAndKillDependencies(pActor) end
---@return boolean
function ASpawnGroupManager:DebugKeepAllItems() end
---@param numByType TArray<int32>
function ASpawnGroupManager:AddPickupsToPool(numByType) end


---@class ASpawnableInteractableProp : AInteractablePropBase
---@field mLaunchImpulse FVector
---@field mLifetime float
---@field mbAutoDestroy boolean
---@field mpStaticMeshComponent UStaticMeshComponent
ASpawnableInteractableProp = {}

---@return boolean
function ASpawnableInteractableProp:DestroyInteractableProp() end


---@class ASpinningVHS : AActor
---@field mpMeshComponent UStaticMeshComponent
---@field mSpinSpeed float
---@field mSwaySpeed float
---@field mSwayDistance float
ASpinningVHS = {}



---@class ASplineTubeActorBase : AActor
---@field mpRoot USceneComponent
---@field mbGenerateCollision boolean
---@field mbUseGeneratedStaticMesh boolean
---@field mbStaticMeshLoaded boolean
---@field mThreshold int32
---@field mNumberOfStaticMeshes int32
---@field mpSplineMeshComponents TArray<UPrimitiveComponent>
---@field mbStaticMeshGenerated boolean
---@field mNumberOfGeneratedStaticMeshes int32
---@field mpGeneratedMeshArray TArray<UStaticMesh>
---@field mpGeneratedMeshComponentArray TArray<UStaticMeshComponent>
---@field mGeneratedObjectNameArray TArray<FSoftObjectPath>
---@field mEnvironmentDir FString
---@field mMergeSettings FMeshMergingSettings
ASplineTubeActorBase = {}



---@class AStagingGM : AGameMode
---@field mCanWeStart boolean
---@field mAllPlayerControllers TArray<APlayerController>
---@field mConnectedIDs TArray<int32>
---@field mTimeoutCountdown float
---@field mbServerTravelBegun boolean
---@field mStagingExpiryTime float
AStagingGM = {}

function AStagingGM:StorePlayerController() end
---@param uid uint32
function AStagingGM:ServerSubmitConnectionUID(uid) end
function AStagingGM:ServerEveryoneUpdate() end
---@param pPlayerController APlayerController
---@param pCharacterClass UClass
function AStagingGM:RespawnPlayer(pPlayerController, pCharacterClass) end
---@param pController APlayerController
function AStagingGM:ReportPlayerDisconnect(pController) end
function AStagingGM:LaunchTheGame() end
---@param pPlayerController APlayerController
---@param pCharacterClass UClass
---@param SpawnTransform FTransform
function AStagingGM:DoRespawnPlayer(pPlayerController, pCharacterClass, SpawnTransform) end
---@param DeltaSeconds float
function AStagingGM:CheckIfStagingIsExpired(DeltaSeconds) end


---@class AStagingPC : ABasePC
---@field mPlayerInfo FNetPlayerInfoStruct
AStagingPC = {}

---@param uid int32
function AStagingPC:ServerSubmitConnectingUID(uid) end
function AStagingPC:ServerSpawnCharacter() end
function AStagingPC:ClientRequestUID() end


---@class AStagingSession : AGameSession
AStagingSession = {}


---@class AStaticShieldWeapon : AWeaponBase
---@field mpCharacterVFXContainer USceneComponent
---@field mpWeaponVFXContainer USceneComponent
---@field mpShieldParticleSystemComponent UParticleSystemComponent
---@field mpShieldChargeLevelParticleSystem UParticleSystemComponent
---@field mpRimParticleSystemComponent UParticleSystemComponent
---@field mLightningSphereTemplates TArray<UStaticMesh>
---@field mLightningMeshComponents TArray<UStaticMeshComponent>
---@field mpShieldMeshComponent UStaticMeshComponent
---@field mpCollisionComponent USphereComponent
---@field mbIsBeingCharged boolean
---@field mbShielding boolean
---@field mbFiring boolean
---@field mTargetBeamLocation FVector
---@field mTimeEnergizing float
---@field mEnergyPoints int32
---@field mMaxEnergyPoints int32
---@field mEnergyProgress float
---@field mTimeActive float
---@field mLightningTimer float
---@field mMeshFadeOutTimer float
---@field mbHasGeneratedShieldActivationEvent boolean
---@field mbPowered boolean
---@field mTimeUntilPowered float
---@field mbDamagingMimic boolean
AStaticShieldWeapon = {}

function AStaticShieldWeapon:StopStaticShieldZapAkEvent() end
function AStaticShieldWeapon:StopStaticShieldPoweredAkEvent() end
function AStaticShieldWeapon:StopStaticShieldActiveAkEvent() end
function AStaticShieldWeapon:PlayStaticShieldActiveAkEvent() end
function AStaticShieldWeapon:OnRep_DamagingMimic() end
function AStaticShieldWeapon:MulticastAllStopStaticShieldZap() end
function AStaticShieldWeapon:MulticastAllStopStaticShieldPoweredOn() end
function AStaticShieldWeapon:MulticastAllStopStaticShieldPowered() end
function AStaticShieldWeapon:MulticastAllPlayStaticShieldZap() end
function AStaticShieldWeapon:MulticastAllPlayStaticShieldPoweredOn() end
function AStaticShieldWeapon:MulticastAllPlayStaticShieldPoweredOff() end
function AStaticShieldWeapon:MulticastAllPlayStaticShieldPowered() end
function AStaticShieldWeapon:MulticastAllPlayStaticShieldEnergized() end
---@return boolean
function AStaticShieldWeapon:IsDamagingMimic() end
---@return boolean
function AStaticShieldWeapon:IsBeingCharged() end
---@return float
function AStaticShieldWeapon:GetTimeEnergizing() end
---@return float
function AStaticShieldWeapon:GetTimeActive() end
---@return int32
function AStaticShieldWeapon:GetMaxEnergyPoints() end
---@return float
function AStaticShieldWeapon:GetEnergyProgress() end
---@return int32
function AStaticShieldWeapon:GetEnergyPoints() end
---@return float
function AStaticShieldWeapon:GetEnergizeTime() end
---@return float
function AStaticShieldWeapon:GetActiveSpeedRampFactor() end
---@param maxEnergyPoints int32
function AStaticShieldWeapon:DoServerSetMaxEnergyPoints(maxEnergyPoints) end
---@param energyProgress float
function AStaticShieldWeapon:DoServerSetEnergyProgress(energyProgress) end
---@param Val boolean
function AStaticShieldWeapon:DoServerSetBeingCharged(Val) end
function AStaticShieldWeapon:DoServerDebugTogglePower() end


---@class AStationBase : AActor
---@field mbIsAvailable boolean
---@field mDamageTypeCrafted EDamageType
---@field mBaseFailGlowTime float
---@field mPlacementMaxRadius float
---@field mPlacementMinRadius float
---@field mFailGlowTimer float
---@field mNumOfCraftingChars int32
---@field mNumOfCraftPoints int32
---@field mpPrimaryAkEmitter UExtAkComponent
---@field mpDummyRoot USceneComponent
---@field mpStationParticlesComponent UNiagaraComponent
---@field mpDamageTypeAssets TMap<EDamageType, FStationDamageTypeAssets>
---@field mpIconMeshComponent UStaticMeshComponent
---@field mpIconBorderMeshComponent UStaticMeshComponent
---@field mbIsPlayingCraftingLoop boolean
---@field mbGlowing boolean
---@field mpBaseStaticMeshComponent UStaticMeshComponent
---@field mpSpotLightComponent USpotLightComponent
---@field mpPingCapsuleCollision UCapsuleComponent
---@field mLastLocallySelectedWeaponType EWeaponTypeEnum
---@field mGeneratedCraftPoints TArray<ACraftPoint>
---@field mbIsIncorporealMasterIndicatorActive boolean
AStationBase = {}

function AStationBase:UpdateRenderCustomDepth() end
function AStationBase:UpdateIconVisibility() end
---@param DeltaTime float
function AStationBase:UpdateGlow(DeltaTime) end
function AStationBase:UpdateAudio() end
function AStationBase:StopCraftingSwitchAkEvent() end
---@param NewValue EWeaponTypeEnum
function AStationBase:SetLastLocallySelectedWeaponType(NewValue) end
---@param bNewValue boolean
function AStationBase:SetIsIncorporealMasterIndicatorActive(bNewValue) end
---@param bGlowing boolean
function AStationBase:SetGlowing(bGlowing) end
function AStationBase:PlayCraftingSwitchAkEvent() end
---@param pTPChar ATPChar
---@param DamageType EDamageType
function AStationBase:MulticastAll_WeaponCompleted(pTPChar, DamageType) end
---@param Properties FStencilProperties
---@param col FLinearColor
---@return FStencilProperties
function AStationBase:ModifyStencilPropertiesWithColor(Properties, col) end
---@param pTPChar ATPChar
---@return boolean
function AStationBase:IsUsingCraftingStation(pTPChar) end
---@return boolean
function AStationBase:IsIncorporealMasterIndicatorActive() end
---@param pTPChar ATPChar
---@return boolean
function AStationBase:IsCancellingWeapon(pTPChar) end
---@return boolean
function AStationBase:IsAvailable() end
---@return boolean
function AStationBase:IsAnyoneUsingStation() end
---@return boolean
function AStationBase:HasVacantCraftPoint() end
---@return boolean
function AStationBase:HasFailureGlow() end
---@param pTPChar ATPChar
---@param weaponTypeEnum EWeaponTypeEnum
---@return float
function AStationBase:GetTotalCraftingTime(pTPChar, weaponTypeEnum) end
---@return float
function AStationBase:GetStationAudibleDistance() end
---@param pTPChar ATPChar
---@return EWeaponTypeEnum
function AStationBase:GetRequestedWeaponForCharacter(pTPChar) end
---@return UExtAkComponent
function AStationBase:GetPrimaryAkEmitter() end
---@param pTPChar ATPChar
---@return EWeaponTypeEnum
function AStationBase:GetPreviousRequestedWeaponForCharacter(pTPChar) end
---@param pTPChar ATPChar
---@param wepType EWeaponTypeEnum
---@return float
function AStationBase:GetPercentCraftingComplete(pTPChar, wepType) end
---@param pTPChar ATPChar
---@return float
function AStationBase:GetPercentCancelComplete(pTPChar) end
---@return int32
function AStationBase:GetNumberOfPlayersUsingThisStation() end
---@return EWeaponTypeEnum
function AStationBase:GetLastLocallySelectedWeaponType() end
---@param stationState EStationState
---@return FLinearColor
function AStationBase:GetIconColorForStationState(stationState) end
---@param stationState EStationState
---@return FLinearColor
function AStationBase:GetIconBorderColorForStationState(stationState) end
---@return EDamageType
function AStationBase:GetDamageTypeCrafted() end
---@param pTPChar ATPChar
---@param percentageFraction float
---@return boolean
function AStationBase:GetCurrentDistanceAudible(pTPChar, percentageFraction) end
---@return TArray<ATPChar>
function AStationBase:GetCharsCraftingHere() end
---@return float
function AStationBase:GetBaseFailGlowTime() end
---@param DeltaTime float
function AStationBase:DoServerUpdateFailGlowTimer(DeltaTime) end
---@param bVal boolean
function AStationBase:DoServerSetAvailable(bVal) end
---@param pTPChar ATPChar
function AStationBase:DoServerOnRequestStopUsingStation(pTPChar) end
---@param pTPChar ATPChar
function AStationBase:DoServerOnRequestStartUsingStation(pTPChar) end
---@param pTPChar ATPChar
---@return float
function AStationBase:DoServerFailStation(pTPChar) end
---@param pTPChar ATPChar
---@param wepType EWeaponTypeEnum
function AStationBase:DoServerChangeRequestedWeaponType(pTPChar, wepType) end


---@class AStationSpawnerBase : AActor
AStationSpawnerBase = {}


---@class ASticker : ADecalActor
---@field mpMaterialInstance UMaterialInstance
---@field mpMaskedMaterialInstance UMaterialInstance
---@field mStickerData FStickerData
---@field mpDecalPlane UStaticMeshComponent
---@field mLifetime float
ASticker = {}

function ASticker:OnRep_StickerData() end


-- Teen base object
---@class ATPChar : ABaseChar
---@field mbAnimDebugModeEnabled boolean
---@field mpFaceAdditive UAnimSequence
---@field mpDebugTeenAnimInstance UClass
---@field mbIsPlayingHealLoop boolean
---@field mbIsPlayingReviveLoop boolean
---@field mbIsPlayingResurrectLoop boolean
---@field mTimeUntilWeaponDiscarded float
---@field mTimeAssisting float
---@field mTimeUntilManualTransform float
---@field mbJustWoundedEvil boolean
---@field mEquippedWeapon AWeaponBase
---@field mpTeenClothingComponent UTeenClothingComponent
---@field mpEmoteComponent UEmoteComponent
---@field mpStickerComponent UStickerComponent
---@field mpSpectralComponent USpectralComponent
---@field mStatusComponents TArray<UBaseStatusComponent>
---@field mpCustomizableEffectsComponent UCustomizableEffectsComponent
---@field mpPerceptionStimuliSource UAIPerceptionStimuliSourceComponent
---@field mpCraftStationManagerComponent UCraftStationManagerComponent
---@field mpPlayerTipsComponent UPlayerTipsComponent
---@field mInjuredNiagaraEffectPath FSoftObjectPath
---@field mAdrenalineEffectContext FAdrenalineEffectContext
---@field mCoweringTimeRemaining float
---@field mCoweringTime float
---@field mSubduedTimeRemaining float
---@field mSubduedTime float
---@field mSearchPuzzlesCompleted int32
---@field mTimeBeingHealed float
---@field mTimeHealing float
---@field mpTPCharCurrentlyHealing ATPChar
---@field mHealableAllies TArray<ATPChar>
---@field mHealedByAllies TArray<ATPChar>
---@field mCloseByTeensLastFrame TArray<ATPChar>
---@field mTimeBeingRevived float
---@field mTimeReviving float
---@field mpTPCharCurrentlyReviving ATPChar
---@field mRevivableAllies TArray<ATPChar>
---@field mRevivedByAllies TArray<ATPChar>
---@field mTimeBeingResurrected float
---@field mTimeResurrecting float
---@field mpTPCharCurrentlyResurrecting ATPChar
---@field mResurrectableAllies TArray<ATPChar>
---@field mResurrectedByAllies TArray<ATPChar>
---@field mbIsUndead boolean
---@field mbWasResurrected boolean
---@field mCrouchTimer float
---@field mTimeSpentLanding float
---@field mBlindStatus FStatusProperty
---@field mCrouchToggleDisableTimer float
---@field mbIsDisintegrating boolean
---@field mbIsReintegrating boolean
---@field mbIsWeaponHolstered boolean
---@field mDisintegrationTimeRemaining float
---@field mReintegrationTimeRemaining float
---@field mbAreMaterialsDynamic boolean
---@field mbAurasEnabled boolean
---@field mbServerDropPool boolean
---@field mpLastOverlapping ATPChar
---@field mOverlapTime float
---@field mDebugCharacterWeaponType EWeaponTypeEnum
---@field mDrawDebugKeyBindings boolean
---@field mbInvincible boolean
---@field mIsBledOut boolean
---@field mIsKilled boolean
---@field mIsDead boolean
---@field mbIsTricked boolean
---@field mbFrostbit boolean
---@field mbFeastedOn boolean
---@field mIsThrowing boolean
---@field mLifeRemaining float
---@field mMaxLife float
---@field mHitsByEvil int32
---@field mIsIncubating boolean
---@field mIsInjured boolean
---@field mIsTransforming boolean
---@field mbInProneAnimSequence boolean
---@field mbInKilledAnimSequence boolean
---@field mIsProne boolean
---@field mbIsPlacingPickup boolean
---@field mpStationBeingUsed AStationBase
---@field mpLastPropUsed AActor
---@field mJustTransformed boolean
---@field mbIsPooling boolean
---@field mBleedIntervalIncrease float
---@field mServerBleedTime float
---@field mpTeenSpectralChar ATeenSpectralChar
---@field mEchoLocatedDistance float
---@field mpServerPossessedFlameMineChar AFlameMineChar
---@field mTargetBoomArmLength float
---@field mTargetBoomArmPosition FVector
---@field mBoomArmTransitionDuration float
---@field mBoomArmTransitionTime float
---@field mMinigameBoostTimeRemaining float
---@field mMinigameBoostTime float
---@field mMinigamePenaltyTimeRemaining float
---@field mMinigamePenaltyTime float
---@field mAudioTravelDistanceToActiveEvil float
---@field mCraftPoints TArray<ACraftPoint>
---@field mpActiveCraftPoint ACraftPoint
---@field mVaultPoints TArray<AVaultPoint>
---@field mpActiveVaultPoint AVaultPoint
---@field mFallingVaultType EVaultType
---@field mDollMasterTraps TArray<ADollMasterTrap>
---@field mpActiveDollMasterTrap ADollMasterTrap
---@field mPositionAdjustingTimer float
---@field mpSpectatorTarget AGameplayPS
---@field mHidePoints TArray<AHidePoint>
---@field mpActiveHidePoint AHidePoint
---@field mEnergyPoints TArray<AEnergyPoint>
---@field mpActiveEnergyPoint AEnergyPoint
---@field mMedKitPoints TArray<AMedKitPoint>
---@field mpActiveMedKitPoint AMedKitPoint
---@field mSearchablePoints TArray<ASearchablePoint>
---@field mpActiveSearchablePoint ASearchablePoint
---@field mSeasonalEventCenterpiecePoints TArray<ASeasonalEventCenterpiecePoint>
---@field mpActiveSeasonalEventCenterpiecePoint ASeasonalEventCenterpiecePoint
---@field mSpawnedDemonSwordProjectiles TArray<ADemonSwordProjectile>
---@field mSpawnedRaygunProjectiles TArray<ARaygunProjectile>
---@field mServerRaygunHitsQueued uint8
---@field mRaygunProjectileHitEffectClass TSubclassOf<ARaygunProjectileHitEffects>
---@field mpCharacterParticleEffectsComponent UParticleSystemComponent
---@field mpWalkieEffectComponent UWalkieEffectComponent
---@field mpCharacterStatusEffectsComponent UStatusEffectsComponent
---@field mActiveRoomFrameAttributes TMap<FName, float>
---@field mTimeDead float
---@field mTimeInjured float
---@field mTimeSinceLastBeenHit float
---@field mTimeSinceCraftFail float
---@field mTimeSinceLoudCraftFail float
---@field mbFailedCrafting boolean
---@field mbCraftingComplete boolean
---@field mTimeSinceEvilTransform float
---@field mTimeSinceEvilStun float
---@field mTimeSinceEvilBecomeCorporeal float
---@field mTimeSinceLastEradicatorScan float
---@field mpBarTimingMinigame UBarTimingMinigame
---@field mpRingAligningMinigame URingAligningMinigame
---@field mpRotatorMinigame URotatorMinigame
---@field mpAugmentManager UAugmentManager
---@field mAccelerationBoostTime float
---@field mWeaponPower float
---@field mpHeldPickup APickupBase
---@field mHeldPickupInfoStruct FPickupInfoStruct
---@field mUsingPickupType EPickupType
---@field mActivePickupType EPickupType
---@field mEvilWheelTransformType ECharacterType
---@field mbEvilWheelSelectingRandomTransformType boolean
---@field mCharacterType ECharacterType
---@field mWeaponTypeUsing EWeaponTypeEnum
---@field mWeaponTypeCrafting EWeaponTypeEnum
---@field mWeaponTypeEquippedLastFrame EWeaponTypeEnum
---@field mCurrentAnimSpawnableType EAnimSpawnableType
---@field mEradicatorTargetedSurgeStunTimeRemaining float
---@field mpWeaponToAnimSpawnableItem UDataTable
---@field mIsFemale boolean
---@field mpTPCameraBoom USpringArmComponent
---@field mpTPCameraComponent UCameraComponent
---@field mpInteractionCylinderComponent UStaticMeshComponent
---@field mpSpawnerCapsuleComponent UCapsuleComponent
---@field mVaultMontage UAnimMontage
---@field mHideMontages TArray<FHideMontageData>
---@field mpPostProcessComponent UPostProcessComponent
---@field mpProjectionParticleComponent UParticleSystemComponent
---@field mpIdleWarningParticleComponent UParticleSystemComponent
---@field mpStaticShieldParticleSystem UParticleSystem
---@field mpStaticShieldParticleComponent UParticleSystemComponent
---@field mpCrossDamageBlockParticleSystem UParticleSystem
---@field mpCrossDamageBlockParticleComponent UParticleSystemComponent
---@field mpMotionSentinelComponent UMotionSentinelComponent
---@field mpWalkieMaterial UMaterial
---@field mpResurrectRingParticleSystem UParticleSystem
---@field mpResurrectionParticleComponent UParticleSystemComponent
---@field mpTargetingCapsuleComponent UCapsuleComponent
---@field mChaseActiveTimeRemaining float
---@field mArmedActiveChaseActiveTimeRemaining float
---@field mbAlarmed boolean
---@field mbIsTensionMuted boolean
---@field mpDecalManager UDecalManager
---@field mpFootstepManager UFootstepManager
---@field mpTensionManager UTensionManager
---@field mpSurfaceImpactManager USurfaceImpactManager
---@field mpActiveResonanceClone AResonanceClone
---@field mGrabbingPickupType EPickupType
---@field mPickupHeightType EPickupHeightType
---@field mpGrabbingPickup APickupBase
---@field mbIsInPickupInteractingSequence boolean
---@field mHealPulseTime float
---@field mAdrenalinePulseTime float
---@field mpSelectedPickup APickupBase
---@field mpSelectedCraftPoint ACraftPoint
---@field mpSelectedMedKitPoint AMedKitPoint
---@field mpSelectedVaultPoint AVaultPoint
---@field mpSelectedHidePoint AHidePoint
---@field mpSelectedEnergyPoint AEnergyPoint
---@field mpSelectedReviveChar ATPChar
---@field mpSelectedHealChar ATPChar
---@field mpSelectedResurrectChar ATPChar
---@field mpSelectedTradePickupChar ATPChar
---@field mpSelectedDollMasterTrap ADollMasterTrap
---@field mpSelectedSearchablePoint ASearchablePoint
---@field mpSelectedSeasonalEventCenterpiecePoint ASeasonalEventCenterpiecePoint
---@field mBloodMaterialCounter int32
---@field mDollMasterRevealedTimeRemaining float
---@field mActiveAction EActiveActionType
---@field mbFrozen boolean
---@field mpAuraMaterialInstance UMaterialInstance
---@field mpDoubleVisionMaterial UMaterialInstance
---@field mpCowerMaterialInstance UMaterialInstance
---@field mpSpiritWorldMaterialInstance UMaterialInstance
---@field mpEradicatorElectricPostProcessMaterial UMaterialInstance
---@field mpTVIntroEffectActor ATVIntroEffect
---@field mDoubleVisionTimer float
---@field mSpiritWorldTransitionTimer float
---@field mbIsMainMenuIdling boolean
---@field mbIsMainMenuRotationLocked boolean
---@field mLobbyPoseIndex int32
---@field mLobbyPoseVariant int32
---@field mbLobbyPoseFlavor boolean
---@field mpPrimaryAkEmitter UExtAkComponent
---@field mpWhisperAkEmitter UExtAkComponent
---@field mpTensionAkEmitter UExtAkComponent
---@field mpUnattenuatedAkEmitter UExtAkComponent
---@field mpEmoteAkEmitter UExtAkComponent
---@field mCowerPostProcessEffectStrength float
---@field mEradicatorElectricPostProcessEffectStrength float
---@field mEradicatorElectricPreviousTime float
---@field mEffigyOfAgonyModifier float
---@field mAgonyTimeRemaining float
---@field mbHasAgonyDebuff boolean
---@field mMotivatedTier int32
---@field mbInFallingAnimSequence boolean
---@field mFallingSequenceFallbackTimer float
---@field mbInWeaponShootingAnimSequence boolean
---@field mbIsPlayingResurrectOutro boolean
---@field mTradePickupAllies TArray<ATPChar>
---@field mpTradePickupReceiverChar ATPChar
---@field mpTradePickupGiverChar ATPChar
---@field mbCoweringFromHowl boolean
---@field mFollowingEvilSpectrals TArray<AInteractablePropBase>
---@field mLifeLost float
---@field mServerChaseDuration float
---@field mServerChaseEndedType EChaseEndedType
---@field mServerChaseEndedWeaponTypeStruck EWeaponTypeEnum
---@field mbPlayingUpperBodyPickupMontage boolean
---@field mbIsWalkieIdling boolean
---@field mCurrentStaggerTime float
---@field mBaseStaggerTime float
---@field mToadStaggerShake TSubclassOf<UMatineeCameraShake>
---@field mbDeployingNoisemaker boolean
---@field mDeployingNoisemakerTimeRemaining float
---@field mpNoisemakerClass UClass
---@field mpSmokeBombClass UClass
---@field mpHolySlingshotBlindedVingettePPMaterial UMaterialInstance
---@field mEradicatorScannedRevealTimeRemaining float
---@field mpMimicOwner AFPChar
---@field mbIsDispersedInvisible boolean
---@field mClientAnomalyCharacterSwitchIgnoreFallingFrames int32
---@field mbIsSpeakingInFrontEnd boolean
---@field mbHasActivePing boolean
---@field mpVoiceChatIndicatorMesh UStaticMeshComponent
---@field mMolotovSpeedBoostTime float
---@field mMolotovSpeedBoostTimeRemaining float
---@field mTeenHideInSmokeTime float
---@field mCurrentBlindPPWeight float
---@field mpWeaponSkinManagerComponent UWeaponSkinManagerComponent
---@field mbTutorialUseCustomManualRotation boolean
---@field mTutorialCustomManualRotation FRotator
---@field mTutorialCustomRotationSpeed float
---@field mbTutorialObjectVolumeEnabled boolean
---@field mbTutorialBloodTrailTimeOverrideEnabled boolean
---@field mTutorialBloodTrailTimeOverride float
---@field mbTutorialOverrideMovementAllowed boolean
---@field mbTutorialOverrideRun boolean
---@field mbTutorialIsImmortal boolean
---@field mpTutorialAIController TSubclassOf<AAIController>
---@field mTimeSinceLastAction1 float
---@field mFrontEndEmoteData FEmoteData
---@field mActiveEmoteIndex int32
---@field mbIsEmoting boolean
---@field mEmoteLockInPlaceTimer float
---@field mbQueuedToLeaveSearchable boolean
---@field mEradicatorOverchargeTime float
---@field mbHealingAction1Pressed boolean
---@field mIndividualPlayerRevealTPCharList TArray<ATPChar>
---@field mIndividualPlayerRevealTimeList TArray<float>
---@field mEnergizedMoveSpeedBoostTime float
---@field mDemonSwordSpeedBoostTime float
---@field mSpeedBoostByEvilTimeRemaining float
---@field mBaseSpeedBoostByEvilTime float
---@field mSpeedBoostByEvilMultiplier float
---@field mDemonSwordSelfRevealTime float
---@field mCurrentWeaponOptions TArray<EWeaponTypeEnum>
---@field mNumPlayersRevealedToByMagicSphere int32
---@field mNumPlayersRevealedToByFlameMine int32
---@field mRevealedByDollTrapTime float
---@field mHealSenseExposeTimeRemaining float
---@field mHealSenseActivationTimeRemaining float
---@field mDeafenTime float
---@field mDeafenTimeRemaining float
---@field mDeafenRecoveryTimeRemaining float
---@field mInhibitedTime float
---@field mBaseInhibitedTime float
---@field mMarredTime float
---@field mBaseMarredTime float
---@field mUntraceableTime float
---@field mBaseUntraceableTime float
---@field mShroudedTime float
---@field mBaseShroudedTime float
---@field mEvilPickupUseRevealTimeRemaining float
---@field mEvilPickupUseRevealTime float
---@field mEvilProneRevealTimeRemaining float
---@field mEvilCrowdRevealTime float
---@field mSpectralEssenceRestoreSpeedBoostTime float
---@field mSpectralEssenceRestoreHealthLossPreventionTime float
---@field mbIsRevealedByElectrocution boolean
---@field mFlamethrowerShowOwnerTime float
---@field mAllMedKitPoints TArray<AMedKitPoint>
---@field mGameplayTimeAtLastDeath float
---@field mYawWhenStopped float
---@field mbHasJustStopped boolean
---@field mbAnomalyReintegratingLastFrame boolean
---@field mAuraIndicatorActiveMap TMap<EAuraIndicatorType, boolean>
---@field mbForceDropHeldPickup boolean
---@field mServerFedLifeRestored float
---@field mServerFedLifeRequested float
---@field mServerFedExponent float
---@field mFedTimeRemaining float
---@field mFedTime float
---@field mBonusLifeTimeRemaining float
---@field mBonusLifeTime float
---@field mCrossDamageBlockTimeRemaining float
---@field mServerCapsulePositionTimeStampList TArray<float>
---@field mServerCapsulePositionList TArray<FVector>
---@field mParchmentTeleportNiagaraSystem TSoftObjectPtr<UNiagaraSystem>
---@field mMimicItemDataAsset TSoftObjectPtr<UItemDataAsset>
---@field mDisperseMimicItemDataAsset TSoftObjectPtr<UItemDataAsset>
---@field mMimicRagdollEffectStrength float
---@field mbIsMimicRagdoll boolean
---@field mbWaitingForMimicRagdollSpawn boolean
---@field mbHearingTensionTrack boolean
---@field mbHearingTensionTrackClearly boolean
---@field mbServerBeganHidingDuringTensionTrack boolean
---@field mServerTimeConsistentlyHearingTensionTrackWhileHiding float
---@field mbServerUsedSmokeBombToEscapeUnarmedChase boolean
---@field mpLandingCollisionCurve UCurveLum
---@field mServerLastSafePickupLocation FVector
---@field mbSlowedDuringElectrocution boolean
---@field mbShouldNotUpdateCollisionProfile boolean
---@field mbClientShouldNotUpdateCollisionProfile boolean
---@field mbRagdoll boolean
---@field mpRagdollPoseTarget ATPChar
---@field mbMimicClone boolean
---@field OnTeenHit FTPCharOnTeenHit
ATPChar = {}

---@return boolean
function ATPChar:WasResurrected() end
---@param auraIndType EAuraIndicatorType
---@return boolean
function ATPChar:WasAuraIndicatorActiveLastFrame(auraIndType) end
---@return boolean
function ATPChar:WasAnomalyReintegratingLastFrame() end
---@return boolean
function ATPChar:WantsToShootProjectileWeapon() end
function ATPChar:UpdateWeaponHolstered() end
function ATPChar:UpdateWalkieTalkie() end
function ATPChar:UpdateVoiceIndicatorMesh() end
function ATPChar:UpdateVisibility() end
function ATPChar:UpdateTransforming() end
---@param DeltaSeconds float
function ATPChar:UpdateTargetCapsuleSize(DeltaSeconds) end
---@param DeltaTime float
function ATPChar:UpdateSpiritWorldTransitionPostProcess(DeltaTime) end
function ATPChar:UpdateSeenTheEvil() end
function ATPChar:UpdateResurrectionParticles() end
function ATPChar:UpdateRenderCustomDepth() end
function ATPChar:UpdateQueuedToLeaveSearchable() end
function ATPChar:UpdateOwnVisibilityBasedOnCameraNearClip() end
---@param DeltaTime float
function ATPChar:UpdateEradicatorElectricPostProcess(DeltaTime) end
function ATPChar:UpdateEnablePostProcessComponent() end
---@param DeltaTime float
function ATPChar:UpdateDoubleVisionTimer(DeltaTime) end
---@param DeltaSeconds float
function ATPChar:UpdateDisintegration(DeltaSeconds) end
---@param DeltaSeconds float
function ATPChar:UpdateCrouch(DeltaSeconds) end
function ATPChar:UpdateCraftingComplete() end
---@param DeltaTime float
function ATPChar:UpdateCowerPostProcess(DeltaTime) end
function ATPChar:UpdateCollisionProfile() end
---@param DeltaTime float
function ATPChar:UpdateCollisionOffset(DeltaTime) end
---@param DeltaTime float
function ATPChar:UpdateCharacterParticleEffects(DeltaTime) end
---@param DeltaSeconds float
function ATPChar:UpdateCharacterMovementComponent(DeltaSeconds) end
---@param DeltaSeconds float
function ATPChar:UpdateCameraTransition(DeltaSeconds) end
---@param DeltaTime float
function ATPChar:UpdateBlindVisualEffect(DeltaTime) end
function ATPChar:UpdateAllSelected() end
function ATPChar:UpdateAkEmitters() end
---@param DeltaSeconds float
function ATPChar:TickStatusComponents(DeltaSeconds) end
function ATPChar:StopWalkieLoopAkEvent() end
function ATPChar:StopStaticShieldEnergizingAkEvent() end
function ATPChar:StopStaticShieldActiveAkEvent() end
function ATPChar:StopRevivingAkEvent() end
function ATPChar:StopResurrectingAkEvent() end
function ATPChar:StopRCRemoteActiveAkEvent() end
function ATPChar:StopParchmentActiveAkEvent() end
function ATPChar:StopMolotovActiveAkEvent() end
function ATPChar:StopIdleWhisperActiveAkEvent() end
function ATPChar:StopHolyGrenadeActiveAkEvent() end
function ATPChar:StopHealingAkEvent() end
function ATPChar:StopFlamethrowerActiveAkEvent() end
function ATPChar:StopFeastedAkEvent() end
function ATPChar:StopCrossActiveAkEvent() end
---@param MeshComp USkeletalMeshComponent
---@param PropSkeletalMesh USkeletalMesh
---@param PropAnimSequence UAnimationAsset
---@param PropSocket FName
---@param SocketToAttach FName
function ATPChar:SpawnAnimProp(MeshComp, PropSkeletalMesh, PropAnimSequence, PropSocket, SocketToAttach) end
---@return boolean
function ATPChar:ShouldUpdateCollisionProfile() end
---@return boolean
function ATPChar:ShouldStaticShieldBlockTension() end
---@return boolean
function ATPChar:ShouldPlayStaggerAnimation() end
---@return boolean
function ATPChar:ShouldPlayDisabledWeaponEffect() end
---@param pWorldContextObject UObject
---@param bCached boolean
---@return boolean
function ATPChar:ShouldLocalViewMuteTeenGameplay(pWorldContextObject, bCached) end
---@param pWorldContextObject UObject
---@param bCached boolean
---@return boolean
function ATPChar:ShouldLocalViewHideTeenGameplay(pWorldContextObject, bCached) end
---@return boolean
function ATPChar:ShouldHolsterWeapon() end
---@return boolean
function ATPChar:ShouldBarTimingGameHideProgressBars() end
---@param bSet boolean
function ATPChar:SetWeaponHolstered(bSet) end
---@param bNewValue boolean
function ATPChar:SetWaitingForMimicRagdollSpawn(bNewValue) end
---@param bSet boolean
function ATPChar:SetUsingLobbyFlavor(bSet) end
---@param attachmentType EWeaponAttachmentType
---@return boolean
function ATPChar:SetupWeaponAttachment(attachmentType) end
function ATPChar:SetupCharacter() end
---@param Val boolean
function ATPChar:SetTutorialOverrideRun(Val) end
---@param Val boolean
function ATPChar:SetTensionMuted(Val) end
---@param Time float
function ATPChar:SetReintegrationTimeRemaining(Time) end
---@param bNewValue boolean
function ATPChar:SetQueuedToLeaveSearchable(bNewValue) end
---@param Index int32
function ATPChar:SetLobbyPoseVariant(Index) end
---@param Index int32
function ATPChar:SetLobbyPoseIndex(Index) end
---@param bIsSpeaking boolean
function ATPChar:SetIsSpeakingInFrontEnd(bIsSpeaking) end
---@param bRagdoll boolean
---@param pTargetPoseChar ATPChar
function ATPChar:SetIsRagdoll(bRagdoll, pTargetPoseChar) end
function ATPChar:SetIsMimicRagdoll() end
---@param Val boolean
function ATPChar:SetIsMainMenuRotationLocked(Val) end
---@param bSet boolean
function ATPChar:SetHealingAction1Pressed(bSet) end
---@param bHasAura boolean
function ATPChar:SetHasAura(bHasAura) end
---@param Val UAnimSequence
function ATPChar:SetFaceAdditive(Val) end
---@param Time float
function ATPChar:SetDisintegrationTimeRemaining(Time) end
---@param auraIndType EAuraIndicatorType
---@param bNewValue boolean
function ATPChar:SetAuraIndicatorActiveThisFrame(auraIndType, bNewValue) end
---@param bNewValue boolean
function ATPChar:SetAnomalyReintegratingLastFrame(bNewValue) end
function ATPChar:ServerUseSecondWind() end
function ATPChar:ServerUseResolve() end
function ATPChar:ServerUseHeldPickup() end
function ATPChar:ServerToggleTorn() end
function ATPChar:ServerToggleProne() end
function ATPChar:ServerToggleGooped() end
function ATPChar:ServerSpawnTeenSpectralChar() end
---@param bActive boolean
function ATPChar:ServerSetWeaponActive(bActive) end
---@param bSet boolean
function ATPChar:ServerSetThrowing(bSet) end
---@param bSeenTheEvil boolean
function ATPChar:ServerSetSeenTheEvil(bSeenTheEvil) end
---@param NewType EWeaponTypeEnum
---@param pPoint ACraftPoint
function ATPChar:ServerSetRequestedWeaponType(NewType, pPoint) end
---@param Duration float
---@param bPermanent boolean
function ATPChar:ServerSetMarred(Duration, bPermanent) end
---@param Duration float
function ATPChar:ServerSetInhibited(Duration) end
---@param TransformType ECharacterType
function ATPChar:ServerSetEvilWheelTransformType(TransformType) end
---@param bNewValue boolean
function ATPChar:ServerSetEvilWheelSelectingRandomTransformType(bNewValue) end
function ATPChar:ServerSetBufferShot() end
---@param bAlarmed boolean
function ATPChar:ServerSetAlarmed(bAlarmed) end
---@param emoteIndex int32
function ATPChar:ServerSetActiveEmote(emoteIndex) end
---@param pEvil AFPChar
function ATPChar:ServerRequestWeaponHit_RaygunProjectile(pEvil) end
function ATPChar:ServerRequestWantsToStopBeingHelped() end
---@param pTPChar ATPChar
function ATPChar:ServerRequestTradePickup(pTPChar) end
function ATPChar:ServerRequestStopRevive() end
function ATPChar:ServerRequestStopResurrect() end
function ATPChar:ServerRequestStopHeal() end
function ATPChar:ServerRequestStopEmoting() end
---@param pTPChar ATPChar
function ATPChar:ServerRequestRevive(pTPChar) end
---@param pTPChar ATPChar
function ATPChar:ServerRequestResurrect(pTPChar) end
---@param pTPChar ATPChar
function ATPChar:ServerRequestHeal(pTPChar) end
function ATPChar:ServerRequestCancelAim() end
function ATPChar:ServerRequestBeginManualTransform() end
function ATPChar:ServerRequestBeginDiscardWeapon() end
function ATPChar:ServerRequestAbortUsingPickup() end
function ATPChar:ServerRequestAbortSecondaryFire() end
---@param bImmediately boolean
function ATPChar:ServerRequestAbortRemoteChars(bImmediately) end
function ATPChar:ServerRequestAbortPrimaryFire() end
function ATPChar:ServerRequestAbortManualTransform() end
function ATPChar:ServerRequestAbortDiscardWeapon() end
function ATPChar:ServerRequestAbortAction3() end
function ATPChar:ServerRequestAbortAction1() end
function ATPChar:ServerRemoveInjury() end
---@param activeEvilCharacterType ECharacterType
function ATPChar:ServerRefreshChaseTeen(activeEvilCharacterType) end
---@param bArmed boolean
function ATPChar:ServerRefreshChaseEvil(bArmed) end
---@param pPoint AHidePoint
function ATPChar:ServerOnMimicSearchedHidePoint(pPoint) end
---@param bPressed boolean
function ATPChar:ServerOnMimicPrimaryFire(bPressed) end
---@param pHitEvil AFPChar
---@param HitLocation FVector
---@param projectileIndex int32
---@param Time float
function ATPChar:ServerOnClientReportedRaygunEvilOverlap(pHitEvil, HitLocation, projectileIndex, Time) end
function ATPChar:ServerMimicDebugResetAllCooldowns() end
function ATPChar:ServerMimicDebugActivateAllCooldowns() end
---@param bPressed boolean
function ATPChar:ServerMimicAttack(bPressed) end
---@param Delta int32
function ATPChar:ServerIncreaseHitsByEvil(Delta) end
---@param pPickup APickupBase
function ATPChar:ServerGrabPickup(pPickup) end
function ATPChar:ServerFixStuck() end
function ATPChar:ServerExitHidePoint() end
---@param weaponType EWeaponTypeEnum
function ATPChar:ServerDebugWeaponType(weaponType) end
function ATPChar:ServerDebugUnequipWeapon() end
---@param bEnable boolean
function ATPChar:ServerDebugToggleInvincible(bEnable) end
---@param screamTime float
function ATPChar:ServerDebugSetSubdued(screamTime) end
---@param staggerTime float
function ATPChar:ServerDebugSetStaggered(staggerTime) end
---@param bSet boolean
function ATPChar:ServerDebugSetFrozen(bSet) end
---@param cowerTime float
function ATPChar:ServerDebugSetCowering(cowerTime) end
function ATPChar:ServerDebugKill() end
---@param ItemType EPickupType
---@param eventPickupType EEventPickupType
function ATPChar:ServerDebugGivePickup(ItemType, eventPickupType) end
---@param bEnable boolean
function ATPChar:ServerDebugEnableBarTimingMinigame(bEnable) end
function ATPChar:ServerDebugElectrocute() end
function ATPChar:ServerDebugDisintegrate() end
function ATPChar:ServerDebugClearSubdued() end
function ATPChar:ServerDebugClearCowering() end
---@param bCycleBackwards boolean
function ATPChar:ServerCycleSpectatorTarget(bCycleBackwards) end
function ATPChar:ServerCycleEvilTypeRight() end
function ATPChar:ServerCycleEvilTypeLeft() end
function ATPChar:ServerClearMarred() end
function ATPChar:ServerClearInhibited() end
---@param bAlternateMode boolean
function ATPChar:ServerBeginUsingWeapon(bAlternateMode) end
---@param life float
---@param bSetUndead boolean
function ATPChar:ServerBecomeAlive(life, bSetUndead) end
function ATPChar:ServerApplyInjury() end
---@param pVaultPoint AVaultPoint
function ATPChar:ServerActivateVaultPoint(pVaultPoint) end
---@param pPoint ASeasonalEventCenterpiecePoint
function ATPChar:ServerActivateSeasonalEventCenterpiecePoint(pPoint) end
---@param pSearchablePoint ASearchablePoint
function ATPChar:ServerActivateSearchablePoint(pSearchablePoint) end
---@param pMedKitPoint AMedKitPoint
function ATPChar:ServerActivateMedKitPoint(pMedKitPoint) end
---@param pHidePoint AHidePoint
function ATPChar:ServerActivateHidePoint(pHidePoint) end
---@param pEnergyPoint AEnergyPoint
function ATPChar:ServerActivateEnergyPoint(pEnergyPoint) end
---@param pDollMasterTrap ADollMasterTrap
function ATPChar:ServerActivateDollMasterTrap(pDollMasterTrap) end
---@param pCraftPoint ACraftPoint
function ATPChar:ServerActivateCraftPoint(pCraftPoint) end
---@param pRemoveComponent UBaseStatusComponent
function ATPChar:RemoveStatusComponent(pRemoveComponent) end
function ATPChar:RegisterAuras() end
---@param wepType EWeaponTypeEnum
function ATPChar:RefreshWWiseWeaponSkinSwitch(wepType) end
function ATPChar:RefreshMeshStencilGroups() end
function ATPChar:PlayWalkieOutAkEvent() end
function ATPChar:PlayWalkieLoopAkEvent() end
---@param sourcePosition FVector
---@param destinationPosition FVector
function ATPChar:PlayTeenTeleport(sourcePosition, destinationPosition) end
function ATPChar:PlayTeenGruntAkEvent() end
function ATPChar:PlayStaticShieldExplosionAkEvent() end
function ATPChar:PlayStaticShieldEnergizingAkEvent() end
function ATPChar:PlayStaticShieldEnergizeFailedAkEvent() end
function ATPChar:PlayStaticShieldActiveAkEvent() end
function ATPChar:PlayRotatorSuccessAkEvent() end
function ATPChar:PlayRotatorFailAkEvent() end
function ATPChar:PlayRevivingAkEvent() end
function ATPChar:PlayRevivedAkEvent() end
function ATPChar:PlayResurrectingAkEvent() end
function ATPChar:PlayRCRemoteActiveAkEvent() end
function ATPChar:PlayProneAkEvent() end
function ATPChar:PlayParchmentActiveAkEvent() end
function ATPChar:PlayMolotovThrowAkEvent() end
function ATPChar:PlayMinionStunNotifyAkEvent() end
---@param bHigh boolean
function ATPChar:PlayLandingAkEvent(bHigh) end
function ATPChar:PlayKilledAkEvent() end
function ATPChar:PlayInjuredAkEvent() end
function ATPChar:PlayIdleWhisperActiveAkEvent() end
function ATPChar:PlayHealingAkEvent() end
function ATPChar:PlayFlinchAkEvent() end
function ATPChar:PlayFlameMineEnterAlertChimeAkEvent() end
function ATPChar:PlayFeastedAkEvent() end
function ATPChar:PlayBledOutAkEvent() end
function ATPChar:PlayBeginPlayAkEvents() end
---@param pEmote UEmoteDataAsset
---@param bForceLoop boolean
function ATPChar:PerformFrontEndEmote(pEmote, bForceLoop) end
---@param Index int32
function ATPChar:PerformEmoteAtSlot(Index) end
function ATPChar:OnRep_IsReintegrating() end
function ATPChar:OnRep_IsProne() end
function ATPChar:OnRep_IsInjured() end
function ATPChar:OnRep_IsDisintegrating() end
function ATPChar:OnRep_IsDead() end
function ATPChar:OnRep_HearingTensionTrackClearly() end
function ATPChar:OnRep_ActiveAction() end
---@param Delay float
function ATPChar:MulticastCreateResonanceClone(Delay) end
---@param bLeft boolean
function ATPChar:MulticastAllUpdateEvilSelection(bLeft) end
function ATPChar:MulticastAllStopResurrectRing() end
function ATPChar:MulticastAllStopNoisemakerSetup() end
function ATPChar:MulticastAllStopIdleWhisperSound() end
function ATPChar:MulticastAllStopElectrocutionSound() end
---@param pickupType EPickupType
---@param pPickupSkin UItemDataAsset
function ATPChar:MulticastAllSpawnUsedPickup(pickupType, pPickupSkin) end
---@param EffectVisibility FEffectVisibility
function ATPChar:MulticastAllSpawnHealthDrainingBurstNiagaraAttachedToOwner(EffectVisibility) end
---@param EffectVisibility FEffectVisibility
function ATPChar:MulticastAllSpawnHealingBurstNiagaraAttachedToOwner(EffectVisibility) end
---@param hitDirection FVector
function ATPChar:MulticastAllSimulateHit(hitDirection) end
---@param Text FText
---@param baseAmount float
---@param bonus float
function ATPChar:MulticastAllShowScore(Text, baseAmount, bonus) end
---@param lobbyIdx int32
---@param newTeenType ECharacterType
function ATPChar:MulticastAllSetMimicTarget(lobbyIdx, newTeenType) end
function ATPChar:MulticastAllSetIsRagdoll() end
function ATPChar:MulticastAllSetDoubleVisionTimer() end
function ATPChar:MulticastAllReintegrate() end
---@param activeEvilCharacterType ECharacterType
function ATPChar:MulticastAllRefreshChaseTeen(activeEvilCharacterType) end
function ATPChar:MulticastAllPlayTransformation() end
function ATPChar:MulticastAllPlayToadEcholocationDeafenSound() end
function ATPChar:MulticastAllPlayTeenEasterHuntComplete() end
function ATPChar:MulticastAllPlayStaticShieldImpactFlash() end
function ATPChar:MulticastAllPlayStaticShieldEnergizeFailed() end
function ATPChar:MulticastAllPlayShardEffect() end
function ATPChar:MulticastAllPlayResurrectRing() end
function ATPChar:MulticastAllPlayResurrectFail() end
function ATPChar:MulticastAllPlayResurrectBolt() end
function ATPChar:MulticastAllPlayProneSound() end
function ATPChar:MulticastAllPlayPickupSound() end
function ATPChar:MulticastAllPlayNoisemakerSetup() end
function ATPChar:MulticastAllPlayMolotovThrowSound() end
function ATPChar:MulticastAllPlayMinigameWarningSound() end
function ATPChar:MulticastAllPlayMinigameSuccessSound() end
function ATPChar:MulticastAllPlayMinigameBullseyeSound() end
function ATPChar:MulticastAllPlayLostWeaponSound() end
function ATPChar:MulticastAllPlayKilledSound() end
function ATPChar:MulticastAllPlayInjuredEffects() end
function ATPChar:MulticastAllPlayIdleWhisperSound() end
---@param Color FLinearColor
function ATPChar:MulticastAllPlayHUDCardEffect(Color) end
function ATPChar:MulticastAllPlayHolyStaffProneHealth() end
---@param trans FTransform
function ATPChar:MulticastAllPlayHolyGrenadeExplosion(trans) end
function ATPChar:MulticastAllPlayHealedSound() end
function ATPChar:MulticastAllPlayGivePickupSound() end
function ATPChar:MulticastAllPlayGainAdrenaline() end
---@param pickup APickupBase
function ATPChar:MulticastAllPlayForceDropPickup(pickup) end
function ATPChar:MulticastAllPlayFlinchSound() end
function ATPChar:MulticastAllPlayEvilEasterHuntComplete() end
function ATPChar:MulticastAllPlayEvilChosen() end
---@param bUseMultiple boolean
function ATPChar:MulticastAllPlayElectrocutionSound(bUseMultiple) end
function ATPChar:MulticastAllPlayDropPickupSound() end
function ATPChar:MulticastAllPlayCrossDamageBlock() end
function ATPChar:MulticastAllPlayCraftingFailQuietSound() end
function ATPChar:MulticastAllPlayCowerCameraShake() end
function ATPChar:MulticastAllPlayBledOutSound() end
---@param bSetUndead boolean
function ATPChar:MulticastAllOnTeenResurrected(bSetUndead) end
function ATPChar:MulticastAllOnTeenKnockdown() end
function ATPChar:MulticastAllOnTeenDeath() end
function ATPChar:MulticastAllNotifyFixStuck() end
function ATPChar:MulticastAllEradicatorScannerBeam_FoundTarget_Play() end
---@param bEnable boolean
function ATPChar:MulticastAllEnableAttackCollision(bEnable) end
function ATPChar:MulticastAllEmpoweredShardHitTeen() end
function ATPChar:MulticastAllDetachTPCameraBoom() end
---@param Position FVector
---@param Rotation FRotator
---@param bHitEvil boolean
---@param bEvilTookDamage boolean
function ATPChar:MulticastAllCreateRaygunHitEffects(Position, Rotation, bHitEvil, bEvilTookDamage) end
function ATPChar:MulticastAllCraftingFail() end
function ATPChar:MulticastAllClearEmoteEffects() end
function ATPChar:MulticastAllAttachTPCameraBoom() end
function ATPChar:MulticastAll_ToadStaggerCameraShake() end
function ATPChar:MulticastAll_HolyStaff_Charged_Stop() end
function ATPChar:MulticastAll_HolyStaff_Charged_Play() end
function ATPChar:MulticastAll_HolyStaff_Active_Stop() end
function ATPChar:MulticastAll_HolyStaff_Active_Play() end
function ATPChar:MulticastAll_Anomaly_Disperse_Out_AkEvent_Play() end
function ATPChar:MulticastAll_Anomaly_Disperse_Loop_AkEvent_Stop() end
function ATPChar:MulticastAll_Anomaly_Disperse_Loop_AkEvent_Play() end
function ATPChar:MulticastAll_Anomaly_Disperse_In_Charge_AkEvent_Stop() end
function ATPChar:MulticastAll_Anomaly_Disperse_In_Charge_AkEvent_Play() end
function ATPChar:MulticastAll_Anomaly_Disperse_In_AkEvent_Play() end
---@param pWorldContextObject UObject
---@param bCached boolean
---@return float
function ATPChar:LocalViewStressLevel(pWorldContextObject, bCached) end
---@param pWorldContextObject UObject
---@param bCached boolean
---@return float
function ATPChar:LocalViewInjuryLevel(pWorldContextObject, bCached) end
---@param Hit FHitResult
function ATPChar:Landed(Hit) end
---@return boolean
function ATPChar:JustWoundedEvil() end
---@return boolean
function ATPChar:JustTransformed() end
---@return boolean
function ATPChar:IsWithinActiveEvilTensionDistance() end
---@return boolean
function ATPChar:IsWeaponHolstered() end
---@return boolean
function ATPChar:IsWalking() end
---@return boolean
function ATPChar:IsWaitingForMimicRagdollSpawn() end
---@return boolean
function ATPChar:IsViewLocal() end
---@return boolean
function ATPChar:IsVaultMasterActive() end
---@return boolean
function ATPChar:IsVaultingActive() end
---@return boolean
function ATPChar:IsVaulting() end
---@return boolean
function ATPChar:IsUsingStaticShield() end
---@return boolean
function ATPChar:IsUsingSkillTestObject() end
---@return boolean
function ATPChar:IsUsingPickup() end
---@return boolean
function ATPChar:IsUntraceable() end
---@return boolean
function ATPChar:IsUndead() end
---@return boolean
function ATPChar:IsTricked() end
---@return boolean
function ATPChar:IsTransforming() end
---@return boolean
function ATPChar:IsThrowing() end
---@return boolean
function ATPChar:IsTensionMuted() end
---@return boolean
function ATPChar:IsTeenBecomingEvil() end
---@return boolean
function ATPChar:IsTechnicianActive() end
---@return boolean
function ATPChar:IsSummoningMagicSphere() end
---@return boolean
function ATPChar:IsSummoningFlameMine() end
---@return boolean
function ATPChar:IsSubdued() end
---@return boolean
function ATPChar:IsStunned() end
---@return boolean
function ATPChar:IsStealthy() end
---@return boolean
function ATPChar:IsStaticShieldActive() end
---@return boolean
function ATPChar:IsStaggered() end
---@return boolean
function ATPChar:IsSprinting() end
---@return boolean
function ATPChar:IsSpectatingAnother() end
---@return boolean
function ATPChar:IsSlowedDuringElectrocution() end
---@return boolean
function ATPChar:IsSkillTestMinigameWarning() end
---@return boolean
function ATPChar:IsSkillTestMinigamePaused() end
---@return boolean
function ATPChar:IsSkillTestMinigameContributing() end
---@return boolean
function ATPChar:IsSkillTestMinigameActive() end
---@return boolean
function ATPChar:IsShrouded() end
---@return boolean
function ATPChar:IsSelfRevealedByRCCopter() end
---@return boolean
function ATPChar:IsSelfRevealedByDemonSword() end
---@return boolean
function ATPChar:IsSearchingActive() end
---@return boolean
function ATPChar:IsRunningMode() end
---@return boolean
function ATPChar:IsRunning() end
---@return boolean
function ATPChar:IsRevivingActive() end
---@return boolean
function ATPChar:IsReviving() end
---@return boolean
function ATPChar:IsRevealedByShard() end
---@return boolean
function ATPChar:IsRevealedByElectrocution() end
---@return boolean
function ATPChar:IsRevealed() end
---@return boolean
function ATPChar:IsResurrectingActive() end
---@return boolean
function ATPChar:IsResurrecting() end
---@return boolean
function ATPChar:IsReloadingWeapon() end
---@return boolean
function ATPChar:IsReintegrating() end
---@return boolean
function ATPChar:IsRagdoll() end
---@return boolean
function ATPChar:IsQueuedToLeaveSearchable() end
---@return boolean
function ATPChar:IsProneSkillTestActive() end
---@return boolean
function ATPChar:IsProneCrawling() end
---@return boolean
function ATPChar:IsProne() end
---@return boolean
function ATPChar:IsPlayingResurrectOutro() end
---@return boolean
function ATPChar:IsPlayerSpeaking() end
---@return boolean
function ATPChar:IsPlacingPickup() end
---@return boolean
function ATPChar:IsPermBlinded() end
---@return boolean
function ATPChar:IsPermanentlyMarred() end
---@return boolean
function ATPChar:IsOverchargedByEradicator() end
---@return boolean
function ATPChar:IsMinigamePenalty() end
---@return boolean
function ATPChar:IsMimicRagdoll() end
---@return boolean
function ATPChar:IsMimicClone() end
---@return boolean
function ATPChar:IsMimic() end
---@return boolean
function ATPChar:IsMedKitHealingActive() end
---@return boolean
function ATPChar:IsMedKitHealing() end
---@return boolean
function ATPChar:IsMarred() end
---@return boolean
function ATPChar:IsMainMenuRotationLocked() end
---@return boolean
function ATPChar:IsLoneWolfActive() end
---@return boolean
function ATPChar:IsLockedInPlaceDueToEmote() end
---@param pWorldContextObject UObject
---@param bCached boolean
---@return boolean
function ATPChar:IsLocalViewTeenSpectral(pWorldContextObject, bCached) end
---@param pWorldContextObject UObject
---@param bCached boolean
---@return boolean
function ATPChar:IsLocalViewTeen(pWorldContextObject, bCached) end
---@param pWorldContextObject UObject
---@param bCached boolean
---@return boolean
function ATPChar:IsLocalViewMagicSphere(pWorldContextObject, bCached) end
---@param pWorldContextObject UObject
---@param bCached boolean
---@return boolean
function ATPChar:IsLocalViewIncorporeal(pWorldContextObject, bCached) end
---@param pWorldContextObject UObject
---@param bCached boolean
---@return boolean
function ATPChar:IsLocalViewHearing(pWorldContextObject, bCached) end
---@param pWorldContextObject UObject
---@param bCached boolean
---@return boolean
function ATPChar:IsLocalViewEvil(pWorldContextObject, bCached) end
---@param pWorldContextObject UObject
---@param bCached boolean
---@return boolean
function ATPChar:IsLocalViewDisintegrating(pWorldContextObject, bCached) end
---@param pWorldContextObject UObject
---@param bCached boolean
---@return boolean
function ATPChar:IsLocalViewDead(pWorldContextObject, bCached) end
---@return boolean
function ATPChar:IsLobbyPoseFlavor() end
---@return boolean
function ATPChar:IsLanding() end
---@return boolean
function ATPChar:IsKilled() end
---@return boolean
function ATPChar:IsInWaitingStage() end
---@return boolean
function ATPChar:IsInvincible() end
---@return boolean
function ATPChar:IsInTutorialMode() end
---@return boolean
function ATPChar:IsInSeasonalEventCenterpieceAnimSequence() end
---@return boolean
function ATPChar:IsInSearchingIntroAnimSequence() end
---@return boolean
function ATPChar:IsInSearchingAnimSequence() end
---@return boolean
function ATPChar:IsInRangeOfSeeingWalkieEffect() end
---@return boolean
function ATPChar:IsInPickupInteractingSequence() end
---@return boolean
function ATPChar:IsInMedKitAnimSequence() end
---@return boolean
function ATPChar:IsInjured() end
---@return boolean
function ATPChar:IsInHuntStage() end
---@return boolean
function ATPChar:IsInhibited() end
---@return boolean
function ATPChar:IsInEnergizingAnimSequence() end
---@return boolean
function ATPChar:IsInDarkShardAnimSequence() end
---@return boolean
function ATPChar:IsIncubating() end
---@return boolean
function ATPChar:IsInCraftingAnimSequence() end
---@return boolean
function ATPChar:IsIncorporeal() end
---@return boolean
function ATPChar:IsHolyStaffInFireMode() end
---@return boolean
function ATPChar:IsHoldingPickup() end
---@return boolean
function ATPChar:IsHiding() end
---@return boolean
function ATPChar:IsHideInSmoke() end
---@return boolean
function ATPChar:IsHearingTensionTrackClearly() end
---@return boolean
function ATPChar:IsHearingTensionTrack() end
---@return boolean
function ATPChar:IsHearing() end
---@return boolean
function ATPChar:IsHealingSelfWithHolyStaff() end
---@return boolean
function ATPChar:IsHealingOtherWithHolyStaff() end
---@return boolean
function ATPChar:IsHealingActive() end
---@return boolean
function ATPChar:IsHealingAction1Pressed() end
---@return boolean
function ATPChar:IsHealing() end
---@return boolean
function ATPChar:IsGrabbingPickup() end
---@return boolean
function ATPChar:IsGoodAlignedCharacter() end
---@return boolean
function ATPChar:IsFrozen() end
---@return boolean
function ATPChar:IsFrostbit() end
---@return boolean
function ATPChar:IsForceRespositioningComplete() end
---@return boolean
function ATPChar:IsForceDropHeldPickup() end
---@return boolean
function ATPChar:IsFiringTalisman() end
---@return boolean
function ATPChar:IsFiringRayGun() end
---@return boolean
function ATPChar:IsFiringInitialDemonsword() end
---@return boolean
function ATPChar:IsFiringHolyStaff() end
---@return boolean
function ATPChar:IsFiringFlameMine() end
---@return boolean
function ATPChar:IsFiringDemonSword() end
---@return boolean
function ATPChar:IsFemale() end
---@return boolean
function ATPChar:IsFed() end
---@return boolean
function ATPChar:IsFeastingActive() end
---@return boolean
function ATPChar:IsFeasting() end
---@return boolean
function ATPChar:IsFeastedOnActive() end
---@return boolean
function ATPChar:IsFeastedOn() end
---@return boolean
function ATPChar:IsFallingOrLanding() end
---@return boolean
function ATPChar:IsExposedByVigilance() end
---@return boolean
function ATPChar:IsExposedByTalismanAbsorb() end
---@return boolean
function ATPChar:IsExposedByNoisemaker() end
---@return boolean
function ATPChar:IsExposedByHolyStaffFastHeal() end
---@return boolean
function ATPChar:IsExposedByHealSense() end
---@return boolean
function ATPChar:IsExposedByEvilProneReveal() end
---@return boolean
function ATPChar:IsExposedByEvilPickupUseReveal() end
---@return boolean
function ATPChar:IsExposedByEvilCrowdReveal() end
---@return boolean
function ATPChar:IsExposedByEradicatorScan() end
---@return boolean
function ATPChar:IsExposedByEradicatorElectricity() end
---@return boolean
function ATPChar:IsExposedByDollTrap() end
---@return boolean
function ATPChar:IsExposed() end
---@return boolean
function ATPChar:IsEvilWheelSelectingRandomTransformType() end
---@return boolean
function ATPChar:IsEvilAlignedCharacter() end
---@return boolean
function ATPChar:IsEquippedWeaponUsedUp() end
---@return boolean
function ATPChar:IsEnergizingActive() end
---@return boolean
function ATPChar:IsEmoting() end
---@return boolean
function ATPChar:IsDollMasterRevealed() end
---@return boolean
function ATPChar:IsDispersedInvisible() end
---@return boolean
function ATPChar:IsDispersed() end
---@return boolean
function ATPChar:IsDisintegrating() end
---@return boolean
function ATPChar:IsDiscardingWeapon() end
---@return boolean
function ATPChar:IsDisarmingDollMasterTrap() end
---@return boolean
function ATPChar:IsDeployingNoisemaker() end
---@return boolean
function ATPChar:IsDead() end
---@return boolean
function ATPChar:IsCrouchMoving() end
---@return boolean
function ATPChar:IsCrouchingMode() end
---@return boolean
function ATPChar:IsCraftingActive() end
---@return boolean
function ATPChar:IsCrafting() end
---@return boolean
function ATPChar:IsCowering() end
---@return boolean
function ATPChar:IsControllingRemoteWeapon() end
---@return boolean
function ATPChar:IsClotted() end
---@return boolean
function ATPChar:IsChaseActive() end
---@return boolean
function ATPChar:IsChargingWeapon() end
---@return boolean
function ATPChar:IsBusy() end
---@return boolean
function ATPChar:IsBlinded() end
---@return boolean
function ATPChar:IsBledOut() end
---@return boolean
function ATPChar:IsBeingRevived() end
---@return boolean
function ATPChar:IsBeingResurrected() end
---@return boolean
function ATPChar:IsBeingHealed() end
---@return boolean
function ATPChar:IsBeingElectrocuted() end
---@return boolean
function ATPChar:IsBeingActivelyRevived() end
---@return boolean
function ATPChar:IsBeingActivelyResurrected() end
---@return boolean
function ATPChar:IsBeingActivelyHealed() end
---@return boolean
function ATPChar:IsAtMaxLife() end
---@return boolean
function ATPChar:IsArmedChaseActive() end
---@return boolean
function ATPChar:IsArmed() end
---@return boolean
function ATPChar:IsApproachingActivePoint() end
---@return boolean
function ATPChar:IsAimingTalisman() end
---@return boolean
function ATPChar:IsAimingSlingshot() end
---@param bIncludeWaiting boolean
---@return boolean
function ATPChar:IsAimingRayGun(bIncludeWaiting) end
---@return boolean
function ATPChar:IsAimingPoweredTalisman() end
---@return boolean
function ATPChar:IsAimingMolotov() end
---@return boolean
function ATPChar:IsAimingHolyStaff() end
---@return boolean
function ATPChar:IsAimingFlamethrower() end
---@return boolean
function ATPChar:IsAimingDemonSword() end
---@return boolean
function ATPChar:IsAimingCross() end
---@return boolean
function ATPChar:IsAdjustingPositionForInteraction() end
---@return boolean
function ATPChar:IsActivelyDisarmingDollMasterTrap() end
---@return boolean
function ATPChar:IsActivatingDarkShard() end
---@return boolean
function ATPChar:InShootingWeaponAnimSequence() end
---@return boolean
function ATPChar:InProneAnimSequence() end
---@return boolean
function ATPChar:InKilledAnimSequence() end
---@return boolean
function ATPChar:InHideSequence() end
---@return boolean
function ATPChar:InFallingAnimSequence() end
---@return boolean
function ATPChar:HasWeapon() end
---@return boolean
function ATPChar:HasUnsafeClothingEquipped() end
---@return boolean
function ATPChar:HasTeenSpectralChar() end
---@return boolean
function ATPChar:HasSpeedBoostByEvil() end
---@return boolean
function ATPChar:HasShardVision() end
---@return boolean
function ATPChar:HasRCCopter() end
---@return boolean
function ATPChar:HasMolotovSpeedBoost() end
---@return boolean
function ATPChar:HasMagicSphere() end
---@return boolean
function ATPChar:HasEnergizedMoveSpeedBoost() end
---@return boolean
function ATPChar:HasDemonSwordSpeedBoost() end
---@return boolean
function ATPChar:HasCrossDamageBlock() end
---@return boolean
function ATPChar:HasBulkyClothingEquipped() end
---@return boolean
function ATPChar:HasBonusLife() end
---@param augmentType EAugmentType
---@param minTier int32
---@param bReqActive boolean
---@return boolean
function ATPChar:HasAugment(augmentType, minTier, bReqActive) end
---@return boolean
function ATPChar:HasAdrenalineFromPickup() end
---@return boolean
function ATPChar:HasAdrenaline() end
---@return boolean
function ATPChar:HasActivePing() end
---@return boolean
function ATPChar:HasActivePickup() end
---@return UExtAkComponent
function ATPChar:GetWhisperAkEmitter() end
---@return EWeaponTypeEnum
function ATPChar:GetWeaponTypeUsing() end
---@return EWeaponTypeEnum
function ATPChar:GetWeaponTypeHeld() end
---@return EWeaponTypeEnum
function ATPChar:GetWeaponTypeCrafting() end
---@return UWeaponSkinManagerComponent
function ATPChar:GetWeaponSkinManagerComponent() end
---@return float
function ATPChar:GetVaultSpeedMultiplier() end
---@return TArray<AVaultPoint>
function ATPChar:GetVaultPoints() end
---@return TArray<AActor>
function ATPChar:GetVaultPointCandidates() end
---@return UAnimMontage
function ATPChar:GetVaultMontage() end
---@return USkillTestMinigameBase
function ATPChar:GetValidSkillTest() end
---@return EPickupType
function ATPChar:GetUsingPickup() end
---@return UExtAkComponent
function ATPChar:GetUnattenuatedAkEmitter() end
---@return float
function ATPChar:GetTurnInPlaceAlpha() end
---@return UParticleSystem
function ATPChar:GetTransformationParticleSystem() end
---@return ATPChar
function ATPChar:GetTradePickupReceiverChar() end
---@return ATPChar
function ATPChar:GetTradePickupGiverChar() end
---@return TArray<AActor>
function ATPChar:GetTradePickupCandidates() end
---@return TArray<ATPChar>
function ATPChar:GetTradePickupAllies() end
---@return ATPChar
function ATPChar:GetTPCharPerformingResurrection() end
---@return ATPChar
function ATPChar:GetTPCharCurrentlyReviving() end
---@return ATPChar
function ATPChar:GetTPCharCurrentlyResurrecting() end
---@return ATPChar
function ATPChar:GetTPCharCurrentlyHealing() end
---@return FVector
function ATPChar:GetTPCameraDefaultRelativeLocation() end
---@return UCameraComponent
function ATPChar:GetTPCameraComponent() end
---@return USpringArmComponent
function ATPChar:GetTPCameraBoomComponent() end
---@return float
function ATPChar:GetTimeUntilWeaponDiscarded() end
---@return float
function ATPChar:GetTimeUntilManualTransform() end
---@return float
function ATPChar:GetTimeSinceLoudCraftFail() end
---@return float
function ATPChar:GetTimeSinceLastEradicatorScan() end
---@return float
function ATPChar:GetTimeSinceLastBeenHit() end
---@return float
function ATPChar:GetTimeSinceEvilTransform() end
---@return float
function ATPChar:GetTimeSinceEvilStun() end
---@return float
function ATPChar:GetTimeSinceEvilBecomeCorporeal() end
---@return float
function ATPChar:GetTimeSinceCraftFail() end
---@return float
function ATPChar:GetTimeReviving() end
---@return float
function ATPChar:GetTimeResurrecting() end
---@return float
function ATPChar:GetTimeInjured() end
---@return float
function ATPChar:GetTimeHealing() end
---@return float
function ATPChar:GetTimeDead() end
---@return float
function ATPChar:GetTimeBeingRevived() end
---@return float
function ATPChar:GetTimeBeingResurrected() end
---@return float
function ATPChar:GetTimeBeingHealed() end
---@return float
function ATPChar:GetTimeAssisting() end
---@return UTensionManager
function ATPChar:GetTensionManager() end
---@return UExtAkComponent
function ATPChar:GetTensionAkEmitter() end
---@return ATeenSpectralChar
function ATPChar:GetTeenSpectralChar() end
---@return FVector
function ATPChar:GetTargetingCapsuleLineTracePosition() end
---@return UCapsuleComponent
function ATPChar:GetTargetingCapsuleComponent() end
---@return float
function ATPChar:GetTalismanWalkSpeed() end
---@return float
function ATPChar:GetTalismanCrouchSpeed() end
---@return float
function ATPChar:GetTalismanAimMovementSpeed() end
---@return float
function ATPChar:GetSubduedTimeRemaining() end
---@return float
function ATPChar:GetSubduedTime() end
---@return float
function ATPChar:GetStealthSpeed() end
---@return TArray<UBaseStatusComponent>
function ATPChar:GetStatusComponents() end
---@return AStationBase
function ATPChar:GetStationBeingUsed() end
---@return float
function ATPChar:GetStaticShieldAimMovementSpeed() end
---@return float
function ATPChar:GetStaggerTimeRemaining() end
---@return float
function ATPChar:GetStaggeredSpeedPenalty() end
---@return float
function ATPChar:GetSpeedBoostByEvilTimeRemaining() end
---@return float
function ATPChar:GetSpeedBoostByEvilBonus() end
---@return float
function ATPChar:GetSpectralEssenceRestoreSpeedBoostTime() end
---@return float
function ATPChar:GetSpectralEssenceRestoreHealthLossPreventionTime() end
---@return ATPChar
function ATPChar:GetSpectatorTPChar() end
---@return AGameplayPS
function ATPChar:GetSpectatorTarget() end
---@return TArray<ARaygunProjectile>
function ATPChar:GetSpawnedRaygunProjectiles() end
---@return TArray<ADemonSwordProjectile>
function ATPChar:GetSpawnedDemonSwordProjectiles() end
---@return float
function ATPChar:GetSlingshotAimMovementSpeed() end
---@return AVaultPoint
function ATPChar:GetSelectedVaultPoint() end
---@return ATPChar
function ATPChar:GetSelectedTradePickupChar() end
---@return ASeasonalEventCenterpiecePoint
function ATPChar:GetSelectedSeasonalEventCenterpiecePoint() end
---@return ASearchablePoint
function ATPChar:GetSelectedSearchablePoint() end
---@return ATPChar
function ATPChar:GetSelectedReviveChar() end
---@return ATPChar
function ATPChar:GetSelectedResurrectChar() end
---@return APickupBase
function ATPChar:GetSelectedPickup() end
---@return AMedKitPoint
function ATPChar:GetSelectedMedKitPoint() end
---@return AHidePoint
function ATPChar:GetSelectedHidePoint() end
---@return ATPChar
function ATPChar:GetSelectedHealChar() end
---@return AEnergyPoint
function ATPChar:GetSelectedEnergyPoint() end
---@return ADollMasterTrap
function ATPChar:GetSelectedDollMasterTrap() end
---@return ACraftPoint
function ATPChar:GetSelectedCraftPoint() end
---@return TArray<AActor>
function ATPChar:GetSeasonalEventCenterpiecePointCandidates() end
---@return int32
function ATPChar:GetSearchPuzzlesCompleted() end
---@return TArray<ASearchablePoint>
function ATPChar:GetSearchablePoints() end
---@return TArray<AActor>
function ATPChar:GetSearchablePointCandidates() end
---@return float
function ATPChar:GetReviveFraction() end
---@return TArray<ATPChar>
function ATPChar:GetRevivedByAllies() end
---@return TArray<AActor>
function ATPChar:GetReviveCandidates() end
---@return TArray<ATPChar>
function ATPChar:GetRevivableAllies() end
---@return float
function ATPChar:GetRevealedByDollTrapTimeRemaining() end
---@return TArray<AActor>
function ATPChar:GetResurrectCandidates() end
---@return TArray<ATPChar>
function ATPChar:GetResurrectableByAllies() end
---@return TArray<ATPChar>
function ATPChar:GetResurrectableAllies() end
---@return EWeaponTypeEnum
function ATPChar:GetRequestedWeaponType() end
---@return float
function ATPChar:GetReintegrationTimeRemaining() end
---@return ARCCopter
function ATPChar:GetRCCopter() end
---@return float
function ATPChar:GetRayGunAimMovementSpeed() end
---@return USkeletalMeshComponent
function ATPChar:GetRagdollPoseTarget() end
---@return UPostProcessComponent
function ATPChar:GetPostProcessComponent() end
---@return UPlayerTipsComponent
function ATPChar:GetPlayerTipsComponent() end
---@return EPickupHeightType
function ATPChar:GetPickupHeightType() end
---@return TArray<AActor>
function ATPChar:GetPickupCandidates() end
---@return UAIPerceptionStimuliSourceComponent
function ATPChar:GetPerceptionStimuliComponent() end
---@return float
function ATPChar:GetPercentCraftingComplete() end
---@return USkillTestMinigameBase
function ATPChar:GetPendingSkillTest() end
---@return int32
function ATPChar:GetNumPlayersRevealedToByMagicSphere() end
---@return float
function ATPChar:GetNoisemakerRevealTimeRemaining() end
---@return float
function ATPChar:GetNoisemakerDeploymentTimeRemaining() end
---@return ANoisemakerActor
function ATPChar:GetNoisemakerBeingRevealedBy() end
---@return float
function ATPChar:GetNoisemakerBaseRevealTime() end
---@return float
function ATPChar:GetNextHitMarredTime() end
---@return int32
function ATPChar:GetMotivatedTier() end
---@return float
function ATPChar:GetMotivatedActionSpeedBonus() end
---@return float
function ATPChar:GetMolotovSpeedBoostTimeRemaining() end
---@return float
function ATPChar:GetMolotovSpeedBoostTime() end
---@return float
function ATPChar:GetMolotovSpeedBonus() end
---@return float
function ATPChar:GetMolotovAimMovementSpeed() end
---@return float
function ATPChar:GetMinReviveTimeToActivateResolve() end
---@return float
function ATPChar:GetMinimumProneLife() end
---@return float
function ATPChar:GetMinigamePenaltyTimeRemaining() end
---@return float
function ATPChar:GetMinigamePenaltyTime() end
---@return float
function ATPChar:GetMinigameBoostTimeRemaining() end
---@return float
function ATPChar:GetMinigameBoostTime() end
---@return float
function ATPChar:GetMimicSpeedMultiplier() end
---@return AFPChar
function ATPChar:GetMimicOwner() end
---@param newTeenType ECharacterType
---@return UClass
function ATPChar:GetMimicClassForCharacterType(newTeenType) end
---@return TArray<AMedKitPoint>
function ATPChar:GetMedKitPoints() end
---@param bCheckAllowedToUse boolean
---@return TArray<AActor>
function ATPChar:GetMedKitPointCandidates(bCheckAllowedToUse) end
---@return float
function ATPChar:GetMedkitMasterHealBonus() end
---@return float
function ATPChar:GetMaxLife() end
---@return float
function ATPChar:GetMaxAimingPitch() end
---@return float
function ATPChar:GetMarredTimeRemaining() end
---@return AMagicSphere
function ATPChar:GetMagicSphere() end
---@return UBlendSpaceBase
function ATPChar:GetLocomotionOverride() end
---@param pWorldContextObject UObject
---@param bCached boolean
---@return float
function ATPChar:GetLocalViewHearingPercentage(pWorldContextObject, bCached) end
---@param DamageType EDamageType
---@return TArray<EWeaponTypeEnum>
function ATPChar:GetLocalCurrentWeaponOptions(DamageType) end
---@return int32
function ATPChar:GetLobbyPoseVariant() end
---@return int32
function ATPChar:GetLobbyPoseIndex() end
---@return float
function ATPChar:GetLifeRemaining() end
---@return float
function ATPChar:GetLifeLost() end
---@return AActor
function ATPChar:GetLastPropUsed() end
---@return float
function ATPChar:GetKnockdownLifeLoss() end
---@return UStaticMeshComponent
function ATPChar:GetInteractionCylinderComponent() end
---@return float
function ATPChar:GetInjuryLifeLoss() end
---@return float
function ATPChar:GetInjuredWalkPenalty() end
---@return float
function ATPChar:GetInjuredRunPenalty() end
---@return float
function ATPChar:GetInhibitedTimeRemaining() end
---@return TArray<ATPChar>
function ATPChar:GetIndividualPlayerRevealTPCharList() end
---@return TArray<float>
function ATPChar:GetIndividualPlayerRevealTimeList() end
---@return UParticleSystemComponent
function ATPChar:GetIdleWarningParticleComponent() end
---@return ATPChar
function ATPChar:GetHUDTrackingTarget() end
---@return AActor
function ATPChar:GetHolyStaffHealCandidate() end
---@return float
function ATPChar:GetHolyStaffAimMovementSpeed() end
---@return float
function ATPChar:GetHitsByEvil() end
---@param hideObjectType EHideObjectType
---@return UAnimMontage
function ATPChar:GetHidePointMontage(hideObjectType) end
---@return TArray<AActor>
function ATPChar:GetHidePointCandidates() end
---@param hideObjectType EHideObjectType
---@return UAnimMontage
function ATPChar:GetHideMontage(hideObjectType) end
---@return EPickupType
function ATPChar:GetHeldPickupType() end
---@return FPickupInfoStruct
function ATPChar:GetHeldPickupInfoStruct() end
---@return float
function ATPChar:GetHeldPickupCharge() end
---@return APickupBase
function ATPChar:GetHeldPickup() end
---@return EEventPickupType
function ATPChar:GetHeldEventPickupType() end
---@return float
function ATPChar:GetHearingPercent() end
---@return float
function ATPChar:GetHealSenseExposeTimeRemaining() end
---@return float
function ATPChar:GetHealSenseActivationTimeRemaining() end
---@param bCheckCandidatesAllowedToBeHealed boolean
---@return TArray<AActor>
function ATPChar:GetHealingCandidates(bCheckCandidatesAllowedToBeHealed) end
---@return TArray<ATPChar>
function ATPChar:GetHealedByAllies() end
---@return TArray<ATPChar>
function ATPChar:GetHealableAllies() end
---@return boolean
function ATPChar:GetHasAgonyDebuff() end
---@return EPickupType
function ATPChar:GetGrabbingPickupType() end
---@return APickupBase
function ATPChar:GetGrabbingPickup() end
---@return float
function ATPChar:GetGameplayTimeAtLastDeath() end
---@param emoteIndex int32
---@return EGameActionType
function ATPChar:GetGameActionFromEmoteIndex(emoteIndex) end
---@return FEmoteData
function ATPChar:GetFrontEndEmote() end
---@return UFootstepManager
function ATPChar:GetFootstepManager() end
---@param bStrict boolean
---@return FVector
function ATPChar:GetFloorVector(bStrict) end
---@return float
function ATPChar:GetFlamethrowerShowOwnerTime() end
---@return float
function ATPChar:GetFlamethrowerAimMovementSpeed() end
---@return float
function ATPChar:GetFlameMineAimMovementSpeed() end
---@return ESearchableType
function ATPChar:GetFinishedSearchableType() end
---@return float
function ATPChar:GetFedTimeRemaining() end
---@return float
function ATPChar:GetFedTime() end
---@return EVaultType
function ATPChar:GetFallingVaultType() end
---@return float
function ATPChar:GetFallDistance() end
---@return boolean
function ATPChar:GetFailedSkilltestCrafting() end
---@return EFaction
function ATPChar:GetFaction() end
---@return UAnimSequence
function ATPChar:GetFaceAdditive() end
---@return ECharacterType
function ATPChar:GetEvilWheelTransformType() end
---@return float
function ATPChar:GetEvilPickupUseRevealTimeRemaining() end
---@return float
function ATPChar:GetEvilPickupUseRevealTime() end
---@return float
function ATPChar:GetEvilCrowdRevealTime() end
---@return float
function ATPChar:GetEradicatorTargetedSurgeStunTimeRemaining() end
---@return float
function ATPChar:GetEradicatorScannedRevealTimeRemaining() end
---@return float
function ATPChar:GetEradicatorOverchargeTime() end
---@return float
function ATPChar:GetEradicatorBaseScannedRevealTime() end
---@return AWeaponBase
function ATPChar:GetEquippedWeapon() end
---@return TArray<AEnergyPoint>
function ATPChar:GetEnergyPoints() end
---@return TArray<AActor>
function ATPChar:GetEnergyPointCandidates() end
---@return float
function ATPChar:GetEnergizedMoveSpeedBoostTimeRemaining() end
---@return float
function ATPChar:GetEnergizedMoveSpeedBonus() end
---@param Index int32
---@return int32
function ATPChar:GetEmoteUISlotIndexFromEmoteIndex(Index) end
---@param emoteActionType EGameActionType
---@return int32
function ATPChar:GetEmoteIndexFromGameAction(emoteActionType) end
---@param Index int32
---@return FEmoteData
function ATPChar:GetEmoteDataByIndex(Index) end
---@return UExtAkComponent
function ATPChar:GetEmoteAkEmitter() end
---@return float
function ATPChar:GetElectrocutionSpeedPenalty() end
---@return float
function ATPChar:GetEffigyOfAgonyMultiplier() end
---@return TArray<ADollMasterTrap>
function ATPChar:GetDollMasterTraps() end
---@return TArray<AActor>
function ATPChar:GetDollMasterTrapCandidates() end
---@return float
function ATPChar:GetDollMasterRevealedTimeRemaining() end
---@return float
function ATPChar:GetDistanceToClosestGoodCharacter() end
---@return float
function ATPChar:GetDisintegrationTimeRemaining() end
---@return float
function ATPChar:GetDemonSwordSpeedBoostTimeRemaining() end
---@return float
function ATPChar:GetDemonSwordSpeedBonus() end
---@return float
function ATPChar:GetDemonSwordSelfRevealTimeRemaining() end
---@return float
function ATPChar:GetDemonSwordAimMovementSpeed() end
---@return float
function ATPChar:GetDeafenTimeRemaining() end
---@return float
function ATPChar:GetDeafenTime() end
---@return float
function ATPChar:GetDeafenRecoveryTimeRemaining() end
---@return float
function ATPChar:GetCurrentWeaponRange() end
---@return TArray<EWeaponTypeEnum>
function ATPChar:GetCurrentWeaponOptions() end
---@return float
function ATPChar:GetCurrentUntraceableTimeRemaining() end
---@return float
function ATPChar:GetCurrentShroudedTimeRemaining() end
---@return ARemoteCharBase
function ATPChar:GetCurrentRemoteChar() end
---@return FEmoteData
function ATPChar:GetCurrentEmoteData() end
---@return EAnimSpawnableType
function ATPChar:GetCurrentAnimSpawnableItemType() end
---@return float
function ATPChar:GetCurrentAdrenalineSpeedBonus() end
---@return float
function ATPChar:GetCrouchSpeed() end
---@return float
function ATPChar:GetCrossDamageBlockTimeRemaining() end
---@return float
function ATPChar:GetCrossAimMovementSpeed() end
---@return float
function ATPChar:GetCrawlSpeedMultiplier() end
---@return float
function ATPChar:GetCrawlSpeed() end
---@return UCraftStationManagerComponent
function ATPChar:GetCraftStationManagerComponent() end
---@return TArray<ACraftPoint>
function ATPChar:GetCraftPoints() end
---@return TArray<AActor>
function ATPChar:GetCraftPointCandidates() end
---@return boolean
function ATPChar:GetCraftingCompleted() end
---@return float
function ATPChar:GetCoweringTimeRemaining() end
---@return float
function ATPChar:GetCoweringTime() end
---@param maximumRange float
---@param bLineCheck boolean
---@return ATPChar
function ATPChar:GetClosestSurvivorBP(maximumRange, bLineCheck) end
---@param Radius float
---@return TArray<AActor>
function ATPChar:GetCloseByTeens(Radius) end
---@return int32
function ATPChar:GetClientAnomalyCharacterSwitchIgnoreFallingFrames() end
---@return float
function ATPChar:GetChaseActiveTimeRemaining() end
---@return ECharacterType
function ATPChar:GetCharacterType() end
---@return FText
function ATPChar:GetCharacterNameLoc() end
---@return TArray<uint32>
function ATPChar:GetCharacterMETQueue() end
---@return TArray<EPlayerSlot>
function ATPChar:GetCharacterCustomGameTemporarySlots() end
---@param pCandidate AActor
---@return FVector
function ATPChar:GetCandidateSelectionPos(pCandidate) end
---@return float
function ATPChar:GetCameraBoomLength() end
---@return float
function ATPChar:GetBonusLifeTimeRemaining() end
---@return float
function ATPChar:GetBonusLifeTime() end
---@return float
function ATPChar:GetBonusKnockdownLifelossMultiplier() end
---@return float
function ATPChar:GetBonusInjuryLifelossMultiplier() end
---@return float
function ATPChar:GetBlindTime() end
---@return float
function ATPChar:GetBleedIntervalIncrease() end
---@return AActor
function ATPChar:GetBestSecondaryFireCandidate() end
---@param candidateArray TArray<AActor>
---@return AActor
function ATPChar:GetBestCandidateByCharacterOrientation(candidateArray) end
---@param candidateArray TArray<AActor>
---@return AActor
function ATPChar:GetBestCandidate(candidateArray) end
---@return AActor
function ATPChar:GetBestAction3Candidate() end
---@return AActor
function ATPChar:GetBestAction1Candidate() end
---@return float
function ATPChar:GetBaseWeaponDiscardTime() end
---@return float
function ATPChar:GetBaseVaultSpeedMultiplier() end
---@return float
function ATPChar:GetBaseUntraceableTime() end
---@return float
function ATPChar:GetBaseStaggerTime() end
---@return float
function ATPChar:GetBaseSpeedBoostByEvilTime() end
---@return float
function ATPChar:GetBaseSpectralEssenceRestoreSpeedBoostTime() end
---@return float
function ATPChar:GetBaseSpectralEssenceRestoreHealthLossPreventionTime() end
---@return float
function ATPChar:GetBaseShroudedTime() end
---@return float
function ATPChar:GetBaseReviveTime() end
---@return float
function ATPChar:GetBaseRevealedByDollTrapTime() end
---@return float
function ATPChar:GetBaseResurrectTime() end
---@return float
function ATPChar:GetBaseNoisemakerDeploymentTime() end
---@return float
function ATPChar:GetBaseMarredTime() end
---@return float
function ATPChar:GetBaseManualTransformTime() end
---@return float
function ATPChar:GetBaseInhibitedTime() end
---@return float
function ATPChar:GetBaseHealTime() end
---@return float
function ATPChar:GetBaseEvilCrowdRevealTime() end
---@return float
function ATPChar:GetBaseEradicatorTargetedSurgeStunTime() end
---@return float
function ATPChar:GetBaseEnergizedMoveSpeedBoostTime() end
---@return float
function ATPChar:GetBaseDemonSwordSpeedBoostTime() end
---@return float
function ATPChar:GetBaseDemonSwordSelfRevealTime() end
---@return float
function ATPChar:GetBaseCrawlSpeed() end
---@return float
function ATPChar:GetBaseBlindTime() end
---@return float
function ATPChar:GetBaseAdrenalineTime() end
---@return UMaterialInstance
function ATPChar:GetAuraMaterialInstance() end
---@return float
function ATPChar:GetAugurRevealDuration() end
---@param DamageType EDamageType
---@return TArray<EWeaponTypeEnum>
function ATPChar:GetAugmentRemovedWeapons(DamageType) end
---@return UAugmentManager
function ATPChar:GetAugmentManager() end
---@return float
function ATPChar:GetAudioTravelDistanceToActiveEvil() end
---@return float
function ATPChar:GetArmedActiveChaseTimeRemaining() end
---@return UAnimInstance
function ATPChar:GetAnimInstance() end
---@return TArray<AMedKitPoint>
function ATPChar:GetAllMedKitPoints() end
---@return float
function ATPChar:GetAgonyTimeRemaining() end
---@return float
function ATPChar:GetAdrenalineTimeRemaining() end
---@return float
function ATPChar:GetAdrenalineTime() end
---@return float
function ATPChar:GetAdrenalineSpeedBonus() end
---@return float
function ATPChar:GetAdrenalineRampTime() end
---@return AVaultPoint
function ATPChar:GetActiveVaultPoint() end
---@return TArray<UBaseStatusComponent>
function ATPChar:GetActiveStatusComponents() end
---@return USkillTestMinigameBase
function ATPChar:GetActiveSkillTestMinigame() end
---@return ASeasonalEventCenterpiecePoint
function ATPChar:GetActiveSeasonalEventCenterpiecePoint() end
---@return ESearchableType
function ATPChar:GetActiveSearchablePointType() end
---@return ASearchablePoint
function ATPChar:GetActiveSearchablePoint() end
---@return EPickupType
function ATPChar:GetActivePickup() end
---@return AMedKitPoint
function ATPChar:GetActiveMedKitPoint() end
---@return AHidePoint
function ATPChar:GetActiveHidePoint() end
---@return AEnergyPoint
function ATPChar:GetActiveEnergyPoint() end
---@return ADollMasterTrap
function ATPChar:GetActiveDollMasterTrap() end
---@return ADarkShard
function ATPChar:GetActiveDarkShard() end
---@return ACraftPoint
function ATPChar:GetActiveCraftPoint() end
---@return EActiveActionType
function ATPChar:GetActiveAction() end
---@return boolean
function ATPChar:ForceShowMeshWhileNotManifested() end
function ATPChar:Falling() end
function ATPChar:ExpireRaygunProjectiles() end
---@param DeltaSeconds float
function ATPChar:EvaluateChase(DeltaSeconds) end
---@param playerLobbyIndex int32
---@param CharacterType ECharacterType
function ATPChar:EquipPlayerLoadout(playerLobbyIndex, CharacterType) end
---@param enable boolean
function ATPChar:EnableAttackCollision(enable) end
function ATPChar:DropAttachedPhysicsProps() end
---@param DeltaTime float
function ATPChar:DoUpdateHideInSmoke(DeltaTime) end
---@param NewValue float
function ATPChar:DoSetHideInSmoke(NewValue) end
---@return boolean
function ATPChar:DoServerUsedSmokeBombToEscapeUnarmedChase() end
function ATPChar:DoServerUsedPickup() end
function ATPChar:DoServerUpdateWeaponTypeCrafting() end
---@param DeltaTime float
function ATPChar:DoServerUpdateVaultMaster(DeltaTime) end
---@param DeltaSeconds float
function ATPChar:DoServerUpdateTimeSinceLoudCraftFail(DeltaSeconds) end
---@param DeltaSeconds float
function ATPChar:DoServerUpdateTimeSinceLastEradicatorScan(DeltaSeconds) end
---@param DeltaSeconds float
function ATPChar:DoServerUpdateTimeSinceLastBeenHit(DeltaSeconds) end
---@param DeltaSeconds float
function ATPChar:DoServerUpdateTimeSinceEvilTransform(DeltaSeconds) end
---@param DeltaSeconds float
function ATPChar:DoServerUpdateTimeSinceEvilStun(DeltaSeconds) end
---@param DeltaSeconds float
function ATPChar:DoServerUpdateTimeSinceEvilBecomeCorporeal(DeltaSeconds) end
---@param DeltaSeconds float
function ATPChar:DoServerUpdateTimeSinceCraftFail(DeltaSeconds) end
---@param DeltaSeconds float
function ATPChar:DoServerUpdateTimeInjured(DeltaSeconds) end
---@param DeltaSeconds float
function ATPChar:DoServerUpdateSubdued(DeltaSeconds) end
---@param DeltaTime float
function ATPChar:DoServerUpdateStatistics(DeltaTime) end
---@param DeltaTime float
function ATPChar:DoServerUpdateStagger(DeltaTime) end
---@param DeltaSeconds float
function ATPChar:DoServerUpdateSpeedBoostByEvil(DeltaSeconds) end
---@param DeltaTime float
function ATPChar:DoServerUpdateSpectralEssenceRestore(DeltaTime) end
---@param DeltaTime float
function ATPChar:DoServerUpdateSkillTestMinigameAnalytics(DeltaTime) end
---@param DeltaTime float
function ATPChar:DoServerUpdateSkillTestMinigame(DeltaTime) end
---@param DeltaSeconds float
function ATPChar:DoServerUpdateShroudedAndUntraceableTime(DeltaSeconds) end
---@param DeltaSeconds float
function ATPChar:DoServerUpdateSequenceFallbackCheck(DeltaSeconds) end
---@param DeltaSeconds float
function ATPChar:DoServerUpdateSearchableSearch(DeltaSeconds) end
---@param DeltaSeconds float
function ATPChar:DoServerUpdateRevive(DeltaSeconds) end
---@param DeltaSeconds float
function ATPChar:DoServerUpdateRevealedByDollTrapTime(DeltaSeconds) end
---@param DeltaSeconds float
function ATPChar:DoServerUpdateResurrect(DeltaSeconds) end
---@param DeltaTime float
function ATPChar:DoServerUpdateRepositioningTimer(DeltaTime) end
---@param DeltaTime float
function ATPChar:DoServerUpdateNoisemakerDeployment(DeltaTime) end
---@param DeltaTime float
function ATPChar:DoServerUpdateMotivatedTier(DeltaTime) end
---@param DeltaSeconds float
function ATPChar:DoServerUpdateMotionSentinel(DeltaSeconds) end
---@param DeltaSeconds float
function ATPChar:DoServerUpdateMolotovSpeedBoost(DeltaSeconds) end
---@param DeltaSeconds float
function ATPChar:DoServerUpdateMedKitHeal(DeltaSeconds) end
---@param DeltaTime float
function ATPChar:DoServerUpdateMarredTime(DeltaTime) end
---@param DeltaSeconds float
function ATPChar:DoServerUpdateManualTransform(DeltaSeconds) end
---@param DeltaSeconds float
function ATPChar:DoServerUpdateLife(DeltaSeconds) end
function ATPChar:DoServerUpdateLastSafePickupLocation() end
function ATPChar:DoServerUpdateJustWoundedEvil() end
function ATPChar:DoServerUpdateInteractionLists() end
---@param DeltaTime float
function ATPChar:DoServerUpdateInhibitedTime(DeltaTime) end
---@param DeltaSeconds float
function ATPChar:DoServerUpdateHealSenseForTeens(DeltaSeconds) end
---@param DeltaSeconds float
function ATPChar:DoServerUpdateHeal(DeltaSeconds) end
function ATPChar:DoServerUpdateHasActivePing() end
---@param DeltaSeconds float
function ATPChar:DoServerUpdateGivePickup(DeltaSeconds) end
---@param DeltaSeconds float
function ATPChar:DoServerUpdateFlamethrowerShowOwnerTime(DeltaSeconds) end
---@param DeltaSeconds float
function ATPChar:DoServerUpdateFed(DeltaSeconds) end
---@param DeltaSeconds float
function ATPChar:DoServerUpdateFalling(DeltaSeconds) end
---@param DeltaSeconds float
function ATPChar:DoServerUpdateEvilProneReveal(DeltaSeconds) end
---@param DeltaSeconds float
function ATPChar:DoServerUpdateEvilPickupUseReveal(DeltaSeconds) end
---@param DeltaTime float
function ATPChar:DoServerUpdateEvilNearDownedTeen(DeltaTime) end
---@param DeltaSeconds float
function ATPChar:DoServerUpdateEvilCrowdRevealTime(DeltaSeconds) end
---@param DeltaTime float
function ATPChar:DoServerUpdateEradicatorValues(DeltaTime) end
---@param DeltaTime float
function ATPChar:DoServerUpdateEradicatorTargetedSurgeStun(DeltaTime) end
---@param DeltaSeconds float
function ATPChar:DoServerUpdateEquipment(DeltaSeconds) end
---@param DeltaSeconds float
function ATPChar:DoServerUpdateEnergizedMoveSpeedBoostTime(DeltaSeconds) end
---@param DeltaTime float
function ATPChar:DoServerUpdateEmoteLockInPlace(DeltaTime) end
---@param DeltaSeconds float
function ATPChar:DoServerUpdateDollMasterRevealedTimeRemaining(DeltaSeconds) end
---@param DeltaSeconds float
function ATPChar:DoServerUpdateDiscardWeapon(DeltaSeconds) end
---@param DeltaSeconds float
function ATPChar:DoServerUpdateDemonSwordSpeedBoost(DeltaSeconds) end
---@param DeltaSeconds float
function ATPChar:DoServerUpdateDemonSwordSelfReveal(DeltaSeconds) end
---@param DeltaSeconds float
function ATPChar:DoServerUpdateDeafenTime(DeltaSeconds) end
---@param DeltaSeconds float
function ATPChar:DoServerUpdateCrossDamageBlock(DeltaSeconds) end
---@param DeltaSeconds float
function ATPChar:DoServerUpdateCowering(DeltaSeconds) end
function ATPChar:DoServerUpdateCloseByTeens() end
---@param DeltaSeconds float
function ATPChar:DoServerUpdateChase(DeltaSeconds) end
function ATPChar:DoServerUpdateCapsulePositionList() end
---@param DeltaSeconds float
function ATPChar:DoServerUpdateBonusLife(DeltaSeconds) end
---@param DeltaTime float
function ATPChar:DoServerUpdateBlindTime(DeltaTime) end
---@param DeltaSeconds float
function ATPChar:DoServerUpdateBleeding(DeltaSeconds) end
---@param DeltaTime float
function ATPChar:DoServerUpdateAgony(DeltaTime) end
---@param DeltaSeconds float
function ATPChar:DoServerUpdateAdrenaline(DeltaSeconds) end
---@param bForceDiscard boolean
---@param bThrown boolean
function ATPChar:DoServerUnequipWeapon(bForceDiscard, bThrown) end
function ATPChar:DoServerTrySpawnLockbox() end
---@param skillType int32
function ATPChar:DoServerStartRecordingSkillTestAnalytics(skillType) end
function ATPChar:DoServerSpawnTeenSpectralChar() end
function ATPChar:DoServerSpawnLifeEssence() end
---@param hitDirection FVector
function ATPChar:DoServerSimulateHit(hitDirection) end
---@param weaponType EWeaponTypeEnum
function ATPChar:DoServerSetWeaponTypeUsing(weaponType) end
---@param weaponType EWeaponTypeEnum
---@param appliedTime float
function ATPChar:DoServerSetWeaponDamageAppliedStats(weaponType, appliedTime) end
---@param bWasResurrected boolean
function ATPChar:DoServerSetWasResurrected(bWasResurrected) end
---@param pickupType EPickupType
function ATPChar:DoServerSetUsingPickupType(pickupType) end
---@param pickupType EPickupType
function ATPChar:DoServerSetUsingPickup(pickupType) end
---@param bServerUsedSmokeBombToEscapeUnarmedChase boolean
function ATPChar:DoServerSetUsedSmokeBombToEscapeUnarmedChase(bServerUsedSmokeBombToEscapeUnarmedChase) end
---@param bUpdateCollisionProfile boolean
function ATPChar:DoServerSetUpdateCollisionProfile(bUpdateCollisionProfile) end
---@param IsTransforming boolean
function ATPChar:DoServerSetTransforming(IsTransforming) end
---@param pReceiverChar ATPChar
function ATPChar:DoServerSetTradePickupReceiverChar(pReceiverChar) end
---@param pGiverChar ATPChar
function ATPChar:DoServerSetTradePickupGiverChar(pGiverChar) end
---@param pTPChar ATPChar
function ATPChar:DoServerSetTPCharCurrentlyReviving(pTPChar) end
---@param pTPChar ATPChar
function ATPChar:DoServerSetTPCharCurrentlyResurrecting(pTPChar) end
---@param pTPChar ATPChar
function ATPChar:DoServerSetTPCharCurrentlyHealing(pTPChar) end
---@param timeUntilWeaponDiscarded float
function ATPChar:DoServerSetTimeUntilWeaponDiscarded(timeUntilWeaponDiscarded) end
---@param TimeRemaining float
function ATPChar:DoServerSetTimeUntilManualTransform(TimeRemaining) end
---@param timeSpentLanding float
function ATPChar:DoServerSetTimeSpentLanding(timeSpentLanding) end
---@param Time float
function ATPChar:DoServerSetTimeSinceLoudCraftFail(Time) end
---@param Time float
function ATPChar:DoServerSetTimeSinceLastEradicatorScan(Time) end
---@param Time float
function ATPChar:DoServerSetTimeSinceLastBeenHit(Time) end
---@param Time float
function ATPChar:DoServerSetTimeSinceEvilTransform(Time) end
---@param Time float
function ATPChar:DoServerSetTimeSinceEvilStun(Time) end
---@param Time float
function ATPChar:DoServerSetTimeSinceEvilBecomeCorporeal(Time) end
---@param Time float
function ATPChar:DoServerSetTimeSinceCraftFail(Time) end
---@param Seconds float
function ATPChar:DoServerSetTimeReviving(Seconds) end
---@param Seconds float
function ATPChar:DoServerSetTimeResurrecting(Seconds) end
---@param Time float
function ATPChar:DoServerSetTimeInjured(Time) end
---@param TimeRemaining float
function ATPChar:DoServerSetTimeHealing(TimeRemaining) end
---@param serverTimeConsistentlyHearingTensionTrackWhileHiding float
function ATPChar:DoServerSetTimeConsistentlyHearingTensionTrackWhileHiding(serverTimeConsistentlyHearingTensionTrackWhileHiding) end
---@param Seconds float
function ATPChar:DoServerSetTimeBeingRevived(Seconds) end
---@param Seconds float
function ATPChar:DoServerSetTimeBeingResurrected(Seconds) end
---@param TimeRemaining float
function ATPChar:DoServerSetTimeBeingHealed(TimeRemaining) end
---@param Time float
function ATPChar:DoServerSetTimeAssisting(Time) end
---@param IsThrowing boolean
function ATPChar:DoServerSetThrowing(IsThrowing) end
---@param pTeenSpectralChar ATeenSpectralChar
function ATPChar:DoServerSetTeenSpectralChar(pTeenSpectralChar) end
---@param screamReactionTime float
function ATPChar:DoServerSetSubduedTimeRemaining(screamReactionTime) end
---@param screamReactionTime float
function ATPChar:DoServerSetSubduedTime(screamReactionTime) end
---@param subduedTime float
function ATPChar:DoServerSetSubdued(subduedTime) end
---@param pStation AStationBase
function ATPChar:DoServerSetStationBeingUsed(pStation) end
---@param NewValue float
function ATPChar:DoServerSetSpeedBoostByEvilTimeRemaining(NewValue) end
---@param NewValue float
function ATPChar:DoServerSetSpeedBoostByEvilTimeBase(NewValue) end
---@param NewValue float
function ATPChar:DoServerSetSpeedBoostByEvilSpeedMultiplier(NewValue) end
---@param Time float
---@param Multiplier float
function ATPChar:DoServerSetSpeedBoostByEvil(Time, Multiplier) end
---@param NewValue float
function ATPChar:DoServerSetSpectralEssenceRestoreSpeedBoostTime(NewValue) end
---@param NewValue float
function ATPChar:DoServerSetSpectralEssenceRestoreHealthLossPreventionTime(NewValue) end
---@param pSpectatorTarget AGameplayPS
function ATPChar:DoServerSetSpectatorTarget(pSpectatorTarget) end
---@param bSet boolean
function ATPChar:DoServerSetSlowedDuringElectrocution(bSet) end
---@param bSet boolean
function ATPChar:DoServerSetShouldDropPool(bSet) end
---@param puzzlesComplete int32
function ATPChar:DoServerSetSearchPuzzlesCompleted(puzzlesComplete) end
---@param NewValue float
function ATPChar:DoServerSetRevealedByDollTrapTimeRemaining(NewValue) end
---@param reintegrating boolean
function ATPChar:DoServerSetReintegrating(reintegrating) end
---@param prone boolean
function ATPChar:DoServerSetProne(prone) end
---@param pChar AFlameMineChar
function ATPChar:DoServerSetPossessedFlameMineChar(pChar) end
---@param Val EPickupHeightType
function ATPChar:DoServerSetPickupHeightType(Val) end
---@param NewValue float
function ATPChar:DoServerSetNoisemakerDeploymentTimeRemaining(NewValue) end
---@param Tier int32
function ATPChar:DoServerSetMotivatedTier(Tier) end
---@param TimeRemaining float
function ATPChar:DoServerSetMolotovSpeedBoostTimeRemaining(TimeRemaining) end
---@param Time float
function ATPChar:DoServerSetMolotovSpeedBoostTime(Time) end
---@param Time float
function ATPChar:DoServerSetMinigamePenaltyTimeRemaining(Time) end
---@param Time float
function ATPChar:DoServerSetMinigamePenaltyTime(Time) end
---@param Time float
function ATPChar:DoServerSetMinigameBoostTimeRemaining(Time) end
---@param Time float
function ATPChar:DoServerSetMinigameBoostTime(Time) end
---@param bMimicClone boolean
function ATPChar:DoServerSetMimicClone(bMimicClone) end
---@param maxLife float
function ATPChar:DoServerSetMaxLife(maxLife) end
---@param NewValue float
function ATPChar:DoServerSetMarredTimeRemaining(NewValue) end
---@param marredTime float
---@param bPermanent boolean
function ATPChar:DoServerSetMarred(marredTime, bPermanent) end
---@param lifeRemaining float
function ATPChar:DoServerSetLifeRemaining(lifeRemaining) end
---@param lastSafePickupLocation FVector
function ATPChar:DoServerSetLastSafePickupLocation(lastSafePickupLocation) end
---@param pActor AActor
function ATPChar:DoServerSetLastPropUsed(pActor) end
---@param IsKilled boolean
function ATPChar:DoServerSetKilled(IsKilled) end
---@param bValue boolean
function ATPChar:DoServerSetJustWoundedEvil(bValue) end
---@param bJustTransformed boolean
function ATPChar:DoServerSetJustTransformed(bJustTransformed) end
---@param bIsUndead boolean
function ATPChar:DoServerSetIsUndead(bIsUndead) end
---@param bIsTricked boolean
function ATPChar:DoServerSetIsTricked(bIsTricked) end
---@param bSet boolean
function ATPChar:DoServerSetIsRevealedByElectrocution(bSet) end
---@param bIsPlayingResurrectOutro boolean
function ATPChar:DoServerSetIsPlayingResurrectOutro(bIsPlayingResurrectOutro) end
---@param bSet boolean
function ATPChar:DoServerSetIsPlacingPickup(bSet) end
---@param pAnomChar AFPChar
function ATPChar:DoServerSetIsMimicTeenChar(pAnomChar) end
---@param bNewValue boolean
function ATPChar:DoServerSetIsDeployingNoisemaker(bNewValue) end
---@param bInWeaponShootingSequence boolean
function ATPChar:DoServerSetInShootingWeaponSequence(bInWeaponShootingSequence) end
---@param bInProneAnimSequence boolean
function ATPChar:DoServerSetInProneAnimSequence(bInProneAnimSequence) end
---@param inPickupInteractingSequence boolean
function ATPChar:DoServerSetInPickupInteractingSequence(inPickupInteractingSequence) end
---@param bInKilledAnimSequence boolean
function ATPChar:DoServerSetInKilledAnimSequence(bInKilledAnimSequence) end
---@param IsInjured boolean
function ATPChar:DoServerSetInjured(IsInjured) end
---@param NewValue float
function ATPChar:DoServerSetInhibitedTimeRemaining(NewValue) end
---@param inhibitedTime float
function ATPChar:DoServerSetInhibited(inhibitedTime) end
---@param bInFallingAnimSequence boolean
function ATPChar:DoServerSetInFallingAnimSequence(bInFallingAnimSequence) end
---@param pTPChar ATPChar
---@param NewValue float
function ATPChar:DoServerSetIndividualPlayerRevealTime(pTPChar, NewValue) end
---@param IsIncubating boolean
function ATPChar:DoServerSetIncubating(IsIncubating) end
---@param Value int32
function ATPChar:DoServerSetHitsByEvil(Value) end
---@param newStruct FPickupInfoStruct
function ATPChar:DoServerSetHeldPickupInfoStruct(newStruct) end
---@param newCharge float
function ATPChar:DoServerSetHeldPickupCharge(newCharge) end
---@param pHeldPickup APickupBase
function ATPChar:DoServerSetHeldPickup(pHeldPickup) end
---@param tensionTrackIntensity float
function ATPChar:DoServerSetHearingTensionTrack(tensionTrackIntensity) end
---@param TimeRemaining float
function ATPChar:DoServerSetHealSenseExposeTimeRemaining(TimeRemaining) end
---@param TimeRemaining float
function ATPChar:DoServerSetHealSenseActivationTimeRemaining(TimeRemaining) end
---@param Val boolean
function ATPChar:DoServerSetHasAgonyDebuff(Val) end
---@param bNewValue boolean
function ATPChar:DoServerSetHasActivePing(bNewValue) end
---@param pickupType EPickupType
function ATPChar:DoServerSetGrabbingPickupType(pickupType) end
---@param pPickupBase APickupBase
function ATPChar:DoServerSetGrabbingPickup(pPickupBase) end
---@param Time float
function ATPChar:DoServerSetGameplayTimeAtLastDeath(Time) end
---@param bSet boolean
function ATPChar:DoServerSetFrozen(bSet) end
---@param bFrostbit boolean
function ATPChar:DoServerSetFrostbit(bFrostbit) end
---@param bSet boolean
function ATPChar:DoServerSetForceDropHeldPickup(bSet) end
---@param Time float
function ATPChar:DoServerSetFlamethrowerShowOwnerTime(Time) end
---@param TimeRemaining float
function ATPChar:DoServerSetFedTimeRemaining(TimeRemaining) end
---@param Time float
function ATPChar:DoServerSetFedTime(Time) end
---@param lifeRestored float
function ATPChar:DoServerSetFedLifeRestored(lifeRestored) end
---@param lifeRequested float
function ATPChar:DoServerSetFedLifeRequested(lifeRequested) end
---@param bSet boolean
function ATPChar:DoServerSetFeastedOn(bSet) end
---@param vaultType EVaultType
function ATPChar:DoServerSetFallingVaultType(vaultType) end
---@param Val boolean
function ATPChar:DoServerSetFailedSkilltestCrafting(Val) end
---@param TransformType ECharacterType
function ATPChar:DoServerSetEvilWheelTransformType(TransformType) end
---@param bNewValue boolean
function ATPChar:DoServerSetEvilWheelSelectingRandomTransformType(bNewValue) end
---@param TimeRemaining float
function ATPChar:DoServerSetEvilProneRevealTimeRemaining(TimeRemaining) end
---@param NewValue float
function ATPChar:DoServerSetEvilPickupUseRevealTimeRemaining(NewValue) end
---@param NewValue float
function ATPChar:DoServerSetEvilPickupUseRevealTime(NewValue) end
---@param NewValue float
function ATPChar:DoServerSetEvilCrowdRevealTime(NewValue) end
---@param NewValue float
function ATPChar:DoServerSetEradicatorTargetedSurgeStunTimeRemaining(NewValue) end
---@param NewValue float
function ATPChar:DoServerSetEradicatorScannedRevealTimeRemaining(NewValue) end
---@param NewValue float
function ATPChar:DoServerSetEradicatorOverchargeTime(NewValue) end
---@param weapon AWeaponBase
function ATPChar:DoServerSetEquippedWeapon(weapon) end
---@param NewValue float
function ATPChar:DoServerSetEnergizedMoveSpeedBoostTime(NewValue) end
---@param bVal boolean
function ATPChar:DoServerSetEmoting(bVal) end
---@param Val float
function ATPChar:DoServerSetEmoteLockInPlaceTimerRemaining(Val) end
---@param Val float
function ATPChar:DoServerSetEffigyOfAgonyModifier(Val) end
function ATPChar:DoServerSetDollTrapTriggered() end
---@param Amount float
function ATPChar:DoServerSetDollMasterRevealedTimeRemaining(Amount) end
---@param bVal boolean
function ATPChar:DoServerSetDispersedInvisible(bVal) end
---@param disintegrating boolean
function ATPChar:DoServerSetDisintegrating(disintegrating) end
---@param NewValue float
function ATPChar:DoServerSetDemonSwordSpeedBoostTimeRemaining(NewValue) end
---@param DeltaSeconds float
function ATPChar:DoServerSetDemonSwordSelfRevealTimeRemaining(DeltaSeconds) end
---@param NewValue float
function ATPChar:DoServerSetDeafenTimeRemaining(NewValue) end
---@param NewValue float
function ATPChar:DoServerSetDeafenTime(NewValue) end
---@param NewValue float
function ATPChar:DoServerSetDeafenRecoveryTimeRemaining(NewValue) end
---@param deafenTime float
function ATPChar:DoServerSetDeafen(deafenTime) end
---@param IsDead boolean
function ATPChar:DoServerSetDead(IsDead) end
---@param DamageType EDamageType
function ATPChar:DoServerSetCurrentWeaponOptions(DamageType) end
---@param NewValue float
function ATPChar:DoServerSetCurrentUntraceableTime(NewValue) end
---@param NewValue float
function ATPChar:DoServerSetCurrentStaggerTime(NewValue) end
---@param NewValue float
function ATPChar:DoServerSetCurrentShroudedTime(NewValue) end
---@param weaponType EWeaponTypeEnum
function ATPChar:DoServerSetCurrentAnimSpawnableType(weaponType) end
---@param Val float
function ATPChar:DoServerSetCrouchToggleDisableTimer(Val) end
---@param Val float
function ATPChar:DoServerSetCrouchTimer(Val) end
---@param TimeRemaining float
function ATPChar:DoServerSetCrossDamageBlockTimeRemaining(TimeRemaining) end
---@param Val boolean
function ATPChar:DoServerSetCraftingComplete(Val) end
---@param TimeRemaining float
function ATPChar:DoServerSetCoweringTimeRemaining(TimeRemaining) end
---@param Time float
function ATPChar:DoServerSetCoweringTime(Time) end
---@param cowerTime float
function ATPChar:DoServerSetCowering(cowerTime) end
---@param weaponType EWeaponTypeEnum
function ATPChar:DoServerSetChaseEndedWeaponTypeStruck(weaponType) end
---@param chaseEndedType EChaseEndedType
function ATPChar:DoServerSetChaseEndedType(chaseEndedType) end
---@param Time float
function ATPChar:DoServerSetChaseDuration(Time) end
---@param TimeRemaining float
function ATPChar:DoServerSetBonusLifeTimeRemaining(TimeRemaining) end
---@param Time float
function ATPChar:DoServerSetBonusLifeTime(Time) end
---@param NewValue float
function ATPChar:DoServerSetBlindTime(NewValue) end
---@param NewValue float
---@param bPreventUpdateOneFrame boolean
function ATPChar:DoServerSetBlind(NewValue, bPreventUpdateOneFrame) end
---@param bleedTime float
function ATPChar:DoServerSetBleedTime(bleedTime) end
---@param IsBledOut boolean
function ATPChar:DoServerSetBledOut(IsBledOut) end
---@param bServerBeganHidingDuringTensionTrack boolean
function ATPChar:DoServerSetBeganHidingDuringTensionTrack(bServerBeganHidingDuringTensionTrack) end
---@param NewValue float
function ATPChar:DoServerSetBaseUntraceableTime(NewValue) end
---@param NewValue float
function ATPChar:DoServerSetBaseStaggerTime(NewValue) end
---@param NewValue float
function ATPChar:DoServerSetBaseShroudedTime(NewValue) end
---@param NewValue float
function ATPChar:DoServerSetBaseMarredTime(NewValue) end
---@param NewValue float
function ATPChar:DoServerSetBaseInhibitedTime(NewValue) end
---@param NewValue float
function ATPChar:DoServerSetBaseBlindTime(NewValue) end
---@param bAlarmed boolean
function ATPChar:DoServerSetAlarmed(bAlarmed) end
---@param TimeRemaining float
function ATPChar:DoServerSetAdrenalineTimeRemaining(TimeRemaining) end
---@param Time float
---@param bFromPickup boolean
function ATPChar:DoServerSetAdrenalineTime(Time, bFromPickup) end
---@param Time float
function ATPChar:DoServerSetAdrenalineRampTime(Time) end
---@param pVaultPoint AVaultPoint
function ATPChar:DoServerSetActiveVaultPoint(pVaultPoint) end
---@param pSearchablePoint ASeasonalEventCenterpiecePoint
function ATPChar:DoServerSetActiveSeasonalEventCenterpiecePoint(pSearchablePoint) end
---@param pSearchablePoint ASearchablePoint
function ATPChar:DoServerSetActiveSearchablePoint(pSearchablePoint) end
---@param pickupType EPickupType
function ATPChar:DoServerSetActivePickup(pickupType) end
---@param pMedKitPoint AMedKitPoint
function ATPChar:DoServerSetActiveMedKitPoint(pMedKitPoint) end
---@param pHidePoint AHidePoint
function ATPChar:DoServerSetActiveHidePoint(pHidePoint) end
---@param pEnergyPoint AEnergyPoint
function ATPChar:DoServerSetActiveEnergyPoint(pEnergyPoint) end
---@param emoteIndex int32
function ATPChar:DoServerSetActiveEmote(emoteIndex) end
---@param pDollMasterTrap ADollMasterTrap
function ATPChar:DoServerSetActiveDollMasterTrap(pDollMasterTrap) end
---@param pCraftPoint ACraftPoint
function ATPChar:DoServerSetActiveCraftingPoint(pCraftPoint) end
---@param activeAction EActiveActionType
function ATPChar:DoServerSetActiveAction(activeAction) end
---@param pTPChar ATPChar
---@param bResurrectHealthy boolean
---@param resurrectLife float
function ATPChar:DoServerResurrected(pTPChar, bResurrectHealthy, resurrectLife) end
---@param pTPChar ATPChar
function ATPChar:DoServerRequestTradePickup(pTPChar) end
function ATPChar:DoServerRequestStopRevive() end
---@param bInterrupted boolean
function ATPChar:DoServerRequestStopResurrect(bInterrupted) end
function ATPChar:DoServerRequestStopHeal() end
function ATPChar:DoServerRequestBeginDiscardWeapon() end
function ATPChar:DoServerRequestAbortTradePickup() end
function ATPChar:DoServerRequestAbortSecondaryFire() end
function ATPChar:DoServerRequestAbortProjectileWeapon() end
function ATPChar:DoServerRequestAbortPrimaryFire() end
function ATPChar:DoServerRequestAbortGrabbingPickup() end
function ATPChar:DoServerRequestAbortFixedActions() end
function ATPChar:DoServerRequestAbortDroppingPickup() end
function ATPChar:DoServerRequestAbortDiscardWeapon() end
function ATPChar:DoServerRequestAbortAllActions() end
function ATPChar:DoServerRequestAbortActionsDueToFalling() end
function ATPChar:DoServerRequestAbortAction3() end
function ATPChar:DoServerRequestAbortAction1() end
---@param pVaultPoint AVaultPoint
function ATPChar:DoServerRemoveVaultPoint(pVaultPoint) end
---@param pSearchablePoint ASeasonalEventCenterpiecePoint
function ATPChar:DoServerRemoveSeasonalEventCenterpiecePoint(pSearchablePoint) end
---@param pSearchablePoint ASearchablePoint
function ATPChar:DoServerRemoveSearchablePoint(pSearchablePoint) end
---@param pMedKitPoint AMedKitPoint
function ATPChar:DoServerRemoveMedKitPoint(pMedKitPoint) end
function ATPChar:DoServerRemoveInjury() end
---@param pHidePoint AHidePoint
function ATPChar:DoServerRemoveHidePoint(pHidePoint) end
---@param pEnergyPoint AEnergyPoint
function ATPChar:DoServerRemoveEnergyPoint(pEnergyPoint) end
---@param pCraftPoint ACraftPoint
function ATPChar:DoServerRemoveCraftingPoint(pCraftPoint) end
function ATPChar:DoServerReintegrate() end
---@param activeEvilCharacterType ECharacterType
function ATPChar:DoServerRefreshChaseTeen(activeEvilCharacterType) end
---@param bArmed boolean
function ATPChar:DoServerRefreshChaseEvil(bArmed) end
---@param equipState uint8
---@param winfo uint8
function ATPChar:DoServerRecordWeaponAnalytics(equipState, winfo) end
---@param pPickup APickupBase
---@param Usage uint8
function ATPChar:DoServerRecordPickupAnalytics(pPickup, Usage) end
---@param reason EChaseEndedType
---@param evilEnraged boolean
---@param teenHasWeapon EWeaponTypeEnum
function ATPChar:DoServerRecordEndChaseAnalytics(reason, evilEnraged, teenHasWeapon) end
---@param triggerDelay float
function ATPChar:DoServerReactToEcholocation(triggerDelay) end
function ATPChar:DoServerProneToLocomotion() end
---@param bReplacing boolean
function ATPChar:DoServerPlaceHeldPickup(bReplacing) end
function ATPChar:DoServerPerformTakePickup() end
function ATPChar:DoServerPerformGivePickup() end
function ATPChar:DoServerPerfectMinigame() end
function ATPChar:DoServerPassMinigame() end
function ATPChar:DoServerOnWeaponDestroyed() end
---@param bPlayLoseWeaponAnimation boolean
function ATPChar:DoServerOnWeaponDepleted(bPlayLoseWeaponAnimation) end
function ATPChar:DoServerOnRotatorSuccess() end
function ATPChar:DoServerOnRotatorFail() end
function ATPChar:DoServerOnMinigameFailed() end
function ATPChar:DoServerOnHitByEradicatorScan() end
---@param pDeadTPChar ATPChar
function ATPChar:DoServerOnDeadOrDisconnected(pDeadTPChar) end
function ATPChar:DoServerKnockdown() end
---@return boolean
function ATPChar:DoServerIsZoningEvil() end
---@param pHidePoint AHidePoint
function ATPChar:DoServerInspectHidepoint(pHidePoint) end
---@param Type EWeaponTypeEnum
function ATPChar:DoServerIncrementWeaponCraft(Type) end
---@param Type FCharStatType
---@param Amount int32
function ATPChar:DoServerIncrementStats(Type, Amount) end
function ATPChar:DoServerIncrementReviveStats() end
---@param Value int32
function ATPChar:DoServerIncrementNumPlayersRevealedToByMagicSphere(Value) end
---@param Value int32
function ATPChar:DoServerIncrementNumPlayersRevealedToByFlameMine(Value) end
function ATPChar:DoServerIncrementHealStats() end
---@param Delta int32
function ATPChar:DoServerIncreaseHitsByEvil(Delta) end
---@param bonusLife float
---@param Duration float
function ATPChar:DoServerGrantBonusLife(bonusLife, Duration) end
---@return float
function ATPChar:DoServerGetTimeConsistentlyHearingTensionTrackWhileHiding() end
---@return AFlameMineChar
function ATPChar:DoServerGetPossessedFlameMineChar() end
---@param Category EScoringCategory
---@return float
function ATPChar:DoServerGetPointMultiplierForType(Category) end
---@return FVector
function ATPChar:DoServerGetLastSafePickupLocation() end
---@return float
function ATPChar:DoServerGetFedLifeRestored() end
---@return float
function ATPChar:DoServerGetFedLifeRequested() end
---@return float
function ATPChar:DoServerGetFedExponent() end
---@return float
function ATPChar:DoServerGetEcholocationDistance() end
---@return EWeaponTypeEnum
function ATPChar:DoServerGetChaseEndedWeaponTypeStruck() end
---@return EChaseEndedType
function ATPChar:DoServerGetChaseEndedType() end
---@return float
function ATPChar:DoServerGetChaseDuration() end
---@return TArray<float>
function ATPChar:DoServerGetCapsulePositionTimeStampList() end
---@return TArray<FVector>
function ATPChar:DoServerGetCapsulePositionList() end
---@return float
function ATPChar:DoServerGetBleedTime() end
function ATPChar:DoServerFinishSearchableAnimation() end
---@param eResultType int32
function ATPChar:DoServerFinishedSkillTestMinigameAnalytics(eResultType) end
function ATPChar:DoServerFailMinigame() end
function ATPChar:DoServerExpireRaygunProjectiles() end
function ATPChar:DoServerExpireDemonSwordProjectiles() end
---@param weaponType EWeaponTypeEnum
function ATPChar:DoServerEquipWeapon(weaponType) end
---@param statusClass TSubclassOf<UBaseStatusComponent>
---@param pEnforcer ATPChar
function ATPChar:DoServerEnforceStatusComponentExists(statusClass, pEnforcer) end
function ATPChar:DoServerDropPickupAtSafeLocation() end
function ATPChar:DoServerDropPickup() end
function ATPChar:DoServerDropHeldPickup() end
function ATPChar:DoServerDropBloodDecal() end
function ATPChar:DoServerDisintegrate() end
function ATPChar:DoServerDebugDisintegrate() end
---@param bCycleBackwards boolean
function ATPChar:DoServerCycleSpectatorTarget(bCycleBackwards) end
function ATPChar:DoServerCycleEvilTypeRight() end
function ATPChar:DoServerCycleEvilTypeLeft() end
---@param infoStruct FPickupInfoStruct
function ATPChar:DoServerCreateHeldPickup(infoStruct) end
---@param minDistance float
---@return TArray<ATPChar>
function ATPChar:DoServerCountNumberOfTeensNearby(minDistance) end
function ATPChar:DoServerConsumeHeldPickup() end
function ATPChar:DoServerCollectPickup() end
function ATPChar:DoServerClearThrowing() end
function ATPChar:DoServerClearSubdued() end
function ATPChar:DoServerClearStaggered() end
function ATPChar:DoServerClearProne() end
function ATPChar:DoServerClearNullRaygunProjectiles() end
function ATPChar:DoServerClearMarred() end
function ATPChar:DoServerClearInhibited() end
function ATPChar:DoServerClearFed() end
function ATPChar:DoServerClearEmote() end
function ATPChar:DoServerClearElectrocution() end
function ATPChar:DoServerClearDeafen() end
function ATPChar:DoServerClearCowering() end
function ATPChar:DoServerClearBonusLife() end
function ATPChar:DoServerClearBlinded() end
function ATPChar:DoServerClearAdrenaline() end
function ATPChar:DoServerCleanupChildren() end
---@param pHidePoint AHidePoint
function ATPChar:DoServerClaimHidepoint(pHidePoint) end
function ATPChar:DoServerCancelChase() end
function ATPChar:DoServerCalculateAudioDistanceToActiveEvil() end
function ATPChar:DoServerBleedOut() end
function ATPChar:DoServerBeginDeployingNoisemaker() end
---@return boolean
function ATPChar:DoServerBeganHidingDuringTensionTrack() end
function ATPChar:DoServerBecomeDead() end
---@param life float
---@param bSetUndead boolean
function ATPChar:DoServerBecomeAlive(life, bSetUndead) end
---@param weaponType EWeaponTypeEnum
---@param DamageType EDamageType
---@param hitType EWeaponHitType
function ATPChar:DoServerAwardWeaponHit(weaponType, DamageType, hitType) end
---@param overchargeTime float
function ATPChar:DoServerAttemptSetEradicatorOverchargeTime(overchargeTime) end
---@param inhibitTime float
function ATPChar:DoServerAttemptInhibitDueToSurge(inhibitTime) end
---@param bUseMultiple boolean
---@param bHasRevealEffect boolean
function ATPChar:DoServerAttemptEradicatorTargetedSurgeStun(bUseMultiple, bHasRevealEffect) end
---@param bReduceLife boolean
---@param bApplyArendaline boolean
function ATPChar:DoServerApplyInjury(bReduceLife, bApplyArendaline) end
---@param adrenalineTime float
---@param rampTime float
---@param bFromPickup boolean
function ATPChar:DoServerApplyAdrenaline(adrenalineTime, rampTime, bFromPickup) end
---@param Type EWeaponTypeEnum
---@param Amount float
function ATPChar:DoServerAddWeaponXP(Type, Amount) end
---@param pVaultPoint AVaultPoint
function ATPChar:DoServerAddVaultPoint(pVaultPoint) end
---@param Amount float
function ATPChar:DoServerAddTimeBeingRevived(Amount) end
---@param pSearchablePoint ASeasonalEventCenterpiecePoint
function ATPChar:DoServerAddSeasonalEventCenterpiecePoint(pSearchablePoint) end
---@param pSearchablePoint ASearchablePoint
function ATPChar:DoServerAddSearchablePoint(pSearchablePoint) end
---@param Category EScoringCategory
---@param Amount float
---@param Title FText
function ATPChar:DoServerAddScore(Category, Amount, Title) end
---@param pMedKitPoint AMedKitPoint
function ATPChar:DoServerAddMedKitPoint(pMedKitPoint) end
---@param lifeLost float
function ATPChar:DoServerAddLifeLost(lifeLost) end
---@param pHidePoint AHidePoint
function ATPChar:DoServerAddHidePoint(pHidePoint) end
---@param pEnergyPoint AEnergyPoint
function ATPChar:DoServerAddEnergyPoint(pEnergyPoint) end
---@param pCraftPoint ACraftPoint
function ATPChar:DoServerAddCraftingPoint(pCraftPoint) end
---@param pHidePoint AHidePoint
function ATPChar:DoServerActivateHidePoint(pHidePoint) end
---@param lifeEssenceSize float
function ATPChar:DoServerAbsorbLifeEssence(lifeEssenceSize) end
function ATPChar:DoClientUpdateAnomalyCharacterSwitchIgnoreFallingFrames() end
---@param NewValue int32
function ATPChar:DoClientSetAnomalyCharacterSwitchIgnoreFallingFrames(NewValue) end
function ATPChar:ConfigureTPSettings() end
function ATPChar:ClientStopAllCameraShakes() end
function ATPChar:ClientSnapCameraToTarget() end
---@return boolean
function ATPChar:ClientShouldUpdateCollisionProfile() end
---@param bNewValue boolean
function ATPChar:ClientSetUpdateCollisionProfile(bNewValue) end
function ATPChar:ClientExpireRaygunProjectiles() end
function ATPChar:ClearFrontEndEmote() end
function ATPChar:ClearAttachedAnimProps() end
function ATPChar:ClearAllEmoteFX() end
---@return boolean
function ATPChar:CanSpawnRemoteCharInFront() end
---@return boolean
function ATPChar:CanEnterProneState() end
---@return boolean
function ATPChar:CanEnterKilledState() end
---@return boolean
function ATPChar:CanAcceptMoveInput() end
---@return float
function ATPChar:CalculateGroundFriction() end
---@return float
function ATPChar:CalculateAcceleration() end
---@return boolean
function ATPChar:AverageDistanceTravelledAboveSprintVaultThreshold() end
---@param pNewPickup APickupBase
function ATPChar:AttachPickupToPlayerHand(pNewPickup) end
---@return boolean
function ATPChar:AnomalyFallingOverrideActive() end
---@return boolean
function ATPChar:AllowRightHandAnimAdditive() end
---@return boolean
function ATPChar:AllowMousePitch() end
---@return boolean
function ATPChar:AllowLeftHandAnimAdditive() end
---@return boolean
function ATPChar:AllowHeldPickupVisible() end
---@return boolean
function ATPChar:AllowEquippedWeaponVisible() end
---@return boolean
function ATPChar:AllowedToVault() end
---@return boolean
function ATPChar:AllowedToUseWeapons() end
---@return boolean
function ATPChar:AllowedToUseSecondWind() end
---@return boolean
function ATPChar:AllowedToUseResolve() end
---@return boolean
function ATPChar:AllowedToUsePickup() end
---@return boolean
function ATPChar:AllowedToUseMedKitPoint() end
---@return boolean
function ATPChar:AllowedToUseEvilWheel() end
---@return boolean
function ATPChar:AllowedToUseEnergyPoint() end
---@return boolean
function ATPChar:AllowedToUseAugments() end
---@return boolean
function ATPChar:AllowedToStartEmoting() end
---@return boolean
function ATPChar:AllowedToSpectate() end
---@return boolean
function ATPChar:AllowedToSpawnTeenSpectral() end
---@return boolean
function ATPChar:AllowedToSearch() end
---@return boolean
function ATPChar:AllowedToRevive() end
---@return boolean
function ATPChar:AllowedToResurrect() end
---@return boolean
function ATPChar:AllowedToReceivePickup() end
---@return boolean
function ATPChar:AllowedToPlayUnequipAnimation() end
---@return boolean
function ATPChar:AllowedToPlacePickup() end
---@return boolean
function ATPChar:AllowedToLeaveSeasonalEventCenterpiecePoint() end
---@return boolean
function ATPChar:AllowedToLeaveSearchable() end
---@return boolean
function ATPChar:AllowedToHide() end
---@return boolean
function ATPChar:AllowedToHeal() end
---@param pPickupBase APickupBase
---@return boolean
function ATPChar:AllowedToGrabPickup(pPickupBase) end
---@return boolean
function ATPChar:AllowedToGivePickup() end
---@return boolean
function ATPChar:AllowedToGetLifeEssence() end
---@return boolean
function ATPChar:AllowedToExaminePickups() end
---@return boolean
function ATPChar:AllowedToEmote() end
---@return boolean
function ATPChar:AllowedToDropHeldPickup() end
---@return boolean
function ATPChar:AllowedToDiscardWeapon() end
---@return boolean
function ATPChar:AllowedToDisarmDollMasterTrap() end
---@return boolean
function ATPChar:AllowedToCycleSpectator() end
---@return boolean
function ATPChar:AllowedToCrouch() end
---@return boolean
function ATPChar:AllowedToCraft() end
---@return boolean
function ATPChar:AllowedToCancelAim() end
---@return boolean
function ATPChar:AllowedToBeRevived() end
---@return boolean
function ATPChar:AllowedToBeRevealed() end
---@return boolean
function ATPChar:AllowedToBeResurrected() end
---@param bUsingHolyStaff boolean
---@return boolean
function ATPChar:AllowedToBeHealed(bUsingHolyStaff) end
---@return boolean
function ATPChar:AllowedToActivateDarkShard() end
function ATPChar:AdjustPositionForInteraction() end


---@class ATVIntroEffect : AActor
---@field mpTVScreenMaterialInstance UMaterialInstance
---@field mpTVIntroMaterialInstance UMaterialInstance
---@field mpVHSWorldMaterialInstance UMaterialInstance
---@field mpTVIntroPostProcessComponent UPostProcessComponent
---@field mpTVScreenCapturePostProcess UMaterial
---@field mpCaptureContainer USceneComponent
---@field mpSceneCaptureComponent USceneCaptureComponent2D
---@field mpTVScreenCaptureComponent USceneCaptureComponent2D
---@field mScreens TArray<AActor>
---@field mOverlays TArray<AActor>
---@field mTVViewPostProcessWeight float
ATVIntroEffect = {}

---@param Weight float
function ATVIntroEffect:SetPostProcessWeightForAllTPChars(Weight) end
---@param bSet boolean
function ATVIntroEffect:SetCinematicMode(bSet) end
---@param bSet boolean
function ATVIntroEffect:SetCaptureEnabled(bSet) end
---@return UMaterialInstance
function ATVIntroEffect:GetVHSWorldMaterialInstance() end
---@return UMaterialInstance
function ATVIntroEffect:GetTVIntroMaterialInstance() end


---@class ATalismanWeapon : AWeaponBase
---@field mpMainBeamLineParticleSystemComponent UParticleSystemComponent
---@field mpWeakBeamLineParticleSystemComponent UParticleSystemComponent
---@field mpBeamHitParticleSystemComponent UParticleSystemComponent
---@field mpPointLightComponent UPointLightComponent
---@field mpAbsorbParticleSystemComponent UParticleSystemComponent
---@field mpCollisionComponent USphereComponent
---@field mbAbsorbing boolean
---@field mbLockedOn boolean
---@field mAbsorbMultiplier float
---@field mbFiring boolean
---@field mbIsHittingEvil boolean
---@field mBeamLerpAmount float
---@field mBeamMaxTangentStrength float
---@field mBeamTangentMultiplier float
---@field mLastTargetBeamLocation FVector
---@field mTargetBeamLocation FVector
---@field mbBeamHitWorld boolean
---@field mHitBones TArray<int32>
---@field mpBeamTargetComponent UPrimitiveComponent
---@field mpAbsorbMultiplierCurve UCurveFloat
---@field mpLockOnMultiplierCurve UCurveFloat
---@field mpTargetCone UStaticMeshComponent
---@field mCurrentAbsorb float
---@field mMaxAbsorb float
---@field mbDrainingHealth boolean
---@field mbPowered boolean
---@field mTimeUntilPowered float
ATalismanWeapon = {}

function ATalismanWeapon:UpdateWwiseParameters() end
function ATalismanWeapon:UpdateWwiseAbsorbFactor() end
function ATalismanWeapon:UpdateTargetCone() end
function ATalismanWeapon:StopTalismanAbsorbActiveAkEvent() end
function ATalismanWeapon:StopBeamActiveAkEvent() end
function ATalismanWeapon:PlayBeamStartupAkEvent() end
function ATalismanWeapon:PlayBeamShutdownAkEvent() end
function ATalismanWeapon:PlayBeamActiveAkEvent() end
function ATalismanWeapon:MulticastAllStopTalismanAbsorbActive() end
function ATalismanWeapon:MulticastAllStopBeamActive() end
function ATalismanWeapon:MulticastAllPlayTalismanBeamStartup() end
function ATalismanWeapon:MulticastAllPlayTalismanBeamShutdown() end
function ATalismanWeapon:MulticastAllPlayTalismanAbsorbStartup() end
function ATalismanWeapon:MulticastAllPlayTalismanAbsorbShutdown() end
function ATalismanWeapon:MulticastAllPlayTalismanAbsorbActive() end
function ATalismanWeapon:MulticastAllPlayBeamActive() end
---@return boolean
function ATalismanWeapon:IsLockedOn() end
---@return boolean
function ATalismanWeapon:IsHittingEvil() end
---@return boolean
function ATalismanWeapon:IsFiring() end
---@return boolean
function ATalismanWeapon:IsAbsorbing() end
---@return float
function ATalismanWeapon:GetMaxAbsorb() end
---@return float
function ATalismanWeapon:GetCurrentAbsorb() end
---@return USphereComponent
function ATalismanWeapon:GetCollisionComponent() end
---@return float
function ATalismanWeapon:GetBaseMaxCharge() end
---@return float
function ATalismanWeapon:GetAbsorbMultiplier() end
---@param maxAbsorb float
function ATalismanWeapon:DoServerSetMaxAbsorb(maxAbsorb) end
---@param bSet boolean
function ATalismanWeapon:DoServerSetLockedOn(bSet) end
---@param bSet boolean
function ATalismanWeapon:DoServerSetFiring(bSet) end
---@param currentAbsorb float
function ATalismanWeapon:DoServerSetCurrentAbsorb(currentAbsorb) end
---@param absorbMultiplier float
function ATalismanWeapon:DoServerSetAbsorbMultiplier(absorbMultiplier) end
---@param bSet boolean
function ATalismanWeapon:DoServerSetAbsorbing(bSet) end
function ATalismanWeapon:DoServerDebugTogglePower() end
---@return boolean
function ATalismanWeapon:BeamHitWorld() end


---@class ATeenSpectralChar : ARemoteCharBase
---@field mSpiritWorldEffectStrength float
---@field mpSpiritWorldMaterialInstance UMaterialInstance
---@field mpSpectralDataAsset UTeenSpectralDataAsset
---@field mbIsInSpawningAnimation boolean
---@field mbReceivedFirstInput boolean
ATeenSpectralChar = {}

function ATeenSpectralChar:UpdateVisibility() end
---@param DeltaSeconds float
function ATeenSpectralChar:UpdateSpiritWorldEffect(DeltaSeconds) end
---@param DeltaSeconds float
function ATeenSpectralChar:UpdatePulseEffects(DeltaSeconds) end
---@param bVal boolean
function ATeenSpectralChar:SetIsInSpawningAnimation(bVal) end
---@return boolean
function ATeenSpectralChar:IsInSpawningAnimation() end
---@return float
function ATeenSpectralChar:GetShutdownTime() end


---@class AThumbnailLightRig : AActor
AThumbnailLightRig = {}


---@class AThumbnailRender : AActor
---@field CaptureAssets TArray<TSoftObjectPtr<UClothingItemDataAsset>>
---@field mCapturePreset EThumbnailCapturePreset
---@field PresetLightRigs TMap<EThumbnailCapturePreset, AThumbnailLightRig>
---@field EditMode boolean
---@field EditCapturePreset EThumbnailCapturePreset
---@field EditCapturePresetSettings FThumbnailCaptureSettings
---@field mCamera UCameraComponent
---@field SceneCapture USceneCaptureComponent2D
---@field MannequinPosesMale TArray<UAnimSequence>
---@field MannequinPosesFemale TArray<UAnimSequence>
---@field mCaptureFileName FString
---@field mCaptureFileLocation FString
---@field mpFemaleMannequinDataAsset UClothingItemDataAsset
---@field mpMaleMannequinDataAsset UClothingItemDataAsset
---@field mpCurrentMannequinDataAsset UClothingItemDataAsset
---@field mpSceneRoot USceneComponent
---@field mpCustomSkeletonComponent UTeenClothingComponent
---@field mpMannequin USkeletalMeshComponent
---@field mpCurrentCaptureAsset UClothingItemDataAsset
---@field mCapturePresetSettings FThumbnailCaptureSettings
---@field mSavedCapturePresets TMap<EThumbnailCapturePreset, FThumbnailCaptureSettings>
---@field mSavedCaptureData TMap<UClothingItemDataAsset, EThumbnailCapturePreset>
---@field mRecordedMeshSlotVisibility TMap<EMeshSlot, FRecordedMeshSlotVisibility>
---@field mpEmptyMask UTexture2D
AThumbnailRender = {}

function AThumbnailRender:UpdatetLightRig() end
---@param presetSettings FThumbnailCaptureSettings
function AThumbnailRender:UpdateMannequin(presetSettings) end
function AThumbnailRender:UpdateCurrentCaptureAsset() end
function AThumbnailRender:UpdateCaptureSettings() end
function AThumbnailRender:Update() end
---@param Asset UClothingItemDataAsset
function AThumbnailRender:SetCurrentCaptureAsset(Asset) end
---@param presetSettings FThumbnailCaptureSettings
function AThumbnailRender:SetCaptureSettings(presetSettings) end
---@param assetFName FName
function AThumbnailRender:SetCapturePresetByAssetName(assetFName) end
---@param Preset EThumbnailCapturePreset
function AThumbnailRender:SetCapturePreset(Preset) end
---@param ClothingAsset UClothingItemDataAsset
function AThumbnailRender:SetCaptureNaming(ClothingAsset) end
---@param ClothingAsset UClothingItemDataAsset
function AThumbnailRender:SetCaptureMesh(ClothingAsset) end
function AThumbnailRender:SetCameraLocationFromViewport() end
function AThumbnailRender:SaveDataToJson() end
function AThumbnailRender:SaveCapturePresetSettings() end
function AThumbnailRender:RecaptureAllAssets() end
---@param bIsMale boolean
function AThumbnailRender:PopulateMannequinPoseList(bIsMale) end
function AThumbnailRender:LoadMannequins() end
function AThumbnailRender:LoadDataFromJson() end
---@return TMap<EThumbnailCapturePreset, FThumbnailCaptureSettings>
function AThumbnailRender:GetSavedCapturePresets() end
---@return TMap<UClothingItemDataAsset, EThumbnailCapturePreset>
function AThumbnailRender:GetSavedCaptureData() end
---@return FThumbnailCaptureSettings
function AThumbnailRender:GetCurrentCapturePresetSettings() end
---@param Preset EThumbnailCapturePreset
---@return FThumbnailCaptureSettings
function AThumbnailRender:GetCapturePresetSettings(Preset) end
---@return EThumbnailCapturePreset
function AThumbnailRender:GetCapturePreset() end
---@param Filename FString
function AThumbnailRender:ExportRenderTargetToPNG(Filename) end
function AThumbnailRender:DoCaptureCurrentAsset() end
---@param captureSettings FThumbnailCaptureSettings
---@return FTransform
function AThumbnailRender:CreateMannequinTransform(captureSettings) end
---@return FString
function AThumbnailRender:CreateExportFilePath() end
function AThumbnailRender:CaptureCurrentAssets() end
function AThumbnailRender:AddItemToSavedCapturePreset() end


---@class AToadChar : AFPChar
---@field mTimeAcidArmorRemaining float
---@field mAcidArmorCooldown float
---@field mAcidArmorDamagedEffect boolean
---@field mTimeBeforeResonanceEcho float
---@field mbEcholocating boolean
---@field mEcholocationCooldown float
---@field mbServerWasWeaponAppliedDuringLeap boolean
---@field mpToadArmorPPMaterial UMaterialInstance
---@field mpEcholocationCollision USphereComponent
---@field mArmorBreakShake TSubclassOf<UMatineeCameraShake>
---@field mLeapShockwaveEffectClass TSubclassOf<AToadLeapShockwaveEffect>
---@field mServerTimeSinceLastEcholocation float
---@field mpArmourEffectComponent UToadArmourEffectComponent
---@field mpLeapCameraCurve UCurveFloat
---@field mClientCameraLeapTimer float
---@field mEvilViewNiagaraSystemPath FSoftObjectPath
AToadChar = {}

---@param NewValue float
function AToadChar:SetClientCameraLeapTimer(NewValue) end
function AToadChar:OnRep_IsEcholocating() end
function AToadChar:MulticastAllStopToadLeapChargeSound() end
function AToadChar:MulticastAllStopToadEcholocationChargeSound() end
function AToadChar:MulticastAllStopToadAcidArmorChargeSound() end
function AToadChar:MulticastAllPlayToadLeapStartSound() end
function AToadChar:MulticastAllPlayToadLeapEndSound() end
function AToadChar:MulticastAllPlayToadLeapChargeSound() end
function AToadChar:MulticastAllPlayToadEcholocationSound() end
function AToadChar:MulticastAllPlayToadEcholocationResonanceSound() end
function AToadChar:MulticastAllPlayToadEcholocationChargeSound() end
function AToadChar:MulticastAllPlayToadAcidArmorOnFinishedSound() end
---@param bExpired boolean
function AToadChar:MulticastAllPlayToadAcidArmorOff(bExpired) end
function AToadChar:MulticastAllPlayToadAcidArmorChargeSound() end
---@param pVictimChar ATPChar
function AToadChar:MulticastAllPlayAcidArmorSizzle(pVictimChar) end
function AToadChar:MulticastAllEcholocationEffect() end
---@param bWasWeaponApplied boolean
function AToadChar:MulticastAllCreateLeapShockwave(bWasWeaponApplied) end
---@return boolean
function AToadChar:IsEcholocating() end
---@return boolean
function AToadChar:IsAcidArmorOn() end
---@return float
function AToadChar:GetTimeBeforeResonanceEcho() end
---@return UCurveFloat
function AToadChar:GetLeapCameraCurve() end
---@return float
function AToadChar:GetEcholocationRange() end
---@return float
function AToadChar:GetClientCameraLeapTimer() end
---@return float
function AToadChar:GetBaseEcholocationRange() end
---@return float
function AToadChar:GetBaseAcidArmorTime() end
---@return float
function AToadChar:GetAcidArmorTimeRemaining() end
---@return boolean
function AToadChar:DoServerWasWeaponAppliedDuringLeap() end
---@param DeltaSeconds float
function AToadChar:DoServerUpdateTimeSinceLastEcholocation(DeltaSeconds) end
---@param DeltaSeconds float
function AToadChar:DoServerUpdateResonanceTimeRemaining(DeltaSeconds) end
---@param detlaSeconds float
function AToadChar:DoServerUpdateAcidArmor(detlaSeconds) end
---@param bSet boolean
function AToadChar:DoServerSetWasWeaponAppliedDuringLeap(bSet) end
---@param Time float
function AToadChar:DoServerSetTimeSinceLastEcholocation(Time) end
---@param newLeapTime float
function AToadChar:DoServerSetTimeBeforeResonanceEcho(newLeapTime) end
---@param TimeRemaining float
function AToadChar:DoServerSetTimeAcidArmorRemaining(TimeRemaining) end
---@param bSet boolean
function AToadChar:DoServerSetEcholocating(bSet) end
---@return boolean
function AToadChar:DoServerPerformEcholocation() end
---@return float
function AToadChar:DoServerGetTimeSinceLastEcholocation() end
---@param bBroken boolean
function AToadChar:DoServerClearAcidArmor(bBroken) end
---@return boolean
function AToadChar:DoServerApplyAcidArmor() end
---@return boolean
function AToadChar:CanEcholocate() end
---@return boolean
function AToadChar:CanAcidArmor() end


---@class AToadEcholocationEffect : AActor
---@field mpResonancePostProcessComponent UPostProcessComponent
---@field mpResonanceMaterial UMaterialInstance
---@field mpResonanceMaterialDynamic UMaterialInstanceDynamic
---@field mpOwner AToadChar
---@field mHitTPChars TArray<ATPChar>
---@field mCurrentRadius float
---@field mExpansionRate float
---@field mTimeAlive float
---@field mMaxRange float
---@field mbServerAwardedClose boolean
AToadEcholocationEffect = {}

---@param pOwner AToadChar
function AToadEcholocationEffect:SetOwningToadChar(pOwner) end
---@return AToadChar
function AToadEcholocationEffect:GetOwningToadChar() end
---@param DeltaTime float
function AToadEcholocationEffect:DoServerUpdatePlayerCollision(DeltaTime) end


---@class AToadLeapShockwaveEffect : AEvilShockwaveEffect
---@field mSphereMeshBaseSize float
---@field mpShockwaveMaterial UMaterialInstance
---@field mbToadWasWeaponApplied boolean
---@field mpMeshComponent UStaticMeshComponent
---@field mpLeapParticlesComponent UParticleSystemComponent
AToadLeapShockwaveEffect = {}

---@return boolean
function AToadLeapShockwaveEffect:ToadWasWeaponApplied() end
---@param bSet boolean
function AToadLeapShockwaveEffect:SetToadWasWeaponApplied(bSet) end
---@return float
function AToadLeapShockwaveEffect:GetBaseStaggerTime() end


---@class ATrainingCharPicker : AActor
---@field mpTextRenderComponent UTextRenderComponent
---@field mpInteractionStation UStaticMeshComponent
---@field mpCapsuleComponent UCapsuleComponent
---@field mWidgetClass TSubclassOf<UInteractableTrainingObjectWidget>
---@field mpBlackBackground TSoftObjectPtr<UTexture>
---@field mbCanUseStation boolean
---@field mbEvil boolean
---@field mpDMI UMaterialInstanceDynamic
---@field mpCapturedTPChar ATPChar
---@field mCharacterPortraits TMap<ECharacterType, TSoftObjectPtr<UTexture2D>>
---@field mpGameScriptingMan UGameScriptingManager
---@field mCharIndex int32
---@field mCurrCharacterType ECharacterType
---@field mpCreatedWidget UInteractableTrainingObjectWidget
ATrainingCharPicker = {}

---@param noise float
---@param Texture UTexture
function ATrainingCharPicker:UpdateMaterial(noise, Texture) end
function ATrainingCharPicker:UpdateDisplayTextOnLeaving() end
---@param playerChar ATPChar
---@param bFoundValidType boolean
function ATrainingCharPicker:UpdateCharacterIndex(playerChar, bFoundValidType) end
---@param bPressed boolean
function ATrainingCharPicker:TutorialButtonPressed_Select(bPressed) end
---@param bPressed boolean
function ATrainingCharPicker:TutorialButtonPressed_Right(bPressed) end
---@param AxisValue float
function ATrainingCharPicker:TutorialButtonPressed_OnTutorialScroll(AxisValue) end
---@param bPressed boolean
function ATrainingCharPicker:TutorialButtonPressed_Left(bPressed) end
---@param pOverlappedComp UPrimitiveComponent
---@param pOtherActor AActor
---@param pOtherComp UPrimitiveComponent
---@param OtherBodyIndex int32
function ATrainingCharPicker:OnCapsuleEndOverlap(pOverlappedComp, pOtherActor, pOtherComp, OtherBodyIndex) end
---@param pOverlappedComponent UPrimitiveComponent
---@param pOtherActor AActor
---@param pOtherComp UPrimitiveComponent
---@param OtherBodyIndex int32
---@param bFromSweep boolean
---@param SweepResult FHitResult
function ATrainingCharPicker:OnCapsuleBeginOverlap(pOverlappedComponent, pOtherActor, pOtherComp, OtherBodyIndex, bFromSweep, SweepResult) end
---@param bRight boolean
function ATrainingCharPicker:CycleCharacter(bRight) end
function ATrainingCharPicker:Confirm() end


---@class ATrainingMonsterPicker : ATrainingCharPicker
ATrainingMonsterPicker = {}


---@class ATrainingTeenAIControllerV2 : AAIController
---@field mpDefaultBehaviorTree UBehaviorTree
---@field mpEvilPathPredictionComponent UPathPredictionComponent
---@field mPerceivedActors FPerceivedActors
ATrainingTeenAIControllerV2 = {}

---@param pSource ATPChar
function ATrainingTeenAIControllerV2:OnTeenHit(pSource) end
---@param UpdateInfo FActorPerceptionUpdateInfo
function ATrainingTeenAIControllerV2:OnTargetPerceptionInfoUpdated(UpdateInfo) end
---@return ATPChar
function ATrainingTeenAIControllerV2:GetPossessedTPChar() end
---@param bClosest boolean
---@return ATPChar
function ATrainingTeenAIControllerV2:GetPerceivedActor(bClosest) end
---@param pCraftPoint ACraftPoint
function ATrainingTeenAIControllerV2:AIUseCraftPoint(pCraftPoint) end
---@param bAttackPressed boolean
function ATrainingTeenAIControllerV2:AISecondaryAttack(bAttackPressed) end
---@param pTPChar ATPChar
function ATrainingTeenAIControllerV2:AIRequestHeal(pTPChar) end
---@param bAttackPressed boolean
function ATrainingTeenAIControllerV2:AIPrimaryAttack(bAttackPressed) end


---@class ATrainingTeenPicker : ATrainingCharPicker
ATrainingTeenPicker = {}


---@class ATransformLocator : AActor
ATransformLocator = {}


---@class ATriggerableEffect : AActor
---@field mpParticleSystemComponent UParticleSystemComponent
---@field mpExtAkComponent UExtAkComponent
---@field mUseParticleSystemComponent boolean
---@field mUseAudioSystemComponent boolean
---@field mbZForward boolean
ATriggerableEffect = {}

function ATriggerableEffect:OnEffectTriggered() end
function ATriggerableEffect:OnEffectStopped() end


---@class ATutorialCharAIController : AAIController
---@field mpAIPerceptionComp UAIPerceptionComponent
---@field BehaviorComp UBehaviorTreeComponent
---@field TargetLocationKeyName FName
---@field TargetCharacterKeyName FName
---@field mBehaviourTreeData TArray<FBehaviourTreeData>
ATutorialCharAIController = {}

---@param pActor AActor
---@param Stimulus FAIStimulus
function ATutorialCharAIController:OnUpdateTargetPerception(pActor, Stimulus) end
---@param actorList TArray<AActor>
function ATutorialCharAIController:OnUpdatePerception(actorList) end
function ATutorialCharAIController:OnReleasedAttack() end
function ATutorialCharAIController:OnPressedAttack() end
---@param wayPointLocation FVector
---@param movementSpeedType EMovementSpeedType
---@param bOverrideSpeed boolean
function ATutorialCharAIController:NavigateToWaypoint(wayPointLocation, movementSpeedType, bOverrideSpeed) end


---@class AUsedPickup : AActor
---@field mThrowRotation FRotator
---@field mVelocityInfluenceMultiplier float
---@field mTorqueMultiplier float
---@field mpMesh UStaticMeshComponent
---@field mpBoxCollision UBoxComponent
---@field mpPickupSkinDataAsset UPickupSkinDataAsset
AUsedPickup = {}

---@param pSkin UItemDataAsset
function AUsedPickup:MulticastAllSetSkin(pSkin) end
---@return UStaticMeshComponent
function AUsedPickup:GetMesh() end
---@param pickupType EPickupType
---@return UClass
function AUsedPickup:GetClassFromPickupType(pickupType) end
---@return UBoxComponent
function AUsedPickup:GetBoxCollision() end


---@class AUtilityEvilController : AAIController
---@field mpAISense_Sight UAISenseConfig_Sight
---@field mpAISense_Hearing UAISenseConfig_Hearing
---@field mpCurrentChaseTarget ABaseChar
---@field mTimeChasingCurrentTarget float
---@field mCachedAudioInfoByID TMap<int32, FAIAudioInfo>
---@field mCurrentAudioInfoByID TMap<int32, FAIAudioInfo>
---@field mDifficultyLevel EAIDifficultyLevel
---@field mTimeAtPatrolByPatrollableActor TMap<AActor, float>
AUtilityEvilController = {}

function AUtilityEvilController:UpdatePerception() end
function AUtilityEvilController:UpdateMovementSpeed() end
---@param DeltaSeconds float
function AUtilityEvilController:UpdateChasingTarget(DeltaSeconds) end
---@param audibleActorInfo FAIAudioInfo
---@return boolean
function AUtilityEvilController:ShouldAIUpdateTritonDistanceTo(audibleActorInfo) end
---@param pPatrollableActor AActor
---@param timeAtPatrol float
function AUtilityEvilController:SetTimeAtPatrol(pPatrollableActor, timeAtPatrol) end
---@param difficultyLevel EAIDifficultyLevel
function AUtilityEvilController:SetDifficultyLevel(difficultyLevel) end
---@param pEvil AFPChar
---@param pHitTeen ATPChar
---@param lastHitType ELastHitType
function AUtilityEvilController:OnTeenHit(pEvil, pHitTeen, lastHitType) end
---@param UpdateInfo FActorPerceptionUpdateInfo
function AUtilityEvilController:OnTargetPerceptionInfoUpdated(UpdateInfo) end
---@param UpdateInfo FActorPerceptionUpdateInfo
function AUtilityEvilController:OnPerceivedNoise(UpdateInfo) end
---@param pTeen ATPChar
---@return boolean
function AUtilityEvilController:IsTeenActivelyDangerous(pTeen) end
---@return boolean
function AUtilityEvilController:IsDifficultyKillSwitchEnabled() end
---@param pPatrollableActor AActor
---@return float
function AUtilityEvilController:GetTimeAtPatrol(pPatrollableActor) end
---@return float
function AUtilityEvilController:GetHearingAccuracy() end
---@return EAIDifficultyLevel
function AUtilityEvilController:GetDifficultyLevel() end
---@param senseToForget TSubclassOf<UAISense>
function AUtilityEvilController:ForgetSense(senseToForget) end


---@class AUtilityTeenController : AAIController
---@field mpDefaultBehaviourTree UBehaviorTree
---@field mpAISense_Sight UAISenseConfig_Sight
---@field mpAISense_Hearing UAISenseConfig_Hearing
---@field mDifficultyLevel EAIDifficultyLevel
AUtilityTeenController = {}

function AUtilityTeenController:UpdateSelfReference() end
function AUtilityTeenController:UpdateRunningMode() end
function AUtilityTeenController:UpdateMovementSpeed() end
---@param difficultyLevel EAIDifficultyLevel
function AUtilityTeenController:SetDifficultyLevel(difficultyLevel) end
---@param UpdateInfo FActorPerceptionUpdateInfo
function AUtilityTeenController:OnTargetPerceptionInfoUpdated(UpdateInfo) end
---@return boolean
function AUtilityTeenController:IsDifficultyKillSwitchEnabled() end
---@return EAIDifficultyLevel
function AUtilityTeenController:GetDifficultyLevel() end


---@class AVaultPoint : APointBase
---@field mSelectedVaultHeightType EVaultHeightType
---@field mpEvilCapsuleComponent UCapsuleComponent
---@field mSelectedVaultType EVaultType
---@field mpSibling AVaultPoint
---@field mCurrentCharLerpSpeed float
---@field mVaultStripSize float
---@field mHeightTargetIndicator UStaticMeshComponent
---@field mpEdgeIndicator UStaticMeshComponent
---@field mpTeenVaultingStripIndicator UStaticMeshComponent
---@field mpEvilVaultingStripIndicator UStaticMeshComponent
---@field mpSmartNavLinkComponent UNavLinkCustomComponent
AVaultPoint = {}

function AVaultPoint:UpdateNavLinkProxy() end
---@param bEnable boolean
function AVaultPoint:SetNavLinkEnabled(bEnable) end
function AVaultPoint:LocateSibling() end
---@return boolean
function AVaultPoint:IsReadyToActivate() end
---@return AVaultPoint
function AVaultPoint:GetSibling() end
---@return EVaultType
function AVaultPoint:GetSelectedVaultType() end
---@return EVaultHeightType
function AVaultPoint:GetSelectedVaultHeightType() end
---@return FName
function AVaultPoint:GetSectionName() end
---@param pOwningTPChar ATPChar
function AVaultPoint:DoServerActivate(pOwningTPChar) end
---@return boolean
function AVaultPoint:BlockedBySibling() end
function AVaultPoint:AdjustSplineIndicator() end


---@class AViewportTickableActorBase : AActor
---@field ViewportTickType EViewportTickableFlags
AViewportTickableActorBase = {}

---@return boolean
function AViewportTickableActorBase:ShouldRerunConstructionScripts() end
---@param pObject UObject
function AViewportTickableActorBase:InitializeFromAsset(pObject) end
---@param DeltaSeconds float
function AViewportTickableActorBase:EditorTick(DeltaSeconds) end
function AViewportTickableActorBase:EditorDestroyed() end


---@class AWalkiePickup : APickupBase
---@field mServerChargeRemainingOnActivation float
---@field mRandomNoiseTimer float
---@field mRandomNoise float
AWalkiePickup = {}



---@class AWallClock : AActor
---@field mpPrimaryAkEmitter UExtAkComponent
---@field mpStaticMeshClock UStaticMeshComponent
---@field mpStaticMeshHourHand UStaticMeshComponent
---@field mpStaticMeshMinuteHand UStaticMeshComponent
---@field mpStaticMeshHourHandOtherSide UStaticMeshComponent
---@field mpStaticMeshMinuteHandOtherSide UStaticMeshComponent
AWallClock = {}



---@class AWallClockRear : AActor
---@field mpPrimaryAkEmitter UExtAkComponent
---@field mpStaticMeshClock UStaticMeshComponent
AWallClockRear = {}



---@class AWeaponBase : AActor
---@field onServerUsingWeaponChange FWeaponBaseOnServerUsingWeaponChange
---@field mUsedUpTimeRemaining float
---@field mbIsUsedUp boolean
---@field mChargeRemaining float
---@field mMaxCharge float
---@field mbUsingWeapon boolean
---@field mpOwningTPChar ATPChar
---@field mpMesh USkeletalMeshComponent
---@field mWeaponType EWeaponTypeEnum
---@field mpIndicatorParticleSystemComponent UParticleSystemComponent
---@field mDiscardNiagaraSystem TSoftObjectPtr<UNiagaraSystem>
---@field mpPropInteractionOverlapComponent USphereComponent
---@field mAimTargetHitResult FHitResult
---@field mbIsWeaponAimable boolean
---@field mFrontEndRotation FRotator
---@field mpWeaponSkinDataAsset UTeenWeaponSkinDataAsset
---@field mbIsWarmedUp boolean
---@field mWarmupTime float
---@field mbBufferShot boolean
---@field mbIsZoningEvil boolean
---@field mbStopUsingCommandBuffered boolean
---@field mbAlternateMode boolean
---@field mbIsWeaponVisible boolean
---@field mpOverrideAimTarget AActor
AWeaponBase = {}

---@return boolean
function AWeaponBase:UsingAlternateMode() end
function AWeaponBase:UpdateWeaponVisibility() end
function AWeaponBase:UpdateRenderCustomDepth() end
function AWeaponBase:UpdateIndicatorParticles() end
function AWeaponBase:UpdateDiscardParticles() end
---@param bVisibility boolean
function AWeaponBase:SetWeaponVisibility(bVisibility) end
---@param bOwnerNoSee boolean
function AWeaponBase:SetWeaponOwnerNoSee(bOwnerNoSee) end
---@param bActive boolean
---@param bAlternateMode boolean
function AWeaponBase:ServerSetActive(bActive, bAlternateMode) end
function AWeaponBase:OnRep_UsedUp() end
---@return boolean
function AWeaponBase:NeedsWarmingUp() end
function AWeaponBase:MulticastAllStopWeaponAuraSoundEffect() end
function AWeaponBase:MulticastAllSpawnLostWeaponParticleEffect() end
function AWeaponBase:MulticastAllPlayWeaponAuraSoundEffect() end
---@return boolean
function AWeaponBase:IsWeaponVisible() end
---@return boolean
function AWeaponBase:IsWeaponAimable() end
---@return boolean
function AWeaponBase:IsWarmedUp() end
---@return boolean
function AWeaponBase:IsUsingWeapon() end
---@return boolean
function AWeaponBase:IsUsedUp() end
---@return boolean
function AWeaponBase:IsPassivelyCharging() end
---@return boolean
function AWeaponBase:IsInFrontEnd() end
---@return boolean
function AWeaponBase:IsDrainingHealth() end
---@return boolean
function AWeaponBase:HasShotBuffered() end
---@return UTeenWeaponSkinDataAsset
function AWeaponBase:GetWeaponSkinDataAsset() end
---@return float
function AWeaponBase:GetWarmupTime() end
---@return float
function AWeaponBase:GetUsedUpTimeRemaining() end
---@return float
function AWeaponBase:GetStartingCharge() end
---@return FVector
function AWeaponBase:GetReticleWorldPosition() end
---@return ATPChar
function AWeaponBase:GetOwningTPChar() end
---@return AActor
function AWeaponBase:GetOverrideAimTarget() end
---@return float
function AWeaponBase:GetMaxPropInteractionRange() end
---@return float
function AWeaponBase:GetMaxCharge() end
---@return AGameplayGS
function AWeaponBase:GetGameplayGS() end
---@return FRotator
function AWeaponBase:GetFrontEndRotation() end
---@param startPoint FVector
---@return FVector
function AWeaponBase:GetDirectionToAimTarget(startPoint) end
---@return float
function AWeaponBase:GetCurrentRange() end
---@return float
function AWeaponBase:GetChargeRemaining() end
---@return float
function AWeaponBase:GetChargePercentRemaining() end
---@return float
function AWeaponBase:GetBaseWarmupTime() end
---@return float
function AWeaponBase:GetBaseRange() end
---@return FHitResult
function AWeaponBase:GetAimTargetHitResult() end
---@param DeltaSeconds float
---@param pOwningTPChar ATPChar
function AWeaponBase:DoServerWeaponUsageTick(DeltaSeconds, pOwningTPChar) end
---@param DeltaSeconds float
function AWeaponBase:DoServerUpdateZoningEvil(DeltaSeconds) end
---@param DeltaTime float
function AWeaponBase:DoServerUpdateUsedUpState(DeltaTime) end
function AWeaponBase:DoServerSpawnLostWeaponParticleEffect() end
---@param bSet boolean
function AWeaponBase:DoServerSetZoningEvil(bSet) end
---@param weaponType EWeaponTypeEnum
function AWeaponBase:DoServerSetWeaponType(weaponType) end
---@param NewValue float
function AWeaponBase:DoServerSetWarmupTime(NewValue) end
---@param bUsingWeapon boolean
function AWeaponBase:DoServerSetUsingWeapon(bUsingWeapon) end
---@param usedUpTimeRemaining float
function AWeaponBase:DoServerSetUsedUpTimeRemaining(usedUpTimeRemaining) end
---@param bNewValue boolean
function AWeaponBase:DoServerSetStopUsingCommandBuffered(bNewValue) end
---@param bNewValue boolean
function AWeaponBase:DoServerSetShotBuffered(bNewValue) end
---@param pOwningTPChar ATPChar
function AWeaponBase:DoServerSetOwningTPChar(pOwningTPChar) end
---@param pOverrideAimTarget AActor
function AWeaponBase:DoServerSetOverrideAimTarget(pOverrideAimTarget) end
---@param maxCharge float
function AWeaponBase:DoServerSetMaxCharge(maxCharge) end
---@param bNewValue boolean
function AWeaponBase:DoServerSetIsWarmedUp(bNewValue) end
---@param bNewValue boolean
function AWeaponBase:DoServerSetIsUsedUp(bNewValue) end
---@param newChargeRemaining float
function AWeaponBase:DoServerSetChargeRemaining(newChargeRemaining) end
---@param bSet boolean
function AWeaponBase:DoServerSetAlternateMode(bSet) end
---@param bActive boolean
---@param bAlternateMode boolean
function AWeaponBase:DoServerSetActive(bActive, bAlternateMode) end
function AWeaponBase:DoServerRequestStopUsing() end
---@param bAlternateMode boolean
function AWeaponBase:DoServerRequestBeginUsing(bAlternateMode) end
function AWeaponBase:DoServerReportActiveNoiseEvents() end
function AWeaponBase:DoServerOnWarmedUp() end
function AWeaponBase:DoServerOnStoppedUsing() end
function AWeaponBase:DoServerOnStartedUsing() end
function AWeaponBase:DoServerOnOwningTPCharSet() end
---@return boolean
function AWeaponBase:DoServerIsZoningEvil() end
function AWeaponBase:DoServerInitAugments() end
function AWeaponBase:DoServerIncrementConsumedStat() end
---@return boolean
function AWeaponBase:DoServerGetStopUsingCommandBuffered() end
function AWeaponBase:DoServerFireWeapon() end
function AWeaponBase:DoServerDestroyWeapon() end
---@param DeltaTime float
---@param outStillHasChargeAfterUse boolean
function AWeaponBase:DoServerConsumeCharge(DeltaTime, outStillHasChargeAfterUse) end
---@param bAlternateMode boolean
---@return boolean
function AWeaponBase:DoServerAllowedToUse(bAlternateMode) end
---@return boolean
function AWeaponBase:CheckValidProjectileSpawnLocation() end
---@return boolean
function AWeaponBase:AllowedToBufferShot() end


---@class AWerewolfChar : AFPChar
---@field mTimeBerserkRemaining float
---@field mTimeSenseRemaining float
---@field mbHowling boolean
---@field mbIsSensing boolean
---@field mTrackingDirection FVector
---@field mTargetTrackingEffectMultiplier float
---@field mCurrentTrackingEffectMultiplier float
---@field mHowlCooldown float
---@field mBerserkCooldown float
---@field mSenseCooldown float
---@field mReactiveHowlThreshold float
---@field mpTrackingMaterialInstance UMaterialInstance
---@field mpHowlCollision USphereComponent
---@field mTrackingFactor float
---@field mpBerserkParticleSystem UParticleSystem
---@field mpHuntParticleSystemComponent UParticleSystemComponent
AWerewolfChar = {}

---@param NewValue float
function AWerewolfChar:SetTrackingFactor(NewValue) end
function AWerewolfChar:OnRep_IsSensing() end
function AWerewolfChar:MulticastAllStopWerewolfTrackingSound() end
function AWerewolfChar:MulticastAllStopChargeSound() end
function AWerewolfChar:MulticastAllPlayWerewolfTrackingSound() end
function AWerewolfChar:MulticastAllPlayWerewolfSenseSound() end
---@param screamVictims TArray<ABaseChar>
function AWerewolfChar:MulticastAllPlayWerewolfHowlSound(screamVictims) end
function AWerewolfChar:MulticastAllPlayWerewolfBerserkSound() end
function AWerewolfChar:MulticastAllPlaySenseChargeSound() end
function AWerewolfChar:MulticastAllPlayHowlChargeSound() end
function AWerewolfChar:MulticastAllPlayBerserkChargeSound() end
---@return boolean
function AWerewolfChar:IsUsingSense() end
---@return boolean
function AWerewolfChar:IsHowling() end
---@return boolean
function AWerewolfChar:IsBerserk() end
---@return float
function AWerewolfChar:GetTrackingFactor() end
---@return float
function AWerewolfChar:GetTotalBerserkTime() end
---@return float
function AWerewolfChar:GetSenseTimeRemaining() end
---@return float
function AWerewolfChar:GetSenseMinRange() end
---@return float
function AWerewolfChar:GetSenseMaxRange() end
---@return float
function AWerewolfChar:GetReactiveHowlThreshold() end
---@return float
function AWerewolfChar:GetHowlRange() end
---@return float
function AWerewolfChar:GetHowlCowerTime() end
---@return USphereComponent
function AWerewolfChar:GetHowlCollision() end
---@return float
function AWerewolfChar:GetBerserkTimeRemaining() end
---@return float
function AWerewolfChar:GetBerserkSpeedBonus() end
---@return UParticleSystem
function AWerewolfChar:GetBerserkParticleSystem() end
---@return float
function AWerewolfChar:GetBerserkAttackRecoveringSpeedBonus() end
---@return float
function AWerewolfChar:GetBaseSenseTime() end
---@return float
function AWerewolfChar:GetBaseHowlRange() end
---@param DeltaTime float
function AWerewolfChar:DoServerUpdateReactiveHowlThreshold(DeltaTime) end
---@param TimeRemaining float
function AWerewolfChar:DoServerSetTimeSenseRemaining(TimeRemaining) end
---@param TimeRemaining float
function AWerewolfChar:DoServerSetTimeBerserkRemaining(TimeRemaining) end
---@param NewValue float
function AWerewolfChar:DoServerSetReactiveHowlThreshold(NewValue) end
---@param bSet boolean
function AWerewolfChar:DoServerSetHowling(bSet) end
---@param abilityIndex int32
function AWerewolfChar:DoServerRequestBeginAbilityCharge(abilityIndex) end
---@param bCompleted boolean
function AWerewolfChar:DoServerRequestAbortAbilityCharge(bCompleted) end
---@return boolean
function AWerewolfChar:DoServerPerformHowl() end
function AWerewolfChar:DoServerHowlAttack() end
function AWerewolfChar:DoServerClearSense() end
function AWerewolfChar:DoServerClearBerserk() end
---@return boolean
function AWerewolfChar:DoServerApplySense() end
---@return boolean
function AWerewolfChar:DoServerApplyBerserk() end
---@return boolean
function AWerewolfChar:CanSense() end
---@return boolean
function AWerewolfChar:CanHowl() end
---@return boolean
function AWerewolfChar:CanBerserk() end


---@class AWorldEffectsTrigger : AActor
---@field mpBoxComponent UBoxComponent
---@field mpTriggerableEffectArray TArray<ATriggerableEffect>
---@field mpPrimaryAkEmitter UExtAkComponent
---@field mReadyTime float
---@field mReadyTimeRandomMin float
---@field mReadyTimeRandomMax float
---@field mbTriggeredByGoodCharacter boolean
---@field mbTriggerWithWeapon boolean
---@field mWeaponTriggerArray TArray<EWeaponTypeEnum>
---@field mbTriggeredByEvilCharacter boolean
---@field mbTriggeredByIncorporealEvil boolean
---@field mbTriggeredByRemoteCharacter boolean
---@field mbTriggeredByRCCopter boolean
---@field mbTriggeredByTeenSpectral boolean
---@field mbTriggeredByMagicSphere boolean
---@field mbTriggerSoundEvent boolean
---@field mbRandomlyTriggeredEffects boolean
AWorldEffectsTrigger = {}

---@param DeltaTime float
function AWorldEffectsTrigger:UpdateTriggersRandom(DeltaTime) end
function AWorldEffectsTrigger:StopEffects() end
function AWorldEffectsTrigger:StopBPEffects() end
function AWorldEffectsTrigger:StartEffects() end
function AWorldEffectsTrigger:StartBPEffects() end
---@param InSeed int32
function AWorldEffectsTrigger:SetRandomSeed(InSeed) end
---@param pOverlappedComponent UPrimitiveComponent
---@param pOtherActor AActor
---@param pOtherComp UPrimitiveComponent
---@param OtherBodyIndex int32
---@param bFromSweep boolean
---@param SweepResult FHitResult
function AWorldEffectsTrigger:OnActorBeginOverlap(pOverlappedComponent, pOtherActor, pOtherComp, OtherBodyIndex, bFromSweep, SweepResult) end
---@return UExtAkComponent
function AWorldEffectsTrigger:GetPrimaryAkEmitter() end


---@class FAIAudioInfo
---@field mpAudibleActor AActor
---@field mSourceLastQueriedLocation FVector
---@field mReceiverLastQueriedLocation FVector
---@field mDistanceToSound float
---@field mGameTimeAtLastQuery float
---@field mSoundEventTag FName
FAIAudioInfo = {}



---@class FAccountFilterInfoStruct
FAccountFilterInfoStruct = {}


---@class FAccountStatCollectionData
FAccountStatCollectionData = {}


---@class FAccountStatData
FAccountStatData = {}


---@class FAdrenalineEffectContext
---@field mRemainingTime float
---@field mBaseTime float
---@field mRampTime float
---@field mBuffSource uint8
FAdrenalineEffectContext = {}



---@class FAnalyticServerCharStatsStruct
---@field mTeenRecoveryArray TArray<FTeenRecoveryInfo>
---@field mWeaponInfoArray TArray<FTeenWeaponInfo>
---@field mSkillInfoArray TArray<FTeenSkillInfo>
---@field mRageInfoArray TArray<FEvilRageInfo>
---@field mAbilityInfoArray TArray<FEvilAbilityInfo>
---@field mEvilChaseInfoArray TArray<FEvilChaseInfo>
---@field mEvilHitTeenInfoArray TArray<FEvilTeenHitInfo>
---@field mEvilDamagedByWeaponInfoArray TArray<FEvilDamagedByWeaponInfo>
---@field mEvilNearDownedTeenInfoArray TArray<FEvilNearDownedTeenInfo>
---@field mEvilCampingNearDownedTeenInfoArray TArray<FEvilCampingNearDownedTeenInfo>
---@field mTeenHidePointInfoArray TArray<FTeenHidePointInfo>
---@field mTeenPickupInfoArray TArray<FTeenPickupInfo>
FAnalyticServerCharStatsStruct = {}



---@class FAppliedCharacterStatus
FAppliedCharacterStatus = {}


---@class FAudioMetaDataTableRow : FTableRowBase
---@field mMaxAttenuation float
---@field mDurationType FString
---@field mDurationMin float
---@field mDurationMax float
FAudioMetaDataTableRow = {}



---@class FAugmentSlot
---@field mAugmentType EAugmentType
---@field mbActive boolean
---@field mTokens int32
---@field mCooldownRemaining float
---@field mCooldown float
---@field mCurrentChargeTime float
---@field mChargeTime float
---@field mTier int32
FAugmentSlot = {}



---@class FAuraInstanceObject
---@field mStencilProperties FStencilProperties
---@field mLocalViewFlags int32
---@field mTargetViewFlags int32
---@field mbFadeIn boolean
---@field mFadeInSeconds float
---@field mbOverrideHighlight boolean
---@field mHighlightOverrideProperties FStencilProperties
---@field mbOnlyIfSightBlocked boolean
FAuraInstanceObject = {}



---@class FBackendDiscoverParams
---@field mAccountIdToDiscover FString
---@field mDiscoverKey FString
---@field mFilterToDiscover FDiscoveryFilter
---@field mCtf FCharacterTypeFilter
---@field mbPadLoadout boolean
---@field mMovieTranscriptNumber int32
---@field mSeasonPassTranscriptNumber int32
---@field mbNeedCharacterLevelXpCosts boolean
---@field mbNeedMasteryLevelCosts boolean
---@field mbNeedsAllPoints boolean
---@field mbNeedPlayerSettings boolean
---@field mStorePlatform FString
---@field mStoreGUID FString
---@field mJourneyGUID FString
---@field mDynamicBountyRegion FString
FBackendDiscoverParams = {}



---@class FBackendPurchaseItemParams
---@field mStoreDataGuid FString
---@field mSlotsToPurchase TMap<FString, int32>
---@field mExpectedCostByPointType TMap<FString, int32>
---@field mRequestedStoreDate FString
FBackendPurchaseItemParams = {}



---@class FBarTimingStyleGuide
---@field mpNeutralCursor UTexture2D
---@field mpPassCursor UTexture2D
---@field mpBullseyeCursor UTexture2D
---@field mpFailCursor UTexture2D
---@field mDescriptionTextOffset float
---@field mProgressPanelOffset float
FBarTimingStyleGuide = {}



---@class FBaseCharPostUpdateTickFunction : FTickFunction
FBaseCharPostUpdateTickFunction = {}


---@class FBehaviourTreeData
---@field mAiBehaviour EAIBehaviour
---@field mpBehaviourTree UBehaviorTree
FBehaviourTreeData = {}



---@class FBezierInfo
FBezierInfo = {}


---@class FBezierVector
FBezierVector = {}


---@class FBulkApplyLightingSettings
---@field mLightmapType EBlueprintLightmapType
---@field mbUseTwoSidedLighting boolean
FBulkApplyLightingSettings = {}



---@class FButtonBarData
---@field KeyAction EGameActionType
---@field LocText FText
---@field Priority int32
FButtonBarData = {}



---@class FButtonBarWidgetButton
---@field mButtonData FButtonBarData
---@field mpButton UExtButton
---@field mpButtonPrompt UButtonPromptWidget
---@field mpButtonText UTextBlock
---@field mpNewFlag UNewFlagWidget
---@field mpHighlightImage UImage
---@field mButtonType EButtonBarType
FButtonBarWidgetButton = {}



---@class FCableLength
---@field mpCableLengthRoot USceneComponent
---@field mpSpline USplineComponent
---@field mTension float
---@field mTensionOffset float
---@field mResolution int32
---@field mResolutionOffset int32
---@field mLength float
---@field mLengthOffset float
---@field mHeight float
---@field mTangentWeightOffset float
---@field mRotation float
---@field mHangerRotationOffset float
---@field mHangerWallAngle float
FCableLength = {}



---@class FCategorySwitcherData
---@field TitleText FText
---@field WidgetIndex int32
---@field Act int32
---@field PromoText FText
---@field ButtonClass TSubclassOf<UCategoryButtonWidget>
FCategorySwitcherData = {}



---@class FCharClothingInfo
---@field mClothingIndices TArray<int32>
FCharClothingInfo = {}



---@class FCharStatType
FCharStatType = {}


---@class FCharStatsStruct
---@field mBaseScores TArray<float>
---@field mBonusScores TArray<float>
---@field mRankAdjustment int32
---@field mPlayerCountStats int32
---@field mPlayerTimeStats float
---@field mWeaponXPStats float
FCharStatsStruct = {}



---@class FCharacterBodyShapePreset : FTableRowBase
---@field mPhysicsAssetPath FString
---@field bSquareStrong float
---@field bOvalStrong float
---@field bOval float
---@field bOvalThin float
---@field bSquareThin float
---@field bHourGlassThin float
---@field bHourGlass float
---@field bHourGlassStrong float
---@field bPelvisNarrow float
---@field bPelvisWide float
---@field bBreasts float
---@field mHeight float
---@field mShoulders float
---@field mCoordinateX float
---@field mCoordinateY float
FCharacterBodyShapePreset = {}



---@class FCharacterSpecificItemId
FCharacterSpecificItemId = {}


---@class FCharacterStatusSpecialParameters
---@field mPlayerScore int32
---@field mNumOfTeensDead int32
---@field mEvilDamageTaken int32
FCharacterStatusSpecialParameters = {}



---@class FCharacterStatusToMaterialParameter
---@field mSourceStatusMemberName FName
---@field mDestinationMaterialParameterNames TArray<FMaterialParameterInfoExt>
---@field mDestinationFXParameterNames TArray<FName>
---@field mDestinationMorphTargetNames TArray<FName>
---@field mDestinationFXComponentTags TArray<FName>
---@field mDestinationComponentTags TArray<FName>
---@field mDestinationMaterialSlots TArray<FName>
---@field mDestinationMaterialParameterName FName
---@field mStatusSource ECharacterStatusSource
---@field mCharacterClass TSubclassOf<ATPChar>
---@field mInputRange FVector2D
---@field mOutputMappingType ECharacterStatusOutputMappingType
---@field mOutputRangeFloat FVector2D
---@field mOutputRangeFloatAlpha FVector2D
---@field mOutputRangeColorMin FLinearColor
---@field mOutputRangeColorMax FLinearColor
---@field mOutputVisibleValue float
---@field mOutputActivateValue float
---@field mpStatusValueMappingCurve UCurveBase
---@field mbUseColorCurveAsScalar boolean
---@field mInterpSpeed float
---@field mLoopSpeed float
FCharacterStatusToMaterialParameter = {}



---@class FCharacterTypeFilter : FStringOfBits
FCharacterTypeFilter = {}


---@class FClaimedRewardChest
FClaimedRewardChest = {}


---@class FClientSmoothedTimer
---@field mReplicatedTime float
---@field mTimeMultiplier float
---@field mbTimerPaused boolean
---@field mbQueueReset boolean
---@field mClientTime float
---@field mbStartedClientTimer boolean
FClientSmoothedTimer = {}



---@class FClothingPhysicsAsset
---@field mpClothingPhysicsAsset UPhysicsAsset
---@field mChannelName FName
FClothingPhysicsAsset = {}



---@class FCloudPlayerSettingsStruct
---@field mAutomaticRegion boolean
---@field mMatchmakingRegion EMatchmakingRegion
---@field mLanguage ELanguageSetting
---@field mSelectedGameMode EGameMode
---@field mbShowReticle boolean
---@field mbShowScoreFeed boolean
---@field mbShowGameHUD boolean
---@field mbHintsToggle uint8
---@field mDangerSenseType int32
---@field mDangerSenseSize float
---@field mDangerSenseColor int32
---@field mGraphicsColorBlindMode EColorVisionDeficiency
---@field mGraphicsColorBlindIntensity float
---@field mbAudioGameAudioMuteOnUnfocused boolean
---@field mbVoiceChatEnabled boolean
---@field mVoiceChatMode EVoiceChatMode
---@field mVoiceChatChannel EVoiceChatChannel
---@field mbVoiceChatMuteOnUnfocused boolean
---@field mbMouseInvertY boolean
---@field mbKbdSprintToggle boolean
---@field mbKbdCrouchToggle boolean
---@field mKeyToGameActions TMap<FKey, FGameActionsArray>
---@field mbControllerInvertY boolean
---@field mbControllerSprintToggle boolean
---@field mbControllerCrouchToggle boolean
---@field mbShowSocialNotifications boolean
---@field mbNotifyFriendsWhenPlaying boolean
---@field mbAutoMutePlayersNotInParty boolean
---@field mbHideDisplayName boolean
---@field mbHideOtherPlayerNames boolean
---@field mbMatchmakingDelay boolean
---@field mbAutoMutePrevMutedPlayers boolean
---@field mStoredMatchmakingType EClientMatchmakingType
---@field mLastStoredCharacterType ECharacterType
---@field mStoredTeenCharacterType ECharacterType
---@field mStoredEvilCharacterType ECharacterType
---@field mStoredHintHistory TSet<FString>
---@field mStoredGuideHistory TSet<FString>
---@field mLastSeenHint FString
---@field mTipsHistory TArray<FTip>
---@field mNewsAnnouncements TArray<FString>
---@field mbShowBetaAnnouncement boolean
---@field mbShowAnnouncement1 boolean
---@field mbShowAnnouncement2 boolean
---@field mHighestSeasonAnnouncement int32
FCloudPlayerSettingsStruct = {}



---@class FColorSwatchDetails
---@field PrimaryColor FLinearColor
---@field SecondaryColor FLinearColor
---@field bUseGradient boolean
FColorSwatchDetails = {}



---@class FComputedCustomCullDistance
---@field mDistance float
---@field mPriority int32
FComputedCustomCullDistance = {}



---@class FConnectingPlayer
---@field mPlayerInfo FNetPlayerInfoStruct
---@field mMatchmakingInfo FMatchmakingPlayerInfo
FConnectingPlayer = {}



---@class FContextMenuButtonData
---@field mButtonText FText
FContextMenuButtonData = {}



---@class FContextMenuData
FContextMenuData = {}


---@class FCoopAssistData
---@field mAssistTimeRemaining float
---@field mbWereTimersResetThisFrame boolean
---@field mAssistEligibilityCooldown float
---@field mTimeRecorded float
---@field mAssistActiveDuration float
---@field mTimeOfLastAward float
---@field mWeaponType EWeaponTypeEnum
---@field mDamageType EDamageType
---@field mAssistedHitType EWeaponHitType
---@field mpTargetCharacter AFPChar
FCoopAssistData = {}



---@class FCopyPoseAnimInstanceProxy : FAnimInstanceProxy
FCopyPoseAnimInstanceProxy = {}


---@class FCraftingStruct
---@field mpStationBase TWeakObjectPtr<AStationBase>
---@field mbIsUsing boolean
---@field mCraftingTimeRemaining float
---@field mSecondsAwardedPoints float
---@field mRealtimeSecondsCraftingTime float
---@field mCraftingProgressPercent float
---@field mWeaponTypeRequested EWeaponTypeEnum
---@field mPreviousWeaponTypeRequested EWeaponTypeEnum
---@field mbWantsToCancel boolean
---@field mCancelTimeRemaining float
---@field mWeaponTypeAfterCancel EWeaponTypeEnum
---@field mbWasInterrupted boolean
FCraftingStruct = {}



---@class FCustomCullDistanceAutomaticSettings
---@field mDistance float
---@field mSightlineOrigin FVector
---@field mSightlineTarget FVector
FCustomCullDistanceAutomaticSettings = {}



---@class FCustomCullDistanceSizePair
---@field Size float
---@field CullDistance float
FCustomCullDistanceSizePair = {}



---@class FCustomizeSimpleCollisionShape
---@field mCollisionShape ETriggerCollisionShape
---@field mSphereRadius float
---@field mBoxExtent FVector
---@field mCapsuleRadius float
---@field mCapsuleHalfHeight float
---@field mLocationOffset FVector
FCustomizeSimpleCollisionShape = {}



---@class FDamageIndicatorContext
FDamageIndicatorContext = {}


---@class FDamageIndicatorInitContext
FDamageIndicatorInitContext = {}


---@class FDamageParticleData
FDamageParticleData = {}


---@class FDbItemId
---@field mHash uint8
---@field mDbItemId FString
FDbItemId = {}



---@class FDecalSpawnInfo
---@field mSpawnTransform FTransform
---@field mDecalSize FVector
---@field mDecalMaterial UMaterialInstance
FDecalSpawnInfo = {}



---@class FDisconnectedPlayerStruct
---@field mPlayerInfo FNetPlayerInfoStruct
---@field mPlayerMatchInfoData FPlayerMatchInfoData
---@field mCharacterStats FCharStatsStruct
FDisconnectedPlayerStruct = {}



---@class FDiscoveryFilter
---@field mFilter uint32
FDiscoveryFilter = {}



---@class FDistributedPipeAccessories
---@field mpMeshArray TArray<UStaticMesh>
---@field mNumberOfDistributedAccessories int32
---@field mDistanceOffset float
---@field mRotationOffset float
---@field mStartScale float
---@field mEndScale float
---@field mScaleRandomizationOffset float
---@field mCullPercentage float
---@field mDistributionSeed int32
---@field mRandomStream FRandomStream
---@field mAccessoryArray TArray<FPipeAccessory>
---@field mpDistributedComponentArray TArray<UStaticMeshComponent>
---@field mDstrDistanceArray TArray<float>
---@field mDstrRotationArray TArray<float>
---@field mDstrScaleArray TArray<float>
---@field mDstrDistanceOffsetArray TArray<float>
---@field mDstrRotationOffsetArray TArray<float>
---@field mDstrScaleOffsetArray TArray<float>
---@field mDstrSnapToPointsArray TArray<boolean>
---@field initializeOffsets boolean
FDistributedPipeAccessories = {}



---@class FDlmrAnimInstanceData
---@field mbIsPossessingDoll boolean
---@field mbIsInTrapPlacementSequence boolean
FDlmrAnimInstanceData = {}



---@class FDollAnimInstanceData
---@field mbIsLeaping boolean
FDollAnimInstanceData = {}



---@class FEORLevelUpData
---@field mCharacterLevel int32
---@field mStartingCharacterXP int32
---@field mStartingPrizePoints int32
FEORLevelUpData = {}



---@class FEORRewardsData
---@field mStigmaXPValues TArray<int32>
---@field mWeaponTypeXPValues TArray<int32>
---@field mStigmaLevelValues TArray<int32>
---@field mWeaponLevelValues TArray<int32>
FEORRewardsData = {}



---@class FEffectVisibility
---@field mbUseAttachParentVisibility boolean
---@field mbUseAttachParentOwnerSee boolean
---@field mbIncorporealAndDispersedHidden boolean
---@field mbSpiritWorldHidden boolean
---@field mbFirstPersonEvilOnly boolean
---@field mbFirstPersonEvilHidden boolean
---@field mbSpiritWorldOnly boolean
---@field mbDeadSpiritWorldOnly boolean
---@field mbEvilHidden boolean
---@field mbTeenHidden boolean
---@field mbEmoteEffect boolean
FEffectVisibility = {}



---@class FEmoteData
---@field mbIsEvilEmote boolean
---@field mpEmoteSequence UAnimSequence
---@field mpSafeEmoteSequence UAnimSequence
---@field mbShouldLoop boolean
---@field mbIsUnsafeEmote boolean
---@field mEmoteType EEmoteType
FEmoteData = {}



---@class FEndPointManager_URLData
---@field GameBackendDomain FString
---@field AnalyticsBackendDomain FString
---@field EventNotificationUrl FString
---@field MatchmakingUrl FString
FEndPointManager_URLData = {}



---@class FEndPoints
---@field mIsEndPointsActivated boolean
---@field mDebugString FString
---@field mEndPointsJSONVersion FString
---@field mBackendDomainName FString
---@field mGameBackendDomain FString
---@field mAnalyticsBackendDomain FString
---@field mEventNotificationUrl FString
---@field mMatchmakingUrl FString
FEndPoints = {}



---@class FEradAnimInstanceData
---@field mbIsInVehicleMode boolean
---@field mbIsScanning boolean
FEradAnimInstanceData = {}



---@class FEventChallengeData
FEventChallengeData = {}


---@class FEventTaskData
FEventTaskData = {}


---@class FEventTierData
FEventTierData = {}


---@class FEvilAbilityInfo
FEvilAbilityInfo = {}


---@class FEvilCampingNearDownedTeenInfo
FEvilCampingNearDownedTeenInfo = {}


---@class FEvilChaseInfo
FEvilChaseInfo = {}


---@class FEvilCustomizationMesh : FStatusMappingTarget
FEvilCustomizationMesh = {}


---@class FEvilDamagedByWeaponInfo
FEvilDamagedByWeaponInfo = {}


---@class FEvilNearDownedTeenInfo
FEvilNearDownedTeenInfo = {}


---@class FEvilOrnamentAnimationData
---@field mStartLocation FVector
---@field mEndLocation FVector
---@field mCurrentAnimationTime float
---@field mTotalAnimationTime float
---@field mTimeUntilReveal float
---@field mEndRotation FQuat
---@field mbHideSelfOnFinish boolean
---@field mbFinished boolean
FEvilOrnamentAnimationData = {}



---@class FEvilPortraitComposite
---@field PortraitTexture UTexture2D
---@field RageEyesTexture UTexture2D
---@field InjuredLevel int32
FEvilPortraitComposite = {}



---@class FEvilRageInfo
FEvilRageInfo = {}


---@class FEvilScreamShockwave
---@field mShockwaveComponentOuter UStaticMeshComponent
---@field mShockwaveComponentInner UStaticMeshComponent
---@field mpShockwaveNiagaraComponent UNiagaraComponent
---@field mShockwaveAge float
---@field mShockwaveStrength float
---@field mCurrentRadius float
---@field mPostProcessSettings FPostProcessSettings
FEvilScreamShockwave = {}



---@class FEvilSpectralAnimInstanceData
---@field mbIsCelebrating boolean
---@field mbIsSad boolean
---@field mbIsVisible boolean
FEvilSpectralAnimInstanceData = {}



---@class FEvilTeenHitInfo
FEvilTeenHitInfo = {}


---@class FExtAkAmbSoundCheckpointRecord
---@field bCurrentlyPlaying boolean
FExtAkAmbSoundCheckpointRecord = {}



---@class FFPCharAnimInstanceData
---@field mbIsMoving boolean
---@field mbIsAlive boolean
---@field mbIsCelebrating boolean
---@field mbIsFocusing boolean
---@field mbIsInAir boolean
---@field mSpeed float
---@field mDirection float
---@field mGait float
---@field mbIsAttacking boolean
---@field mPlayerAimPitch float
---@field mbFeasting boolean
---@field mbShouldPlayFaceGuard boolean
---@field mbIsVaulting boolean
---@field mbIsPlayingCameraAnimation boolean
---@field mVaultHeightType EVaultHeightType
---@field mbCanEnterStunnedState boolean
---@field mbIsStunned boolean
---@field mStunTimeRemaining float
---@field IsDisintegrating boolean
---@field mDamagedWeaponType EWeaponTypeEnum
---@field mTickDamageType EWeaponTypeEnum
---@field mbIsUsingEffigy boolean
---@field mbIsCreatingEffigy boolean
---@field mbHasJustTransformed boolean
---@field mbForwardWallDetected boolean
---@field mbWasVaulting boolean
---@field mbIsEmoting boolean
---@field mCurrentEmoteData FEmoteData
---@field mbIsInMainMenu boolean
---@field mbIsInLoadoutScreen boolean
---@field mbIsInLobby boolean
---@field mEvilAbilityIndex int32
---@field mEvilCompletedAbilityIndex int32
---@field mTurnInPlaceRotation float
---@field mVaultPlayRateMultiplier float
---@field mDeltaYawRotation float
---@field mbIsFlinching boolean
---@field mCurrentUIMenuScreenType EMenuScreen
---@field mHeelHeight FVector2D
---@field mHeelAngle FVector2D
FFPCharAnimInstanceData = {}



---@class FFPHideMontageData
---@field mHideObjectType EHideObjectType
---@field mpCharMontage UAnimMontage
FFPHideMontageData = {}



---@class FFeetClothingSettings
---@field mHeelHeight float
---@field mHeelAngle float
---@field mTuckPoint int32
FFeetClothingSettings = {}



---@class FFlipBookAnimationSpecs
FFlipBookAnimationSpecs = {}


---@class FFluffData
---@field Category EFluffCategory
---@field Grantable FString
FFluffData = {}



---@class FFrontEndLightCustomizationPalette : FTableRowBase
---@field GridFrontA FLinearColor
---@field GridFrontB FLinearColor
---@field GridBackA FLinearColor
---@field GridBackB FLinearColor
---@field NeonRight FLinearColor
---@field NeonLeft FLinearColor
---@field Fog FLinearColor
FFrontEndLightCustomizationPalette = {}



---@class FGameActionEventHandle
FGameActionEventHandle = {}


---@class FGameActionsArray
---@field mActions TArray<EGameActionType>
FGameActionsArray = {}



---@class FGameLiftMatchmakingInfo
---@field mGameLiftPlayerSessionId FString
---@field mPlayerId FString
---@field mServerIPAddress FString
---@field mServerPort int32
---@field mMatchmakingTicketId FString
---@field mIsReadyToJoin boolean
---@field MatchedPlayerSessions TArray<FGameLift_Response_GetTicketStatus_MatchedPlayerSession>
FGameLiftMatchmakingInfo = {}



---@class FGameLiftMatchmakingRegionData
---@field mMatchmakingPingRegion EMatchmakingPingRegion
---@field mHostName FString
---@field mIpAddress FString
---@field mNetworkLatencyData FGameLiftNetworkLatencyData
---@field mDescription FString
---@field mStatus EMatchmakingNetworkLatencyStatus
---@field mbIsActivatedRegion boolean
FGameLiftMatchmakingRegionData = {}



---@class FGameLiftNetworkLatencyData
---@field mNetworkLatencies TArray<int32>
FGameLiftNetworkLatencyData = {}



---@class FGameLift_BanInfoData
---@field badAccountId FString
---@field reason FString
---@field banExpires int32
---@field DisplayName FString
FGameLift_BanInfoData = {}



---@class FGameLift_PlayerInfoData
---@field PlayerId FString
---@field MatchmakingPlayerType int32
---@field MatchmakingGroupName FString
FGameLift_PlayerInfoData = {}



---@class FGameLift_RequestBase
FGameLift_RequestBase = {}


---@class FGameLift_Request_GetTicketStatus : FGameLift_RequestBase
---@field PlayerId FString
---@field MatchmakingTicketId FString
---@field CloudScriptVersion int32
---@field GameClientGuid FString
FGameLift_Request_GetTicketStatus = {}



---@class FGameLift_Request_GuaranteedMatchmaking : FGameLift_RequestBase
---@field MatchmakingTicketId FString
---@field PlayerInfos TArray<FGameLift_PlayerInfoData>
---@field CloudScriptVersion int32
---@field PartyMemberAccountIds TArray<FString>
---@field LatencyDatas TMap<FString, int32>
---@field CharType FString
---@field MatchmakingRegion FString
FGameLift_Request_GuaranteedMatchmaking = {}



---@class FGameLift_Request_StartMatchBackfill : FGameLift_RequestBase
---@field MyTeamPlayerInfoData TArray<FGameLift_PlayerInfoData>
---@field OtherTeamsPlayerInfoData TArray<FGameLift_PlayerInfoData>
---@field CloudScriptVersion int32
---@field LatencyDatas TMap<FString, int32>
---@field CharTypes TArray<FString>
---@field PlayerAccountIds TArray<FString>
FGameLift_Request_StartMatchBackfill = {}



---@class FGameLift_Request_StopMatchmaking : FGameLift_RequestBase
---@field PlayerId FString
---@field MatchmakingTicketId FString
---@field CloudScriptVersion int32
---@field GameClientGuid FString
FGameLift_Request_StopMatchmaking = {}



---@class FGameLift_Response_GetTicketStatus
---@field Status FString
---@field TicketStatus FString
---@field IpAddress FString
---@field Port int32
---@field MatchedPlayerSessions TArray<FGameLift_Response_GetTicketStatus_MatchedPlayerSession>
FGameLift_Response_GetTicketStatus = {}



---@class FGameLift_Response_GetTicketStatus_MatchedPlayerSession
---@field PlayerId FString
---@field PlayerSessionId FString
FGameLift_Response_GetTicketStatus_MatchedPlayerSession = {}



---@class FGameLift_Response_RequestMatchmaking
---@field Message FString
---@field Status FString
---@field MatchmakingTicketId FString
---@field EstimatedWaitTime int32
---@field BanInfo FGameLift_BanInfoData
FGameLift_Response_RequestMatchmaking = {}



---@class FGameLift_Response_StartMatchBackfill
---@field Message FString
---@field Status FString
---@field BackfillTicketId FString
---@field BanInfo FGameLift_BanInfoData
FGameLift_Response_StartMatchBackfill = {}



---@class FGameLift_Response_StopMatchmaking
---@field Status FString
---@field MatchmakingTicketId FString
FGameLift_Response_StopMatchmaking = {}



---@class FGameplayTagStack : FFastArraySerializerItem
---@field Tag FGameplayTag
---@field StackCount float
FGameplayTagStack = {}



---@class FGameplayTagStackContainer : FFastArraySerializer
---@field Stacks TArray<FGameplayTagStack>
FGameplayTagStackContainer = {}



---@class FGoodCharAnimInstanceProxy : FAnimInstanceProxy
---@field mpOwnerTPChar ATPChar
---@field pWorldReference UWorld
---@field mpAnimInstance UGoodCharAnimInstance
---@field mTPMovementData FTPMovementData
---@field mTPWeaponStateData FTPWeaponStateData
---@field mTPCharStateData FTPCharStateData
---@field mTPFacialAnimData FTPCharFacialAnimData
---@field mTPCharBodyShapePreset FCharacterBodyShapePreset
---@field bIsAnyMontagePlaying boolean
---@field bInFallingAnimSequence boolean
---@field bInLandingAnimation boolean
---@field mLastCurveGait float
---@field mFootPosition float
---@field mCharacterTypeIndex int32
---@field mbWasMoving boolean
---@field mbWasRunning boolean
---@field mbWasFalling boolean
---@field mbUpdateLeanForward boolean
---@field mLeanForwardRunTimer float
---@field mFallingDuration float
---@field mPreviousSpeed float
---@field mFacialCloseEyesTimer float
---@field mFacialOpenEyesTimer float
---@field mPanicTimer float
---@field mPanicMaxTime float
---@field mStaticShieldLeanPrevFrame float
FGoodCharAnimInstanceProxy = {}



---@class FGrantable
---@field mGrantableType EGrantableType
---@field mDbItemId FDbItemId
---@field mCount int32
FGrantable = {}



---@class FGrantableReward
FGrantableReward = {}


---@class FHairProperties
---@field mColorParameters TMap<FMaterialParameterInfoExt, FLinearColor>
---@field mScalarParameters TMap<FMaterialParameterInfoExt, float>
FHairProperties = {}



---@class FHeatmapPreviewSettings
---@field mHeatmapName FString
---@field mbEnabled boolean
---@field mCachedHeatmapFileData TArray<uint8>
---@field mCachedHeatmapWidth int32
---@field mCachedHeatmapHeight int32
FHeatmapPreviewSettings = {}



---@class FHideLayers
---@field mSlotVisibility TMap<EMeshSlot, EMeshSlotVisibility>
FHideLayers = {}



---@class FHideMontageData
---@field mHideObjectType EHideObjectType
---@field mpCharMontage UAnimMontage
---@field mpHidePointMontage UAnimMontage
FHideMontageData = {}



---@class FHintData : FTableRowBase
---@field FactionType EFaction
---@field CharacterType ECharacterType
---@field TitleText FText
---@field Tip1Title FText
---@field Tip1Text FText
---@field Tip2Title FText
---@field Tip2Text FText
---@field Tip3Title FText
---@field Tip3Text FText
---@field IsSurvival boolean
FHintData = {}



---@class FImpactableComponent
---@field mImpactableComponent UPrimitiveComponent
---@field mInitialRelativeTransform FTransform
---@field mLastSoundTransform FTransform
---@field mInitialMaterials TArray<UMaterialInterface>
---@field mFadeMaterials TArray<UMaterialInterface>
---@field mbUsingFadeMaterials boolean
---@field mFadeAlpha float
---@field mSpectralVelocity FVector
---@field mbUsingSpectralPhysics boolean
---@field mbPendingTransitionHitTest boolean
---@field mbTransitionHit boolean
---@field bHasAchievedOrbit boolean
---@field mbRadialBurstOnRelease boolean
---@field mOrbitAngle float
---@field mTimeSinceLastHit float
---@field mLastInteractionProperties FPropInteractionProperties
---@field mpLastInteractionComponent USceneComponent
---@field mOrbitAxis FVector
---@field mOrbitCentre FVector
---@field mOverlappingTeens TArray<ATPChar>
---@field mWeaponsInRange TArray<AWeaponBase>
FImpactableComponent = {}



---@class FIntCluster
FIntCluster = {}


---@class FInventoryItemData
---@field mNumberOwned int32
---@field mCharacterTypeFilter FCharacterTypeFilter
FInventoryItemData = {}



---@class FIssueDef : FTableRowBase
---@field Pages TArray<FIssuePageLayout>
FIssueDef = {}



---@class FIssueFluffLayout
---@field FluffClass TSubclassOf<UIssueFluffWidget>
---@field Position FIntPoint
---@field Data FFluffData
---@field Texture UTexture2D
---@field LocalizedText FText
---@field IsButton boolean
FIssueFluffLayout = {}



---@class FIssueItemLayout
---@field ItemClass TSubclassOf<UIssueItemWidget>
---@field Position FIntPoint
---@field Grantables TArray<FString>
---@field IsFree boolean
---@field FreeFlagLeft boolean
---@field Tier int32
FIssueItemLayout = {}



---@class FIssuePageLayout
---@field Items TArray<FIssueItemLayout>
---@field Fluff TArray<FIssueFluffLayout>
---@field OverridePageType boolean
---@field OverridePage TSubclassOf<UIssuePageWidget>
FIssuePageLayout = {}



---@class FItemDataAssetCollection
---@field mCategoryName FName
---@field mCategoryTagValue FString
---@field mAssets TArray<UItemDataAsset>
FItemDataAssetCollection = {}



---@class FJourneyAct
FJourneyAct = {}


---@class FJourneyCharacter
FJourneyCharacter = {}


---@class FJourneyJourney
FJourneyJourney = {}


---@class FJourneyMap
FJourneyMap = {}


---@class FJourneyMapLine
FJourneyMapLine = {}


---@class FJourneyMapNode
FJourneyMapNode = {}


---@class FKeysArray
---@field mKeysArray TArray<FKey>
FKeysArray = {}



---@class FLabelledChunk
---@field mChunkName FName
---@field mChunkID int32
---@field mPriority int32
---@field mReleaseCategoryMask uint32
FLabelledChunk = {}



---@class FLerpInfo
FLerpInfo = {}


---@class FLerpManager
FLerpManager = {}


---@class FLiquidMaterialSettings
---@field mMaterialSlot FName
---@field mLiquidVolumeSocket FName
---@field mLiquidVolumeExtent FVector
---@field mLiquidStrengthScale FVector
FLiquidMaterialSettings = {}



---@class FLoadingScreenData
---@field LevelType ELevelType
---@field SubLevelType ESubLevelType
---@field Texture UTexture2D
---@field Weight float
FLoadingScreenData = {}



---@class FLoadoutChange
---@field mCharacterType ECharacterType
---@field mWeaponType EWeaponTypeEnum
---@field mAbilityType EEvilAbilityType
---@field mSlotIndex uint32
---@field mNewValue FString
FLoadoutChange = {}



---@class FLoadoutDataPacket
---@field mpDestinationLobbyBeaconClient ALobbyBeaconClient
FLoadoutDataPacket = {}



---@class FLoadoutItem
---@field mUISlot uint32
---@field mPlayerSlot EPlayerSlot
---@field mItemID FDbItemId
---@field mpDataAsset TSoftObjectPtr<UItemDataAsset>
---@field mbCanReplaceInvalid boolean
FLoadoutItem = {}



---@class FLoadoutItemOverrideList
---@field mDefaultOverrides TArray<FLoadoutItem>
FLoadoutItemOverrideList = {}



---@class FLoadoutValueBase
---@field mOwningLobbyIndex int32
---@field mDirtyLobbyIndexes TMap<int32, boolean>
FLoadoutValueBase = {}



---@class FLoadoutValueGrantable : FLoadoutValueBase
---@field mCurrentValue FGrantable
FLoadoutValueGrantable = {}



---@class FLoadoutValuePoint : FLoadoutValueBase
---@field mCurrentValue int32
FLoadoutValuePoint = {}



---@class FLobbyCharSlotData
---@field mLocation int32
---@field mLobbyIndex int32
---@field mPoseVariant int32
---@field mPoseTimer float
---@field mDisintegrationLevel float
---@field mpTPChar ATPChar
---@field mLoadoutRevision uint8
FLobbyCharSlotData = {}



---@class FLobbyDetails
---@field mLobbyState ELobbyHostState
---@field mServerMatchMode EServerMatchMode
---@field mCurrentPlayers int32
---@field mTotalPlayers int32
---@field mNumEvils int32
---@field mTimer float
FLobbyDetails = {}



---@class FLobbyPlayerInfo
FLobbyPlayerInfo = {}


---@class FLocalViewState
---@field mpLocalMainTPChar ATPChar
---@field mpLocalOrSpectatorMainTPChar ATPChar
---@field mpLocallyViewedTPChar ATPChar
---@field mpLocallyViewedBaseChar ABaseChar
---@field mpLocallyViewedOwnerTPChar ATPChar
FLocalViewState = {}



---@class FLockBoxSpawningContext
---@field mCapturedTransforms TArray<FTransform>
---@field mpCapturedLockbox AActor
---@field mLocationScores TArray<float>
FLockBoxSpawningContext = {}



---@class FManagedFXComponent
---@field mpComponent TWeakObjectPtr<USceneComponent>
---@field mpOwningTPChar TWeakObjectPtr<ATPChar>
---@field mVisibility FEffectVisibility
FManagedFXComponent = {}



---@class FMasteryBorderAssetTable : FTableRowBase
---@field Level int32
---@field Texture UTexture2D
FMasteryBorderAssetTable = {}



---@class FMatchEvent
FMatchEvent = {}


---@class FMatchEventData : FTableRowBase
FMatchEventData = {}


---@class FMatchSettings
---@field mMatchMode EMatchMode
---@field mpSelectedMap UMapDataAsset
---@field mPerkMode EEquippableMode
---@field mMutationMode EEquippableMode
---@field mWeaponPowerMode EEquippableMode
---@field mWinCondition EMatchWinCondition
---@field mNumEvils int32
---@field mNumTeens int32
---@field mNumSpectators int32
---@field mbSkipToHuntStage boolean
---@field mbIsSPDebugActive boolean
---@field mbKickEvilFromVoiceChat EVoiceChatKickMode
---@field mpGameModeDataAsset UGameModeDataAsset
---@field mbSeasonalEventActivitiesActive boolean
---@field mMatchId FString
---@field mSurvivalEvilAIDiffSetting EAIDifficultyLevel
---@field mbBeginnerMatch boolean
FMatchSettings = {}



---@class FMatchSummaryInfoData
---@field mEvilDamagedHits TArray<EDamageType>
---@field mPlayerMatchInfoList TArray<FPlayerMatchInfoData>
---@field mbTeensWon boolean
---@field mbDataIsValid boolean
---@field mbDataHasBeenViewed boolean
---@field mMatchSettings FMatchSettings
---@field mSurvivalRoundCount int32
FMatchSummaryInfoData = {}



---@class FMatchmakingNotificationRequest_Heartbeat
---@field Action FString
FMatchmakingNotificationRequest_Heartbeat = {}



---@class FMatchmakingNotificationRequest_Login
---@field Action FString
---@field GameClientGuid FString
---@field ClientBuildNumber FString
---@field SessionTicketId FString
---@field PlayerAccountId FString
---@field CloudScriptVersion int32
FMatchmakingNotificationRequest_Login = {}



---@class FMatchmakingNotificationRequest_QueueAs
---@field Action FString
---@field MatchmakingStatus FString
---@field MatchmakingRegion FString
---@field GameClientGuid FString
---@field PlayerAccountId FString
---@field DisplayName FString
---@field PreferredFaction FString
---@field PartyId FString
---@field PartyMemberPlayerAccountIds TArray<FString>
---@field CharacterType FString
---@field MatchmakingTicketId FString
---@field MatchID FString
---@field dsIpAddress FString
---@field dsPort int32
FMatchmakingNotificationRequest_QueueAs = {}



---@class FMatchmakingNotificationResponse
---@field Action FString
---@field Result boolean
---@field backendError int32
---@field extraMessage FString
---@field Data FString
FMatchmakingNotificationResponse = {}



---@class FMatchmakingNotificationResponse_Login
FMatchmakingNotificationResponse_Login = {}


---@class FMatchmakingNotificationResponse_MatchmakingNotification
---@field matchmakingType FString
---@field serverIp FString
---@field serverPort boolean
FMatchmakingNotificationResponse_MatchmakingNotification = {}



---@class FMatchmakingNotificationResponse_MatchmakingNotificationEx
---@field Action FString
---@field Result boolean
---@field backendError int32
---@field extraMessage FString
---@field Data FMatchmakingNotificationResponse_MatchmakingNotification_Data
FMatchmakingNotificationResponse_MatchmakingNotificationEx = {}



---@class FMatchmakingNotificationResponse_MatchmakingNotification_Data
---@field matchmakingType FString
---@field serverIp FString
---@field serverPort int32
---@field players TArray<FMatchmakingNotificationResponse_MatchmakingNotification_Player>
---@field matchmakerSessionId FString
---@field matchedPlayerAccountIds TArray<FString>
FMatchmakingNotificationResponse_MatchmakingNotification_Data = {}



---@class FMatchmakingNotificationResponse_MatchmakingNotification_Player
---@field PlayerAccountId FString
---@field playerGameLiftSessionId FString
FMatchmakingNotificationResponse_MatchmakingNotification_Player = {}



---@class FMatchmakingNotificationResponse_SendForceToCancelMatchmakingNotification
---@field Action FString
---@field Result boolean
---@field backendError int32
---@field extraMessage FString
---@field Data FMatchmakingNotificationResponse_SendForceToCancelMatchmakingNotification_Data
FMatchmakingNotificationResponse_SendForceToCancelMatchmakingNotification = {}



---@class FMatchmakingNotificationResponse_SendForceToCancelMatchmakingNotification_Data
---@field Message FString
FMatchmakingNotificationResponse_SendForceToCancelMatchmakingNotification_Data = {}



---@class FMatchmakingPlayerInfo
---@field mGameLiftPlayerSessionId FString
---@field mBackendSessionTicketId FString
---@field mQueueDuration int32
---@field mPartyId FString
---@field mPartySize int32
---@field mIsPartyLeader boolean
---@field mSelectedMatchmakingRegion EMatchmakingRegion
FMatchmakingPlayerInfo = {}



---@class FMaterialParameterInfoExt : FMaterialParameterInfo
FMaterialParameterInfoExt = {}


---@class FMaterialScalerSetterContext
---@field mA_Value float
---@field mB_Value float
---@field mDuration float
---@field mAttributeName FName
FMaterialScalerSetterContext = {}



---@class FMaterialTransferByName
---@field mChannelName FName
---@field mPriority int32
---@field mMaterialSlot FName
---@field mScalarParameters TMap<FMaterialParameterInfoExt, FMaterialParameterInfoExt>
---@field mVectorParameters TMap<FMaterialParameterInfoExt, FMaterialParameterInfoExt>
---@field mTextureParameters TMap<FMaterialParameterInfoExt, FMaterialParameterInfoExt>
FMaterialTransferByName = {}



---@class FMaterialTransferByValue
---@field mChannelName FName
---@field mPriority int32
---@field mMorphTargets TMap<FName, float>
---@field mScalarParameters TMap<FMaterialParameterInfoExt, float>
---@field mVectorParameters TMap<FMaterialParameterInfoExt, FLinearColor>
---@field mTextureParameters TMap<FMaterialParameterInfoExt, UTexture>
---@field mpOverrideMaterial UMaterialInstance
FMaterialTransferByValue = {}



---@class FMaterialTransferParameters
FMaterialTransferParameters = {}


---@class FMaterialTransferReceiver
---@field mChannelToReceive FName
---@field mIncludedMaterialSlots TArray<FName>
---@field mRemapParameter TMap<FName, FMaterialParameterInfoExt>
FMaterialTransferReceiver = {}



---@class FMeshSlotComponent : FStatusMappingTarget
---@field mMeshSlot EMeshSlot
---@field mpClothingItemDataAsset UClothingItemDataAsset
---@field mMeshDataIndex int32
FMeshSlotComponent = {}



---@class FMessageInfo
---@field mMessage FText
---@field mDuration float
FMessageInfo = {}



---@class FMovieState
FMovieState = {}


---@class FNavPathInstance
---@field mpTargetChar ATPChar
---@field mpNavigationPath UNavigationPath
FNavPathInstance = {}



---@class FNavPathScore
---@field mpNavigationPath UNavigationPath
---@field mFinalScore float
---@field mEQResultIndex int32
FNavPathScore = {}



---@class FNavPathTracePoint
FNavPathTracePoint = {}


---@class FNavSelectorItem
FNavSelectorItem = {}


---@class FNavWidgetData
---@field targetWidget UWidget
---@field Location FVector2D
---@field dotProduct float
---@field Distance float
FNavWidgetData = {}



---@class FNetPlayerInfoStruct
---@field mPreferredFaction EFaction
---@field mPreferredTeenCharacterType ECharacterType
---@field mPreferredEvilCharacterType ECharacterType
---@field mFinalInGameFaction EFaction
---@field mFinalTeenCharacterType ECharacterType
---@field mFinalEvilCharacterType ECharacterType
---@field mAIDifficulty EAIDifficultyLevel
---@field mTeenRank int32
---@field mEvilRanks TArray<int32>
---@field mDiscoverKey FString
---@field mPlayerAccountId FString
---@field mDisplayName FString
---@field mGenericName FString
---@field mbIsSpectator boolean
---@field mLobbyIndex int32
---@field mOldLobbyIndex int32
---@field mpMyPlayerController APlayerController
---@field mpMainTPChar ATPChar
---@field mbIsReady boolean
---@field mbHasSpawnedCharacter boolean
---@field mbHasFinishedLoading boolean
---@field mLoadProgress float
---@field mPlayerColor FColor
---@field mbIsBot boolean
---@field mMasteryLevel FPointValue
---@field mAccountPortrait FGrantable
---@field mbHideDisplayName boolean
---@field mUniqueNetIdRepl FUniqueNetIdRepl
---@field mSteamId FString
---@field mUniqueNetIdString FString
---@field mbCameFromServerTravel boolean
FNetPlayerInfoStruct = {}



---@class FNewFlagData
FNewFlagData = {}


---@class FNodePurchase
FNodePurchase = {}


---@class FNotificationData
---@field mNotificationId FString
---@field mSenderPlayerAccountId FString
---@field mSenderDisplayName FString
---@field mExtraData FString
---@field mNotificationType ENotificationType
FNotificationData = {}



---@class FOmenSpawningSpecs
---@field mpInteractablePropClass TSubclassOf<AInteractablePropBase>
---@field mSpawnRadius float
---@field mSpawnNumber uint8
---@field mOrbitMinHeight float
---@field mOrbitMaxHeight float
---@field mOrbitRadius float
---@field mOmenLife float
FOmenSpawningSpecs = {}



---@class FOptionItem
FOptionItem = {}


---@class FP2PMatchmakingInfo
---@field mFaction EFaction
---@field mRank int32
FP2PMatchmakingInfo = {}



---@class FPartyMemberData : FSocialPlayerData
---@field mbIsLeader boolean
FPartyMemberData = {}



---@class FPatchNote
FPatchNote = {}


---@class FPatchNotesCollection
FPatchNotesCollection = {}


---@class FPerceivedActors
---@field mPerceivedEvilChars TArray<ATPChar>
FPerceivedActors = {}



---@class FPerkSlotTypeFilter : FStringOfBits
FPerkSlotTypeFilter = {}


---@class FPickupInfoStruct
---@field mPickupType EPickupType
---@field mEventPickupType EEventPickupType
---@field mbOverrideSkin boolean
---@field mSeasonalEventType ESeasonalEventType
---@field mPickupSubtype int32
---@field mPickupCharge float
FPickupInfoStruct = {}



---@class FPingData
---@field mPingType EPingType
---@field mLocation FVector
---@field mpOwnerPS AGameplayPS
---@field mLifeTimeLeft float
---@field mbIgnoreLifetime boolean
---@field mpPingedActor AActor
---@field mPingColor FColor
---@field mbEvilPing boolean
---@field mEvilPingIndex int32
FPingData = {}



---@class FPipeAccessory
---@field mpMesh UStaticMesh
---@field mSnapToPoints boolean
---@field mDistanceAlongSpline float
---@field mRotationAroundSpline float
---@field mScale float
FPipeAccessory = {}



---@class FPlatformInputIcon : FTableRowBase
---@field KeyType FKey
---@field Texture UTexture2D
FPlatformInputIcon = {}



---@class FPlayerEOMLoadOutData
---@field mEquippedPrize FDbItemId
---@field mPerksList TArray<FDbItemId>
---@field mMutationsList TArray<FDbItemId>
---@field mWeaponPowersList TArray<FWeaponIDToType>
---@field mUnlockedWeaponsList TArray<EWeaponTypeEnum>
---@field bIsPopulated boolean
FPlayerEOMLoadOutData = {}



---@class FPlayerMatchInfoData
---@field mSelectedCharacterType ECharacterType
---@field mFaction EFaction
---@field mPlayerUniqueID FString
---@field mPlayerDisplayName FString
---@field mPlayerGenericName FString
---@field mAccountPortrait FString
---@field mPlayerGameState EPlayerGameState
---@field mHealthPointsData FVector2D
---@field mBaseScore float
---@field mBonusScore float
---@field mDamageTypesHit TArray<EDamageType>
---@field mPlayerLoadoutData FPlayerEOMLoadOutData
---@field mPlayerEOMState EPlayerEndOfMatchState
---@field mPlayerPointsData FPlayerScorePointsData
---@field mPlayedTimeElapsed FText
---@field mTotalNumberOfEvilHits int32
---@field mHitsPerTeen int32
---@field mPlayerLevel int32
---@field mbIsTeenBecomingEvil boolean
---@field mLevelUpData FEORLevelUpData
---@field mRewardsData FEORRewardsData
---@field mMasteryPoints int32
---@field mMasteryLevel int32
---@field mPing int32
---@field mStartingAccountFlux float
---@field mbIsDisconnected boolean
---@field mbHasBeenResurrected boolean
---@field mbCurrentlyAfk boolean
---@field mAfkDuration float
---@field mLifeLost float
---@field mGameplayTimeAtLastDeath float
FPlayerMatchInfoData = {}



---@class FPlayerPointValue
---@field mPointValue FPointValue
FPlayerPointValue = {}



---@class FPlayerScorePointsData
---@field mCategory0 float
---@field mCategory1 float
---@field mCategory2 float
---@field mCategory3 float
---@field mBonusCategory0 float
---@field mBonusCategory1 float
---@field mBonusCategory2 float
---@field mBonusCategory3 float
FPlayerScorePointsData = {}



---@class FPlayerSettingsStruct : FCloudPlayerSettingsStruct
---@field mSettingsVersionNumber uint32
---@field mCustomId FText
---@field mHashedPassword FString
---@field mPasswordLength int32
---@field mRememberPassword boolean
---@field mAutoLogin boolean
FPlayerSettingsStruct = {}



---@class FPlayerToMatchMod
---@field mpPlayerPS AGameplayPS
---@field mMatchModType EMatchModType
FPlayerToMatchMod = {}



---@class FPlayerVerificationInfoForGameLift
FPlayerVerificationInfoForGameLift = {}


---@class FPointType
FPointType = {}


---@class FPointValue
---@field mPointType EPointType
---@field mValue int32
FPointValue = {}



---@class FPortraitAssetTable : FTableRowBase
---@field KeyType EHUDPortraitIcons
---@field Texture UTexture2D
FPortraitAssetTable = {}



---@class FPrizePackData
---@field mType FString
---@field mTypeRedirector FString
---@field mName FString
---@field mChestID FString
FPrizePackData = {}



---@class FPrizeRevealStyleGuide
---@field mpBackgroundLayer1 UTexture2D
---@field mpBackgroundLayer2 UTexture2D
---@field mpBackgroundLayer3 UTexture2D
---@field mpSelectionImage UTexture2D
---@field mpBackgroundGlow UTexture2D
---@field mBackgroundGlowUnhoveredOpacity float
FPrizeRevealStyleGuide = {}



---@class FProcessMatchEventsParameters
FProcessMatchEventsParameters = {}


---@class FProgressionEvent
FProgressionEvent = {}


---@class FPropInteractionProperties
---@field mLimitedPhysicsMaxWeight float
---@field mWobbleMaxWeight float
---@field mPhysicsBehaviour EImpactPhysicsBehaviour
---@field mImpactParticles EImpactParticles
FPropInteractionProperties = {}



---@class FRadialMenuSegement
---@field mSegementNumber int32
---@field mpRadialSegmentCanvasPanel UCanvasPanel
---@field mpRadialSegmentWidget UHUDRadialMenuSegment
---@field mbCanBeSelected boolean
---@field mCurrentAngle float
---@field mSegmentName FText
FRadialMenuSegement = {}



---@class FRecentPlayerData
FRecentPlayerData = {}


---@class FRecordedDamage
---@field mpSourceCharacter ATPChar
---@field mSourceLocation FVector
---@field mWeaponType EWeaponTypeEnum
---@field mbIsDamageActive boolean
---@field mbIsDamageDecaying boolean
---@field mHitBones TArray<int32>
---@field mServerDamageActiveTimer float
---@field mServerDamageDecayTimer float
---@field mServerFrameCounter uint8
---@field mbDirectHit boolean
FRecordedDamage = {}



---@class FRecordedMeshSlotVisibility
---@field mVisibility EMeshSlotVisibility
---@field mPriority uint8
---@field mTuckPointL int32
---@field mTuckPointR int32
FRecordedMeshSlotVisibility = {}



---@class FReplayInfo
---@field mReplayName FString
---@field mFriendlyName FString
---@field mTimestamp FDateTime
---@field mLengthInMS int32
---@field mbIsValid boolean
FReplayInfo = {}



---@class FResonanceCloneParameters
---@field mCloneLifetime float
---@field mCloneCount int32
---@field mCloneFrequency float
---@field mbHasWeapon boolean
---@field bRevealHiddenTeenOnEvilView boolean
FResonanceCloneParameters = {}



---@class FResonanceCloneTriggerSpecs
FResonanceCloneTriggerSpecs = {}


---@class FRewardChest
FRewardChest = {}


---@class FRoomFrameAttribute
---@field mAttributeName FName
---@field mAttributeValue float
FRoomFrameAttribute = {}



---@class FRoomFrameFogSettings : FTableRowBase
---@field mFogDensity float
---@field mFogHeight float
---@field mFogInscatteringColor FLinearColor
FRoomFrameFogSettings = {}



---@class FRotatorStyleGuide
---@field mpEmptyProgressContainer UTexture2D
---@field mpFullProgressContainer UTexture2D
---@field mpProgressCompleteIcon UTexture2D
---@field mpBackgroundImage UTexture2D
FRotatorStyleGuide = {}



---@class FSceneState
---@field mOwningMovieKey FString
---@field mSceneKey FString
---@field mbIsProcedural boolean
FSceneState = {}



---@class FScreenShotRequest
---@field mpCamera ASmokeTestCameraLocation
FScreenShotRequest = {}



---@class FSearchablePointArray
---@field mSearchablePoints TArray<ASearchablePoint>
FSearchablePointArray = {}



---@class FSeasonalEventPickupInfo
---@field mNumPickupsByType TMap<EPickupType, uint32>
FSeasonalEventPickupInfo = {}



---@class FServerNotification
FServerNotification = {}


---@class FServerReportLobbyCompletedInfo
---@field mMatchId FString
---@field mLobbyCompletedPlayerData TArray<FServerReportLobbyCompletedPlayerData>
FServerReportLobbyCompletedInfo = {}



---@class FServerReportLobbyCompletedPlayerData
---@field mPlayerAccountId FString
---@field mLobbyDurationInSeconds int32
FServerReportLobbyCompletedPlayerData = {}



---@class FServerReportLobbyJoinedInfo
---@field mPlayerAccountId FString
---@field mMatchId FString
---@field mRegion FString
---@field mCharacterType FString
---@field mQueueDurationInSeconds int32
---@field mMatchmakingPercentile int32
---@field mDelinquencyRating int32
FServerReportLobbyJoinedInfo = {}



---@class FServerReportOtherPlayerData
---@field mState FString
---@field mDisplayName FString
---@field mAccountPortrait FString
---@field mMasteryLevel int32
---@field mEpuid FString
---@field mSteamId FString
FServerReportOtherPlayerData = {}



---@class FServerReportPlayerDisconnectInfo
---@field mPlayerAccountId FString
---@field mMatchState FString
---@field mDisconnectType FString
---@field mOtherPlayerDataMap TMap<FString, FServerReportOtherPlayerData>
---@field mFaction EFaction
---@field mMatchId FString
---@field mbCurrentlyAfk boolean
---@field mAfkDuration int32
---@field mSecondsIntoMatch int32
FServerReportPlayerDisconnectInfo = {}



---@class FSkinDecal
---@field mpDecalMaterial UMaterialInstance
---@field mTints TMap<FName, FLinearColor>
FSkinDecal = {}



---@class FSkinFXSystem
---@field mpFXSystem UFXSystemAsset
---@field mAttachSocketOverride FName
---@field mbAutoActivate boolean
---@field mTags TArray<FName>
---@field mVisibility FEffectVisibility
FSkinFXSystem = {}



---@class FSkinFXSystemList
---@field mTargetRequiredTags TArray<FName>
---@field mFXSystems TArray<FSkinFXSystem>
FSkinFXSystemList = {}



---@class FSkinLight
---@field mpLightFunction UMaterialInstance
---@field mLightColor FLinearColor
FSkinLight = {}



---@class FSkinMaterialReferencer
FSkinMaterialReferencer = {}


---@class FSkinNiagaraSystem
---@field mpNiagaraSystem UNiagaraSystem
---@field mAttachSocketOverride FName
---@field mbAutoActivate boolean
---@field mVisibility FEffectVisibility
---@field mTags TArray<FName>
FSkinNiagaraSystem = {}



---@class FSkinParticleSystem
---@field mpParticleSystem UParticleSystem
---@field mpMaterialOverrides TMap<FName, UMaterialInstance>
---@field mTints TMap<FName, FLinearColor>
---@field mbEnabled boolean
---@field mAttachSocketOverride FName
---@field mTags TArray<FName>
---@field mbAutoActivate boolean
---@field mVisibility FEffectVisibility
FSkinParticleSystem = {}



---@class FSkinSkeletalMesh : FSkinMaterialReferencer
---@field mpSkeletalMesh USkeletalMesh
---@field mNamedMesh FName
---@field mpMaterialOverrides TMap<FName, UMaterialInstance>
---@field mTints TMap<FName, FLinearColor>
---@field mMaterialParameterTransferByName TArray<FMaterialTransferByName>
---@field mMaterialParameterTransferByValue TArray<FMaterialTransferByValue>
---@field mMaterialParameterTransferChannelsToReceive TArray<FName>
---@field mMaterialParameterTransferReceivers TArray<FMaterialTransferReceiver>
---@field mMaterialParameterTransferConfig UMaterialTransferConfig
---@field mAdditionalMaterialParameterTransferConfigs TArray<UMaterialTransferConfig>
---@field mpAnimInstanceClass TSubclassOf<UAnimInstance>
---@field mPersistentParticleSystems TArray<FSkinParticleSystem>
---@field mPersistentNiagaraSystems TArray<FSkinNiagaraSystem>
---@field mbSimulateLiquid boolean
---@field mLiquidMaterialSettings TArray<FLiquidMaterialSettings>
---@field mClothBlendWeight float
---@field mTags TArray<FName>
FSkinSkeletalMesh = {}



---@class FSkinStaticMesh
---@field mpStaticMesh UStaticMesh
---@field mpMaterialOverrides TMap<FName, UMaterialInstance>
---@field mTints TMap<FName, FLinearColor>
FSkinStaticMesh = {}



---@class FSocialPlayerData
---@field mPlayerAccountId FString
---@field mPlayerUniqueNetId FString
---@field mDisplayName FString
---@field mMasteryPoints FPointValue
---@field mPortrait FGrantable
---@field mPlayerPresenceState EPlayerPresenceState
---@field mSocialStatusType ESocialStatusType
FSocialPlayerData = {}



---@class FSpawnGroup
---@field mpSpawnItemsArray TArray<FSpawnGroupItem>
---@field mNumObjectsToKeep int32
---@field mpDefaultReplacementTemplate TSubclassOf<AActor>
---@field mReplacementTemplateArray TArray<FSpawnGroupReplacementTemplate>
FSpawnGroup = {}



---@class FSpawnGroupItem
---@field mpActor AActor
---@field mWeight float
---@field mbOverrideReplacementTemplate boolean
---@field mpOverrideTemplate TSubclassOf<AActor>
FSpawnGroupItem = {}



---@class FSpawnGroupReplacementTemplate
---@field mpReplacementActor TSubclassOf<AActor>
---@field mWeight float
FSpawnGroupReplacementTemplate = {}



---@class FSplineInterpInstanceComponentData
---@field mInterpolatedMeshData TArray<FSplineInterpolatedMeshData>
---@field mpInstancedMeshComponent UInstancedStaticMeshComponent
FSplineInterpInstanceComponentData = {}



---@class FSplineInterpSpawnInfo
---@field mpStaticMesh UStaticMesh
---@field mSpawnRate float
---@field mOffsetDistanceMin float
---@field mOffsetDistanceMax float
---@field mLoopRadiusMin float
---@field mLoopRadiusMax float
---@field mSpawnTimer float
---@field mTimeToTarget float
---@field mbIsLoopingEnabled boolean
FSplineInterpSpawnInfo = {}



---@class FSplineInterpolatedMeshData
---@field mInterpCurveLocation FInterpCurveVector
---@field mInterpCurveRotation FInterpCurveQuat
---@field mAlpha float
---@field mSpeedMultiplier float
---@field mOffsetAlpha float
---@field mOffsetVector FVector
---@field mbShouldLoopityLoop boolean
---@field mbStartedLoop boolean
---@field mNextLoopAlpha float
---@field mLoopRadius float
---@field mLoopAlpha float
---@field mLoopSpeed float
---@field mLoopForwardVector FVector
---@field mLoopUpVector FVector
---@field mPreviousVelocity FVector
---@field mbHasBrokenOff boolean
FSplineInterpolatedMeshData = {}



---@class FStackedItemId
FStackedItemId = {}


---@class FStatWidgetData
---@field StatType EPlayerAccountStatType
---@field TotalStatType EPlayerAccountStatType
---@field GroupType EStatDisplayForGroup
---@field CombinationType EStatWidgetCombinationType
FStatWidgetData = {}



---@class FStationDamageTypeAssets
---@field mpParticleSystem UNiagaraSystem
---@field mpIconMesh UStaticMesh
---@field mpIconBorderMesh UStaticMesh
FStationDamageTypeAssets = {}



---@class FStatusMappingTarget
---@field mpSkeletalMeshComponent USkeletalMeshComponent
---@field mpFXSystemComponent UFXSystemComponent
FStatusMappingTarget = {}



---@class FStatusProperty
---@field mTimeRemaining float
---@field mBaseTime float
---@field mbPreventUpdateOneFrame boolean
FStatusProperty = {}



---@class FStatusTileData
---@field mStatusType EStatusType
---@field mValue float
---@field mMax float
---@field mTokenCount int32
FStatusTileData = {}



---@class FSteamMicroTxnItemStruct
---@field Mid FString
---@field mRCPrice int32
---@field mCurrencyCode FString
---@field mDescription FString
---@field mQuantity int32
FSteamMicroTxnItemStruct = {}



---@class FStencilProperties
---@field mbEnabled boolean
---@field mbAutoManageRenderCustomDepth boolean
---@field mColor1 FColor
---@field mColor2 FColor
---@field mBoost FColor
---@field mOutlineColour1 FColor
---@field mOutlineColour2 FColor
---@field mOutlineBoost FColor
---@field mEffect EAuraEffect
---@field mEffectColour1 FColor
---@field mEffectColour2 FColor
---@field mEffectAlpha float
---@field mDistanceFadeAlpha float
---@field mDistanceFadeStart float
---@field mDistanceFadeEnd float
---@field mDistanceFadePower uint8
---@field mbIsFading boolean
---@field mFadeTime float
---@field mFadeTimeElapsed float
FStencilProperties = {}



---@class FStencilledPrimitiveProperties
---@field mpPrimitiveWeakPtr TWeakObjectPtr<UPrimitiveComponent>
FStencilledPrimitiveProperties = {}



---@class FStickerData
---@field mLocation FVector
---@field mRotation FRotator
---@field mpAtachedToActor AActor
---@field mpOwningBaseChar ABaseChar
---@field mStickerIndex int32
---@field mSortOrder int32
---@field mbTranslucentBacking boolean
---@field mBaseLifetime float
FStickerData = {}



---@class FStigmaData
---@field StigmaIcon UTexture2D
---@field StigmaBackground UTexture2D
---@field Color FLinearColor
FStigmaData = {}



---@class FStigmaRewardsCardData
---@field mDamageType EDamageType
---@field mCurrentProgress float
---@field mGoalProgress float
---@field mMaxProgress float
---@field mCurrentLevel int32
FStigmaRewardsCardData = {}



---@class FStoreBundleAssetTable : FTableRowBase
---@field BundleName FText
---@field Description FText
---@field DisplayImage UTexture2D
FStoreBundleAssetTable = {}



---@class FStoreCatalogDataTable : FTableRowBase
---@field AllTileBackgrounds TArray<UObject>
FStoreCatalogDataTable = {}



---@class FStoreItemData
---@field mItemIDs TArray<FString>
---@field mSlotDataName FString
---@field mPricingData TArray<FStoreItemPriceData>
---@field mGUID FString
---@field mHCOptionIndex int32
---@field mSCOptionIndex int32
---@field mPageName FString
---@field mStoreTileSize EStoreItemTileSize
---@field mStoreTileItemSizes TArray<EStoreItemTileSize>
---@field mbLineBreakBeforeThisItem boolean
---@field mItemExpiryTime FUtcDateTime
---@field mTileType EStoreItemTileType
---@field mRarity EItemRarity
---@field mDisplayTitle FText
---@field mDisplayCategory FText
---@field mpItemDisplayThumbnail TSoftObjectPtr<UTexture2D>
---@field mbRenderThumbnailAsMovieType boolean
---@field mpNavigationIcon TSoftObjectPtr<UTexture2D>
---@field mMainCatalogIndex int32
---@field mMainCatalogSubIndex int32
---@field mStoreExtraData_Fake FStoreItemDataExtras_Fake
---@field mStoreExtraData_Streak FStoreItemDataExtras_Streak
---@field mStoreExtraData_PrizePack FStoreItemDataExtras_PrizePack
---@field mStoreExtraData_Fake_Slideshow FStoreItemDataExtras_Fake_Slideshow
FStoreItemData = {}



---@class FStoreItemDataExtras
FStoreItemDataExtras = {}


---@class FStoreItemDataExtras_Fake : FStoreItemDataExtras
---@field mpFakeDataImage UTexture2D
FStoreItemDataExtras_Fake = {}



---@class FStoreItemDataExtras_Fake_Slideshow : FStoreItemDataExtras
---@field mTitlesBySlide TArray<FText>
---@field mImagesBySlide TArray<UTexture2D>
---@field mCommandsBySlide TArray<FString>
---@field mSectionsBySlide TArray<FText>
---@field mDependantItem FString
---@field mNOTDependantItem FString
FStoreItemDataExtras_Fake_Slideshow = {}



---@class FStoreItemDataExtras_PrizePack : FStoreItemDataExtras
---@field mQuantityByFaction TMap<EFaction, int32>
---@field mMinRarity EItemRarity
---@field mSeasonalEventType ESeasonalEventType
FStoreItemDataExtras_PrizePack = {}



---@class FStoreItemDataExtras_Streak : FStoreItemDataExtras
---@field mCurrencyType ECurrencyType
---@field mStreakRewardTimeFrame EStreakRewardTimeFrame
---@field mBaseAmount int32
---@field mStreakModifer float
---@field mMaxStreak int32
---@field mCurrentStreak int32
---@field mbClaimable boolean
---@field Mid FString
FStoreItemDataExtras_Streak = {}



---@class FStoreItemPriceData
---@field mHardCurrencyPrice int32
---@field mSoftCurrencyPrice int32
---@field mOriginalHardCurrencyPrice int32
---@field mOriginalSoftCurrencyPrice int32
---@field mSKUPriceLookup FString
FStoreItemPriceData = {}



---@class FStoreItemTileData
---@field mTitle FText
---@field mHardCost int32
---@field mSoftCost int32
---@field mRealCost int32
---@field mRealCostCurrencyCode FString
---@field mGUID FString
---@field mpTexture TSoftObjectPtr<UTexture2D>
---@field mbRenderTextureAsMovieType boolean
---@field mbHardCostValid boolean
---@field mbSoftCostValid boolean
---@field mbRealCostValid boolean
---@field mBundleQuantity int32
---@field mCurrentRow int32
---@field mTileType EStoreItemTileType
---@field mTileRarity EItemRarity
---@field mItemCategory FText
---@field mItemExpiryTime FUtcDateTime
FStoreItemTileData = {}



---@class FStorePageStruct
---@field mPageName FString
---@field mPageOrder int32
---@field mOwningPageName FString
FStorePageStruct = {}



---@class FStoreSKUData
---@field mRCPrice int32
---@field mSKU FString
---@field mUSDPriceCents int32
---@field mContainedGrantables TArray<FGrantable>
---@field mCurrencyCode FString
---@field mName FText
---@field mDescription FText
---@field mCategory FString
---@field mContainedSKUs TArray<FString>
---@field mEpicOfferId FString
---@field mEpicCatalogItemId FString
---@field mSteamAppID uint32
---@field mSteamOverlayToStoreFlag int32
---@field mSKUType EStoreSKUDataType
---@field mbEpicLocalizedPricePopulated boolean
---@field mbAlreadyOwn boolean
FStoreSKUData = {}



---@class FStringOfBits
---@field mStringOfBits FString
FStringOfBits = {}



---@class FStunContext
---@field mStunTimeRemaining float
---@field mStunResistanceTimeRemaining float
---@field mStunResistanceMultiplier float
FStunContext = {}



---@class FSuggestionData : FTableRowBase
---@field SuggestionID FString
---@field SuggestionTypes FString
---@field ReferenceWidget FString
---@field ScreenID FString
---@field BodyTextLocString FString
---@field BodyWidget FString
FSuggestionData = {}



---@class FTPCharFacialAnimData
---@field mbFacialEyesClosed boolean
---@field mbFrustrated boolean
---@field mbInPain boolean
---@field mbSuccess boolean
---@field mbScared boolean
---@field mbConcentrated boolean
---@field mbIsScreaming boolean
---@field mbDetermined boolean
---@field mbSmiling boolean
---@field mbPanting boolean
---@field mEyesLook FVector2D
---@field mbShouldUseBlinks boolean
---@field mbIsPlayingUniqueAnim boolean
FTPCharFacialAnimData = {}



---@class FTPCharStateData
---@field mbShouldPlayInjured boolean
---@field mbHasValidHidePoint boolean
---@field mbHasValidSearchablePoint boolean
---@field mbIsReviving boolean
---@field mbIsHealing boolean
---@field mbIsInMedkitHealingAnimSequence boolean
---@field mbReceivingHealing boolean
---@field mbIsCowering boolean
---@field mbIsSubdued boolean
---@field mbIsBeingFeastedOn boolean
---@field mbIsBeingResurrected boolean
---@field mbIsPlayingResurrectOutro boolean
---@field mbIsTransforming boolean
---@field mbIsGrabbingPickup boolean
---@field mPickupHeight EPickupHeightType
---@field mbIsUsingPickup boolean
---@field mbIsTradeGivingPickup boolean
---@field mbIsPlacingPickup boolean
---@field mGrabbingPickupType EPickupType
---@field mUsingPickupType EPickupType
---@field mbInHideSequence boolean
---@field mHideSpeedType EHideMoveType
---@field mHideObjectType EHideObjectType
---@field mHideState EHideState
---@field mbIsEmoting boolean
---@field mbIsInCraftingAnimSequence boolean
---@field mCurrentCraftingItemType EAnimSpawnableType
---@field mCurrentCraftingWeaponType EWeaponTypeEnum
---@field mbShouldPlayCraftMinigameFailed boolean
---@field mbShouldPlayCraftComplete boolean
---@field mbIsDisarmingDoll boolean
---@field mbIsInSearchingAnimSequence boolean
---@field mCurrentSearchablePointType ESearchableType
---@field mFinishedSearchableType ESearchableType
---@field mbIsInSeasonalEventCenterpieceAnimSequence boolean
---@field mLobbyPoseIndex int32
---@field mLobbyPoseVariant int32
---@field mbIsLobbyPoseFlavor boolean
---@field mCurrentEmoteData FEmoteData
---@field mbIsInMainMenu boolean
---@field mbIsInLoadoutScreen boolean
---@field mCurrentUIMenuScreenType EMenuScreen
---@field mbHasUnsafeClothingEquipped boolean
---@field mbIsAnimationUnsafeForFEND boolean
---@field mbHasBulkyClothingEquipped boolean
---@field mbIsFeastPreviewCharacter boolean
---@field mbIsBeingElectrocuted boolean
---@field mbIsStaggered boolean
---@field mbIsFemale boolean
---@field bIsChaseActive boolean
---@field bForceRepositioningComplete boolean
---@field mbIsDispersed boolean
---@field mbIsRagdoll boolean
---@field mpRagdollTargetMesh USkeletalMeshComponent
FTPCharStateData = {}



---@class FTPMovementData
---@field mSpeed float
---@field mDirection float
---@field mbInAir boolean
---@field mGait float
---@field mPlayRate float
---@field mbIsMoving boolean
---@field mbShoudlPlayUpperBody boolean
---@field mbShouldPlayUpperNeck boolean
---@field mAimPitch float
---@field mAimYaw float
---@field mLookOffset FVector2D
---@field mEyeLookOffset FVector2D
---@field mLeanRotation FVector2D
---@field mProneRotation FRotator
---@field mbCanEnterProneState boolean
---@field mbIsProne boolean
---@field bAllowProneRotation boolean
---@field mbIsCrouching boolean
---@field mbIsCrouchingModeEnabled boolean
---@field mbCanEnterKilledState boolean
---@field mbIsDead boolean
---@field mbShouldProneFlinch boolean
---@field mbIsVaulting boolean
---@field mbWasVaulting boolean
---@field mVaultType EVaultType
---@field mVaultHeightType EVaultHeightType
---@field mTurnInPlaceRotation float
---@field mHeelHeight FVector2D
---@field mHeelAngle FVector2D
---@field mFallHeightType EFallHeightType
---@field mFallHeightAlpha float
---@field mHitAngleVector FVector
---@field mRecoveryTimer float
---@field mbSimulateReaction boolean
---@field mbShouldPlayPanicAnimation boolean
---@field mCrouchDuration float
---@field mPivotFactor float
---@field mbStaticShieldActive boolean
---@field mDeltaYawRotation float
---@field mbIsUndead boolean
---@field mPlayerRotationMode ERotationMode
---@field mbIsAllowedToCrouch boolean
FTPMovementData = {}



---@class FTPWeaponStateData
---@field mUsingWeaponType EWeaponTypeEnum
---@field mHeldWeaponType EWeaponTypeEnum
---@field mbIsThrowing boolean
---@field mbIsAimingMolotov boolean
---@field mbIsAimingSlingshot boolean
---@field mbIsAimingFlamethrower boolean
---@field mbIsAimingPoweredTalisman boolean
---@field mbIsUsingStaticShield boolean
---@field mbIsUsingActiveStaticShield boolean
---@field mbIsInEnergizingAnimSequence boolean
---@field mbIsAimingDemonSword boolean
---@field mbFireDemonSword boolean
---@field mbIsFiringInitialDemonsword boolean
---@field mbIsAimingRaygun boolean
---@field mbFireRaygun boolean
---@field mbIsAimingHolyStaff boolean
---@field mbFireHolyStaff boolean
---@field mbIsHealingSelfWithHolyStaff boolean
---@field mbIsHealingOtherWithHolyStaff boolean
---@field mbIsSummoningFlameMine boolean
---@field mbIsFiringFlameMine boolean
---@field mbIsWeaponHolstered boolean
---@field mbIsDiscardingWeapon boolean
---@field mbWantsToShootProjectileWeapon boolean
---@field mbCanUseWeapon boolean
---@field mbWeaponUsedUp boolean
---@field mbInShootingWeaponAnimSequence boolean
---@field mbJustWoundedEvil boolean
---@field mbDemonSwordSlashdown boolean
---@field mbBlendingBackFromShoot boolean
---@field mStaticShieldLean float
---@field mStaticShieldBob float
FTPWeaponStateData = {}



---@class FTeenClothing : FTableRowBase
---@field mMeshData TMap<EMeshSlotVisibility, FTeenClothingMeshData>
---@field mHideLayers TMap<EMeshSlot, EMeshSlotVisibility>
---@field mUISlot EUISlot
---@field mMeshSlot EMeshSlot
FTeenClothing = {}



---@class FTeenClothingMeshData
---@field mVisibilityMask uint32
---@field mpSkeletalMesh USkeletalMesh
---@field mClothingMesh FSkinSkeletalMesh
---@field mClothingMasks TMap<ESkinSlot, UTexture2D>
---@field mClothPhysicsAssetsToReceive TArray<FName>
---@field mClothBlendWeight float
FTeenClothingMeshData = {}



---@class FTeenHidePointInfo
FTeenHidePointInfo = {}


---@class FTeenLoadoutPreset : FTableRowBase
---@field mDefaultClothing TArray<FName>
FTeenLoadoutPreset = {}



---@class FTeenPickupInfo
FTeenPickupInfo = {}


---@class FTeenRecoveryInfo
FTeenRecoveryInfo = {}


---@class FTeenSkillInfo
FTeenSkillInfo = {}


---@class FTeenWeaponInfo
FTeenWeaponInfo = {}


---@class FTextureAssetTable : FTableRowBase
---@field KeyType EHUDTextureIcons
---@field Texture UTexture2D
FTextureAssetTable = {}



---@class FTextureAssetTableExtended : FTableRowBase
---@field KeyType EHUDTextureIconsExtended
---@field Texture UTexture2D
FTextureAssetTableExtended = {}



---@class FThumbnailCaptureSettings
---@field AssetTransform FTransform
---@field CameraTransform FTransform
---@field MannequinTrasnform FTransform
---@field UseMannequin boolean
---@field MannequinPose int32
---@field CameraFOV float
FThumbnailCaptureSettings = {}



---@class FTierData
FTierData = {}


---@class FTip : FTableRowBase
---@field TipText FText
---@field TipType ETipType
---@field TriggerCount int32
---@field MaxTriggerCount int32
---@field TriggerFrequency int32
---@field RequestCount int32
---@field TimeToShow float
---@field Delay float
---@field IconTexture UTexture2D
---@field TipVisiblityLevel ETipsVisibilityFlags
---@field TipCondition FString
FTip = {}



---@class FTipRequest
---@field mRequestTipId FString
---@field mRequestTimer float
---@field mRequestLength float
---@field mExpiryTime float
FTipRequest = {}



---@class FToadAnimInstanceData
---@field mbIsLeaping boolean
FToadAnimInstanceData = {}



---@class FToadArmourPiece
---@field mpArmourMeshComponent USkeletalMeshComponent
---@field mpBrokenArmourComponent USkeletalMeshComponent
---@field mpArmourPieceParticleSystemComponent UParticleSystemComponent
FToadArmourPiece = {}



---@class FToastInfo
FToastInfo = {}


---@class FTrailingDamagePoint
FTrailingDamagePoint = {}


---@class FUtcDateTime
FUtcDateTime = {}


---@class FValueMultiplier
---@field mValueTag FGameplayTag
---@field mMultiplier float
FValueMultiplier = {}



---@class FWeaponAnimInstanceData
---@field mbIsInLoadoutScreen boolean
---@field mbIsWeaponHolstered boolean
---@field mbIsThrowing boolean
---@field mbIsWeaponActive boolean
---@field mbIsWarmedUp boolean
---@field mbIsUsingWeapon boolean
---@field mbIsBeingCharged boolean
---@field mbIsAimingWepaon boolean
---@field mbIsFiringTalisman boolean
---@field mFrontEndRotation FRotator
---@field mbHolyStaffHealingSelf boolean
---@field mbHolyStaffHealingOther boolean
---@field mbIsSummoningFlameMine boolean
---@field mbIsFlameMineDisabled boolean
FWeaponAnimInstanceData = {}



---@class FWeaponIDToType
---@field mItemID FDbItemId
---@field mWeaponType EWeaponTypeEnum
FWeaponIDToType = {}



---@class FWeaponLoadoutData
FWeaponLoadoutData = {}


---@class FWeaponPointValues
FWeaponPointValues = {}


---@class FWeaponRewardsCardData
---@field mWeaponType EWeaponTypeEnum
---@field mCurrentProgress float
---@field mGoalProgress float
---@field mMaxProgress float
---@field mCurrentLevel int32
FWeaponRewardsCardData = {}



---@class FWeaponTypeDamageStatus
---@field mAppliedTime float
---@field mbWasAppliedThisFrame boolean
---@field mServerHitTimer float
---@field mServerDamageDecayTimer float
FWeaponTypeDamageStatus = {}



---@class FWeaponTypeToAnimSpawnableItem : FTableRowBase
---@field mWeaponType EWeaponTypeEnum
---@field mEnumSpawanbleTypeList TArray<EAnimSpawnableType>
FWeaponTypeToAnimSpawnableItem = {}



---@class FWeaponUnlockLevels
FWeaponUnlockLevels = {}


---@class FWolfAnimInstanceData
---@field mbIsHowling boolean
---@field mbIsUsingSense boolean
FWolfAnimInstanceData = {}



---@class IAIAudibleInterface : IInterface
IAIAudibleInterface = {}

---@param audibleActorInfo FAIAudioInfo
---@return boolean
function IAIAudibleInterface:ShouldUpdateTriton(audibleActorInfo) end
---@return UExtAkComponent
function IAIAudibleInterface:GetAIAudibleAkComponent() end
function IAIAudibleInterface:DoServerReportActiveNoiseEvents() end


---@class IAICharacterLink : IInterface
IAICharacterLink = {}


---@class IAssetLoadInterface : IInterface
IAssetLoadInterface = {}


---@class IAuraIndicatorInterface : IInterface
IAuraIndicatorInterface = {}


---@class IChargeableWeaponInterface : IInterface
IChargeableWeaponInterface = {}

---@return boolean
function IChargeableWeaponInterface:NeedsCharging() end
---@return boolean
function IChargeableWeaponInterface:IsPoweringUp() end
---@return boolean
function IChargeableWeaponInterface:IsPowered() end
---@return boolean
function IChargeableWeaponInterface:IsChargingUp() end
---@return float
function IChargeableWeaponInterface:GetTimeUntilPowered() end
---@return float
function IChargeableWeaponInterface:GetBaseTimeUntilPowered() end
---@param DeltaSeconds float
function IChargeableWeaponInterface:DoServerUpdateTimeUntilPowered(DeltaSeconds) end
---@param DeltaSeconds float
function IChargeableWeaponInterface:DoServerUpdateCharge(DeltaSeconds) end
---@param timeUntilPowered float
function IChargeableWeaponInterface:DoServerSetTimeUntilPowered(timeUntilPowered) end
---@param bPowered boolean
function IChargeableWeaponInterface:DoServerSetPowered(bPowered) end


---@class IDamageSourceInterface : IInterface
IDamageSourceInterface = {}

---@return EWeaponTypeEnum
function IDamageSourceInterface:GetDamageSourceWeaponType() end


---@class IDamageSourceOwnerInterface : IInterface
IDamageSourceOwnerInterface = {}


---@class IEvilAttackableObject : IInterface
IEvilAttackableObject = {}


---@class IEvilSpectralTargetInterface : IInterface
IEvilSpectralTargetInterface = {}


---@class IFrontEndEventsInterface : IInterface
IFrontEndEventsInterface = {}

function IFrontEndEventsInterface:SetGoToSKUPurchaseSequenceOnBeginPlay() end
function IFrontEndEventsInterface:OnSKUPurchased() end
function IFrontEndEventsInterface:OnFrontEndMoviePreviewSpawned() end
---@param CharacterType ECharacterType
function IFrontEndEventsInterface:OnFrontEndCharacterSpawned(CharacterType) end
function IFrontEndEventsInterface:OnDeactivateStoreDiorama() end
---@param bDuck boolean
---@param Duration float
function IFrontEndEventsInterface:OnCustomizeDuckLights(bDuck, Duration) end
---@param bLightingChange boolean
function IFrontEndEventsInterface:OnCustomizeCharacterSpawned(bLightingChange) end
function IFrontEndEventsInterface:OnActivateStoreDiorama() end


---@class IInGameEventsInterface : IInterface
IInGameEventsInterface = {}

function IInGameEventsInterface:OnTVIntroStageBegun() end
---@param pResurrectedTPChar ATPChar
function IInGameEventsInterface:OnTeenResurrected(pResurrectedTPChar) end
---@param pTPChar ATPChar
function IInGameEventsInterface:OnTeenKnockdown(pTPChar) end
---@param pDeadTPChar ATPChar
function IInGameEventsInterface:OnTeenDeath(pDeadTPChar) end
function IInGameEventsInterface:OnStartupStageBegun() end
function IInGameEventsInterface:OnHuntStageBegun() end
---@param pEvilFPChar AFPChar
---@param DamageType EDamageType
function IInGameEventsInterface:OnEvilWounded(pEvilFPChar, DamageType) end
---@param pEvilFPChar AFPChar
---@param DamageType EDamageType
function IInGameEventsInterface:OnEvilDamaged(pEvilFPChar, DamageType) end
---@param pEvilFPChar AFPChar
---@param DamageType EDamageType
function IInGameEventsInterface:OnEvilBecomeStunned(pEvilFPChar, DamageType) end
---@param pEvilFPChar AFPChar
function IInGameEventsInterface:OnEvilBecomeIncorporeal(pEvilFPChar) end
---@param pEvilFPChar AFPChar
function IInGameEventsInterface:OnEvilBecomeCorporeal(pEvilFPChar) end
function IInGameEventsInterface:OnEndGameStageBegun() end


---@class INavWidgetInterface : IInterface
INavWidgetInterface = {}


---@class IPatrollableObjectInterface : IInterface
IPatrollableObjectInterface = {}


---@class IPrerequisiteChecker : IInterface
IPrerequisiteChecker = {}

function IPrerequisiteChecker:OnPrerequisiteCheckCompleted() end
---@param grantableId FGrantable
---@return boolean
function IPrerequisiteChecker:MaybeAddPrerequisiteToCheck(grantableId) end
---@return boolean
function IPrerequisiteChecker:HasUnsatisfiedPrerequisites() end


---@class IResonanceNiagaraProvider : IInterface
IResonanceNiagaraProvider = {}

---@return UNiagaraSystem
function IResonanceNiagaraProvider:GetResonanceNiagaraSys() end


---@class ISkinnableActorInterface : IInterface
ISkinnableActorInterface = {}

---@param pSkin UItemDataAsset
function ISkinnableActorInterface:SetSkin(pSkin) end
---@return UItemDataAsset
function ISkinnableActorInterface:GetSkin() end
function ISkinnableActorInterface:ApplySkin() end


---@class IStateWidgetInterface : IInterface
IStateWidgetInterface = {}


---@class UAITask_EvilUseAbility : UAITask
---@field OnAbilityFinished FAITask_EvilUseAbilityOnAbilityFinished
---@field OnAbilityFailed FAITask_EvilUseAbilityOnAbilityFailed
UAITask_EvilUseAbility = {}

---@param pController AAIController
---@param pEvil AFPChar
---@param abilityIndex uint8
---@param postCastingDuration float
---@return UAITask_EvilUseAbility
function UAITask_EvilUseAbility:EvilUseAbility(pController, pEvil, abilityIndex, postCastingDuration) end


---@class UAITask_HolyStaffHeal : UAITask
---@field mpTPCharOwner ATPChar
---@field mpHolyStaff AHolyStaffWeapon
---@field mpBestInjuredCandidate ATPChar
---@field OnTaskSucceeded FAITask_HolyStaffHealOnTaskSucceeded
---@field OnTaskFailed FAITask_HolyStaffHealOnTaskFailed
UAITask_HolyStaffHeal = {}

---@param pController AAIController
---@param pTPChar ATPChar
---@param pHolyStaffWeapon AHolyStaffWeapon
---@param pTargetChar ATPChar
---@return UAITask_HolyStaffHeal
function UAITask_HolyStaffHeal:HolyStaffHealTarget(pController, pTPChar, pHolyStaffWeapon, pTargetChar) end
---@param pController AAIController
---@param pTPChar ATPChar
---@param pHolyStaffWeapon AHolyStaffWeapon
---@return UAITask_HolyStaffHeal
function UAITask_HolyStaffHeal:HolyStaffHealSelf(pController, pTPChar, pHolyStaffWeapon) end
function UAITask_HolyStaffHeal:HolyStaffHealingTaskDelegate__DelegateSignature() end


---@class UAITask_MoveToSimulateInput : UAITask
---@field mpControlledBaseChar ABaseChar
---@field OnRequestFailed FAITask_MoveToSimulateInputOnRequestFailed
---@field OnMoveFinished FAITask_MoveToSimulateInputOnMoveFinished
UAITask_MoveToSimulateInput = {}

---@param Controller AAIController
---@param inGoalLocation FVector
---@param acceptableRadius float
---@param bReachTestIncludesGoalRadius boolean
---@param bDrawDirectionDebug boolean
---@return UAITask_MoveToSimulateInput
function UAITask_MoveToSimulateInput:AIMoveToSimulateInput(Controller, inGoalLocation, acceptableRadius, bReachTestIncludesGoalRadius, bDrawDirectionDebug) end


---@class UAITask_RCCopterAttack : UAITask
---@field mpTargetCharacter ATPChar
---@field mpControlledCopter ARCCopter
---@field mControlledChar ATPChar
---@field onCopterAttackCompleted FAITask_RCCopterAttackOnCopterAttackCompleted
UAITask_RCCopterAttack = {}

---@param Controller AAIController
---@param targetCharacter ATPChar
---@param attackCancelDelay float
---@return UAITask_RCCopterAttack
function UAITask_RCCopterAttack:RCCopterAttack(Controller, targetCharacter, attackCancelDelay) end


---@class UAITask_TeenUseEnergyPoint : UAITask
---@field mpPointBase TWeakObjectPtr<APointBase>
---@field mpTPChar TWeakObjectPtr<ATPChar>
---@field OnTaskSucceeded FAITask_TeenUseEnergyPointOnTaskSucceeded
---@field OnTaskFailed FAITask_TeenUseEnergyPointOnTaskFailed
UAITask_TeenUseEnergyPoint = {}

---@param pController AAIController
---@param pControlledTPChar ATPChar
---@param pTargetPointBase APointBase
---@return UAITask_TeenUseEnergyPoint
function UAITask_TeenUseEnergyPoint:TeenUseEnergyPoint(pController, pControlledTPChar, pTargetPointBase) end


---@class UAITask_TeenWeaponAttack : UAITask
---@field mTargetCharacter ATPChar
---@field mControlledTPChar ATPChar
---@field AIController AAIController
---@field mEquippedWeapon AWeaponBase
---@field teenWeaponAttackCompleted FAITask_TeenWeaponAttackTeenWeaponAttackCompleted
UAITask_TeenWeaponAttack = {}

---@param pController AAIController
---@param pTargetCharacter ATPChar
---@param attackCancelDelay float
---@param turningRate float
---@param bAutoEnergizeWeapon boolean
---@return UAITask_TeenWeaponAttack
function UAITask_TeenWeaponAttack:TeenWeaponAttack(pController, pTargetCharacter, attackCancelDelay, turningRate, bAutoEnergizeWeapon) end
---@param isUsing boolean
function UAITask_TeenWeaponAttack:OnWeaponStateChange(isUsing) end
---@param bVal boolean
function UAITask_TeenWeaponAttack:AISecondaryAttack(bVal) end
---@param bVal boolean
function UAITask_TeenWeaponAttack:AIPrimaryAttack(bVal) end


---@class UAITask_UseVaultPoint : UAITask
---@field mpVaultPoint TWeakObjectPtr<AVaultPoint>
---@field mpTPChar TWeakObjectPtr<ATPChar>
---@field OnTaskSucceeded FAITask_UseVaultPointOnTaskSucceeded
---@field OnTaskFailed FAITask_UseVaultPointOnTaskFailed
UAITask_UseVaultPoint = {}

---@param Controller AAIController
---@param pControlledTPChar ATPChar
---@param pTargetVaultPoint AVaultPoint
---@return UAITask_UseVaultPoint
function UAITask_UseVaultPoint:UseVaultPoint(Controller, pControlledTPChar, pTargetVaultPoint) end


---@class UAccountPortraitWidget : UMetaWidget
---@field ShouldCollapseWhenEmpty boolean
---@field mpAccountButton UButton
---@field mpWidgetSwitcher UWidgetSwitcher
---@field mpPortraitPanel UCanvasPanel
---@field mpAddPlayerPanel UGridPanel
---@field mpAvatarIcon UImage
---@field mpLeaderIcon UImage
---@field mpPartyMemberBorder UBorder
---@field mpBorderImage UImage
---@field mpReadyIcon UImage
---@field mpOfflineIcon UImage
UAccountPortraitWidget = {}

---@param pTex UTexture2D
function UAccountPortraitWidget:OnAvatarIconLoaded(pTex) end


---@class UAccountRewardsOverlayWidget : UUserWidget
---@field mpPlayerAccountPlayerInfo UPlayerAccountPlayerInfoWidget
---@field mpRewardWidget UBaseRewardWidget
---@field mMasteryLevelUpRewards TArray<FDbItemId>
---@field mpPlayerInfoPanelIn UWidgetAnimation
---@field mpPlayerInfoPanelOut UWidgetAnimation
---@field mpRewardPanelIn UWidgetAnimation
---@field mpRewardPanelOut UWidgetAnimation
---@field mpTitlesPanelIn UWidgetAnimation
---@field mpTitlesPanelOut UWidgetAnimation
UAccountRewardsOverlayWidget = {}



---@class UAccountWidget : UUserWidget
---@field mpProfileImage UImage
---@field mpProfileName UTextBlock
---@field mpFanPointsText UTextBlock
UAccountWidget = {}



---@class UActionButton : UUserWidget
---@field ButtonActionType EGameActionType
---@field UseSecondaryColorTheme boolean
---@field UseOverrideColorTheme boolean
---@field OverrideNormalColor FLinearColor
---@field OverrideHoverColor FLinearColor
---@field OverridePressedColor FLinearColor
---@field OverrideDisabledColor FLinearColor
---@field mpActionButton UButton
---@field mpActionIcon UPlatformImage
---@field mpActionText UTextBlock
UActionButton = {}

function UActionButton:OnButtonPressed() end


---@class UAnalyticsManager : UObject
---@field mpHttpService UHttpService
---@field mMatchId FString
---@field mpBatchedEvents UEventInfo
UAnalyticsManager = {}



---@class UAnimNotifyState_AddMovementInput : UAnimNotifyState
---@field mSpeedMultiplier float
UAnimNotifyState_AddMovementInput = {}



---@class UAnimNotifyState_AnimProp : UAnimNotifyState
---@field PropSkeletalMeshList TArray<USkeletalMesh>
---@field PropAnimSequence UAnimationAsset
---@field PropSocket FName
---@field SocketToAttach FName
---@field bAddForceOnDetach boolean
---@field ForceToAdd float
---@field ForceVector FVector
---@field mpInteractablePropBaseClass TSubclassOf<AInteractablePropBase>
---@field mpSkeletalMeshToSpawn USkeletalMesh
UAnimNotifyState_AnimProp = {}

---@param MeshComp USkeletalMeshComponent
function UAnimNotifyState_AnimProp:SpawnInteractablePropAndAddForce(MeshComp) end
---@param MeshComp USkeletalMeshComponent
function UAnimNotifyState_AnimProp:SpawnAnimProp(MeshComp) end
---@return USkeletalMesh
function UAnimNotifyState_AnimProp:GetRandomSkeletalMesh() end
---@param MeshComp USkeletalMeshComponent
function UAnimNotifyState_AnimProp:CleanAttachedAnimProps(MeshComp) end


---@class UAnimNotifyState_ExtTimedNiagaraEffect : UAnimNotifyState_TimedNiagaraEffect
---@field mEffectVisibility FEffectVisibility
UAnimNotifyState_ExtTimedNiagaraEffect = {}



---@class UAnimNotifyState_ExtTimedNiagaraEffectAdvanced : UAnimNotifyState_TimedNiagaraEffectAdvanced
---@field mEffectVisibility FEffectVisibility
UAnimNotifyState_ExtTimedNiagaraEffectAdvanced = {}



---@class UAnimNotifyState_ExtTimedParticleEffect : UAnimNotifyState_TimedParticleEffect
---@field mbHiddenWhenIncorporeal boolean
---@field mbIsSpiritWorldOnly boolean
UAnimNotifyState_ExtTimedParticleEffect = {}



---@class UAnimNotifyState_HitWindowNotifyState : UAnimNotifyState
UAnimNotifyState_HitWindowNotifyState = {}


---@class UAnimNotify_CharPrimary_ExtAkEvent : UAnimNotify
---@field mAkEmitterType EAkEmitterType
---@field pAudioEvent UAkAudioEvent
---@field mAudioEventName FString
---@field mCallbackMask int32
UAnimNotify_CharPrimary_ExtAkEvent = {}



---@class UAnimNotify_ExtPlayEffigyEffect : UAnimNotify_ExtPlayNiagaraEffect
UAnimNotify_ExtPlayEffigyEffect = {}


---@class UAnimNotify_ExtPlayNiagaraEffect : UAnimNotify_PlayNiagaraEffect
---@field mbStaticVisibility boolean
---@field mEffectVisibility FEffectVisibility
UAnimNotify_ExtPlayNiagaraEffect = {}



---@class UAnimNotify_ExtPlayParticleEffect : UAnimNotify_PlayParticleEffect
---@field mEffectVisibility FEffectVisibility
UAnimNotify_ExtPlayParticleEffect = {}



---@class UAnimatedSnapNavScrollBox : UUserWidget
---@field mpNavScrollBox UNavScrollBox
---@field mChildWidgetSize FVector2D
---@field mNavWidgetList TArray<UNavButton>
---@field mSizeBoxList TArray<USizeBox>
---@field mSpacerSize float
---@field mCurrentlySelectedIndex int32
---@field mPreviousScrollValue float
---@field mpLeftSpacer USpacer
---@field mSelectedSizeMultiplier float
---@field mbForceFreezeTick boolean
---@field mbRequiresFirstFrameUpdate boolean
UAnimatedSnapNavScrollBox = {}

---@param bNewValue boolean
function UAnimatedSnapNavScrollBox:SetForceFreezeTick(bNewValue) end
---@param Index int32
---@param bAnimated boolean
function UAnimatedSnapNavScrollBox:ScrollIndexToCenter(Index, bAnimated) end
---@param Value float
function UAnimatedSnapNavScrollBox:OnUserScrolled(Value) end
function UAnimatedSnapNavScrollBox:OnScrollNavUpPressed() end
function UAnimatedSnapNavScrollBox:OnScrollNavDownPressed() end
---@param bPressed boolean
function UAnimatedSnapNavScrollBox:OnInputAction_ScrollUp(bPressed) end
---@param bPressed boolean
function UAnimatedSnapNavScrollBox:OnInputAction_ScrollDown(bPressed) end
---@return boolean
function UAnimatedSnapNavScrollBox:IsTickForceFrozen() end
---@return boolean
function UAnimatedSnapNavScrollBox:HasAnyNavChildren() end
---@return int32
function UAnimatedSnapNavScrollBox:GetMaxIndex() end
---@return UNavButton
function UAnimatedSnapNavScrollBox:GetDefaultButton() end
---@return int32
function UAnimatedSnapNavScrollBox:GetCurrentlySelectedIndex() end
---@param Index int32
function UAnimatedSnapNavScrollBox:ForceFullySelectedIndex(Index) end
function UAnimatedSnapNavScrollBox:ClearChildren() end
---@param pWidget UWidget
function UAnimatedSnapNavScrollBox:AddScrollBoxChild(pWidget) end
---@param pNavButton UNavButton
function UAnimatedSnapNavScrollBox:AddNavButtonForChild(pNavButton) end
function UAnimatedSnapNavScrollBox:AddEndSpacer() end


---@class UAnimationConfig : UCustomizationConfigBase
---@field mAnimationAssets TArray<UAnimationAsset>
UAnimationConfig = {}



---@class UAnnouncementButton : UUserWidget
---@field UnselectedStyle FButtonStyle
---@field SelectedStyle FButtonStyle
---@field mpButton UButton
UAnnouncementButton = {}

function UAnnouncementButton:OnButtonPressed() end


---@class UAnnouncementOverlayWidget : UBaseOverlay
---@field AnnouncementWidgetsByMetaData TMap<FString, TSubclassOf<UAnnouncementWidget>>
---@field ButtonClass TSubclassOf<UAnnouncementButton>
---@field UnselectedButtonStyle FButtonStyle
---@field mpButtonBox UHorizontalBox
---@field mpWidgetSwitcher UWidgetSwitcher
---@field mpProgressButton UButton
---@field mpEscapeButton UButton
UAnnouncementOverlayWidget = {}

function UAnnouncementOverlayWidget:OnProgressPressed() end
function UAnnouncementOverlayWidget:OnEscapePressed() end
---@param Index int32
function UAnnouncementOverlayWidget:OnButtonPressed(Index) end
function UAnnouncementOverlayWidget:OnActionPressed() end


---@class UAnnouncementWidget : UUserWidget
---@field AnnouncementMetaId FString
---@field seasonalEventType ESeasonalEventType
UAnnouncementWidget = {}



---@class UAssetFeatureScreen : UBaseScreen
---@field mpItemIcon UImage
---@field mpItemNameText UTextBlock
---@field mpItemDescriptionText UTextBlock
---@field mpCostPanel UCanvasPanel
---@field mpPPCost UTextBlock
---@field mpFPCost UTextBlock
---@field mpPurchaseButton UNavButton
---@field mReturnScreen EMenuScreen
---@field mpReturnOverlay UBaseOverlay
UAssetFeatureScreen = {}

---@param pTex UTexture2D
function UAssetFeatureScreen:OnTextureLoaded(pTex) end
function UAssetFeatureScreen:OnPurchasePressed() end


---@class UAssetLoadStep : UPlayerLoadStep
UAssetLoadStep = {}


---@class UAsyncAssetManager : UAssetManager
UAsyncAssetManager = {}

function UAsyncAssetManager:OnTextureAssetLoaded() end
function UAsyncAssetManager:OnStaticMeshAssetLoaded() end
function UAsyncAssetManager:OnSkeletalMeshAssetLoaded() end
---@param pWorld UWorld
---@return UAsyncAssetManager
function UAsyncAssetManager:GetInstance(pWorld) end


---@class UAttractScreen : UBaseScreen
---@field HoverColor FLinearColor
---@field UnhoverColor FLinearColor
---@field FlashTimerOn float
---@field FlashTimerOff float
---@field mpPlayButton UNavButton
---@field mpExitButton UNavButton
---@field mpVideoTexture UImage
---@field mpInfoPanel UCanvasPanel
---@field mpInfoText UTextBlock
---@field mpErrorCodeText UTextBlock
---@field mpPlayIcon UImage
---@field mpPlayText UTextBlock
---@field mpPlayPrompt UButtonPromptWidget
---@field mpExitText UTextBlock
---@field mpConnectionInfoPanel UCanvasPanel
---@field mpConnectionInfoText URichTextBlock
---@field mpMediaPlayer UMediaPlayer
---@field mpMediaTexture UMediaTexture
---@field mpVideoSource UFileMediaSource
UAttractScreen = {}

---@param bShow boolean
function UAttractScreen:ShowPlayButton(bShow) end
function UAttractScreen:ShowExitPrompt() end
---@param Text FText
function UAttractScreen:SetInfoText(Text) end
---@param Text FText
function UAttractScreen:SetErrorCode(Text) end
---@param bSet boolean
function UAttractScreen:SetAttemptAutoLogin(bSet) end
function UAttractScreen:PopulateConnectionInfo() end
function UAttractScreen:OnRetryLoginConfirm() end
function UAttractScreen:OnPlayPressed() end
function UAttractScreen:OnExitPressed() end
function UAttractScreen:InitialPlatformSetup() end
---@param URL FString
function UAttractScreen:HandlePlayerMediaEventOpenFailed(URL) end
---@param URL FString
function UAttractScreen:HandlePlayerMediaEventOpened(URL) end
function UAttractScreen:HandleOnMediaPlaybackResumed() end
function UAttractScreen:DoExitGame() end
function UAttractScreen:BeginAsyncLogin() end
function UAttractScreen:AttemptRelog() end


---@class UAudioTab : UBaseTab
---@field mpNavScrollBox UNavScrollBox
---@field mpMasterVolume UOptionSliderUserButton
---@field mpMenuMusicVolume UOptionSliderUserButton
---@field mpGameplayVolume UOptionSliderUserButton
---@field mpPingVolume UOptionSliderUserButton
---@field mpMuteGameIfUnfocused UOptionToggleUserButton
---@field mpAudioOutputDevice UOptionSelectorUserButton
---@field mp3DHeadphones UOptionToggleUserButton
---@field mpVoiceChatToggle UOptionToggleUserButton
---@field mpVoiceChatMode UOptionSelectorUserButton
---@field mpVoiceChatChannel UOptionSelectorUserButton
---@field mpVoiceChatVolume UOptionSliderUserButton
---@field mpVoiceChatMicVolume UOptionSliderUserButton
---@field mpMuteVoiceChatIfUnfocused UOptionToggleUserButton
---@field mpVoiceChatInputDevice UOptionSelectorUserButton
---@field mpVoiceChatOutputDevice UOptionSelectorUserButton
---@field mpRestoreDefaultsButton UOptionSingleUserButton
---@field mDefaultAudioOutputDevice FString
---@field mDefaultAudioOutputDeviceIndex int32
---@field mDefaultVoiceChatInputDevice FString
---@field mDefaultVoiceChatInputDeviceIndex int32
---@field mDefaultVoiceChatOutputDevice FString
---@field mDefaultVoiceChatOutputDeviceIndex int32
UAudioTab = {}

function UAudioTab:OnResetDefaultsPressed() end
function UAudioTab:OnResetDefaultsConfirmed() end


---@class UAugmentManager : USceneComponent
---@field mSlots TArray<FAugmentSlot>
---@field mEquippedAugmentItemIDs TArray<FDbItemId>
---@field mbAllowInvalidPerkLoadouts boolean
UAugmentManager = {}

---@param DeltaTime float
function UAugmentManager:Update(DeltaTime) end
---@param augmentIndex int32
---@param augmentType EAugmentType
---@param Tier int32
function UAugmentManager:ServerDebugAssignAugment(augmentIndex, augmentType, Tier) end
---@param pLobbyManager ULobbyManager
---@param pCharacterLoadout UCharacterLoadout
---@param CharType ECharacterType
---@return TArray<FDbItemId>
function UAugmentManager:PopulateEquippedAugmentsForGoodCharacter(pLobbyManager, pCharacterLoadout, CharType) end
---@param pLobbyManager ULobbyManager
---@param pCharacterLoadout UCharacterLoadout
---@param CharType ECharacterType
---@return TArray<FDbItemId>
function UAugmentManager:PopulateEquippedAugmentsForEvilCharacter(pLobbyManager, pCharacterLoadout, CharType) end
---@param CharType ECharacterType
---@return TArray<FDbItemId>
function UAugmentManager:PopulateEquippedAugmentsForCharacterFromLoadout(CharType) end
---@param augmentIndex int32
---@return boolean
function UAugmentManager:IsAugmentOnCooldown(augmentIndex) end
---@param augmentIndex int32
---@return boolean
function UAugmentManager:IsAugmentFullyCharged(augmentIndex) end
---@param augmentIndex int32
---@return boolean
function UAugmentManager:IsAugmentActive(augmentIndex) end
---@param augmentType EAugmentType
---@param minTier int32
---@param bReqActive boolean
---@return boolean
function UAugmentManager:HasAugment(augmentType, minTier, bReqActive) end
---@return ATPChar
function UAugmentManager:GetOwningTPChar() end
---@param pWorld UWorld
---@param bIsGoodCharacter boolean
---@param augmentDbItems TArray<FDbItemId>
---@param affinityType EPerkAffinityType
---@param Tier int32
---@return int32
function UAugmentManager:GetNumberOfPerkTypeOfTierEquipped(pWorld, bIsGoodCharacter, augmentDbItems, affinityType, Tier) end
---@param abilityType EEvilAbilityType
---@return FMatchEvent
function UAugmentManager:GetMutationMatchEventForEvilAbilityType(abilityType) end
---@param pWorld UWorld
---@param augmentType EAugmentType
---@param augmentTier int32
---@return FMatchEvent
function UAugmentManager:GetMatchEventForAugmentType(pWorld, augmentType, augmentTier) end
---@return TArray<FDbItemId>
function UAugmentManager:GetEquippedAugmentItemIDs() end
---@param pWorld UWorld
---@param CharType ECharacterType
---@param outAugmentDbItems TArray<FDbItemId>
function UAugmentManager:GetClientAugmentDbItems(pWorld, CharType, outAugmentDbItems) end
---@param augmentType EAugmentType
---@return FText
function UAugmentManager:GetAugmentTypeFriendlyName(augmentType) end
---@param augmentIndex int32
---@return EAugmentType
function UAugmentManager:GetAugmentType(augmentIndex) end
---@param augmentIndex int32
---@return int32
function UAugmentManager:GetAugmentTokens(augmentIndex) end
---@param augmentIndex int32
---@return int32
function UAugmentManager:GetAugmentTier(augmentIndex) end
---@param augmentIndex int32
---@return FAugmentSlot
function UAugmentManager:GetAugmentSlot(augmentIndex) end
---@param augmentType EAugmentType
---@return int32
function UAugmentManager:GetAugmentIndex(augmentType) end
---@param augmentIndex int32
---@return float
function UAugmentManager:GetAugmentCurrentChargeTime(augmentIndex) end
---@return int32
function UAugmentManager:GetAugmentCount() end
---@param augmentIndex int32
---@return float
function UAugmentManager:GetAugmentCooldownRemaining(augmentIndex) end
---@param augmentIndex int32
---@return float
function UAugmentManager:GetAugmentCooldownFactor(augmentIndex) end
---@param augmentIndex int32
---@return float
function UAugmentManager:GetAugmentCooldown(augmentIndex) end
---@param augmentIndex int32
---@return float
function UAugmentManager:GetAugmentChargeTimeFactor(augmentIndex) end
---@param augmentIndex int32
---@return float
function UAugmentManager:GetAugmentChargeTime(augmentIndex) end
---@param pWorld UWorld
---@param CharType ECharacterType
---@param augmentDbItems TArray<FDbItemId>
---@param outMatchEventsArray TArray<FMatchEvent>
function UAugmentManager:GetAllMatchEventsForAugmentDbItems(pWorld, CharType, augmentDbItems, outMatchEventsArray) end
---@param DeltaTime float
function UAugmentManager:DoServerUpdateCooldowns(DeltaTime) end
---@param DeltaTime float
function UAugmentManager:DoServerUpdateChargeTime(DeltaTime) end
---@param DeltaTime float
function UAugmentManager:DoServerUpdateActive(DeltaTime) end
---@param augmentIndex int32
---@param tokens int32
function UAugmentManager:DoServerSetAugmentTokens(augmentIndex, tokens) end
---@param augmentIndex int32
---@param Tier int32
function UAugmentManager:DoServerSetAugmentTier(augmentIndex, Tier) end
---@param augmentIndex int32
---@param currentChargeTime float
function UAugmentManager:DoServerSetAugmentCurrentChargeTime(augmentIndex, currentChargeTime) end
---@param augmentIndex int32
---@param cooldownRemaining float
function UAugmentManager:DoServerSetAugmentCooldownRemaining(augmentIndex, cooldownRemaining) end
---@param augmentIndex int32
---@param cooldown float
function UAugmentManager:DoServerSetAugmentCooldown(augmentIndex, cooldown) end
---@param augmentIndex int32
---@param chargeTime float
function UAugmentManager:DoServerSetAugmentChargeTime(augmentIndex, chargeTime) end
---@param augmentIndex int32
---@param bActive boolean
function UAugmentManager:DoServerSetAugmentActive(augmentIndex, bActive) end
---@param augmentIndex int32
function UAugmentManager:DoServerResetCooldown(augmentIndex) end
---@param augmentIndex int32
---@param augmentType EAugmentType
---@param Tier int32
function UAugmentManager:DoServerOnAugmentSet(augmentIndex, augmentType, Tier) end
function UAugmentManager:DoServerInitFromLoadout() end
---@param augmentType EAugmentType
---@return boolean
function UAugmentManager:DoServerCheckAugmentAllowed(augmentType) end
---@param augmentIndex int32
---@param augmentType EAugmentType
---@param Tier int32
function UAugmentManager:DoServerAssignAugment(augmentIndex, augmentType, Tier) end
---@param ItemId FDbItemId
function UAugmentManager:DoServerAddEquippedAugmentID(ItemId) end
---@param augmentIndex int32
function UAugmentManager:DoServerActivateCooldown(augmentIndex) end
---@return boolean
function UAugmentManager:DoesAllowInvalidPerkLoadouts() end


---@class UAuraManager : UWorldSubsystem
---@field mTime float
---@field mpStencilPropertyTexture UTexture2D
---@field mbStencilIDsChanged boolean
---@field mMaxID int32
---@field mStencilIDNames TMap<FName, int32>
---@field mStencilIDProperties TArray<FStencilProperties>
---@field mStencilIDFadeToProperties TArray<FStencilProperties>
---@field mDebugStencilIDProperties TArray<FStencilProperties>
---@field mDebugStencilIndices TArray<boolean>
---@field mAllAuraInstanceObjects TMap<FName, FAuraInstanceObject>
UAuraManager = {}

---@param DeltaTime float
function UAuraManager:UpdateStencilPropertyTexture(DeltaTime) end
---@param Name FName
---@param bEnabled boolean
---@return boolean
function UAuraManager:UpdateStencilEnabled(Name, bEnabled) end
---@param Name FName
---@param Alpha float
---@return boolean
function UAuraManager:UpdateStencilEffectAlpha(Name, Alpha) end
---@param Name FName
---@param boost FColor
---@return boolean
function UAuraManager:UpdateStencilEBoost(Name, boost) end
---@param Name FName
---@param Color FColor
---@return boolean
function UAuraManager:UpdateStencilColour(Name, Color) end
function UAuraManager:UpdateComponentStencilIDs() end
---@param pChar ABaseChar
function UAuraManager:UpdateAurasForCharacter(pChar) end
---@param targetMask int32
---@param viewMask int32
---@param Properties FAuraInstanceObject
---@return boolean
function UAuraManager:ShouldShowForView(targetMask, viewMask, Properties) end
---@param Name FName
---@param Properties FStencilProperties
---@param bFadeIn boolean
---@param Seconds float
---@param bOverrideHighlight boolean
---@param highlightOverrideProperties FStencilProperties
function UAuraManager:SetStencilProperties(Name, Properties, bFadeIn, Seconds, bOverrideHighlight, highlightOverrideProperties) end
---@param Name FName
---@param bEnabled boolean
function UAuraManager:SetRenderCustomDepth(Name, bEnabled) end
---@param Index int32
---@param bValue boolean
function UAuraManager:SetDebugStencilIndex(Index, bValue) end
function UAuraManager:ResetStencilGroups() end
---@param Name FName
function UAuraManager:RemoveStencilGroup(Name) end
---@param pPrimitive UPrimitiveComponent
---@param Name FName
function UAuraManager:RemoveComponentFromStencilGroup(pPrimitive, Name) end
---@param Index int32
---@return boolean
function UAuraManager:IsDebuggingStencilIndex(Index) end
function UAuraManager:InitializeDynamicTexture() end
---@param pAskingTPChar ATPChar
---@return EAuraViewFlags
function UAuraManager:GetViewMaskFromTargetBaseChar(pAskingTPChar) end
---@return EAuraViewFlags
function UAuraManager:GetViewMaskFromLocallyViewedBaseChar() end
---@param pAskingTPChar ABaseChar
---@return EAuraViewFlags
function UAuraManager:GetViewMaskForBaseChar(pAskingTPChar) end
---@param Name FName
---@param outProperties FStencilProperties
---@return boolean
function UAuraManager:GetStencilProperties(Name, outProperties) end
---@param Name FName
---@return int32
function UAuraManager:GetStencilId(Name) end
---@return UTexture2D
function UAuraManager:GetPropertiesTexture() end
---@param pPrimitive UPrimitiveComponent
---@param Name FName
---@return boolean
function UAuraManager:CreateStencilGroupWithComponent(pPrimitive, Name) end
---@param Name FName
---@return boolean
function UAuraManager:CreateStencilGroup(Name) end
---@param pPrimitive UPrimitiveComponent
---@param Name FName
---@return boolean
function UAuraManager:AddComponentToStencilGroup(pPrimitive, Name) end
---@param auraName FName
---@param Obj FAuraInstanceObject
function UAuraManager:AddAuraInstanceObject(auraName, Obj) end


---@class UAvatarIconItemTileWidget : UBaseItemTile
UAvatarIconItemTileWidget = {}


---@class UBPFL_AI : UBlueprintFunctionLibrary
UBPFL_AI = {}

---@param pWeapon AWeaponBase
---@return EWeaponThreatLevel
function UBPFL_AI:GetWeaponThreatLevel(pWeapon) end
---@param pWeapon AWeaponBase
---@return AActor
function UBPFL_AI:GetWeaponDamageDealer(pWeapon) end
---@param TargetLocation FVector
---@param pNavigationPath UNavigationPath
---@param Alpha float
---@return boolean
function UBPFL_AI:GetLocationOnNavPath(TargetLocation, pNavigationPath, Alpha) end
---@param pRequestActor AActor
---@param inPatrollableActors TArray<AActor>
---@param outSortedPatrollableActors TArray<AActor>
---@param scoreBias float
---@param bDebug boolean
function UBPFL_AI:GetBestPatrollableObject(pRequestActor, inPatrollableActors, outSortedPatrollableActors, scoreBias, bDebug) end


---@class UBPFL_Props : UBlueprintFunctionLibrary
UBPFL_Props = {}

---@param pWeapon AWeaponBase
---@return boolean
function UBPFL_Props:WeaponNeedsEnergizing(pWeapon) end
---@param pOuter AActor
---@param shapeComponentPropertyName FName
---@param initShapeSpecs FCustomizeSimpleCollisionShape
---@return boolean
function UBPFL_Props:ReconstructSimpleCollisionComponent(pOuter, shapeComponentPropertyName, initShapeSpecs) end
---@param pWorld UWorld
---@param pController AController
---@param Location FVector
---@return boolean
function UBPFL_Props:IsNavigable(pWorld, pController, Location) end
---@param WorldContextObj UObject
---@param DamageType EDamageType
---@return TArray<AStationBase>
function UBPFL_Props:GetStationsByDamageType(WorldContextObj, DamageType) end
---@param WorldContextObj UObject
---@return TArray<AStationBase>
function UBPFL_Props:GetStations(WorldContextObj) end
---@param WorldContextObj UObject
---@return TArray<AHidePoint>
function UBPFL_Props:GetHidePoints(WorldContextObj) end
---@param WorldContextObj UObject
---@return TArray<AEnergyPoint>
function UBPFL_Props:GetEnergyPoints(WorldContextObj) end
---@param Actors TArray<AActor>
---@param pToActor AActor
---@param bestN int32
---@param bClosest boolean
---@return TArray<AActor>
function UBPFL_Props:GetClosestActors(Actors, pToActor, bestN, bClosest) end
---@param inFloats TArray<float>
---@param bFindSmallest boolean
---@return int32
function UBPFL_Props:GetBiggestFloatInArray(inFloats, bFindSmallest) end
---@param WorldContextObj UObject
---@return TArray<EDamageType>
function UBPFL_Props:GetAvailableDamageType(WorldContextObj) end
---@param towardsActors TArray<AActor>
---@param pFromActor AActor
---@param maxAngle float
---@return AActor
function UBPFL_Props:FindClosestActorToViewportCentre(towardsActors, pFromActor, maxAngle) end
---@param inShapeConstructionSpecs FCustomizeSimpleCollisionShape
---@param pShapeComponent UShapeComponent
---@return boolean
function UBPFL_Props:DoesCollisionHaveSameSpecs(inShapeConstructionSpecs, pShapeComponent) end
---@param inShapeConstructionSpecs FCustomizeSimpleCollisionShape
---@param pShapeComponent UShapeComponent
---@return boolean
function UBPFL_Props:CollisionHasSameShape(inShapeConstructionSpecs, pShapeComponent) end


---@class UBTComposite_UnStoppableSequence : UBTCompositeNode
UBTComposite_UnStoppableSequence = {}


---@class UBTDecorator_ActorsDistanceCheck : UBTDecorator
---@field bCheckRootComponent boolean
---@field mMaxDistance float
---@field ActorAKey FBlackboardKeySelector
---@field ActorBKey FBlackboardKeySelector
---@field mTickInterval float
UBTDecorator_ActorsDistanceCheck = {}



---@class UBTDecorator_AnyWeaponTypes : UBTDecorator_TeenCharacterBase
---@field mWeaponTypeEnums TArray<EWeaponTypeEnum>
UBTDecorator_AnyWeaponTypes = {}



---@class UBTDecorator_CanChargeHolyStaff : UBTDecorator_TeenCharacterBase
UBTDecorator_CanChargeHolyStaff = {}


---@class UBTDecorator_CanChargeStaticShield : UBTDecorator_TeenCharacterBase
UBTDecorator_CanChargeStaticShield = {}


---@class UBTDecorator_CanTeenAttack : UBTDecorator
---@field mbCheckPerFrame boolean
---@field mbWeaponRequired boolean
---@field mTeenKeySelector FBlackboardKeySelector
UBTDecorator_CanTeenAttack = {}



---@class UBTDecorator_CanTeenUseEnergyPoint : UBTDecorator_TeenCharacterBase
---@field mbCheckInterval float
UBTDecorator_CanTeenUseEnergyPoint = {}



---@class UBTDecorator_EvilCanUseAbility : UBTDecorator
---@field mEvilSelf FBlackboardKeySelector
---@field mAbilityKeyIndex uint8
UBTDecorator_EvilCanUseAbility = {}



---@class UBTDecorator_IsEvilDamageable : UBTDecorator
---@field mEvilCharSelector FBlackboardKeySelector
UBTDecorator_IsEvilDamageable = {}



---@class UBTDecorator_IsTargetInjured : UBTDecorator
---@field mTargetActor FBlackboardKeySelector
UBTDecorator_IsTargetInjured = {}



---@class UBTDecorator_IsWeaponReadyToUse : UBTDecorator_TeenCharacterBase
UBTDecorator_IsWeaponReadyToUse = {}


---@class UBTDecorator_TeenCharacterBase : UBTDecorator
---@field mTeenCharSelector FBlackboardKeySelector
UBTDecorator_TeenCharacterBase = {}



---@class UBTDecorator_ValidWeaponType : UBTDecorator_TeenCharacterBase
---@field mWeaponTypeEnum EWeaponTypeEnum
UBTDecorator_ValidWeaponType = {}



---@class UBTService_AddRecentVisitTagOnCeaseRelevant : UBTService
---@field mTargetActorKey FBlackboardKeySelector
UBTService_AddRecentVisitTagOnCeaseRelevant = {}



---@class UBTService_AnyPerceivedTargets : UBTService
---@field mbExcludeProne boolean
---@field mbExcludeDeath boolean
---@field mFactionToPerceieve EFaction
---@field mCanSeeTargetKey FBlackboardKeySelector
---@field mSensesToUse TArray<TSubclassOf<UAISense>>
UBTService_AnyPerceivedTargets = {}



---@class UBTService_CheckAllowedToHeal : UBTService
---@field mAllowedToHealKey FBlackboardKeySelector
UBTService_CheckAllowedToHeal = {}



---@class UBTService_CheckHumanPlayersArmed : UBTService
---@field mOutHumanPlayersArmed FBlackboardKeySelector
UBTService_CheckHumanPlayersArmed = {}



---@class UBTService_DetermineBestTarget : UBTService
---@field mbExcludeProne boolean
---@field mbExcludeDeath boolean
---@field mFactionToTarget EFaction
---@field mSensesToUse TArray<TSubclassOf<UAISense>>
---@field mBestTargetKey FBlackboardKeySelector
---@field mOutBestTargetLocation FBlackboardKeySelector
---@field mOutDistanceToTarget FBlackboardKeySelector
UBTService_DetermineBestTarget = {}



---@class UBTService_FindVulnerableTarget : UBTService
---@field mIsArmored FBlackboardKeySelector
---@field mInOutVulnerableTarget FBlackboardKeySelector
---@field mEngageAnyoneMaxDifficultyLevel EAIDifficultyLevel
UBTService_FindVulnerableTarget = {}

---@param pEvilController AUtilityEvilController
---@param pTeen ATPChar
---@param bAlreadyTargetingTeen boolean
---@return int32
function UBTService_FindVulnerableTarget:GetTargetScore(pEvilController, pTeen, bAlreadyTargetingTeen) end
---@param pEvilController AUtilityEvilController
---@param pCurrentTarget AActor
---@param potentialTargets TArray<AActor>
---@return AActor
function UBTService_FindVulnerableTarget:GetBestVulnerableTarget(pEvilController, pCurrentTarget, potentialTargets) end


---@class UBTService_ForgetSenses : UBTService
UBTService_ForgetSenses = {}


---@class UBTService_GetChasedTarget : UBTService
---@field mChasedTargetKey FBlackboardKeySelector
UBTService_GetChasedTarget = {}



---@class UBTService_GetCurrentShard : UBTService
---@field mShardReference FBlackboardKeySelector
UBTService_GetCurrentShard = {}



---@class UBTService_GetTargetState : UBTService
---@field mTargetKey FBlackboardKeySelector
---@field mMovementData FTPMovementData
---@field mCharStateData FTPCharStateData
---@field mWeaponStateData FTPWeaponStateData
UBTService_GetTargetState = {}



---@class UBTService_IsCharInWeaponRange : UBTService
---@field mOutIsWeaponInRange FBlackboardKeySelector
---@field mCharWithWeapon FBlackboardKeySelector
---@field mTargetChar FBlackboardKeySelector
UBTService_IsCharInWeaponRange = {}



---@class UBTService_ReleaseRemoteWeaponOnCeaseRelevant : UBTService
---@field bForceDestroy boolean
---@field mSelfCharKey FBlackboardKeySelector
UBTService_ReleaseRemoteWeaponOnCeaseRelevant = {}



---@class UBTService_ShouldDiscardWeapon : UBTService
---@field mSelfChar FBlackboardKeySelector
---@field mShouldDiscardWeapon FBlackboardKeySelector
UBTService_ShouldDiscardWeapon = {}



---@class UBTService_SyncTeenFocus : UBTService
---@field mTargetActorKeySelector FBlackboardKeySelector
---@field mOwnerTPChar FBlackboardKeySelector
UBTService_SyncTeenFocus = {}



---@class UBTService_TagMultiplier : UBTService
---@field mValueTag FGameplayTag
---@field mValueMultiplier FValueMultiplier
UBTService_TagMultiplier = {}

---@param OwnerComp UBehaviorTreeComponent
---@return ATPChar
function UBTService_TagMultiplier:GetTPCharOwner(OwnerComp) end
---@param OwnerComp UUtilityBTComponent
---@param DeltaSeconds float
---@return float
function UBTService_TagMultiplier:CalculateScore(OwnerComp, DeltaSeconds) end


---@class UBTService_TeenCrouch : UBTService
---@field mTeenKey FBlackboardKeySelector
UBTService_TeenCrouch = {}



---@class UBTService_TeenOwnerBase : UBTService
---@field mOwnerTPChar FBlackboardKeySelector
UBTService_TeenOwnerBase = {}



---@class UBTService_UpdateAIDiffOptions : UBTService
---@field mDifficultyLevel FBlackboardKeySelector
---@field mDifficultyKillSwitchEnabled FBlackboardKeySelector
---@field mBeginnerMatch FBlackboardKeySelector
UBTService_UpdateAIDiffOptions = {}



---@class UBTService_UpdateAlerted : UBTService
---@field mOutAlerted FBlackboardKeySelector
---@field mShouldHowl FBlackboardKeySelector
---@field mBeingDamaged FBlackboardKeySelector
---@field mNumSeenGoodCharacters FBlackboardKeySelector
---@field mNumHeardGoodCharacters FBlackboardKeySelector
UBTService_UpdateAlerted = {}



---@class UBTService_UpdateChaseState : UBTService
---@field mSelfKey FBlackboardKeySelector
---@field mChaseKey FBlackboardKeySelector
---@field mUnArmedChaseDurationKey FBlackboardKeySelector
---@field mArmedChaseDurationKey FBlackboardKeySelector
UBTService_UpdateChaseState = {}



---@class UBTService_UpdateClosestCraftPoint : UBTService
---@field mTPCharKey FBlackboardKeySelector
---@field mDesiredWeaponTypeKey FBlackboardKeySelector
---@field mAvailableCraftTableKey FBlackboardKeySelector
---@field mAvailableCraftPointKey FBlackboardKeySelector
UBTService_UpdateClosestCraftPoint = {}



---@class UBTService_UpdateClosestEnergyPoint : UBTService
---@field mEnergyPointKey FBlackboardKeySelector
UBTService_UpdateClosestEnergyPoint = {}



---@class UBTService_UpdateClosestHidePoint : UBTService
---@field mHidePointKey FBlackboardKeySelector
UBTService_UpdateClosestHidePoint = {}



---@class UBTService_UpdateClosestNearbyTarget : UBTService
---@field mOutClosestNearbyTarget FBlackboardKeySelector
---@field mMaxNearbyDistance float
UBTService_UpdateClosestNearbyTarget = {}



---@class UBTService_UpdateDistanceToTargets : UBTService
---@field mSourceLocationOrActor FBlackboardKeySelector
---@field mTargetActor FBlackboardKeySelector
---@field mOutActorDistance FBlackboardKeySelector
---@field mTargetLocation FBlackboardKeySelector
---@field mOutLocationDistance FBlackboardKeySelector
UBTService_UpdateDistanceToTargets = {}



---@class UBTService_UpdateDollActions : UBTService
---@field mOutLookLocation FBlackboardKeySelector
---@field mOutShouldPlaceDoll FBlackboardKeySelector
---@field mOutShouldPossessDoll FBlackboardKeySelector
---@field mOutShouldTeleport FBlackboardKeySelector
---@field mOutShouldDismissDoll FBlackboardKeySelector
---@field mOutIsAlerted FBlackboardKeySelector
---@field mOutShouldOverrideLookLocation FBlackboardKeySelector
---@field mMinDistanceBetweenDollTraps float
---@field mNumActiveDamageSourcesBeforeTeleport int32
---@field mDistanceToInvulnerableDamageSourceBeforeTeleport float
UBTService_UpdateDollActions = {}



---@class UBTService_UpdateEradicatorMode : UBTService
---@field mTargetActor FBlackboardKeySelector
---@field mTargetActorDistance FBlackboardKeySelector
---@field mTargetLocationDistance FBlackboardKeySelector
---@field mNumInvulnerableDamageSources FBlackboardKeySelector
---@field mShouldShock FBlackboardKeySelector
---@field mMinDistanceBeforeVehicle float
---@field mOutShouldChangeMode FBlackboardKeySelector
UBTService_UpdateEradicatorMode = {}



---@class UBTService_UpdateEvilInfo : UBTService
---@field mOutIsArmored FBlackboardKeySelector
UBTService_UpdateEvilInfo = {}



---@class UBTService_UpdateEvilSenses : UBTService
---@field mInOutCurrentTargetActor FBlackboardKeySelector
---@field mOutClosestNoiseLocation FBlackboardKeySelector
---@field mOutIsCurrentlyHearingNoise FBlackboardKeySelector
---@field mOutIsSensingDanger FBlackboardKeySelector
---@field mOutNumInvulnerableDamageSources FBlackboardKeySelector
---@field mOutNumVulnerableTargets FBlackboardKeySelector
---@field mOutIsBeingDamaged FBlackboardKeySelector
---@field mOutNumSeenGoodCharacters FBlackboardKeySelector
---@field mOutNumHeardGoodCharacters FBlackboardKeySelector
---@field mOutNumDamageSources FBlackboardKeySelector
---@field mOutTargetHideState FBlackboardKeySelector
UBTService_UpdateEvilSenses = {}

---@param pEvilController AUtilityEvilController
---@param heardActors TSet<AActor>
---@return AActor
function UBTService_UpdateEvilSenses:GetClosestHeardActor(pEvilController, heardActors) end


---@class UBTService_UpdateInDanger : UBTService
---@field mInDangerKey FBlackboardKeySelector
---@field mTargetKey FBlackboardKeySelector
---@field SafeDistToTargetForHit float
UBTService_UpdateInDanger = {}



---@class UBTService_UpdateLookTarget : UBTService
---@field mCurrentTargetActor FBlackboardKeySelector
---@field mCurrentTargetLocation FBlackboardKeySelector
---@field mOverrideLookLocation FBlackboardKeySelector
---@field mShouldOverrideLookLocation FBlackboardKeySelector
---@field mOutIsLookingAtOverrideLocation FBlackboardKeySelector
UBTService_UpdateLookTarget = {}



---@class UBTService_UpdatePerceivedEvilThreatNum : UBTService
---@field mLinearWeaponNumKey FBlackboardKeySelector
---@field mLethalWeaponNumKey FBlackboardKeySelector
UBTService_UpdatePerceivedEvilThreatNum = {}



---@class UBTService_UpdateShouldArmor : UBTService
---@field mOutShouldArmor FBlackboardKeySelector
UBTService_UpdateShouldArmor = {}



---@class UBTService_UpdateShouldHowl : UBTService
---@field mOutShouldHowl FBlackboardKeySelector
---@field mRangeBeforeHowlDecayPerDifficultyLevel float
UBTService_UpdateShouldHowl = {}



---@class UBTService_UpdateShouldShock : UBTService
---@field mTargetActor FBlackboardKeySelector
---@field mOutShouldShock FBlackboardKeySelector
---@field mRangeBeforeShockDecayPerDifficultyLevel float
---@field mMinTimeBetweenShocks float
UBTService_UpdateShouldShock = {}



---@class UBTService_UpdateTargetWeaponInfo : UBTService
---@field mTargetKey FBlackboardKeySelector
---@field mWeaponRangeMinKey FBlackboardKeySelector
---@field mWeaponRangeMaxKey FBlackboardKeySelector
---@field mWeaponTypeKey FBlackboardKeySelector
---@field mMaxDistClamp float
---@field mMaxDifference float
---@field mMinBuffer float
UBTService_UpdateTargetWeaponInfo = {}



---@class UBTService_UpdateVaultPoint : UBTService
---@field mTPCharKey FBlackboardKeySelector
---@field mSearchingRadius float
---@field mTargetVaultPointKey FBlackboardKeySelector
---@field mTargetVaultPointLocationKey FBlackboardKeySelector
---@field mWantToUseVaultPointKey FBlackboardKeySelector
UBTService_UpdateVaultPoint = {}



---@class UBTTask_CheckHidepoint : UBTTaskNode
---@field mTargetKey FBlackboardKeySelector
UBTTask_CheckHidepoint = {}



---@class UBTTask_CraftAtStation : UBTTaskNode
---@field mTargetKey FBlackboardKeySelector
---@field mInCraftingPoint FBlackboardKeySelector
UBTTask_CraftAtStation = {}



---@class UBTTask_DiscardWeapon : UBTTaskNode
---@field mSelfChar FBlackboardKeySelector
UBTTask_DiscardWeapon = {}



---@class UBTTask_DismissDoll : UBTTaskNode
UBTTask_DismissDoll = {}


---@class UBTTask_EquipWeapon : UBTTaskNode
---@field mDelayDuration float
---@field mWeaponType EWeaponTypeEnum
---@field mTargetCharacterSelector FBlackboardKeySelector
UBTTask_EquipWeapon = {}



---@class UBTTask_EvilAttack : UBTTaskNode
UBTTask_EvilAttack = {}


---@class UBTTask_FindBestPatrollableObject : UBTTaskNode
---@field mbSearchCraftStations boolean
---@field mbSearchMedKits boolean
---@field mKillWeaponsOnlyMinDifficultyLevel EAIDifficultyLevel
---@field mOutTargetLocation FBlackboardKeySelector
---@field mMinTimeBetweenRepatrols float
---@field mChooseFromTopPercentage float
UBTTask_FindBestPatrollableObject = {}

---@param pEvilController AUtilityEvilController
---@param inOutPatrollableActors TArray<AActor>
function UBTTask_FindBestPatrollableObject:SortPatrollableObjects(pEvilController, inOutPatrollableActors) end


---@class UBTTask_FindClosestNearbyTarget : UBTTaskNode
---@field mOutClosestNearbyTarget FBlackboardKeySelector
---@field mMaxNearbyDistance float
UBTTask_FindClosestNearbyTarget = {}



---@class UBTTask_GetActorToLocation : UBTTaskNode
---@field mActorKey FBlackboardKeySelector
---@field mLocationKey FBlackboardKeySelector
UBTTask_GetActorToLocation = {}



---@class UBTTask_GetRandomCraftingPoint : UBTTaskNode
---@field mbKillWeaponsOnly boolean
---@field mbExcludeCurrentStation boolean
---@field mbChooseClosest boolean
---@field mOutCraftingPoint FBlackboardKeySelector
---@field mStationLocation FBlackboardKeySelector
---@field mRadius float
---@field mbSelectCurrentStation boolean
---@field mbFarAwayFromGoodHumans boolean
UBTTask_GetRandomCraftingPoint = {}



---@class UBTTask_GetRandomLocationInRadius : UBTTaskNode
---@field mOrigin FBlackboardKeySelector
---@field mRadius float
---@field mOutLocation FBlackboardKeySelector
UBTTask_GetRandomLocationInRadius = {}



---@class UBTTask_GetRandomMedkitPoint : UBTTaskNode
---@field mbExcludeCurrentStation boolean
---@field mbChooseClosest boolean
---@field mOutMedkitActor FBlackboardKeySelector
UBTTask_GetRandomMedkitPoint = {}



---@class UBTTask_GetRandomReviveTarget : UBTTaskNode
---@field mbChooseClosest boolean
---@field mOutReviveTarget FBlackboardKeySelector
UBTTask_GetRandomReviveTarget = {}



---@class UBTTask_HealAtMedKit : UBTTask_BlueprintBase
---@field mTargetKey FBlackboardKeySelector
---@field mInMedKitStation FBlackboardKeySelector
---@field mpMedKitPoint AMedKitPoint
UBTTask_HealAtMedKit = {}



---@class UBTTask_ReviveTarget : UBTTaskNode
---@field mTargetKey FBlackboardKeySelector
---@field mReviveTargetKey FBlackboardKeySelector
---@field mpSelfTPChar ATPChar
---@field mpReviveTarget ATPChar
UBTTask_ReviveTarget = {}



---@class UBTTask_SetBoolKey : UBTTaskNode
---@field mKey FBlackboardKeySelector
---@field mbValue boolean
UBTTask_SetBoolKey = {}



---@class UBTTask_TryThrowWeapon : UBTTaskNode
---@field mpTPOwner FBlackboardKeySelector
UBTTask_TryThrowWeapon = {}



---@class UBTTask_UseAbility : UBTTaskNode
---@field mAbilityIndex int32
UBTTask_UseAbility = {}



---@class UBTTask_UseCraftTable : UBTTaskNode
---@field mDesiredWeaponTypeKey FBlackboardKeySelector
---@field mSelectedCraftStationKey FBlackboardKeySelector
---@field mSelectedCraftPointKey FBlackboardKeySelector
---@field mTPCharKey FBlackboardKeySelector
UBTTask_UseCraftTable = {}



---@class UBTTask_UseHidePoint_DynamicDuration : UBTTaskNode
---@field mReadyToExitKey FBlackboardKeySelector
---@field mExitDelay float
---@field mOwnerTPCharKey FBlackboardKeySelector
---@field mTargetHidePointKey FBlackboardKeySelector
UBTTask_UseHidePoint_DynamicDuration = {}



---@class UBTTask_UseWeapon : UBTTaskNode
---@field mSelfChar FBlackboardKeySelector
---@field mTargetChar FBlackboardKeySelector
UBTTask_UseWeapon = {}



---@class UBackendClientJob_ProcessMatchEvents : UBackendJobBase
UBackendClientJob_ProcessMatchEvents = {}


---@class UBackendClientPostBase : UBackendPostBase
UBackendClientPostBase = {}


---@class UBackendClientPost_AbandonProceduralMovie : UBackendClientPostBase
UBackendClientPost_AbandonProceduralMovie = {}


---@class UBackendClientPost_AcceptEula : UBackendClientPostBase
UBackendClientPost_AcceptEula = {}


---@class UBackendClientPost_ActivateMovie : UBackendClientPostBase
UBackendClientPost_ActivateMovie = {}


---@class UBackendClientPost_BeginSteamMicroTxn : UBackendClientPostBase
UBackendClientPost_BeginSteamMicroTxn = {}


---@class UBackendClientPost_ClaimChests : UBackendClientPostBase
UBackendClientPost_ClaimChests = {}


---@class UBackendClientPost_CompleteClientTask : UBackendClientPostBase
UBackendClientPost_CompleteClientTask = {}


---@class UBackendClientPost_Discover : UBackendClientPostBase
UBackendClientPost_Discover = {}


---@class UBackendClientPost_EpicRedeemEntitlement : UBackendClientPostBase
UBackendClientPost_EpicRedeemEntitlement = {}


---@class UBackendClientPost_FinishSteamMicroTxn : UBackendClientPostBase
UBackendClientPost_FinishSteamMicroTxn = {}


---@class UBackendClientPost_GenerateVoiceLoginToken : UBackendClientPostBase
UBackendClientPost_GenerateVoiceLoginToken = {}


---@class UBackendClientPost_GetAllStoreItems : UBackendClientPostBase
UBackendClientPost_GetAllStoreItems = {}


---@class UBackendClientPost_GetPatchNotes : UBackendClientPostBase
UBackendClientPost_GetPatchNotes = {}


---@class UBackendClientPost_GetSeasonalData : UBackendClientPostBase
UBackendClientPost_GetSeasonalData = {}


---@class UBackendClientPost_GetServerNotifications : UBackendClientPostBase
UBackendClientPost_GetServerNotifications = {}


---@class UBackendClientPost_GetSesState : UBackendClientPostBase
UBackendClientPost_GetSesState = {}


---@class UBackendClientPost_InformMatchFound : UBackendClientPostBase
UBackendClientPost_InformMatchFound = {}


---@class UBackendClientPost_InformMatchmakingCanceled : UBackendClientPostBase
UBackendClientPost_InformMatchmakingCanceled = {}


---@class UBackendClientPost_JourneyPurchaseNode : UBackendClientPostBase
UBackendClientPost_JourneyPurchaseNode = {}


---@class UBackendClientPost_LoadPlayerSettings : UBackendClientPostBase
UBackendClientPost_LoadPlayerSettings = {}


---@class UBackendClientPost_ProcessMatchEvents : UBackendClientPostBase
UBackendClientPost_ProcessMatchEvents = {}


---@class UBackendClientPost_PurchaseItem : UBackendClientPostBase
UBackendClientPost_PurchaseItem = {}


---@class UBackendClientPost_PurchaseSeasonPass : UBackendClientPostBase
UBackendClientPost_PurchaseSeasonPass = {}


---@class UBackendClientPost_RedeemProductCode : UBackendClientPostBase
UBackendClientPost_RedeemProductCode = {}


---@class UBackendClientPost_ReplaceExistingSessionToken : UBackendClientPostBase
UBackendClientPost_ReplaceExistingSessionToken = {}


---@class UBackendClientPost_ReportP2PClientLeave : UBackendClientPostBase
UBackendClientPost_ReportP2PClientLeave = {}


---@class UBackendClientPost_ReportPlayer : UBackendClientPostBase
UBackendClientPost_ReportPlayer = {}


---@class UBackendClientPost_RetrieveP2PMatchCode : UBackendClientPostBase
UBackendClientPost_RetrieveP2PMatchCode = {}


---@class UBackendClientPost_SendP2PMatchCode : UBackendClientPostBase
UBackendClientPost_SendP2PMatchCode = {}


---@class UBackendClientPost_SetLoadout : UBackendClientPostBase
UBackendClientPost_SetLoadout = {}


---@class UBackendClientPost_SetPlayerSlots : UBackendClientPostBase
UBackendClientPost_SetPlayerSlots = {}


---@class UBackendClientPost_SetWeaponLoadout : UBackendClientPostBase
UBackendClientPost_SetWeaponLoadout = {}


---@class UBackendClientPost_SteamSyncDLC : UBackendClientPostBase
UBackendClientPost_SteamSyncDLC = {}


---@class UBackendClientPost_UploadPlayerSettings : UBackendClientPostBase
UBackendClientPost_UploadPlayerSettings = {}


---@class UBackendClientPost_UseCustomLobby : UBackendClientPostBase
UBackendClientPost_UseCustomLobby = {}


---@class UBackendDsJob_ProcessMatchEvents : UBackendJobBase
UBackendDsJob_ProcessMatchEvents = {}


---@class UBackendDsJob_Rediscover : UBackendJobBase
UBackendDsJob_Rediscover = {}


---@class UBackendDsJob_ReportLobbyCompleted : UBackendJobBase
UBackendDsJob_ReportLobbyCompleted = {}


---@class UBackendDsJob_ReportLobbyJoined : UBackendJobBase
UBackendDsJob_ReportLobbyJoined = {}


---@class UBackendDsJob_ReportPlayerDisconnect : UBackendJobBase
UBackendDsJob_ReportPlayerDisconnect = {}


---@class UBackendDsPostBase : UBackendPostBase
UBackendDsPostBase = {}


---@class UBackendDsPost_Authenticate : UBackendDsPostBase
UBackendDsPost_Authenticate = {}


---@class UBackendDsPost_ConsumePrizes : UBackendDsPostBase
UBackendDsPost_ConsumePrizes = {}


---@class UBackendDsPost_GenerateVoiceJoinToken : UBackendDsPostBase
UBackendDsPost_GenerateVoiceJoinToken = {}


---@class UBackendDsPost_KickVoiceClient : UBackendDsPostBase
UBackendDsPost_KickVoiceClient = {}


---@class UBackendDsPost_ProcessMatchEvents : UBackendDsPostBase
UBackendDsPost_ProcessMatchEvents = {}


---@class UBackendDsPost_ReportLobbyCompleted : UBackendDsPostBase
UBackendDsPost_ReportLobbyCompleted = {}


---@class UBackendDsPost_ReportLobbyJoined : UBackendDsPostBase
UBackendDsPost_ReportLobbyJoined = {}


---@class UBackendDsPost_ReportPlayerDisconnect : UBackendDsPostBase
UBackendDsPost_ReportPlayerDisconnect = {}


---@class UBackendDsPost_SetLoadouts : UBackendDsPostBase
UBackendDsPost_SetLoadouts = {}


---@class UBackendJobBase : UObject
---@field mPostRequests TArray<UBackendPostBase>
---@field mpOwningBackendManager UBackendManager
---@field mJobType EBackendJobType
---@field mErrorCode EBackendErrorCode
---@field mCloudscriptErrorCode int32
UBackendJobBase = {}



---@class UBackendJob_AbandonProceduralMovie : UBackendJobBase
UBackendJob_AbandonProceduralMovie = {}


---@class UBackendJob_AcceptEula : UBackendJobBase
UBackendJob_AcceptEula = {}


---@class UBackendJob_ActivateMovie : UBackendJobBase
UBackendJob_ActivateMovie = {}


---@class UBackendJob_Authenticate : UBackendJobBase
---@field mpDiscoverPost UBackendClientPost_Discover
UBackendJob_Authenticate = {}



---@class UBackendJob_BeginSteamMicroTxn : UBackendJobBase
UBackendJob_BeginSteamMicroTxn = {}


---@class UBackendJob_ClaimChests : UBackendJobBase
UBackendJob_ClaimChests = {}


---@class UBackendJob_CompleteClientTask : UBackendJobBase
UBackendJob_CompleteClientTask = {}


---@class UBackendJob_ConsumePrizes : UBackendJobBase
UBackendJob_ConsumePrizes = {}


---@class UBackendJob_CreateAccount : UBackendJobBase
UBackendJob_CreateAccount = {}


---@class UBackendJob_DeAuthenticate : UBackendJobBase
UBackendJob_DeAuthenticate = {}


---@class UBackendJob_Discover : UBackendJobBase
UBackendJob_Discover = {}


---@class UBackendJob_EpicRedeemEntitlement : UBackendJobBase
UBackendJob_EpicRedeemEntitlement = {}


---@class UBackendJob_FinishSteamMicroTxn : UBackendJobBase
UBackendJob_FinishSteamMicroTxn = {}


---@class UBackendJob_GenerateVoiceJoinToken : UBackendJobBase
UBackendJob_GenerateVoiceJoinToken = {}


---@class UBackendJob_GenerateVoiceLoginToken : UBackendJobBase
UBackendJob_GenerateVoiceLoginToken = {}


---@class UBackendJob_GetAllStoreItems : UBackendJobBase
UBackendJob_GetAllStoreItems = {}


---@class UBackendJob_GetPatchNotes : UBackendJobBase
UBackendJob_GetPatchNotes = {}


---@class UBackendJob_GetSceneEnactmentSystemState : UBackendJobBase
UBackendJob_GetSceneEnactmentSystemState = {}


---@class UBackendJob_GetSeasonalData : UBackendJobBase
UBackendJob_GetSeasonalData = {}


---@class UBackendJob_GetServerNotifications : UBackendJobBase
UBackendJob_GetServerNotifications = {}


---@class UBackendJob_InformMatchFound : UBackendJobBase
UBackendJob_InformMatchFound = {}


---@class UBackendJob_InformMatchmakingCanceled : UBackendJobBase
UBackendJob_InformMatchmakingCanceled = {}


---@class UBackendJob_JourneyPurchaseNode : UBackendJobBase
UBackendJob_JourneyPurchaseNode = {}


---@class UBackendJob_KickVoiceClient : UBackendJobBase
UBackendJob_KickVoiceClient = {}


---@class UBackendJob_LoadPlayerSettings : UBackendJobBase
UBackendJob_LoadPlayerSettings = {}


---@class UBackendJob_Login : UBackendJobBase
UBackendJob_Login = {}


---@class UBackendJob_PurchaseItem : UBackendJobBase
UBackendJob_PurchaseItem = {}


---@class UBackendJob_PurchaseSeasonPass : UBackendJobBase
UBackendJob_PurchaseSeasonPass = {}


---@class UBackendJob_RedeemProductCode : UBackendJobBase
UBackendJob_RedeemProductCode = {}


---@class UBackendJob_ReplaceExistingSessionToken : UBackendJobBase
UBackendJob_ReplaceExistingSessionToken = {}


---@class UBackendJob_ReportP2PClientLeave : UBackendJobBase
UBackendJob_ReportP2PClientLeave = {}


---@class UBackendJob_ReportPlayer : UBackendJobBase
UBackendJob_ReportPlayer = {}


---@class UBackendJob_RetrieveP2PMatchCode : UBackendJobBase
UBackendJob_RetrieveP2PMatchCode = {}


---@class UBackendJob_SendP2PMatchCode : UBackendJobBase
UBackendJob_SendP2PMatchCode = {}


---@class UBackendJob_SetLoadout : UBackendJobBase
UBackendJob_SetLoadout = {}


---@class UBackendJob_SetLoadouts : UBackendJobBase
UBackendJob_SetLoadouts = {}


---@class UBackendJob_SetPlayerSlots : UBackendJobBase
UBackendJob_SetPlayerSlots = {}


---@class UBackendJob_SetWeaponLoadout : UBackendJobBase
UBackendJob_SetWeaponLoadout = {}


---@class UBackendJob_SteamSyncDLC : UBackendJobBase
UBackendJob_SteamSyncDLC = {}


---@class UBackendJob_UploadPlayerSettings : UBackendJobBase
UBackendJob_UploadPlayerSettings = {}


---@class UBackendJob_UseCustomLobby : UBackendJobBase
UBackendJob_UseCustomLobby = {}


---@class UBackendManager : UObject
---@field mOwningClientStateManager TWeakObjectPtr<UClientStateManager>
---@field mExecutionState EBackendExecutionState
---@field mpJob UBackendJobBase
---@field mpLastFailedJob UBackendJobBase
---@field mLoginState EBackendLoginState
---@field mPlayerCreateAccountId FString
---@field mStoreUrl FString
---@field mbShowEula boolean
---@field mbCommunicationWarning boolean
---@field mBackendTitleId FString
---@field mSesGetStateSocialSystemState EBackendSimpleOperationState
---@field mSESActivateMovieSocialSystemState EBackendSimpleOperationState
---@field mProcessMatchEventsState EBackendSimpleOperationState
---@field mSetLoadoutState EBackendSimpleOperationState
---@field mSetLoadoutsState EBackendSimpleOperationState
---@field mSetPlayerSlotsSystemState EBackendSimpleOperationState
---@field mSetWeaponLoadoutSystemState EBackendSimpleOperationState
---@field mJourneyPurchaseNodeState EBackendSimpleOperationState
---@field mAbandonProceduralMovieState EBackendSimpleOperationState
---@field mReportPlayerState EBackendSimpleOperationState
---@field mDiscoverState EBackendSimpleOperationState
---@field mRediscoverState EBackendSimpleOperationState
---@field mClaimChestsState EBackendSimpleOperationState
---@field mGeneratePrizesState EBackendSimpleOperationState
---@field mConsumePrizesState EBackendSimpleOperationState
---@field mServerReportPlayerDisconnectState EBackendSimpleOperationState
---@field mServerReportLobbyJoinedState EBackendSimpleOperationState
---@field mServerReportLobbyCompletedState EBackendSimpleOperationState
---@field mPurchaseItemState EBackendSimpleOperationState
---@field mPurchaseHardCurrencyState EBackendSimpleOperationState
---@field mGetStoreItemsForDateState EBackendSimpleOperationState
---@field mBeginSteamMicroTxnState EBackendSimpleOperationState
---@field mFinishSteamMicroTxnState EBackendSimpleOperationState
---@field mSteamSyncDLCState EBackendSimpleOperationState
---@field mEpicRedeemEntitlementState EBackendSimpleOperationState
---@field mCompleteClientTaskState EBackendSimpleOperationState
---@field mAcceptEulaState EBackendSimpleOperationState
---@field mPurchaseSeasonPassState EBackendSimpleOperationState
---@field mRedeemProductCodeState EBackendSimpleOperationState
---@field mLoadingPlayerSettingsState EBackendSimpleOperationState
---@field mUploadPlayerSettingsState EBackendSimpleOperationState
---@field mSendP2PMatchCodeState EBackendSimpleOperationState
---@field mRetrieveP2PMatchCodeState EBackendSimpleOperationState
---@field mReportP2PClientLeaveState EBackendSimpleOperationState
---@field mInformMatchFoundState EBackendSimpleOperationState
---@field mInformMatchmakingCanceledState EBackendSimpleOperationState
UBackendManager = {}

function UBackendManager:OnErrorConfirm() end


---@class UBackendPostBase : UObject
---@field mpOwningJob UBackendJobBase
UBackendPostBase = {}



---@class UBackendPost_CreateAccount : UBackendPostBase
UBackendPost_CreateAccount = {}


---@class UBackendPost_Login : UBackendPostBase
UBackendPost_Login = {}


---@class UBackendQueueManager : UObject
UBackendQueueManager = {}


---@class UBarTimingMinigame : USkillTestMinigameBase
---@field mTargetValue float
---@field mSpeed float
---@field mbLeftDirection boolean
---@field mCurrentValue float
---@field mClientTimer float
---@field mbSubmissionLockout boolean
UBarTimingMinigame = {}

---@return boolean
function UBarTimingMinigame:ShouldShowPostSubmittedValue() end
---@param bNewValue boolean
function UBarTimingMinigame:SetSubmissionLockout(bNewValue) end
---@param Value float
---@return boolean
function UBarTimingMinigame:IsValueInPassRange(Value) end
---@param Value float
---@return boolean
function UBarTimingMinigame:IsValueInBullseyeRange(Value) end
---@return boolean
function UBarTimingMinigame:IsSubmissionLockedOut() end
---@return float
function UBarTimingMinigame:GetTargetValue() end
---@return float
function UBarTimingMinigame:GetCurrentValue() end
---@return FLinearColor
function UBarTimingMinigame:GetAwardedColor() end
---@return FLinearColor
function UBarTimingMinigame:GetArrowColor() end


---@class UBaseAccountFilterWidget : UMetaWidget
---@field mpDropDownMenu UNavDropDownMenu
---@field mpDropDownMenuIcon UImage
---@field mpTargetWidget UWidget
---@field mAccountFilterList TArray<FAccountFilterInfoStruct>
---@field mCurrentlySelectedFilterIndex int32
UBaseAccountFilterWidget = {}

---@param bNewValue boolean
function UBaseAccountFilterWidget:SetDropdownMenuOpen(bNewValue) end
function UBaseAccountFilterWidget:OnToggleDropdownMenu() end
---@param Index int32
function UBaseAccountFilterWidget:OnFilterIndexSelected(Index) end
---@param newIndex int32
function UBaseAccountFilterWidget:OnDropDownSelectionChanged(newIndex) end
function UBaseAccountFilterWidget:OnDeviceTypeChanged() end
---@return FAccountFilterInfoStruct
function UBaseAccountFilterWidget:GetCurrentFilter() end


---@class UBaseAccountStatPageWidget : UMetaWidget
---@field mpCategorySwitcherWidget UCategorySwitcher
---@field mpFilterSwitcher UWidgetSwitcher
---@field mpTeenFilterWidget UPlayerAccountCharacterFilterWidget
---@field mpEvilFilterWidget UPlayerAccountCharacterFilterWidget
---@field mpWeaponFilterWidget UPlayerAccountWeaponFilterWidget
---@field mpLevelFilterWidget UPlayerAccountLevelFilterWidget
---@field mpNonSelectableScrollBox UNonSelectableScrollBox
---@field mpCharacterProgressWidget UPlayerAccountCharacterProgressWidget
---@field mFilterIndexLastFrame int32
UBaseAccountStatPageWidget = {}

function UBaseAccountStatPageWidget:OnToggleFilterDropdown() end
function UBaseAccountStatPageWidget:OnRightCategory() end
function UBaseAccountStatPageWidget:OnLeftCategory() end
---@param Index int32
function UBaseAccountStatPageWidget:OnCategorySwitcherChangedIndex(Index) end


---@class UBaseAccountTileWidget : UMetaWidget
---@field mpTitleText UTextBlock
---@field mpSubText UTextBlock
---@field mStatType EPlayerAccountStatType
---@field mTotalStatType EPlayerAccountStatType
---@field mOwningFactionType EFaction
---@field mOwningCharacterType ECharacterType
---@field mOwningWeaponType EWeaponTypeEnum
---@field mOwningLevelType ELevelType
---@field mTargetCharacterType ECharacterType
---@field mTargetWeaponType EWeaponTypeEnum
---@field mTargetLevelType ELevelType
---@field mCombinationType EStatWidgetCombinationType
UBaseAccountTileWidget = {}

---@param StatType EPlayerAccountStatType
---@return uint32
function UBaseAccountTileWidget:GetValueForStat(StatType) end
---@param Current uint32
---@param Total uint32
function UBaseAccountTileWidget:GetTallyForStat(Current, Total) end
---@return ECharacterType
function UBaseAccountTileWidget:GetCharacterForStat() end


---@class UBaseActionProgressBar : UUserWidget
---@field mpCustomProgressBar UCustomProgressBar
UBaseActionProgressBar = {}

---@param pTrackedChar ATPChar
function UBaseActionProgressBar:UpdateProgress(pTrackedChar) end
---@param pTrackedChar ATPChar
---@return boolean
function UBaseActionProgressBar:ShouldShowProgress(pTrackedChar) end
---@param pTrackedChar ATPChar
---@return float
function UBaseActionProgressBar:GetProgress(pTrackedChar) end


---@class UBaseCharAnimInstance : UAnimInstance
UBaseCharAnimInstance = {}

---@param Notify UAnimNotify
function UBaseCharAnimInstance:AnimNotify_SetDispersedInvisible(Notify) end
---@param Notify UAnimNotify
function UBaseCharAnimInstance:AnimNotify_MainMenuUnlockRotation(Notify) end
---@param Notify UAnimNotify
function UBaseCharAnimInstance:AnimNotify_MainMenuLockRotation(Notify) end
---@param Notify UAnimNotify
function UBaseCharAnimInstance:AnimNotify_ClearDispersedInvisible(Notify) end


---@class UBaseCharMovementComponent : UCharacterMovementComponent
UBaseCharMovementComponent = {}


---@class UBaseCharacterPortraitWidget : UUserWidget
---@field mpFaceImage UImage
---@field mpBorderImage UImage
UBaseCharacterPortraitWidget = {}



---@class UBaseCustomizationComponent : UActorComponent
---@field mOverrideCharacterType ECharacterType
---@field mbIsFrontEndCharacter boolean
---@field mbForceSyncLoad boolean
---@field mCharacterStatusSpecialParameters FCharacterStatusSpecialParameters
---@field mCharacterStatusMappings TArray<FCharacterStatusToMaterialParameter>
UBaseCustomizationComponent = {}

---@param CharacterType ECharacterType
function UBaseCustomizationComponent:SetOverrideCharacterType(CharacterType) end
---@param bSet boolean
function UBaseCustomizationComponent:SetHasValidLoadout(bSet) end
---@param assets TArray<FLoadoutItem>
function UBaseCustomizationComponent:ServerDebugEquipItems(assets) end
---@param assets TArray<FLoadoutItem>
function UBaseCustomizationComponent:MulticastDebugEquipItems(assets) end
---@return boolean
function UBaseCustomizationComponent:IsEquipInProgress() end
---@return boolean
function UBaseCustomizationComponent:HasValidLoadout() end
---@return ECharacterType
function UBaseCustomizationComponent:GetCharacterType() end


---@class UBaseEvilAbilityComponent : UActorComponent
---@field mpOwningFPChar AFPChar
---@field mCurrentCooldownRemaining float
---@field mbCurrentlyCharging boolean
---@field mCurrentChargeTime float
---@field mCurrentNumCharges int32
---@field mServerTimeSinceLastActivated float
---@field mServerTimeSinceLastDeactivated float
UBaseEvilAbilityComponent = {}

---@param DeltaTime float
function UBaseEvilAbilityComponent:TickAbilityComponent(DeltaTime) end
---@return boolean
function UBaseEvilAbilityComponent:IsCurrentlyCharging() end
---@return TArray<TSubclassOf<UBaseStatusComponent>>
function UBaseEvilAbilityComponent:GetRequiredStatusComponentClasses() end
---@return TArray<FSoftObjectPath>
function UBaseEvilAbilityComponent:GetRequiredAssets() end
---@return AFPChar
function UBaseEvilAbilityComponent:GetOwningFPChar() end
---@return int32
function UBaseEvilAbilityComponent:GetMaxNumCharges() end
---@return int32
function UBaseEvilAbilityComponent:GetCurrentNumCharges() end
---@return float
function UBaseEvilAbilityComponent:GetCurrentHearingPercent() end
---@return float
function UBaseEvilAbilityComponent:GetCurrentChargeTime() end
---@return float
function UBaseEvilAbilityComponent:GetBaseChargeTime() end
---@return float
function UBaseEvilAbilityComponent:GetBaseAbilityCooldown() end
---@return float
function UBaseEvilAbilityComponent:GetAbilityCooldownRemaining() end
---@return float
function UBaseEvilAbilityComponent:GetAbilityChargeRunSpeedMultiplier() end
---@param pChar AFPChar
function UBaseEvilAbilityComponent:DoServerSetOwningFPChar(pChar) end
---@param NewValue int32
function UBaseEvilAbilityComponent:DoServerSetCurrentNumCharges(NewValue) end
---@param NewValue float
function UBaseEvilAbilityComponent:DoServerSetCurrentCooldownRemaining(NewValue) end
---@param NewValue float
function UBaseEvilAbilityComponent:DoServerSetCurrentChargeTime(NewValue) end
function UBaseEvilAbilityComponent:DoServerOnAddedToFPChar() end
function UBaseEvilAbilityComponent:DoServerOnAbilityFinishedCharging() end
function UBaseEvilAbilityComponent:DoServerOnAbilityDeactivated() end
function UBaseEvilAbilityComponent:DoServerOnAbilityCancelCharging() end
function UBaseEvilAbilityComponent:DoServerOnAbilityBeginCharging() end
---@return boolean
function UBaseEvilAbilityComponent:DoServerOnAbilityActivated() end
---@return float
function UBaseEvilAbilityComponent:DoServerGetTimeSinceAbilityDeactivated() end
---@return float
function UBaseEvilAbilityComponent:DoServerGetTimeSinceAbilityActivated() end
function UBaseEvilAbilityComponent:DoServerActivateCooldown() end
---@return boolean
function UBaseEvilAbilityComponent:CanUseAbility() end
---@return boolean
function UBaseEvilAbilityComponent:AllowIsBeingDamagedFlag() end


---@class UBaseIssueWidget : UMetaWidget
---@field GridSize FIntPoint
---@field mpUserButton UBaseUserButton
UBaseIssueWidget = {}



---@class UBaseItemList : UUserWidget
---@field ItemTileClass TSubclassOf<UBaseItemTile>
---@field OverrideItemTileClass TMap<EUISlot, TSubclassOf<UBaseItemTile>>
---@field DefaultSortType EListSortType
---@field MaxGridColumns int32
---@field ForceSingleRow boolean
---@field MaxGridColumnOverride int32
---@field TilePadding FMargin
---@field ShowUnequip boolean
---@field ShowHeaders boolean
---@field ShowTitles boolean
---@field ShowOwned boolean
---@field ShowUnowned boolean
---@field ShowUnownedSameLine boolean
---@field ShowLocked boolean
---@field ShowRimBorder boolean
---@field SelectOnHover boolean
---@field ShowNew boolean
---@field ShowQuantity boolean
---@field ShowEquipped boolean
---@field ShowPrice boolean
---@field ShowPerkCost boolean
---@field ShowPerkRank boolean
---@field SelectDefaultButton boolean
---@field DisableAutomaticScrolling boolean
---@field FillEmptyColumnsAfterBuilding boolean
---@field SkipUnownedItemsNotAvailableInStore boolean
---@field BlockEdgeNavigationUp boolean
---@field BlockEdgeNavigationRight boolean
---@field BlockEdgeNavigationDown boolean
---@field BlockEdgeNavigationLeft boolean
---@field mpNavScrollBox UNavScrollBox
---@field mpGridPanel UGridPanel
UBaseItemList = {}



---@class UBaseItemTile : UMetaWidget
---@field mpUserButton UItemTileUserButton
---@field mpStateSwitcher UStateSwitcher
---@field mpNewIcon UImage
---@field mpRarityIcon UImage
---@field mpRimBackgroundColor UBorder
UBaseItemTile = {}

---@param pTex UTexture2D
function UBaseItemTile:OnTextureLoaded(pTex) end


---@class UBaseJourneyMapNode : UMetaWidget
---@field PurchasedColor FLinearColor
---@field UnlockedColor FLinearColor
---@field LockedColor FLinearColor
---@field mpImageIcon UImage
---@field mpStatusImage UImage
---@field mpSelectPanel UCanvasPanel
---@field mpUserButton UJourneyUserButton
---@field mpStateSwitcher UStateSwitcher
UBaseJourneyMapNode = {}

---@param pTex UTexture2D
function UBaseJourneyMapNode:OnTextureLoaded(pTex) end
function UBaseJourneyMapNode:OnNodeSelected() end


---@class UBaseLoadoutScreen : UBaseScreen
---@field mpBusyModal UBusyModalWidget
---@field mCategoryButtons TArray<UNavButton>
UBaseLoadoutScreen = {}

---@param vis ESlateVisibility
function UBaseLoadoutScreen:SetCategoryButtonVisibility(vis) end
function UBaseLoadoutScreen:RecordAnalytics() end
function UBaseLoadoutScreen:OnChangesComplete() end
---@param pButton UNavButton
function UBaseLoadoutScreen:OnCategoryPressed(pButton) end


---@class UBaseLoadoutWidget : UUserWidget
---@field MaxGridColumns int32
---@field mpListWidget UBaseItemList
UBaseLoadoutWidget = {}



---@class UBaseModal : UUserWidget
---@field mpInAnimation UWidgetAnimation
---@field mpOutAnimation UWidgetAnimation
---@field mbIsInViewport boolean
---@field OnActivateSound EWise_UI_Sounds
UBaseModal = {}

---@param bImmediate boolean
function UBaseModal:Show(bImmediate) end
---@param Sound EWise_UI_Sounds
function UBaseModal:SetActivateSound(Sound) end
function UBaseModal:RemoveFromGameViewport() end
function UBaseModal:OnEscaped() end
---@param bImmediate boolean
function UBaseModal:Hide(bImmediate) end
function UBaseModal:ExecuteDenyDelegate() end
function UBaseModal:ExecuteDelegate() end
function UBaseModal:Close() end
function UBaseModal:AnimateOut() end
function UBaseModal:AnimateIn() end
function UBaseModal:AddToGameViewport() end


---@class UBaseOverlay : UUserWidget
---@field ButtonBar TArray<EButtonBarType>
---@field UsesContextualButtonBar boolean
---@field OnTransitionOutSound EWise_UI_Sounds
---@field OnTransitionInSound EWise_UI_Sounds
---@field mpPreviousWidget UWidget
UBaseOverlay = {}



---@class UBaseRewardGroupWidget : UMetaWidget
---@field mRewardWidgetClass TSubclassOf<UBaseRewardWidget>
---@field MaxPanelColums int32
---@field mpRewardBox UHorizontalBox
---@field mpRewardPanel UUniformGridPanel
UBaseRewardGroupWidget = {}



---@class UBaseRewardWidget : UMetaWidget
---@field CollapseText boolean
---@field mpRewardIcon UImage
---@field mpPointValueText UTextBlock
---@field mpItemNameText UTextBlock
UBaseRewardWidget = {}

---@param pTex UTexture2D
function UBaseRewardWidget:OnTextureLoaded(pTex) end
---@param numPrizesString FString
function UBaseRewardWidget:LoadPrizePackText(numPrizesString) end
---@param factionString FString
function UBaseRewardWidget:LoadPrizePackIcon(factionString) end
function UBaseRewardWidget:LoadPointTypeIcon() end
function UBaseRewardWidget:LoadPointText() end
function UBaseRewardWidget:LoadPermissionTokenIcon() end
function UBaseRewardWidget:LoadPermissionText() end
function UBaseRewardWidget:LoadItemNameText() end
function UBaseRewardWidget:LoadDbItemText() end
function UBaseRewardWidget:LoadDbItemIcon() end
function UBaseRewardWidget:HideReset() end


---@class UBaseScreen : UUserWidget
---@field mbForceDefaultButton boolean
---@field mbRememberLastButton boolean
---@field ShowScreenNavigation boolean
---@field ShowScreenTitle boolean
---@field ShowCharacterInfo boolean
---@field AllowCharacterSelect boolean
---@field ShowCurrencyInfo boolean
---@field NavigationTitle FText
---@field ContextualNavigationText boolean
---@field NavigationTexture UTexture2D
---@field ButtonBar TArray<EButtonBarType>
---@field UsesContextualButtonBar boolean
---@field OnActivateSound EWise_UI_Sounds
---@field OnDeactivateSound EWise_UI_Sounds
---@field OnTransitionInSound EWise_UI_Sounds
---@field OnTransitionOutSound EWise_UI_Sounds
---@field mpPreviousWidget UWidget
---@field mpTransitionInAnim UWidgetAnimation
---@field mpTransitionOutAnim UWidgetAnimation
UBaseScreen = {}

function UBaseScreen:OnTransitionOutComplete() end
function UBaseScreen:OnTransitionInComplete() end
---@return ABaseHUD
function UBaseScreen:GetHUD() end


---@class UBaseSocialButton : UBaseUserButton
---@field mSocialTooltipClass TSubclassOf<USocialTooltipWidget>
UBaseSocialButton = {}



---@class UBaseSocialContentWidget : UMetaWidget
---@field mpMainSwitcher UWidgetSwitcher
---@field mpContentPanel UCanvasPanel
---@field mpEmptyPanel UCanvasPanel
---@field mpNavScrollBox UNavScrollBox
---@field mpContentList UVerticalBox
UBaseSocialContentWidget = {}

---@param ItemId FString
function UBaseSocialContentWidget:OnItemSelected(ItemId) end
---@param ItemId FString
function UBaseSocialContentWidget:OnItemPressed(ItemId) end


---@class UBaseStatusComponent : UActorComponent
---@field mpOwningTPChar ATPChar
---@field mpTPCharCreatedBy ATPChar
---@field mCurrentDuration float
---@field mBaseDuration float
---@field mServerTimeSinceLastActivated float
---@field mServerTimeSinceLastDeactivated float
---@field mCurrentPostProcessMaterials TArray<UMaterialInstanceDynamic>
UBaseStatusComponent = {}

---@param DeltaSeconds float
function UBaseStatusComponent:TickStatusComponent(DeltaSeconds) end
---@return boolean
function UBaseStatusComponent:ShowSubduedEffects() end
---@return boolean
function UBaseStatusComponent:ShouldPlayStaggerAnimation() end
---@return boolean
function UBaseStatusComponent:ShouldPlayActionFailedEffects() end
function UBaseStatusComponent:SetUpPostProcessMaterials() end
function UBaseStatusComponent:RegisterAuras() end
function UBaseStatusComponent:OnRep_TPCharCreatedBy() end
function UBaseStatusComponent:OnRep_OwningTPChar() end
---@param bManifested boolean
function UBaseStatusComponent:OnOwningTPCharManifested(bManifested) end
---@return boolean
function UBaseStatusComponent:IsStatusActive() end
---@return ATPChar
function UBaseStatusComponent:GetTPCharCreatedBy() end
---@return float
function UBaseStatusComponent:GetSpeedPenalty() end
---@return TArray<UMaterialInstance>
function UBaseStatusComponent:GetRequiredPostProcessMaterials() end
---@return float
function UBaseStatusComponent:GetPercentageComplete() end
---@return ATPChar
function UBaseStatusComponent:GetOwningTPChar() end
---@param bSightBlocked boolean
---@param outProperties FStencilProperties
---@param outHasAura boolean
function UBaseStatusComponent:GetCustomDepthStencilProperties(bSightBlocked, outProperties, outHasAura) end
---@return float
function UBaseStatusComponent:GetCurrentDuration() end
---@return float
function UBaseStatusComponent:GetBaseDuration() end
---@param pTPChar ATPChar
function UBaseStatusComponent:DoServerSetOwningTPCharCreatedBy(pTPChar) end
---@param pTPChar ATPChar
function UBaseStatusComponent:DoServerSetOwningTPChar(pTPChar) end
---@param NewValue float
function UBaseStatusComponent:DoServerSetCurrentDuration(NewValue) end
---@param NewValue float
function UBaseStatusComponent:DoServerSetBaseDuration(NewValue) end
function UBaseStatusComponent:DoServerOnOwningTPCharSubdued() end
function UBaseStatusComponent:DoServerOnOwningTPCharKnockedDown() end
function UBaseStatusComponent:DoServerOnOwningTPCharDeath() end
function UBaseStatusComponent:DoServerOnDeactivated() end
function UBaseStatusComponent:DoServerOnAttachedToTPChar() end
function UBaseStatusComponent:DoServerOnActivated() end
---@return float
function UBaseStatusComponent:DoServerGetTimeSinceLastDeactivated() end
---@return float
function UBaseStatusComponent:DoServerGetTimeSinceLastActivated() end
function UBaseStatusComponent:DoServerDebugToggle() end
function UBaseStatusComponent:DoServerClearDuration() end
function UBaseStatusComponent:DoServerActivateStatus() end
---@return boolean
function UBaseStatusComponent:DoesRevealOwningTPChar() end
function UBaseStatusComponent:DestroySelf() end
---@return boolean
function UBaseStatusComponent:AllowedToUseWeapons() end
---@return boolean
function UBaseStatusComponent:AllowedToRun() end
---@return boolean
function UBaseStatusComponent:AllowedToRevive() end
---@return boolean
function UBaseStatusComponent:AllowedToResurrect() end
---@return boolean
function UBaseStatusComponent:AllowedToInteractWithPickups() end
---@return boolean
function UBaseStatusComponent:AllowedToInteractWithNav() end
---@return boolean
function UBaseStatusComponent:AllowedToHeal() end
---@return boolean
function UBaseStatusComponent:AllowedToEmote() end
---@return boolean
function UBaseStatusComponent:AllowedToBeHealed() end


---@class UBaseTab : UUserWidget
---@field mpOwningScreen UBaseScreen
---@field mpVerticalBox UVerticalBox
UBaseTab = {}

---@param ActionType EGameActionType
---@param cat EInputBindingCategory
---@param bIsKeyboard boolean
function UBaseTab:ShowInputBindingModal(ActionType, cat, bIsKeyboard) end


---@class UBaseToast : UUserWidget
---@field mpTitleText UTextBlock
---@field mpMessageText UTextBlock
---@field mpSocialPortraitBox USizeBox
---@field mpSocialPortraitWidget USocialPortraitWidget
---@field mpCloseButton UButton
---@field AnimIn UWidgetAnimation
---@field AnimOut UWidgetAnimation
---@field SlideIn UWidgetAnimation
---@field SlideOut UWidgetAnimation
UBaseToast = {}

---@param Title FText
---@param Message FText
function UBaseToast:SetText(Title, Message) end
function UBaseToast:OnSlideOutFinished() end
function UBaseToast:OnSlideInFinished() end
function UBaseToast:OnClosePressed() end
function UBaseToast:OnAnimOutFinished() end
function UBaseToast:OnAnimInFinished() end


---@class UBaseUserButton : UMetaWidget
---@field AnimDuration float
---@field HighlightPadding FMargin
---@field BoxMargin FMargin
---@field PreviewHighlight boolean
---@field SelectOnHover boolean
---@field HighlightFactionColor boolean
---@field HighlightMatInst UMaterialInstance
---@field HighlightTexture UTexture2D
---@field HoverOpacity float
---@field SelectedOpacity float
---@field AnimatesOut boolean
---@field AnimOutSpeedMultiplier float
---@field HandlesSimulatePress boolean
---@field HandlesSimulateRelease boolean
---@field NavDirectionOverrides TMap<ESelectionNavigation, UUserWidget>
---@field mpNavButton UNavButton
---@field mpHighlightImage UImage
---@field mpHighlightCanvasPanel UCanvasPanel
---@field mpSelectAnim UWidgetAnimation
UBaseUserButton = {}

function UBaseUserButton:OnSelectFinished() end
function UBaseUserButton:OnSeasonalEventTypeChanged() end


---@class UBaseWeaponAnimInstance : UAnimInstance
---@field mWeaponInstanceData FWeaponAnimInstanceData
---@field mpOwnerTPChar ATPChar
---@field mpOwnerWeaponBase AWeaponBase
---@field mpFrontEndOverrideAnimation UAnimSequence
UBaseWeaponAnimInstance = {}

---@param DeltaTime float
---@return FWeaponAnimInstanceData
function UBaseWeaponAnimInstance:UpdateAnimData(DeltaTime) end
---@return UAnimSequence
function UBaseWeaponAnimInstance:GetFrontEndOverrideAnimation() end
---@return float
function UBaseWeaponAnimInstance:GetCurrentWeaponIntroTimePlayRate() end
---@return FWeaponAnimInstanceData
function UBaseWeaponAnimInstance:GetAnimData() end


---@class UBasicRewardWidget : UBaseRewardWidget
UBasicRewardWidget = {}


---@class UBillboardEffectsComponent : USceneComponent
---@field mpBillboardMesh UStaticMeshComponent
---@field mpBillboardPlane UStaticMeshComponent
---@field mpEffectMaterial UMaterialInstance
---@field mBillboardRadius float
---@field mbIsEnabled boolean
UBillboardEffectsComponent = {}

---@param DeltaTime float
function UBillboardEffectsComponent:UpdateMaterialProperties(DeltaTime) end
---@param DeltaTime float
function UBillboardEffectsComponent:UpdateBillboarding(DeltaTime) end
---@param bEnabled boolean
function UBillboardEffectsComponent:SetEnabled(bEnabled) end
---@param pNewMaterial UMaterialInstance
function UBillboardEffectsComponent:OverrideEffectMaterial(pNewMaterial) end
---@return UMaterialInstanceDynamic
function UBillboardEffectsComponent:GetDynamicMaterial() end


---@class UBlackboardKeyType_GameplayTag : UBlackboardKeyType
---@field TagValue FGameplayTag
UBlackboardKeyType_GameplayTag = {}



---@class UBotSettingsOverlayWidget : UBaseOverlay
---@field mpBotCharacterSelect UCharacterSelectWidget
---@field mpFactionSelector UOptionSelectorUserButton
---@field mpDifficulty UOptionSelectorUserButton
---@field mpBotNameText UTextBlock
---@field mBotIndex int32
UBotSettingsOverlayWidget = {}

function UBotSettingsOverlayWidget:OnFactionChanged() end
function UBotSettingsOverlayWidget:OnDiffChanged() end


---@class UBoxCostUserButton : UBoxUserButton
---@field mpCostBox UHorizontalBox
---@field mpCostIconBox UHorizontalBox
---@field mpCurrencyIcon UImage
---@field mpCostText UTextBlock
---@field mbForceHideCostBox boolean
UBoxCostUserButton = {}



---@class UBoxNavButton : UNavButton
UBoxNavButton = {}


---@class UBoxNewsUserButton : UBoxUserButton
---@field RegularColor FLinearColor
---@field ImageTex UTexture2D
---@field mpIcon UImage
---@field mpRegularBorder UImage
UBoxNewsUserButton = {}



---@class UBoxPromptUserButton : UBoxUserButton
---@field GameActionType EGameActionType
---@field mpButtonPromptWidget UButtonPromptWidget
UBoxPromptUserButton = {}



---@class UBoxUserButton : UBaseUserButton
---@field Text FText
---@field NormalTexture UTexture2D
---@field WidthOverride float
---@field bOverride_WidthOverride boolean
---@field HeightOverride float
---@field bOverride_HeightOverride boolean
---@field Justification ETextJustify::Type
---@field mpSizeBox USizeBox
---@field mpNormalImage UImage
---@field mpTextBlock UTextBlock
UBoxUserButton = {}



---@class UBuildLocTablesCommandlet : UCommandlet
UBuildLocTablesCommandlet = {}


---@class UBusyModalWidget : UBaseModal
---@field mpMessageText UTextBlock
---@field mpSpinnerImage UImage
---@field mpProgressBar UProgressBar
UBusyModalWidget = {}



---@class UButtonBarWidget : UUserWidget
---@field mButtons TArray<FButtonBarWidgetButton>
---@field mbBackThisFrame boolean
---@field mActiveButtonTypes TArray<EButtonBarType>
---@field ButtonTemplates TMap<EButtonBarType, FButtonBarData>
---@field OnPressSound EWise_UI_Sounds
---@field OnReleaseSound EWise_UI_Sounds
---@field OnHoverSound EWise_UI_Sounds
---@field OnUnhoverSound EWise_UI_Sounds
UButtonBarWidget = {}

function UButtonBarWidget:UpdateButtonBar() end
---@param Button FButtonBarWidgetButton
---@param bPressed boolean
---@return boolean
function UButtonBarWidget:SimulateButtonAction(Button, bPressed) end
---@param buttons TArray<EButtonBarType>
function UButtonBarWidget:SetupButtons(buttons) end
---@param buttonType EButtonBarType
---@param bEnabled boolean
function UButtonBarWidget:SetButtonTypeEnabled(buttonType, bEnabled) end
---@param buttonType EButtonBarType
---@param bCollapsed boolean
function UButtonBarWidget:SetButtonTypeCollapsed(buttonType, bCollapsed) end
---@param buttonType EButtonBarType
---@param Text FText
function UButtonBarWidget:SetButtonText(buttonType, Text) end
function UButtonBarWidget:Refresh() end
function UButtonBarWidget:OnDeviceTypeChanged() end
function UButtonBarWidget:OnButton6Released() end
function UButtonBarWidget:OnButton6Pressed() end
function UButtonBarWidget:OnButton5Released() end
function UButtonBarWidget:OnButton5Pressed() end
function UButtonBarWidget:OnButton4Released() end
function UButtonBarWidget:OnButton4Pressed() end
function UButtonBarWidget:OnButton3Released() end
function UButtonBarWidget:OnButton3Pressed() end
function UButtonBarWidget:OnButton2Released() end
function UButtonBarWidget:OnButton2Pressed() end
function UButtonBarWidget:OnButton1Released() end
function UButtonBarWidget:OnButton1Pressed() end
---@param buttonType EButtonBarType
---@return boolean
function UButtonBarWidget:IsButtonTypeEnabled(buttonType) end
---@return boolean
function UButtonBarWidget:IsBackPressedThisFrame() end
---@param menuAction EMenuAction
---@return boolean
function UButtonBarWidget:HandleMenuActionPress(menuAction) end
---@param KeyAction EGameActionType
---@param pressAction EMenuAction
---@param releaseAction EMenuAction
function UButtonBarWidget:GetMenuActions(KeyAction, pressAction, releaseAction) end
function UButtonBarWidget:ForceUpdate() end
---@param Button FButtonBarWidgetButton
---@param bPress boolean
function UButtonBarWidget:ExecuteButton(Button, bPress) end
function UButtonBarWidget:ClearNavigationButtons() end


---@class UButtonPromptWidget : UUserWidget
---@field mpKeyBackground UImage
---@field mpKeyText UTextBlock
---@field mpKeyScaleBox UScaleBox
---@field mpGamepadScaleBox UScaleBox
---@field mpMouseButtonScaleBox UScaleBox
---@field mpGamepadIcon UImage
---@field mpMouseButtonIcon UImage
---@field mpMasterSizeBox USizeBox
---@field mpMouseButtonNumber UTextBlock
---@field mpKeyOverlayBox UOverlay
---@field mStandardSize float
---@field mExpandedSize float
---@field mbIsExpanded boolean
---@field mGamepadPromptScale float
---@field ControllerVisibility ESlateVisibility
---@field KeyboardVisibility ESlateVisibility
---@field mGameAction EGameActionType
UButtonPromptWidget = {}

---@param newVis ESlateVisibility
function UButtonPromptWidget:SetKeyboardVisibility(newVis) end
---@param Key FKey
function UButtonPromptWidget:SetKey(Key) end
---@param gameAction EGameActionType
function UButtonPromptWidget:SetGameAction(gameAction) end
---@param newVis ESlateVisibility
function UButtonPromptWidget:SetControllerVisibility(newVis) end
function UButtonPromptWidget:OnInputBindingChanged() end
function UButtonPromptWidget:OnDeviceTypeChanged() end
---@return boolean
function UButtonPromptWidget:IsExpanded() end
function UButtonPromptWidget:ForceRefresh() end


---@class UCategoryBreadcrumbWidget : UUserWidget
---@field Title FText
---@field mpTitleText UTextBlock
---@field mpHomeButton UButton
---@field mpHomeButtonIcon UImage
UCategoryBreadcrumbWidget = {}

function UCategoryBreadcrumbWidget:OnHomePressed() end
function UCategoryBreadcrumbWidget:OnDeviceTypeChanged() end


---@class UCategoryButtonWidget : UUserWidget
---@field TargetScale FVector2D
---@field ScaleDuration float
---@field UseWidgetSwitcher boolean
---@field DefaultSelectionTint FLinearColor
---@field mpCategoryButton UButton
---@field mpSelectionImage UImage
---@field mpCategoryText UTextBlock
---@field mpContentSizeBox USizeBox
---@field mpWidgetSwitcher UWidgetSwitcher
---@field mpCategoryText_UnSelected UTextBlock
---@field mpCategoryText_Selected UTextBlock
---@field mpCategoryText_Highlighted UTextBlock
---@field mpSwitcherUnSelectedWidget UWidget
---@field mpSwitcherSelectedWidget UWidget
---@field mpSwitcherHighlightedWidget UWidget
---@field mpPromoSizeBox USizeBox
---@field mpPromoText UTextBlock
---@field mScaleMultiplier FVector2D
UCategoryButtonWidget = {}

---@param Text FText
function UCategoryButtonWidget:SetPromoText(Text) end
---@param bShow boolean
function UCategoryButtonWidget:SetIconVisibility(bShow) end
---@param pTex UTexture2D
function UCategoryButtonWidget:SetIconTexture(pTex) end
---@param newFont FSlateFontInfo
function UCategoryButtonWidget:SetFont(newFont) end
function UCategoryButtonWidget:OnSeasonalEventTypeChanged() end
function UCategoryButtonWidget:OnButtonPressed() end
---@return FVector2D
function UCategoryButtonWidget:GetScaleMultiplier() end
function UCategoryButtonWidget:FindTextBlockWidgets() end


---@class UCategorySwitcher : UUserWidget
---@field DefaultCategoryButtonClass TSubclassOf<UCategoryButtonWidget>
---@field CategoryData TArray<FCategorySwitcherData>
---@field FontSize int32
---@field TextPadding FMargin
---@field UseCustomFont boolean
---@field Font FSlateFontInfo
---@field LeftAction EGameActionType
---@field RightAction EGameActionType
---@field OverrideKeyboardButtonVisibility ESlateVisibility
---@field OverrideControllerButtonVisibility ESlateVisibility
---@field CategoryButtonSize FVector2D
---@field CategoryButtonPadding FMargin
---@field mpLeftCategoryButtonPrompt UButtonPromptWidget
---@field mpLeftCategoryButton UButton
---@field mpRightCategoryButtonPrompt UButtonPromptWidget
---@field mpRightCategoryButton UButton
---@field mpButtonBox UHorizontalBox
---@field mCategoryButtonWidgets TArray<UCategoryButtonWidget>
---@field mpTargetWidgetSwitcher UWidgetSwitcher
---@field mSelectedCategoryIndex int32
UCategorySwitcher = {}

function UCategorySwitcher:UpdateCategoryIcons() end
---@param tabIndex uint32
function UCategorySwitcher:TransitionActiveWidgetTab(tabIndex) end
---@param pTarget UWidgetSwitcher
function UCategorySwitcher:SetTargetWidgetSwitcher(pTarget) end
---@param Index int32
---@param bSet boolean
function UCategorySwitcher:SetCategoryEnabled(Index, bSet) end
---@param Category FText
---@param ButtonClass TSubclassOf<UCategoryButtonWidget>
function UCategorySwitcher:SetCategoryClass(Category, ButtonClass) end
---@param Index int32
function UCategorySwitcher:SelectCategory(Index) end
function UCategorySwitcher:ResetCategoryClassesToDefault() end
function UCategorySwitcher:OnRightCategoryPressed() end
function UCategorySwitcher:OnLeftCategoryPressed() end
---@param Index int32
---@return boolean
function UCategorySwitcher:IsCategoryEnabled(Index) end
---@return UWidgetSwitcher
function UCategorySwitcher:FindSiblingWidgetSwitcher() end
function UCategorySwitcher:ClearCategories() end
---@param Title FText
function UCategorySwitcher:AddNewCategory(Title) end
---@param Category FText
---@param PromoText FText
function UCategorySwitcher:AddCategoryPromoText(Category, PromoText) end


---@class UCategorySwitcherBackgroundImage : UUserWidget
---@field mpCanvasSlot UCanvasPanelSlot
UCategorySwitcherBackgroundImage = {}



---@class UCharVisualization : USceneComponent
---@field mpOwningChar ABaseChar
---@field mpOutlineMaterial UMaterial
---@field mpFont UFont
---@field mpLookingRotationArrow UArrowComponent
---@field mpTargetRotationArrow UArrowComponent
---@field mpCharacterRotationArrow UArrowComponent
---@field mpMovementInputArrow UArrowComponent
---@field mpLastMovementInputRotationArrow UArrowComponent
---@field mpVelocityArrow UArrowComponent
---@field mpLastVelocityRotationArrow UArrowComponent
---@field mpDebugTextOne UTextRenderComponent
---@field mpGaitText UTextRenderComponent
---@field mpDebugTextTwo UTextRenderComponent
---@field mbActive boolean
---@field mbHaveVisualizationComponentsSpawned boolean
UCharVisualization = {}



---@class UCharacterInfoHeaderWidget : UMetaWidget
---@field ShowCharacterSelectButton boolean
---@field FilledStarColor FLinearColor
---@field EmptyStarColor FLinearColor
---@field TeenLevelOffset FVector2D
---@field EvilLevelOffset FVector2D
---@field mpProgressMaterialInstance UMaterialInstance
---@field mpDynProgressMaterialInstance UMaterialInstanceDynamic
---@field mpLevelProgressImage UImage
---@field mpCharacterSelectBox UHorizontalBox
---@field mpCharacterSelectButton UThemeButton
---@field mpLevelPanel UCanvasPanel
---@field mpLevelText UTextBlock
---@field mpNameText UTextBlock
---@field mpFactionSwitcher UWidgetSwitcher
---@field mpTeenPanel UCanvasPanel
---@field mpEvilPanel UCanvasPanel
---@field mpTeenFaceIcon UImage
---@field mpEvilFaceIcon UImage
---@field mpNewFlagWidget UNewFlagWidget
UCharacterInfoHeaderWidget = {}

function UCharacterInfoHeaderWidget:OnCharacterSelectPressed() end


---@class UCharacterLoadout : ULoadoutBase
---@field mWeaponLoadoutByWeaponType TMap<EWeaponTypeEnum, UWeaponLoadout>
---@field mAbilityLoadoutByEvilAbilityType TMap<EEvilAbilityType, UWeaponLoadout>
UCharacterLoadout = {}



---@class UCharacterManager : UObject
---@field mOwningClientStateManager TWeakObjectPtr<UClientStateManager>
UCharacterManager = {}



---@class UCharacterSelectAffinityWidget : UMetaWidget
---@field mpAffinityIcon UImage
---@field mpAffinityText UTextBlock
UCharacterSelectAffinityWidget = {}



---@class UCharacterSelectBioAffinityWidget : UMetaWidget
---@field mpNavButton UNavButton
---@field mpAffinityIcon UImage
UCharacterSelectBioAffinityWidget = {}



---@class UCharacterSelectBioMovieWidget : UMetaWidget
---@field mpNavButton UNavButton
---@field mpMovieIcon UImage
UCharacterSelectBioMovieWidget = {}

---@param pTex UTexture2D
function UCharacterSelectBioMovieWidget:OnTextureLoaded(pTex) end


---@class UCharacterSelectBioPerkWidget : UMetaWidget
---@field mpNavButton UNavButton
---@field mpPerkIcon UImage
UCharacterSelectBioPerkWidget = {}

---@param pTex UTexture2D
function UCharacterSelectBioPerkWidget:OnTextureLoaded(pTex) end


---@class UCharacterSelectBioPowerWidget : UMetaWidget
---@field mpNavButton UNavButton
---@field mpPowerIcon UImage
UCharacterSelectBioPowerWidget = {}



---@class UCharacterSelectBioScreen : UBaseScreen
---@field mpNameText UTextBlock
---@field mpBioSwitcher UWidgetSwitcher
---@field mpTeenBioPanel UGridPanel
---@field mpEvilBioPanel UGridPanel
---@field mpAffinityBox UHorizontalBox
---@field mpQuoteText UTextBlock
---@field mpDifficultyText UTextBlock
---@field mpFlavorText UTextBlock
---@field mpAboutMeTitle UTextBlock
---@field mpAboutMeText UTextBlock
---@field mpPowersSwitcher UWidgetSwitcher
---@field mpTeenAffinityBox UVerticalBox
---@field mpAffinityListBox UHorizontalBox
---@field mpEvilPowersBox UVerticalBox
---@field mpPowersListBox UHorizontalBox
---@field mpPerksListBox UHorizontalBox
---@field mpMoviesBox UHorizontalBox
---@field mpMovieNameText UTextBlock
---@field mpDetailsTitle UTextBlock
---@field mpDetailsText UTextBlock
---@field mCharacterType ECharacterType
UCharacterSelectBioScreen = {}

---@param faction EFaction
function UCharacterSelectBioScreen:SetFaction(faction) end
---@param CharType ECharacterType
function UCharacterSelectBioScreen:SetCharacterType(CharType) end
function UCharacterSelectBioScreen:PopulateTeenAffinityList() end
---@param bIsTeen boolean
function UCharacterSelectBioScreen:PopulatePerkList(bIsTeen) end
function UCharacterSelectBioScreen:PopulateMovieList() end
function UCharacterSelectBioScreen:PopulateEvilMutationList() end
function UCharacterSelectBioScreen:PopulateDetails() end
---@param str FString
function UCharacterSelectBioScreen:OnPowerSelected(str) end
---@param ItemId FDbItemId
---@param Grantable FGrantable
function UCharacterSelectBioScreen:OnPerkSelected(ItemId, Grantable) end
---@param str FString
function UCharacterSelectBioScreen:OnMovieSelected(str) end
---@param str FString
function UCharacterSelectBioScreen:OnAffinitySelected(str) end


---@class UCharacterSelectButtonWidget : UMetaWidget
---@field mpCharacterSelectButton UCharacterSelectUserButton
---@field mpEquippedIcon UImage
---@field mpQuickplayBorder UBorder
---@field mpCharacterNameText UTextBlock
---@field mpLevelPanel UCanvasPanel
---@field mpLevelText UTextBlock
---@field mpBountyPanel UCanvasPanel
---@field mpBountyText UTextBlock
---@field mpPreviewPanel UCanvasPanel
---@field mpNewFlagWidget UNewFlagWidget
---@field mpStateSwitcher UStateSwitcher
UCharacterSelectButtonWidget = {}

function UCharacterSelectButtonWidget:OnCharacterSelected() end
function UCharacterSelectButtonWidget:OnCharacterDoubleClick() end


---@class UCharacterSelectMutationWidget : UMetaWidget
---@field mpMutationIcon UImage
---@field mpMutationNameText UTextBlock
---@field mpMutationDescText UTextBlock
---@field mCharacterType ECharacterType
UCharacterSelectMutationWidget = {}

---@param pTex UTexture2D
function UCharacterSelectMutationWidget:OnTextureLoaded(pTex) end


---@class UCharacterSelectOverlayWidget : UBaseOverlay
---@field mpCharacterSelectWidget UCharacterSelectWidget
UCharacterSelectOverlayWidget = {}



---@class UCharacterSelectPerkWidget : UMetaWidget
---@field mpStateSwitcher UStateSwitcher
---@field mpItemIcon UImage
---@field mpItemNameText UTextBlock
---@field mpItemDescText UTextBlock
---@field mCharacterType ECharacterType
UCharacterSelectPerkWidget = {}

---@param pTex UTexture2D
function UCharacterSelectPerkWidget:OnTextureLoaded(pTex) end


---@class UCharacterSelectPortraitWidget : UMetaWidget
---@field mpButton UButton
---@field mpPortraitIcon UImage
---@field mpBorder UImage
---@field mpSelectionBorder UImage
UCharacterSelectPortraitWidget = {}

function UCharacterSelectPortraitWidget:OnButtonPressed() end


---@class UCharacterSelectScreen : UBaseScreen
---@field mpCharacterSelectWidget UCharacterSelectWidget
---@field mpCustomizeCharacterWidget UCustomizeCharacterWidget
UCharacterSelectScreen = {}



---@class UCharacterSelectTooltipWidget : UMetaWidget
---@field HorizontalOffset float
---@field VerticalAlignment float
---@field mpFactionSwitcher UWidgetSwitcher
---@field mpTeenCanvas UCanvasPanel
---@field mpEvilCanvas UCanvasPanel
---@field mpTeenNameText UTextBlock
---@field mpTeenAffinityIcon UImage
---@field mpTeenQuoteText UTextBlock
---@field mpTeenAboutMeText URichTextBlock
---@field mpEvilNameText UTextBlock
---@field mpEvilQuoteText UTextBlock
---@field mpEvilDifficultyText UTextBlock
---@field mpEvilMutationsBox UHorizontalBox
---@field mPerkWidgets TArray<UCharacterSelectPerkWidget>
---@field mMutationWidgets TArray<UCharacterSelectMutationWidget>
UCharacterSelectTooltipWidget = {}

function UCharacterSelectTooltipWidget:PopulateGoodDetails() end
function UCharacterSelectTooltipWidget:PopulateEvilDetails() end


---@class UCharacterSelectUserButton : UBaseUserButton
---@field mpCharacterImage UImage
---@field mpEquippedImage UImage
UCharacterSelectUserButton = {}



---@class UCharacterSelectWidget : UUserWidget
---@field AllowCustomize boolean
---@field ShowBio boolean
---@field CloseOnSelected boolean
---@field OverrideFECharacterOnSelect boolean
---@field ButtonPadding FMargin
---@field mpTeenBox UHorizontalBox
---@field mpEvilBox UHorizontalBox
---@field mpTeenPanel UCanvasPanel
---@field mpEvilPanel UCanvasPanel
---@field mpCharacterInfoBox UWidget
---@field mpAffinityBox UHorizontalBox
---@field mpDifficultyText URichTextBlock
---@field mpCharacterNameText UTextBlock
---@field mpCharacterQuoteText UTextBlock
---@field mpActionButton UActionButton
---@field mpBioButton UActionButton
---@field mpBountyPanel UCanvasPanel
---@field mpQuickplayIcon UImage
---@field mpBountyText URichTextBlock
UCharacterSelectWidget = {}

---@param CharType ECharacterType
function UCharacterSelectWidget:SelectCharacter(CharType) end
function UCharacterSelectWidget:OnBioPressed() end
function UCharacterSelectWidget:OnAltAction2() end
function UCharacterSelectWidget:OnAltAction1() end
function UCharacterSelectWidget:OnActionPressed() end
---@param CharType ECharacterType
function UCharacterSelectWidget:DoubleClickCharacter(CharType) end


---@class UCharacterStatusOverride : UDataAsset
---@field mTPMovementData FTPMovementData
---@field mTPCharStateData FTPCharStateData
---@field mTPWeaponStateData FTPWeaponStateData
---@field mFPCharAnimInstanceData FFPCharAnimInstanceData
---@field mVolumeAttributes TMap<FName, float>
UCharacterStatusOverride = {}



---@class UCharacterTemplateManager : UObject
UCharacterTemplateManager = {}

---@param PresetName FString
---@return FCharacterBodyShapePreset
function UCharacterTemplateManager:LoadCharacterBodyShapePreset(PresetName) end


---@class UChunkLabel : UDeveloperSettings
---@field mLabelledChunks TArray<FLabelledChunk>
UChunkLabel = {}



---@class UCinematicCameraControlPanel : UUserWidget
---@field mpDisableCraftingIconsCheckBox UNavCheckbox
---@field mpDisableItemGlintCheckBox UNavCheckbox
---@field mpDisablePlayerCardsCheckBox UNavCheckbox
---@field mpDisableDamagePanelCheckBox UNavCheckbox
---@field mpDisablePickupPanelCheckBox UNavCheckbox
---@field mpDisableStatusBarCheckBox UNavCheckbox
---@field mpDisablePingsCheckBox UNavCheckbox
---@field mpDisableActionBarCheckBox UNavCheckbox
---@field mpDisableAbilitiesCheckBox UNavCheckbox
---@field mpFlySpeedText UTextBlock
---@field mpFlyAccelerationText UTextBlock
---@field mpRotateSpeedText UTextBlock
---@field mpCraneSpeedText UTextBlock
---@field mpRollSpeedText UTextBlock
---@field mpFOVSpeedText UTextBlock
---@field mpFlySpeedSlider USlider
---@field mpFlyAccelerationSlider USlider
---@field mpRotateSpeedSlider USlider
---@field mpCraneSpeedSlider USlider
---@field mpRollSpeedSlider USlider
---@field mpFOVSpeedSlider USlider
---@field mFlySpeedDefault float
---@field mFlyAccelerationDefault float
---@field mRotateSpeedDefault float
---@field mCraneSpeedDefault float
---@field mRollSpeedDefault float
---@field mFOVSpeedDefault float
---@field mFocusPlaneDefault float
---@field mDOFIntensityDefault float
---@field mFOVDefault float
---@field mTimeScaleDefault float
---@field mTimeSinceLastCursorMove float
---@field mpEnableDOFCheckBox UNavCheckbox
---@field mpDOFFocusPlaneSlider USlider
---@field mpDOFIntensitySlider USlider
---@field mpDOFFocusPlaneText UTextBlock
---@field mpDOFIntensityText UTextBlock
---@field mpFOVSlider USlider
---@field mpTimescaleSlider USlider
---@field mpPauseEngineCheckBox UNavCheckbox
---@field mpRestoreDefaultsButton UButton
---@field mpResetRollButton UButton
---@field mpResetFOVButton UButton
---@field mpFOVText UTextBlock
---@field mpTimescaleText UTextBlock
---@field mpCurrentModeText UTextBlock
---@field mpGameplayHUD AGameplayHUD
---@field mpLocalObserverChar AObserverChar
---@field mpCursorImage UImage
---@field mAllNavigatableWidgets TArray<UWidget>
---@field mCursorImageList TArray<UImage>
---@field mCurrentWidgetIndex int32
UCinematicCameraControlPanel = {}

function UCinematicCameraControlPanel:UpdateCurrentModeText() end
function UCinematicCameraControlPanel:Update() end
---@param NewValue float
---@param pTextBlock UTextBlock
function UCinematicCameraControlPanel:SetMultiplierText(NewValue, pTextBlock) end
---@param NewValue AObserverChar
function UCinematicCameraControlPanel:SetLocalObserverChar(NewValue) end
---@param NewValue float
---@param pTextBlock UTextBlock
---@param bIsDistance boolean
---@param bRoundToOneDec boolean
function UCinematicCameraControlPanel:SetFloatText(NewValue, pTextBlock, bIsDistance, bRoundToOneDec) end
---@param Index int32
function UCinematicCameraControlPanel:SetCurrentWidgetIndex(Index) end
---@param NewValue float
function UCinematicCameraControlPanel:OnTimeScaleChanged(NewValue) end
---@param NewValue float
function UCinematicCameraControlPanel:OnRotateSpeedChanged(NewValue) end
---@param NewValue float
function UCinematicCameraControlPanel:OnRollSpeedChanged(NewValue) end
function UCinematicCameraControlPanel:OnRestoreDefaults() end
function UCinematicCameraControlPanel:OnResetRoll() end
function UCinematicCameraControlPanel:OnResetFOV() end
---@param bEnabled boolean
function UCinematicCameraControlPanel:OnPauseEngineChanged(bEnabled) end
---@param NewValue float
function UCinematicCameraControlPanel:OnFOVSpeedChanged(NewValue) end
---@param NewValue float
function UCinematicCameraControlPanel:OnFOVChanged(NewValue) end
---@param NewValue float
function UCinematicCameraControlPanel:OnFlySpeedChanged(NewValue) end
---@param NewValue float
function UCinematicCameraControlPanel:OnFlyAccelerationChanged(NewValue) end
---@param bEnabled boolean
function UCinematicCameraControlPanel:OnEnableDOFChanged(bEnabled) end
---@param NewValue float
function UCinematicCameraControlPanel:OnDOFIntensityChanged(NewValue) end
---@param NewValue float
function UCinematicCameraControlPanel:OnDOFFocusPlaneChanged(NewValue) end
---@param bEnabled boolean
function UCinematicCameraControlPanel:OnDisableStatusBarChanged(bEnabled) end
---@param bEnabled boolean
function UCinematicCameraControlPanel:OnDisablePlayerCards(bEnabled) end
---@param bEnabled boolean
function UCinematicCameraControlPanel:OnDisablePingsChanged(bEnabled) end
---@param bEnabled boolean
function UCinematicCameraControlPanel:OnDisablePickupPanelChanged(bEnabled) end
---@param bEnabled boolean
function UCinematicCameraControlPanel:OnDisableItemGlintChanged(bEnabled) end
---@param bEnabled boolean
function UCinematicCameraControlPanel:OnDisableDamagePanelChanged(bEnabled) end
---@param bEnabled boolean
function UCinematicCameraControlPanel:OnDisableCraftingIconsChanged(bEnabled) end
---@param bEnabled boolean
function UCinematicCameraControlPanel:OnDisableActionBarChanged(bEnabled) end
---@param bEnabled boolean
function UCinematicCameraControlPanel:OnDisableAbilitiesChanged(bEnabled) end
function UCinematicCameraControlPanel:OnDeactivate() end
---@param NewValue float
function UCinematicCameraControlPanel:OnCraneSpeedChanged(NewValue) end
function UCinematicCameraControlPanel:OnActivate() end
function UCinematicCameraControlPanel:LookForOwner() end
---@return AObserverChar
function UCinematicCameraControlPanel:GetLocalObserverChar() end
---@return int32
function UCinematicCameraControlPanel:GetCurrentWidgetIndex() end


---@class UClientStateManager : UObject
---@field mpBackendManager UBackendManager
---@field mpCharacterManager UCharacterManager
---@field mpPlayerAccountManager UPlayerAccountManager
---@field mpWeaponManager UWeaponManager
---@field mpMatchEventQueue UMatchEventQueue
---@field mpLobbyLoadoutController ULobbyLoadoutController
---@field mpPrerequisiteValidator UPrerequisiteValidator
UClientStateManager = {}



---@class UClientUpdaterProgressWidget : UUserWidget
---@field mpProgressBar UProgressBar
---@field mpStatusText UTextBlock
UClientUpdaterProgressWidget = {}



---@class UClothingItemDataAsset : UItemDataAsset
---@field mSavedClothingItemDataAssetVersion int32
---@field mBodyShapePresetName FString
---@field mMeshData TMap<EMeshSlotVisibility, FTeenClothingMeshData>
---@field mMaterialOverrides TMap<FName, UMaterialInterface>
---@field mClothPhysicsAssetsToReceive TArray<FName>
---@field mClothingMeshData TArray<FTeenClothingMeshData>
---@field mCharacterStatusToMaterialScalarParameter TArray<FCharacterStatusToMaterialParameter>
---@field mPersistentFXSystems TArray<FSkinFXSystemList>
---@field mMaterialParameterTransferByValue TArray<FMaterialTransferByValue>
---@field mSockMeshData TMap<ESockType, FTeenClothingMeshData>
---@field mHideLayers TMap<EMeshSlot, EMeshSlotVisibility>
---@field mAdditionalHideLayersByVisibility TMap<EMeshSlotVisibility, FHideLayers>
---@field mMeshSlot EMeshSlot
---@field mDefaultItemMeshSlot EMeshSlot
---@field mAdditionalNamedAssetsToEquip TArray<FName>
---@field mbSecondarySlotItem boolean
---@field mbIsFrontEndUnsafe boolean
---@field mbIsFrontEndBulky boolean
---@field bContributePhysicsAssetsToClothSim boolean
---@field mClothPhysicsAssetsToContribute TArray<FClothingPhysicsAsset>
---@field mLeftFootSettings FFeetClothingSettings
---@field mRightFootSettings FFeetClothingSettings
---@field mLeftTuckPointBehaviours TMap<int32, ETuckPointBehaviour>
---@field mRightTuckPointBehaviours TMap<int32, ETuckPointBehaviour>
---@field mGroupName FName
---@field mColorSwatchDetails FColorSwatchDetails
---@field mBoundsScale float
---@field mbUseRootHairParameters boolean
---@field mRootHairParameters FHairProperties
---@field mpRootDataAssetOverride UClothingItemDataAsset
---@field mbUseRootDefaultHeadWithCostume boolean
---@field mpRootDefaultHeadAsset UClothingItemDataAsset
---@field mRootDefaultAssets TArray<UClothingItemDataAsset>
---@field mNamedAssets TMap<FName, UClothingItemDataAsset>
---@field mNamedMeshes TMap<FName, USkeletalMesh>
UClothingItemDataAsset = {}



---@class UClothingItemTileWidget : UBaseItemTile
---@field RadialTexture UTexture2D
---@field mpGroupIcon UImage
---@field StatusEquippedIcon UImage
---@field mGroupName FName
UClothingItemTileWidget = {}



---@class UClothingLoadoutWidget : UBaseLoadoutWidget
---@field mpWheelPreviewWidget ULoadoutRadialMenuWidget
---@field mpStickerImage UImage
---@field mpInfoPanel UCanvasPanel
---@field mpNameText UTextBlock
---@field mpRarityBorder UBorder
---@field mpRarityText UTextBlock
---@field mpGroupOverlay UOverlay
---@field mpGroupBox UHorizontalBox
---@field mpDescriptionText UTextBlock
---@field mpActionButton UActionButton
---@field mpNonSelectableScrollBox UNonSelectableScrollBox
---@field mpDescriptionBorder UBorder
UClothingLoadoutWidget = {}

---@param pTex UTexture2D
function UClothingLoadoutWidget:OnStickerTextureLoaded(pTex) end
---@param ItemId FDbItemId
---@param Grantable FGrantable
function UClothingLoadoutWidget:OnListItemSelected(ItemId, Grantable) end
---@param ItemId FDbItemId
---@param Grantable FGrantable
function UClothingLoadoutWidget:OnListItemPressed(ItemId, Grantable) end
function UClothingLoadoutWidget:OnActionPressed() end


---@class UConfirmationModalWidget : UBaseModal
---@field mpMessageText UTextBlock
---@field mpConfirmButton UBoxUserButton
---@field mpBECCodeText UTextBlock
---@field mpErrorCodeText UTextBlock
UConfirmationModalWidget = {}

---@param Text FText
function UConfirmationModalWidget:SetMessageText(Text) end
---@param Text FText
function UConfirmationModalWidget:SetConfirmButtonText(Text) end
---@param ErrorCode int32
function UConfirmationModalWidget:SetCloudscriptErrorCode(ErrorCode) end
---@param Text FText
function UConfirmationModalWidget:SetBECCodeText(Text) end
function UConfirmationModalWidget:OnConfirmPressed() end


---@class UContextMenuButtonWidget : UUserWidget
---@field mpNavButton UNavButton
---@field mpButtonText UTextBlock
UContextMenuButtonWidget = {}

---@param bSet boolean
function UContextMenuButtonWidget:SetButtonEnabled(bSet) end
function UContextMenuButtonWidget:OnButtonPressed() end


---@class UContextMenuWidget : UUserWidget
---@field mpPreviousNavWidget UNavButton
---@field mpButtonBox UVerticalBox
---@field mpPositionCanvas UCanvasPanel
---@field mbIsMouseDown boolean
---@field mbSpawnedThisFrame boolean
---@field mbSpawnedLastFrame boolean
UContextMenuWidget = {}



---@class UControlRemapBindOverlayWidget : UBaseOverlay
---@field mpBindText URichTextBlock
---@field mpWarningText URichTextBlock
---@field mGameActionType EGameActionType
---@field mKeyToRebind FKey
---@field mGameActionToRebind EGameActionType
UControlRemapBindOverlayWidget = {}

---@param GameActionType EGameActionType
function UControlRemapBindOverlayWidget:SetBindingOverlayText(GameActionType) end
---@param bVal boolean
function UControlRemapBindOverlayWidget:SetBindingModeActive(bVal) end
function UControlRemapBindOverlayWidget:OnRebindAction() end
---@param Key FKey
---@param bIsPressedDown boolean
function UControlRemapBindOverlayWidget:OnKeyPressed(Key, bIsPressedDown) end
function UControlRemapBindOverlayWidget:OnDenyRebindAction() end


---@class UControlRemapItemWidget : UUserWidget
---@field mpKeycodeNameText UTextBlock
---@field mpPrimaryBindingButton UNavButton
---@field mpKeyNameText UTextBlock
---@field mpControllerBindingButton UButton
---@field mpControllerBindingImage UImage
---@field mGameActionType EGameActionType
---@field mpControlRemapPanelWidget UControlRemapPanelWidget
UControlRemapItemWidget = {}

function UControlRemapItemWidget:UpdateKeyNameText() end
function UControlRemapItemWidget:UpdateKeyCodeNameText() end
---@param pControlRemapPanelWidget UControlRemapPanelWidget
function UControlRemapItemWidget:SetControlRemapPanelWidget(pControlRemapPanelWidget) end
function UControlRemapItemWidget:OnPrimaryBindingClicked() end
---@return UNavButton
function UControlRemapItemWidget:GetNavButton() end


---@class UControlRemapPanelWidget : UUserWidget
---@field mControlRemapItemWidgetList TArray<UControlRemapItemWidget>
---@field mpNavScrollBox UNavScrollBox
---@field mpMouseTab UMouseTab
UControlRemapPanelWidget = {}



---@class UControlTab : UBaseTab
---@field mpInvertY UOptionToggleUserButton
---@field mpMouseSensitivity UOptionUserButton
---@field mpBindingTest UOptionUserButton
---@field mpRestoreDefaults UOptionUserButton
---@field mpMouseSensitivitySlider USlider
---@field mpMouseSensitivityText UTextBlock
---@field mpControllerSensitivityXSlider USlider
---@field mpControllerSensitivityXText UTextBlock
---@field mpControllerSensitivityYSlider USlider
---@field mpControllerSensitivityYText UTextBlock
---@field mpWeaponSensitivityXText UTextBlock
---@field mpWeaponSensitivityXSlider USlider
---@field mpWeaponSensitivityYText UTextBlock
---@field mpWeaponSensitivityYSlider USlider
---@field mpControlRemapBindOverlayWidget UControlRemapBindOverlayWidget
---@field mpControlRemapPanelWidget UControlRemapPanelWidget
---@field mpRestoreDefaultsButton UNavButton
---@field mpToggleCrouchCheckbox UNavCheckbox
---@field mpToggleSprintCheckbox UNavCheckbox
UControlTab = {}

---@param Val float
function UControlTab:SetMouseSensitivity(Val) end
---@param bSet boolean
function UControlTab:SetInvertY(bSet) end
---@param Val float
function UControlTab:SetControllerWeaponSensitivityY(Val) end
---@param Val float
function UControlTab:SetControllerWeaponSensitivityX(Val) end
---@param sens FVector2D
function UControlTab:SetControllerWeaponSensitivity(sens) end
---@param Val float
function UControlTab:SetControllerSensitivityY(Val) end
---@param Val float
function UControlTab:SetControllerSensitivityX(Val) end
---@param sens FVector2D
function UControlTab:SetControllerSensitivity(sens) end
---@param bIsChecked boolean
function UControlTab:OnToggleSprintChanged(bIsChecked) end
---@param bIsChecked boolean
function UControlTab:OnToggleCrouchChanged(bIsChecked) end
function UControlTab:OnRestoreDefaultControlsConfirm() end
function UControlTab:OnRestoreDefaultControls() end
---@param Value float
function UControlTab:OnMouseSensitivityChanged(Value) end
---@param bIsChecked boolean
function UControlTab:OnInvertYChanged(bIsChecked) end
---@param Value float
function UControlTab:OnControllerWeaponSensitivityYChanged(Value) end
---@param Value float
function UControlTab:OnControllerWeaponSensitivityXChanged(Value) end
---@param Value float
function UControlTab:OnControllerSensitivityYChanged(Value) end
---@param Value float
function UControlTab:OnControllerSensitivityXChanged(Value) end


---@class UControllerTab : UBaseTab
---@field mpEditLayout UOptionSingleUserButton
---@field mpTeenHorizontalSensitivity UOptionSliderUserButton
---@field mpTeenVerticalSensitivity UOptionSliderUserButton
---@field mpEvilHorizontalSensitivity UOptionSliderUserButton
---@field mpEvilVerticalSensitivity UOptionSliderUserButton
---@field mpFiringSensitivity UOptionSliderUserButton
---@field mpInvertY UOptionToggleUserButton
---@field mpVibration UOptionToggleUserButton
---@field mpSprintToggle UOptionToggleUserButton
---@field mpCrouchToggle UOptionToggleUserButton
---@field mpResetDefaultsButton UOptionSingleUserButton
UControllerTab = {}

function UControllerTab:OnResetDefaultsPressed() end
function UControllerTab:OnResetDefaultsConfirmed() end


---@class UConversionEnumFunctions : UBlueprintFunctionLibrary
UConversionEnumFunctions = {}

---@param enumString FString
---@return EMeshSlot
function UConversionEnumFunctions:Conv_StringToMeshSlot(enumString) end
---@param enumString FString
---@return EDbItemType
function UConversionEnumFunctions:Conv_StringToDbItemType(enumString) end
---@param enumString FString
---@return ECharacterType
function UConversionEnumFunctions:Conv_StringToCharacterType(enumString) end
---@param Slot EPlayerSlot
---@return FString
function UConversionEnumFunctions:Conv_PlayerSlotToLoadoutType(Slot) end
---@param enumValue EMeshSlot
---@return FString
function UConversionEnumFunctions:Conv_MeshSlotToString(enumValue) end
---@param enumValue ECharacterType
---@return FString
function UConversionEnumFunctions:Conv_CharacterTypeToString(enumValue) end


---@class UCopyPoseAnimInstance : UAnimInstance
UCopyPoseAnimInstance = {}


---@class UCorsairPeripheralComponent : USceneComponent
UCorsairPeripheralComponent = {}


---@class UCraftStationManagerComponent : UActorComponent
---@field mCraftingStructs TArray<FCraftingStruct>
UCraftStationManagerComponent = {}



---@class UCraftingProgressBar : UBaseActionProgressBar
---@field mCancelPercent float
---@field mbWasCancellingLastFrame boolean
---@field mpNonLethalWeaponProgress UTexture2D
---@field mpLethalWeaponProgress UTexture2D
---@field mbLethalWeapon boolean
---@field mpCurrentlyTrackedChar ATPChar
UCraftingProgressBar = {}

---@param pStationBase AStationBase
---@param bGetPreviousWeapon boolean
---@return FText
function UCraftingProgressBar:GetWeaponTextFromCraftingStation(pStationBase, bGetPreviousWeapon) end


---@class UCrossPlatformFriend : UObject
UCrossPlatformFriend = {}

---@return boolean
function UCrossPlatformFriend:IsOnline() end
---@return boolean
function UCrossPlatformFriend:IsInGame() end
---@return FString
function UCrossPlatformFriend:GetUserIdString() end
---@return FUniqueNetIdRepl
function UCrossPlatformFriend:GetUserId() end
---@return FString
function UCrossPlatformFriend:GetRealName() end
---@return FString
function UCrossPlatformFriend:GetDisplayName() end
---@return FString
function UCrossPlatformFriend:GetAuthenticatedPlatformName() end


---@class UCrossPlatformOnlineUser : UObject
UCrossPlatformOnlineUser = {}

---@return FString
function UCrossPlatformOnlineUser:GetUserIdString() end
---@return FUniqueNetIdRepl
function UCrossPlatformOnlineUser:GetUserId() end
---@return FString
function UCrossPlatformOnlineUser:GetRealName() end
---@return FString
function UCrossPlatformOnlineUser:GetDisplayName() end


---@class UCrossPlatformPartyMember : UObject
UCrossPlatformPartyMember = {}

---@return FString
function UCrossPlatformPartyMember:GetUserIdString() end
---@return FUniqueNetIdRepl
function UCrossPlatformPartyMember:GetUserId() end
---@return FString
function UCrossPlatformPartyMember:GetDisplayName() end


---@class UCrossSkinDataAsset : UTeenWeaponSkinDataAsset
---@field mCrossParticleSystem FSkinParticleSystem
---@field mCrossLight FSkinLight
---@field mWiseCrossSwitch EWise_WEP_Cross
UCrossSkinDataAsset = {}



---@class UCurrencyInfoHeaderWidget : UUserWidget
---@field mpAccountHCText UTextBlock
---@field mpAccountSCText UTextBlock
UCurrencyInfoHeaderWidget = {}



---@class UCustomCodeUserWidget : UUserWidget
---@field mpCopyButton UBaseUserButton
---@field mpHideShowButton UBaseUserButton
---@field mpCopyOverlay UOverlay
---@field mpCodeText UTextBlock
---@field mbHidden boolean
UCustomCodeUserWidget = {}

function UCustomCodeUserWidget:OnHideShowPressed() end
function UCustomCodeUserWidget:OnCopyPressed() end


---@class UCustomFactionUserButton : UBaseUserButton
---@field FactionType EFaction
---@field mpCharIcon UImage
---@field mpSpectatorIcon UImage
---@field mpSelectionImage UImage
---@field mpFactionText UTextBlock
UCustomFactionUserButton = {}



---@class UCustomFactionWidget : UMetaWidget
---@field mpTeenUserButton UCustomFactionUserButton
---@field mpEvilUserButton UCustomFactionUserButton
---@field mpSpectatorUserButton UCustomFactionUserButton
---@field mpBgImage UImage
---@field mpBlurImage UImage
UCustomFactionWidget = {}

function UCustomFactionWidget:OnTeenSelected() end
function UCustomFactionWidget:OnTeenDoubleClick() end
function UCustomFactionWidget:OnSpectatorSelected() end
function UCustomFactionWidget:OnEvilSelected() end
function UCustomFactionWidget:OnEvilDoubleClick() end


---@class UCustomGameMapSelectUserButton : UBaseUserButton
---@field mpMapNameText UTextBlock
---@field mpMapThumbnail UImage
---@field mpLeftButton UButton
---@field mpRightButton UButton
UCustomGameMapSelectUserButton = {}

---@param dir ESelectionNavigation
function UCustomGameMapSelectUserButton:OnNavDirection(dir) end
function UCustomGameMapSelectUserButton:OnMapRight() end
function UCustomGameMapSelectUserButton:OnMapLeft() end


---@class UCustomGamesModalWidget : UBaseModal
---@field mpCancelButton UBoxUserButton
---@field mpHostButton UBoxUserButton
---@field mpJoinButton UBoxUserButton
---@field mpSubmitLobbyCodeButton UBoxUserButton
---@field mpJoinCancelButton UBoxUserButton
---@field mpWidgetSwitcher UWidgetSwitcher
---@field mpLobbyCodeTextBox UEditableTextBox
UCustomGamesModalWidget = {}

function UCustomGamesModalWidget:OnSubmitLobbyCode() end
function UCustomGamesModalWidget:OnJoinPressed() end
function UCustomGamesModalWidget:OnJoinCancelPressed() end
function UCustomGamesModalWidget:OnHostPressed() end
function UCustomGamesModalWidget:OnCancelPressed() end


---@class UCustomMeshPieceAnimInstance : UAnimInstance
---@field mpMeshToCopyFrom USkeletalMeshComponent
---@field mpCorrectiveAnimationSequence UAnimSequence
UCustomMeshPieceAnimInstance = {}

---@param pSkeletalMeshToCopyFrom USkeletalMeshComponent
function UCustomMeshPieceAnimInstance:SetMeshToCopyFrom(pSkeletalMeshToCopyFrom) end
---@param pCorrectiveAnimationSequence UAnimSequence
function UCustomMeshPieceAnimInstance:SetCorrectiveAnimationSequence(pCorrectiveAnimationSequence) end
---@return USkeletalMeshComponent
function UCustomMeshPieceAnimInstance:GetMeshToCopyFrom() end
---@return UAnimSequence
function UCustomMeshPieceAnimInstance:GetCorrectiveSequence() end


---@class UCustomProgressBar : UUserWidget
---@field mpProgressBar UProgressBar
---@field PercentValue float
---@field mpFillTexture UTexture
---@field mFillColor FLinearColor
---@field mBackgroundColor FLinearColor
---@field mpProgressBarMaterialInterface UMaterialInterface
---@field mpMaskTexture UTexture
---@field mpFillDynamicMaterialInstance UMaterialInstanceDynamic
---@field mpBackgroundDynamicMaterialInstance UMaterialInstanceDynamic
UCustomProgressBar = {}

---@param Val float
function UCustomProgressBar:SetPercent(Val) end
---@param pTexture UTexture
function UCustomProgressBar:SetMaskTexture(pTexture) end
---@param Texture UTexture
function UCustomProgressBar:SetFillTexture(Texture) end
---@param TintColor FLinearColor
function UCustomProgressBar:SetFillColor(TintColor) end
function UCustomProgressBar:SetDynamicMaterials() end
---@param Texture UTexture2D
function UCustomProgressBar:SetBackgroundFillTexture(Texture) end
---@param TintColor FLinearColor
function UCustomProgressBar:SetBackgroundFillColor(TintColor) end
---@return float
function UCustomProgressBar:GetPercent() end
---@return UTexture
function UCustomProgressBar:GetFillTexture() end
---@param pTexture UTexture
---@param timeToBlend float
function UCustomProgressBar:BlendToFillTexture(pTexture, timeToBlend) end


---@class UCustomizableEffectsComponent : UBaseCustomizationComponent
---@field mpTransformationEffect UEvilTransformationDataAsset
---@field mpScreamEffect UEvilScreamDataAsset
---@field mpRageEffect UEvilRageDataAsset
---@field mpFeastEffect UEvilFeastDataAsset
UCustomizableEffectsComponent = {}



---@class UCustomizableImage : UImage
---@field mpMaterialParameterTransferConfigs TArray<UMaterialTransferConfig>
---@field mpTexture UTexture2D
---@field mpMaterial UMaterialInterface
---@field mScalarParameters TMap<FMaterialParameterInfoExt, float>
---@field mVectorParameters TMap<FMaterialParameterInfoExt, FLinearColor>
---@field mTextureParameters TMap<FMaterialParameterInfoExt, UTexture>
UCustomizableImage = {}



---@class UCustomizableText : UTextBlock
---@field mpMaterialParameterTransferConfigs TArray<UMaterialTransferConfig>
---@field mTextTintColor FLinearColor
---@field mOutlineTintColor FLinearColor
---@field mScalarParameters TMap<FMaterialParameterInfoExt, float>
---@field mVectorParameters TMap<FMaterialParameterInfoExt, FLinearColor>
---@field mTextureParameters TMap<FMaterialParameterInfoExt, UTexture>
UCustomizableText = {}



---@class UCustomizableUserWidget : UUserWidget
---@field mMaterialParameterTransferByValue TArray<FMaterialTransferByValue>
UCustomizableUserWidget = {}



---@class UCustomizationConfigBase : UDataAsset
---@field mTags FGameplayTagContainer
---@field mRequirements FGameplayTagRequirements
UCustomizationConfigBase = {}



---@class UCustomizationOverrideSettings : UDataAsset
---@field mCharacterOverrides TMap<ECharacterType, FLoadoutItemOverrideList>
UCustomizationOverrideSettings = {}



---@class UCustomizationSkeletalMesh : UCustomizationConfigBase
---@field mSkinSkeletalMesh FSkinSkeletalMesh
UCustomizationSkeletalMesh = {}



---@class UCustomizeCharacterWidget : UUserWidget
---@field HandlesCustomizeCharacterRotation boolean
---@field HandlesMainMenuCharacterRotation boolean
---@field HandlesMoviePreviewRotation boolean
---@field TargetLerpForward float
---@field LerpForwardSpeed float
---@field mbIsMouseDown boolean
---@field mClickedPosition FVector2D
---@field mCurrentPosition FVector2D
---@field mCursorDelta float
---@field mCurrentSpinVelocity float
---@field mCurrentWheelDelta float
---@field mCurrentAddedRotation float
---@field mTargetAddedRotation float
---@field mbLerpingForward boolean
UCustomizeCharacterWidget = {}



---@class UDEBUG_EORScreen : UBaseScreen
---@field mpWidgetSwitcher UWidgetSwitcher
---@field mpMovieSummaryWidget UEndOfRoundMovieSummaryWidget
---@field mpLevelUpWidget UEndOfRoundLevelUpWidget
---@field mpWeaponRewardsWidget UEndOfRoundWeaponRewardsWidget
---@field mpAccountMasteryWidget UEndOfRoundAccountMasteryWidget
---@field mpMatchSummaryWidget UEndOfRoundMatchSummaryWidget
---@field mpPlayerDetailsWidget UEndOfRoundPlayerDetailsWidget
---@field mScreenState EEndOfRoundState
---@field mFakeMatchSummaryInfoData FMatchSummaryInfoData
UDEBUG_EORScreen = {}

function UDEBUG_EORScreen:OnActivate() end
function UDEBUG_EORScreen:OnAction() end
---@param pWorldContextObject UObject
---@param itemIdString FString
---@return FDbItemId
function UDEBUG_EORScreen:GetDBItemIDFromText(pWorldContextObject, itemIdString) end


---@class UDamageIndicatorManager : UActorComponent
---@field mHUDDamageClass TSubclassOf<UUserWidget>
UDamageIndicatorManager = {}



---@class UDangerSenseTab : UBaseTab
---@field mpNavScrollBox UNavScrollBox
---@field mpDangerSenseTypeSelector UOptionSelectorUserButton
---@field mpDangerSenseSizeSlider UOptionSliderUserButton
---@field mpDangerSenseColorSelector UOptionSelectorUserButton
---@field mpReticlePreviewImage UImage
---@field mpBackgroundPreviewWidgetSwitcher UWidgetSwitcher
UDangerSenseTab = {}

---@param Type int32
function UDangerSenseTab:SetDangerSenseType(Type) end
---@param Size float
function UDangerSenseTab:SetDangerSenseSize(Size) end
---@param Color int32
function UDangerSenseTab:SetDangerSenseColor(Color) end
function UDangerSenseTab:OnDiscardChanges() end
function UDangerSenseTab:OnDangerSenseTypeChanged() end
---@param NewValue float
function UDangerSenseTab:OnDangerSenseSizeChanged(NewValue) end
function UDangerSenseTab:OnDangerSenseColorChanged() end
function UDangerSenseTab:OnBackgroundToggle() end
---@return boolean
function UDangerSenseTab:HasChanges() end
---@return int32
function UDangerSenseTab:GetDangerSenseType() end
---@return float
function UDangerSenseTab:GetDangerSenseSize() end
---@return int32
function UDangerSenseTab:GetDangerSenseColor() end


---@class UDarkShardManager : UActorComponent
---@field mbDarkShardsEnabled boolean
---@field mbEvilEnergySpawningEnabled boolean
---@field mTimeToSpawnShard float
---@field mActiveEvilEnergyNum int32
---@field mTimeToSpawnEvilEnergy float
---@field mpCurrentDarkShard ADarkShard
---@field mpDarkShard ADarkShard
---@field mShardGoodEffectTimeRemaining float
---@field mShardEvilEffectTimeRemaining float
---@field mShardGoodEffectTime float
---@field mShardEvilEffectTime float
---@field mDarkShardSpawners TArray<ADarkShardSpawner>
---@field mpLastChosenShardSpawner ADarkShardSpawner
---@field mpServerCurrentDarkShardScreamEffect AEvilScreamEffect
---@field mbServerDebugDarkShardEnabled boolean
---@field mbServerDebugEvilEnergyEnabled boolean
---@field mOnDarkShardSpawned FDarkShardManagerOnDarkShardSpawned
---@field mOnDarkShardDestroyed FDarkShardManagerOnDarkShardDestroyed
---@field mServerShardRampTime float
---@field mbNextShardEligibleForEmpowered boolean
UDarkShardManager = {}

function UDarkShardManager:OnRep_CurrentDarkShard() end
---@return FOnDarkShardSpawnedReturnValue
function UDarkShardManager:OnDarkShardSpawned() end
---@return FOnDarkShardDestroyedReturnValue
function UDarkShardManager:OnDarkShardDestroyed() end
function UDarkShardManager:MulticastAllOnDarkShardSpawned() end
function UDarkShardManager:MulticastAllOnDarkShardDestroyed() end
---@return boolean
function UDarkShardManager:IsShardGoodEffectActive() end
---@return boolean
function UDarkShardManager:IsShardEvilEffectActive() end
---@return boolean
function UDarkShardManager:IsEvilEnergySpawningEnabled() end
---@return float
function UDarkShardManager:GetTimeToSpawnShard() end
---@return float
function UDarkShardManager:GetShardGoodEffectTimeRemaining() end
---@return float
function UDarkShardManager:GetShardGoodEffectTime() end
---@return float
function UDarkShardManager:GetShardEvilEffectTimeRemaining() end
---@return float
function UDarkShardManager:GetShardEvilEffectTime() end
---@return AGameplayGS
function UDarkShardManager:GetOwnerGameplayGS() end
---@param pWorld UWorld
---@return UDarkShardManager
function UDarkShardManager:GetInstance(pWorld) end
---@return int32
function UDarkShardManager:GetEvilEnergyNum() end
---@return float
function UDarkShardManager:GetDarkShardMaxLifetime() end
---@return float
function UDarkShardManager:GetDarkShardInterval() end
---@return float
function UDarkShardManager:GetDarkShardEvilEffectTimeMultiplier() end
---@return float
function UDarkShardManager:GetDarkShardDelayMultiplier() end
---@return ADarkShard
function UDarkShardManager:GetCurrentDarkShard() end
---@param DeltaSeconds float
function UDarkShardManager:DoServerUpdateEvilEnergySpawns(DeltaSeconds) end
---@param DeltaSeconds float
function UDarkShardManager:DoServerUpdateDarkShardSpawns(DeltaSeconds) end
---@param DeltaSeconds float
function UDarkShardManager:DoServerUpdateDarkShards(DeltaSeconds) end
function UDarkShardManager:DoServerToggleDebugDarkShard() end
function UDarkShardManager:DoServerSpawnNewShard() end
function UDarkShardManager:DoServerSpawnEvilEnergy() end
---@param Time float
function UDarkShardManager:DoServerSetTimeToSpawnShard(Time) end
---@param Time float
function UDarkShardManager:DoServerSetShardRampTime(Time) end
---@param Time float
function UDarkShardManager:DoServerSetShardGoodEffectTimeRemaining(Time) end
---@param Time float
function UDarkShardManager:DoServerSetShardGoodEffectTime(Time) end
---@param Time float
function UDarkShardManager:DoServerSetShardEvilEffectTimeRemaining(Time) end
---@param Time float
function UDarkShardManager:DoServerSetShardEvilEffectTime(Time) end
---@param bSet boolean
function UDarkShardManager:DoServerSetNextShardEligibleForEmpowered(bSet) end
---@param bSet boolean
function UDarkShardManager:DoServerSetEvilEnergySpawningEnabled(bSet) end
---@param bEnabled boolean
---@param bDestroySpawnedOrbs boolean
function UDarkShardManager:DoServerSetDebugEvilEnergy(bEnabled, bDestroySpawnedOrbs) end
---@param bSet boolean
function UDarkShardManager:DoServerSetDarkShardsEnabled(bSet) end
function UDarkShardManager:DoServerSetDarkShardScreamInert() end
---@param pEffect AEvilScreamEffect
function UDarkShardManager:DoServerSetCurrentDarkShardScreamEffect(pEffect) end
---@param pDarkShard ADarkShard
function UDarkShardManager:DoServerSetCurrentDarkShard(pDarkShard) end
---@param Num int32
function UDarkShardManager:DoServerSetActiveEvilEnergyNum(Num) end
function UDarkShardManager:DoServerResetShardSpawn() end
function UDarkShardManager:DoServerResetEvilEnergySpawning() end
function UDarkShardManager:DoServerOnShardActivated() end
function UDarkShardManager:DoServerOnEvilEnergyDestroyed() end
---@return boolean
function UDarkShardManager:DoServerIsNextShardEligibleForEmpowered() end
---@return boolean
function UDarkShardManager:DoServerIsDebugDarkShardEnabled() end
---@return float
function UDarkShardManager:DoServerGetShardRampTime() end
function UDarkShardManager:DoServerDelayShardSpawn() end
---@return boolean
function UDarkShardManager:AreDarkShardsEnabled() end


---@class UDarkShardProgressBar : UBaseActionProgressBar
---@field mpCaptureProgressPanel UCanvasPanel
---@field mpCaptureProgressImage UImage
---@field mpCircularProgressMaterialInstance UMaterialInstance
UDarkShardProgressBar = {}



---@class UDbItemDatabase : UObject
---@field mItemsByDbItemId TMap<FDbItemId, UDbItemTemplate>
UDbItemDatabase = {}



---@class UDbItemTemplate : UObject
UDbItemTemplate = {}


---@class UDebugScreen : UBaseScreen
---@field mpLeftCategoryButton UNavButton
---@field mpRightCategoryButton UNavButton
---@field mpCategoryText UTextBlock
---@field mpWeaponBoxText UTextBlock
---@field mpTeenBox UVerticalBox
---@field mpWeaponBox UVerticalBox
---@field mpEvilBox UVerticalBox
---@field mpClothingBox UVerticalBox
---@field mpEvilSkinBox UVerticalBox
---@field mpEvilEffectBox UVerticalBox
---@field mpWeaponSkinBox UVerticalBox
---@field mpEmoteBox UVerticalBox
---@field mpStickerBox UVerticalBox
---@field mpSpectralBox UVerticalBox
---@field mpMiscBox UVerticalBox
---@field mpAIBox UVerticalBox
---@field mpTeenButtons TArray<UNavButton>
---@field mpEvilButtons TArray<UNavButton>
---@field mpWeaponButtons TArray<UNavButton>
---@field mpMeshSlotComboBoxes TMap<EMeshSlot, UComboBoxString>
---@field mWeaponTypeComboBoxes TMap<EWeaponTypeEnum, UComboBoxString>
---@field mEvilEffectComboBoxes TMap<uint32, UComboBoxString>
---@field mEmoteComboBoxes TArray<UComboBoxString>
---@field mStickerComboBoxes TArray<UComboBoxString>
---@field mpEvilSpectralComboBox UComboBoxString
---@field mpTeenSpectralComboBox UComboBoxString
---@field mpEvilSkinComboBox UComboBoxString
---@field mpAICharacterTypeComboBox UComboBoxString
---@field mpSelectableAIComboBox UComboBoxString
---@field mpPossessAIButton UNavButton
---@field mpSummonAIButton UNavButton
---@field mpKillAIButton UNavButton
---@field mpSpawnAIButton UNavButton
---@field mpAIActionRepeatDelaySpinBox USpinBox
---@field mpAIActionRepeatCheckBox UCheckBox
---@field mEvilAccessoryComboBoxes TMap<EAccessorySlot, UComboBoxString>
---@field mStoredPaths TMap<FName, FSoftObjectPath>
---@field mpApplyClothingButton UNavButton
---@field mpRandomClothingButton UNavButton
---@field mpRandomClothingCycleCheckBox UCheckBox
---@field mpApplyEvilSkinButton UNavButton
---@field mpApplyEvilEffectsButton UNavButton
---@field mpApplyWeaponSkinButton UNavButton
---@field mpApplyEmotesButton UNavButton
---@field mpApplyStickersButton UNavButton
---@field mpApplySpectralsButton UNavButton
---@field mpInjuryButton UNavButton
---@field mpProneButton UNavButton
---@field mpCoweringButton UNavButton
---@field mpDeathButton UNavButton
---@field mpEvilDeathButton UNavButton
---@field mpIncorporealButton UNavButton
---@field mpScreamButton UNavButton
---@field mpStunButton UNavButton
---@field mpFlinchButton UNavButton
---@field mpResetCooldownsButton UNavButton
---@field mpForceCooldownsButton UNavButton
---@field mpEvilCameraButton UNavButton
---@field mpToggleFPS UNavButton
---@field mpToggleCharVis UNavButton
---@field mpToggleFrozen UNavButton
---@field mpDisintegrate UNavButton
---@field mpDebugDarkShard UNavButton
---@field mpTritonDebug UNavButton
---@field mpMotionSentinelDebug UNavButton
---@field mpAddRage UNavButton
---@field mpRemoveRage UNavButton
---@field mpElectrocute UNavButton
---@field mpSubdued UNavButton
---@field mpStaggered UNavButton
---@field mpPlayTVIntro UNavButton
---@field mpButtonMarred UButton
---@field mpButtonInhibited UButton
---@field mpButtonAddTeenOnHitNum UButton
---@field mpButtonInvincible UButton
---@field mSpawnedAIs TArray<ATPChar>
UDebugScreen = {}

function UDebugScreen:UpdateCategory() end
function UDebugScreen:OnRandomizeClothing() end
---@param pPressedButton UNavButton
function UDebugScreen:OnPressedWeapon(pPressedButton) end
function UDebugScreen:OnPressedTritonDebug() end
function UDebugScreen:OnPressedToggleSubdued() end
function UDebugScreen:OnPressedToggleStaggered() end
function UDebugScreen:OnPressedToggleInvincible() end
function UDebugScreen:OnPressedToggleFrozen() end
function UDebugScreen:OnPressedToggleFPS() end
function UDebugScreen:OnPressedToggleCharVis() end
---@param pPressedButton UNavButton
function UDebugScreen:OnPressedTeen(pPressedButton) end
function UDebugScreen:OnPressedSummonAI() end
function UDebugScreen:OnPressedStun() end
function UDebugScreen:OnPressedSpawnAI() end
function UDebugScreen:OnPressedScream() end
function UDebugScreen:OnPressedResetCooldowns() end
function UDebugScreen:OnPressedRemoveRage() end
function UDebugScreen:OnPressedProne() end
function UDebugScreen:OnPressedPossessAI() end
function UDebugScreen:OnPressedPlayTVIntro() end
function UDebugScreen:OnPressedMarred() end
function UDebugScreen:OnPressedKillAI() end
function UDebugScreen:OnPressedInjury() end
function UDebugScreen:OnPressedInhibited() end
function UDebugScreen:OnPressedIncorporeal() end
function UDebugScreen:OnPressedForceCooldowns() end
function UDebugScreen:OnPressedFlinch() end
function UDebugScreen:OnPressedEvilCamera() end
---@param pPressedButton UNavButton
function UDebugScreen:OnPressedEvil(pPressedButton) end
function UDebugScreen:OnPressedElectrocute() end
function UDebugScreen:OnPressedDisintegrate() end
function UDebugScreen:OnPressedDebugDarkShard() end
function UDebugScreen:OnPressedDeath() end
function UDebugScreen:OnPressedCowering() end
function UDebugScreen:OnPressedAddTeenOnHitNum() end
function UDebugScreen:OnPressedAddRage() end
function UDebugScreen:OnMotionSentinelDebug() end
function UDebugScreen:OnCategoryRight() end
function UDebugScreen:OnCategoryLeft() end
function UDebugScreen:OnApplyWeaponSkin() end
function UDebugScreen:OnApplyStickers() end
function UDebugScreen:OnApplySpectrals() end
function UDebugScreen:OnApplyEvilSkin() end
function UDebugScreen:OnApplyEvilEffects() end
function UDebugScreen:OnApplyEmotes() end
function UDebugScreen:OnApplyClothing() end


---@class UDebugSocialPartyInvite : UUserWidget
---@field mpPlayerPUID UEditableTextBox
---@field mpPlayerToInviteETextBox UEditableTextBox
---@field mpSendInviteButton UButton
UDebugSocialPartyInvite = {}

function UDebugSocialPartyInvite:OnInvitePressed() end


---@class UDebugVoiceChatChannelItem : UDebugVoiceChatItemBase
---@field mpButton UTextUserButton
UDebugVoiceChatChannelItem = {}

function UDebugVoiceChatChannelItem:OnSelected() end


---@class UDebugVoiceChatItemBase : UUserWidget
---@field mpTextBlock UTextBlock
UDebugVoiceChatItemBase = {}

---@param Text FText
function UDebugVoiceChatItemBase:SetText(Text) end
---@param pOwningScreen UDebugVoiceChatWidget
function UDebugVoiceChatItemBase:SetOwningScreen(pOwningScreen) end
---@return FText
function UDebugVoiceChatItemBase:GetText() end
---@return UDebugVoiceChatWidget
function UDebugVoiceChatItemBase:GetOwningScreen() end


---@class UDebugVoiceChatWidget : UUserWidget
---@field mpVoiceChannelClass UClass
---@field mpVoiceChannelParticipantClass UClass
---@field mpPartyParticipantClass UClass
---@field mpLobbyParticipantClass UClass
---@field mpVoiceChannels UVerticalBox
---@field mpVCParticipants UVerticalBox
---@field mpPartyParticipants UVerticalBox
---@field mpLobbyParticipants UVerticalBox
---@field mpTransmitChannelID UTextBlock
---@field mpPartyVoiceChatID UTextBlock
---@field mpLobbyVoiceChatID UTextBlock
---@field mpRefreshButton UButton
---@field mpPlayerName UTextBlock
UDebugVoiceChatWidget = {}

function UDebugVoiceChatWidget:UpdateSelected() end
function UDebugVoiceChatWidget:Toggle() end
---@param selectedChannelName FString
function UDebugVoiceChatWidget:SetSelectedChannel(selectedChannelName) end
function UDebugVoiceChatWidget:RefreshWidget() end
function UDebugVoiceChatWidget:PopulateVoiceChatParticipants() end
function UDebugVoiceChatWidget:PopulateVoiceChannels() end
function UDebugVoiceChatWidget:PopulatePlayerInfo() end
function UDebugVoiceChatWidget:PopulatePartyParticipants() end
function UDebugVoiceChatWidget:PopulateLobbyParticipants() end
function UDebugVoiceChatWidget:PopulateChannelIDs() end
function UDebugVoiceChatWidget:ClearAll() end


---@class UDecalManager : USceneComponent
---@field mDecalInfoArray TArray<ADecalActor>
---@field mpPreviousSurfaceInteractionData USurfaceInteractionData
---@field mpCurrentSurfaceInteractionData USurfaceInteractionData
---@field mTimeSinceLeavingLastSurface float
---@field mFeetTrailDecalMaterials TArray<UMaterialInstance>
---@field mHandTrailDecalMaterials TArray<UMaterialInstance>
---@field mpPoolDecalMaterial UMaterialInstance
UDecalManager = {}

---@param LifeTime float
---@param DecalSize float
function UDecalManager:MulticastAllCreateBloodDecal(LifeTime, DecalSize) end
---@param decalType ECharacterDecalType
---@return ADecalActor
function UDecalManager:CreateSurfaceDecal(decalType) end


---@class UDelegateInfo : UObject
UDelegateInfo = {}


---@class UDemonSwordSkinDataAsset : UTeenWeaponSkinDataAsset
---@field mSwipeParticles FSkinParticleSystem
---@field mTrailParticles FSkinParticleSystem
---@field mExplosionParticles FSkinParticleSystem
---@field mTrailDecal FSkinDecal
---@field mTrailMesh FSkinStaticMesh
---@field mWiseDemonSwordSwitch EWise_WEP_DemonSword
UDemonSwordSkinDataAsset = {}



---@class UDeployNoisemakerProgressBar : UBaseActionProgressBar
UDeployNoisemakerProgressBar = {}


---@class UDesignableUserWidget : UUserWidget
UDesignableUserWidget = {}

function UDesignableUserWidget:OnSynchronizeProperties() end


---@class UDev_SocialOnlinePlayersWidget : UMetaWidget
---@field mpOnlinePlayersBox UVerticalBox
UDev_SocialOnlinePlayersWidget = {}



---@class UDev_SocialPlayerWidget : UMetaWidget
---@field mpButton UButton
---@field mpPortraitWidget USocialPortraitWidget
---@field mpPlayerNameText UTextBlock
---@field mpStatusWidget USocialStatusWidget
UDev_SocialPlayerWidget = {}

function UDev_SocialPlayerWidget:OnSpectatePressed() end
function UDev_SocialPlayerWidget:OnReportPressed() end
function UDev_SocialPlayerWidget:OnPartyPressed() end
function UDev_SocialPlayerWidget:OnButtonPressed() end


---@class UDisarmDollTrapProgressBar : UBaseActionProgressBar
UDisarmDollTrapProgressBar = {}


---@class UDiscardWeaponProgressBar : UBaseActionProgressBar
UDiscardWeaponProgressBar = {}


---@class UDiscordManager : UObject
UDiscordManager = {}


---@class UDollMasterAccessoryDataAsset : UEvilAccessoryDataAsset
---@field mDollMinionThirdPersonMesh FSkinSkeletalMesh
---@field mDollMinionFirstPersonMesh FSkinSkeletalMesh
UDollMasterAccessoryDataAsset = {}



---@class UDollMasterEmoteDataAsset : UEmoteDataAsset
---@field mDollEmoteData FEmoteData
UDollMasterEmoteDataAsset = {}



---@class UDollMasterSkinDataAsset : UEvilSkinDataAsset
---@field mDollMinionThirdPersonMesh FSkinSkeletalMesh
---@field mDollMinionFirstPersonMesh FSkinSkeletalMesh
---@field mChannelingParticleSystem FSkinParticleSystem
UDollMasterSkinDataAsset = {}



---@class UDollMinionAnimInstance : UEvilCharAnimInstance
---@field mDollAnimInstanceData FDollAnimInstanceData
UDollMinionAnimInstance = {}



---@class UDollmasterAnimInstance : UEvilCharAnimInstance
---@field mDlmrAnimInstanceData FDlmrAnimInstanceData
UDollmasterAnimInstance = {}

---@param Notify UAnimNotify
function UDollmasterAnimInstance:AnimNotify_PlaceTrap(Notify) end
---@param Notify UAnimNotify
function UDollmasterAnimInstance:AnimNotify_ChannelingStart(Notify) end
---@param Notify UAnimNotify
function UDollmasterAnimInstance:AnimNotify_ChannelingEnd(Notify) end


---@class UDropdownUserButton : UBaseUserButton
---@field Text FText
---@field Justification ETextJustify::Type
---@field mpTextBlock UTextBlock
UDropdownUserButton = {}



---@class UEORCharacterSwitcherPlayerWidget : UUserWidget
---@field mpCharacterImage UImage
---@field mpStateSwitcher UStateSwitcher
---@field mpFactionSwitcher UWidgetSwitcher
---@field mpFactionBorderSwitcher UWidgetSwitcher
UEORCharacterSwitcherPlayerWidget = {}



---@class UEORCharacterSwitcherWidget : UUserWidget
---@field mCharacterPlayerWidgets TArray<UEORCharacterSwitcherPlayerWidget>
---@field mpLeftCategoryButton UButton
---@field mpRightCategoryButton UButton
UEORCharacterSwitcherWidget = {}

---@param bPressed boolean
function UEORCharacterSwitcherWidget:OnInputAction_ChangeCharacterRight(bPressed) end
---@param bPressed boolean
function UEORCharacterSwitcherWidget:OnInputAction_ChangeCharacterLeft(bPressed) end
function UEORCharacterSwitcherWidget:ChangeCharacterRight() end
function UEORCharacterSwitcherWidget:ChangeCharacterLeft() end


---@class UEORMovieRewardCard : UBaseRewardWidget
---@field mpRewardImage UImage
UEORMovieRewardCard = {}



---@class UEORMutationPowerWidget : UUserWidget
---@field mpMutationName UTextBlock
---@field mpAbilityName UTextBlock
---@field mpMutationIcon UImage
---@field mpStateSwitcher UStateSwitcher
---@field mpDefaultMutationIcon UImage
UEORMutationPowerWidget = {}

function UEORMutationPowerWidget:SetEquipped() end
function UEORMutationPowerWidget:SetEmpty() end
---@param pTex UTexture2D
function UEORMutationPowerWidget:OnTextureLoaded(pTex) end
---@param MyGeometry FGeometry
---@param InDeltaTime float
function UEORMutationPowerWidget:NativeTick(MyGeometry, InDeltaTime) end
function UEORMutationPowerWidget:NativeConstruct() end


---@class UEORPerkLoadoutWidget : UUserWidget
---@field mpPerkName UTextBlock
---@field mpPerkAffinityType UTextBlock
---@field mpPerkIcon UImage
---@field mpStateSwitcher UStateSwitcher
---@field mpTierWidget UPerkTierWidget
UEORPerkLoadoutWidget = {}

---@param pTex UTexture2D
function UEORPerkLoadoutWidget:OnTextureLoaded(pTex) end


---@class UEORPrizeLoadoutWidget : UUserWidget
---@field mpPrizeName UTextBlock
---@field mpPrizeRarity UTextBlock
---@field mpPrizeIcon UImage
---@field mpStateSwitcher UStateSwitcher
UEORPrizeLoadoutWidget = {}

---@param pTex UTexture2D
function UEORPrizeLoadoutWidget:OnTextureLoaded(pTex) end


---@class UEORRewardProgressWidget : UUserWidget
---@field mpCustomProgressBar UCustomProgressBar
UEORRewardProgressWidget = {}



---@class UEORSceneTitleWidget : UUserWidget
---@field mpFadeIn UWidgetAnimation
---@field mpFadeOut UWidgetAnimation
---@field mpFadeOutAndDestroy UWidgetAnimation
---@field mpSceneTitle UTextBlock
---@field mpSceneCompletedImage UImage
---@field mpContainerBox UHorizontalBox
---@field mpOwnerOverlayWidget UMovieRewardsOverlayWidget
UEORSceneTitleWidget = {}

---@param SceneState FSceneState
function UEORSceneTitleWidget:SetSceneData(SceneState) end
---@param Val UMovieRewardsOverlayWidget
function UEORSceneTitleWidget:SetOwnerOverlayWidget(Val) end
---@param Val boolean
function UEORSceneTitleWidget:SetLastMovieScene(Val) end
function UEORSceneTitleWidget:PushSceneTitleWidgetDown() end
function UEORSceneTitleWidget:OnSceneTitleOutFinishedAndDestroy() end
function UEORSceneTitleWidget:OnSceneTitleOutFinished() end
function UEORSceneTitleWidget:OnSceneTitleInFinished() end
---@return boolean
function UEORSceneTitleWidget:IsLastMovieScene() end
---@return UMovieRewardsOverlayWidget
function UEORSceneTitleWidget:GetOwnerOverlayWidget() end
function UEORSceneTitleWidget:AnimateSceneIn() end
function UEORSceneTitleWidget:AnimateSceneAway() end
function UEORSceneTitleWidget:AnimateAwayAndDestroy() end


---@class UEORScoreCategoryWidget : UUserWidget
---@field mpCategoryText UTextBlock
---@field mpCategoryScore UTextBlock
---@field mpCategoryBonusScore UTextBlock
---@field mpStateSwitcher UStateSwitcher
UEORScoreCategoryWidget = {}



---@class UEORWeaponPowerWidget : UUserWidget
---@field mpWeaponPowerName UTextBlock
---@field mpWeaponName UTextBlock
---@field mpEmptyWeaponName UTextBlock
---@field mpWeaponPowerImage UImage
---@field mpStateSwitcher UStateSwitcher
UEORWeaponPowerWidget = {}

---@param pTex UTexture2D
function UEORWeaponPowerWidget:OnTextureLoaded(pTex) end


---@class UEQG_CirclePathingGrid : UEnvQueryGenerator_PathingGrid
UEQG_CirclePathingGrid = {}


---@class UEffigyAnimInstance : UAnimInstance
---@field mpEffigyAnimation UAnimSequence
---@field mpEffigyCreatedAnimation UAnimSequence
UEffigyAnimInstance = {}

---@return boolean
function UEffigyAnimInstance:IsBeingUsed() end
---@return boolean
function UEffigyAnimInstance:IsBeingCreated() end
---@return UAnimSequence
function UEffigyAnimInstance:GetEffigyCreatedAnimFromOwner() end
---@return UAnimSequence
function UEffigyAnimInstance:GetEffigyAnimFromOwner() end


---@class UEffigySkinDataAsset : UItemDataAsset
---@field mSkeletalMesh FSkinSkeletalMesh
---@field mpHUDIconTexture UTexture2D
UEffigySkinDataAsset = {}



---@class UEmoteComponent : UBaseCustomizationComponent
---@field mEmotes TMap<uint32, UEmoteDataAsset>
UEmoteComponent = {}



---@class UEmoteDataAsset : UItemDataAsset
---@field mEmoteData FEmoteData
UEmoteDataAsset = {}

---@return boolean
function UEmoteDataAsset:IsEvilEmote() end


---@class UEndOfRoundAccountMasteryWidget : UEndOfRoundBaseWidget
---@field mpRewardsOverlayWidget UAccountRewardsOverlayWidget
UEndOfRoundAccountMasteryWidget = {}

---@param playerInfoData FPlayerMatchInfoData
function UEndOfRoundAccountMasteryWidget:OnActivate(playerInfoData) end


---@class UEndOfRoundBaseWidget : UUserWidget
---@field mpProgressSliderWidget UEndOfRoundProgressSliderWidget
---@field mMatchSummaryInfoData FMatchSummaryInfoData
UEndOfRoundBaseWidget = {}

---@param DeltaTime float
function UEndOfRoundBaseWidget:UpdateAutoSkip(DeltaTime) end
function UEndOfRoundBaseWidget:Skip() end
---@param Val FMatchSummaryInfoData
function UEndOfRoundBaseWidget:SetMatchSummaryInfoData(Val) end
---@param Val boolean
function UEndOfRoundBaseWidget:SetLoaded(Val) end
---@param MyGeometry FGeometry
---@param InDeltaTime float
function UEndOfRoundBaseWidget:NativeTick(MyGeometry, InDeltaTime) end
function UEndOfRoundBaseWidget:NativeConstruct() end
---@return boolean
function UEndOfRoundBaseWidget:IsLoaded() end
---@return boolean
function UEndOfRoundBaseWidget:IsFinished() end
function UEndOfRoundBaseWidget:InitializeScreen() end
---@return FMatchSummaryInfoData
function UEndOfRoundBaseWidget:GetMatchSummaryInfoData() end
---@return float
function UEndOfRoundBaseWidget:GetAutoSkipTime() end
function UEndOfRoundBaseWidget:FinishScreen() end


---@class UEndOfRoundDailyRetentionWidget : UEndOfRoundBaseWidget
UEndOfRoundDailyRetentionWidget = {}


---@class UEndOfRoundIssueStarWidget : UUserWidget
---@field mpFlipbook UFlipbookAnimator
UEndOfRoundIssueStarWidget = {}



---@class UEndOfRoundIssueSummaryWidget : UEndOfRoundBaseWidget
---@field mpIssueIdentifierText UTextBlock
---@field mpTierNumText UTextBlock
---@field mpStarsBox UHorizontalBox
---@field mpXpUntilText UTextBlock
---@field mpRewardText UTextBlock
---@field mpRewardsBox UHorizontalBox
---@field RankUpAnim UWidgetAnimation
UEndOfRoundIssueSummaryWidget = {}

function UEndOfRoundIssueSummaryWidget:OnStarAnimFinished() end
---@param PlayerMatchInfoData FPlayerMatchInfoData
function UEndOfRoundIssueSummaryWidget:OnActivate(PlayerMatchInfoData) end


---@class UEndOfRoundLevelUpWidget : UEndOfRoundBaseWidget
---@field mpLevelNumText UTextBlock
---@field mpLevelProgressBar UProgressBar
---@field mpXPAmountText UTextBlock
---@field mpXPText UTextBlock
---@field mpPrizeBonusXpText UTextBlock
---@field mpBountyBonusXpText UTextBlock
---@field mpCurrentXPText UTextBlock
---@field mpMaxXPText UTextBlock
---@field mpGainedAuraText UTextBlock
---@field mpCharacterPortrait UImage
---@field mpFactionBorderSwitcher UWidgetSwitcher
---@field mpCurrentLevelText UTextBlock
---@field mpNextLevelText UTextBlock
---@field mpUnlockedPrizeNum UTextBlock
---@field mpNextPrizePackUnlockLimit UTextBlock
---@field mpPrizeIcon UImage
---@field mpPrizeUnlockedPanel UCanvasPanel
---@field mpXPPanel UCanvasPanel
---@field mpMaxLevelReachedBox UCanvasPanel
---@field mpFluxAmountBigText UTextBlock
---@field mpTotalFluxEarnedText UTextBlock
---@field mpBountyFluxText UTextBlock
---@field mpBountyFluxBox UHorizontalBox
---@field mpXPGainIntroAnim UWidgetAnimation
---@field mpLevelUpAnim UWidgetAnimation
---@field mpPrizeUnlockedAnim UWidgetAnimation
---@field mpAuraGainedAnim UWidgetAnimation
---@field mpFirstPrizeUnlockedAnim UWidgetAnimation
---@field mpFirstLevelUpAnim UWidgetAnimation
---@field mpShowTotalFluxEarned UWidgetAnimation
---@field mpShowBonusTotalAnim UWidgetAnimation
---@field mpShowBountyTotalAnim UWidgetAnimation
---@field mpMaxLevelReachedAnim UWidgetAnimation
---@field mTimeToFinishProgression float
---@field mTimeToShowBonusXP float
---@field mPauseTimeBetweenXPAnimations float
UEndOfRoundLevelUpWidget = {}

---@param levelNumber int32
function UEndOfRoundLevelUpWidget:UpdateLevelText(levelNumber) end
---@param PlayerMatchInfoData FPlayerMatchInfoData
function UEndOfRoundLevelUpWidget:SetLevelupData(PlayerMatchInfoData) end
function UEndOfRoundLevelUpWidget:OnXPGainIntroAnimFinished() end
function UEndOfRoundLevelUpWidget:OnMaxLevelReachedAnimFinished() end
function UEndOfRoundLevelUpWidget:OnLevelupAnimFinished() end
function UEndOfRoundLevelUpWidget:OnBountyXPAnimFinished() end
function UEndOfRoundLevelUpWidget:OnBonusXPAnimFinished() end
---@param PlayerMatchInfoData FPlayerMatchInfoData
function UEndOfRoundLevelUpWidget:OnActivate(PlayerMatchInfoData) end


---@class UEndOfRoundMatchSummaryWidget : UEndOfRoundBaseWidget
---@field mpFinishButtonWidget UButton
---@field mpMatchStateSummaryWidget UMatchStateSummaryWidget
---@field mpMatchIdTextBox UMatchIdTextBox
UEndOfRoundMatchSummaryWidget = {}

function UEndOfRoundMatchSummaryWidget:OnClickedFinish() end
---@return boolean
function UEndOfRoundMatchSummaryWidget:IsMatchSummaryInfoValid() end


---@class UEndOfRoundMovieSummaryWidget : UEndOfRoundBaseWidget
---@field mpMovieRewardsWidget UMovieRewardsOverlayWidget
UEndOfRoundMovieSummaryWidget = {}

---@param newlyCompletedScenesList TArray<FSceneState>
function UEndOfRoundMovieSummaryWidget:SetNewlyCompletedScenesList(newlyCompletedScenesList) end
---@param completedScenesKeysData TArray<FString>
function UEndOfRoundMovieSummaryWidget:PopulateMovieRewardsData(completedScenesKeysData) end
function UEndOfRoundMovieSummaryWidget:OnActivate() end


---@class UEndOfRoundPlayerDetailsWidget : UUserWidget
---@field mpPlayerInfoWidget UEndOfRoundPlayerInfoWidget
---@field mpCharacterSwitcherWidget UEORCharacterSwitcherWidget
---@field mpPerkLoadoutWidgets TArray<UEORPerkLoadoutWidget>
---@field mpWeaponPowerWidgets TArray<UEORWeaponPowerWidget>
---@field mpScoreCategoryWidgets TArray<UEORScoreCategoryWidget>
---@field mpMutationPowerWidgets TArray<UEORMutationPowerWidget>
---@field mpPrizeLoadoutWidget UEORPrizeLoadoutWidget
---@field mpEquippedItemsSwitcher UWidgetSwitcher
UEndOfRoundPlayerDetailsWidget = {}

---@param playerDataToShow FPlayerMatchInfoData
function UEndOfRoundPlayerDetailsWidget:UpdateScoreCategories(playerDataToShow) end
function UEndOfRoundPlayerDetailsWidget:UpdateCurrentPlayerDetailsToShow() end
function UEndOfRoundPlayerDetailsWidget:UpdateCharacterSwitcherWidgetVisibility() end
---@param matchSummaryInfo FMatchSummaryInfoData
---@param playerDataToShow FPlayerMatchInfoData
function UEndOfRoundPlayerDetailsWidget:RefreshPlayerData(matchSummaryInfo, playerDataToShow) end
---@param playerDataToShow FPlayerMatchInfoData
function UEndOfRoundPlayerDetailsWidget:PopulateWidgetsWithPlayerDetails(playerDataToShow) end
---@param pTrackedChar ATPChar
function UEndOfRoundPlayerDetailsWidget:PopulateInGamePlayerDetails(pTrackedChar) end
---@param MyGeometry FGeometry
---@param InDeltaTime float
function UEndOfRoundPlayerDetailsWidget:NativeTick(MyGeometry, InDeltaTime) end
function UEndOfRoundPlayerDetailsWidget:NativeConstruct() end
---@param MatchSummaryInfoData FMatchSummaryInfoData
---@param playerDataToShow FPlayerMatchInfoData
function UEndOfRoundPlayerDetailsWidget:InitializeScreen(MatchSummaryInfoData, playerDataToShow) end
---@param weaponType EWeaponTypeEnum
---@return int32
function UEndOfRoundPlayerDetailsWidget:GetWidgetIndexFromWeaponType(weaponType) end


---@class UEndOfRoundPlayerInfoWidget : UUserWidget
---@field mEvilTextColor FLinearColor
---@field mTeenTextColor FLinearColor
---@field DefaultAccountIcon UTexture2D
---@field mpCharPortraitImage UImage
---@field mpShockIcon UImage
---@field mpHolyIcon UImage
---@field mpBurnIcon UImage
---@field mpOccultIcon UImage
---@field mpCharacterType UTextBlock
---@field mpPlayerName UTextBlock
---@field mpPlayerLevel UTextBlock
---@field mpFinalScore UTextBlock
---@field mpFinalBonusScore UTextBlock
---@field mpPlayerStatus UTextBlock
---@field mpPlayerHealthBar UCustomProgressBar
---@field mpStigmaHitsBox UHorizontalBox
---@field mpTotalEvilHits UTextBlock
---@field mpHitsPerTeen UTextBlock
---@field mpPingSizeBox USizeBox
---@field mpPingText UTextBlock
---@field mpCharacterStateBox UVerticalBox
---@field mpBorderImageSwitcher UWidgetSwitcher
---@field mpHealthBarSizeBox USizeBox
---@field mpPortraitPanel UCanvasPanel
---@field mpPortraitIcon UImage
---@field mpMasteryBorder UImage
UEndOfRoundPlayerInfoWidget = {}

---@param mDamageTypesHit TArray<EDamageType>
function UEndOfRoundPlayerInfoWidget:UpdateStigmaIcons(mDamageTypesHit) end
function UEndOfRoundPlayerInfoWidget:UpdatePortraitAndLevelVisibility() end
---@param PlayerMatchInfoData FPlayerMatchInfoData
---@param CharType ECharacterType
function UEndOfRoundPlayerInfoWidget:UpdateCharacterTypeProperties(PlayerMatchInfoData, CharType) end
---@param pTex UTexture2D
function UEndOfRoundPlayerInfoWidget:OnPortraitTextureLoaded(pTex) end
---@param MyGeometry FGeometry
---@param InDeltaTime float
function UEndOfRoundPlayerInfoWidget:NativeTick(MyGeometry, InDeltaTime) end
function UEndOfRoundPlayerInfoWidget:NativeConstruct() end
---@return boolean
function UEndOfRoundPlayerInfoWidget:IsInGameScreen() end
---@param MatchSummaryInfoData FPlayerMatchInfoData
function UEndOfRoundPlayerInfoWidget:InitializeScreen(MatchSummaryInfoData) end


---@class UEndOfRoundPrizeRewardsWidget : UEndOfRoundBaseWidget
---@field mpPrizeSummaryWidget UPrizeSummaryWidget
UEndOfRoundPrizeRewardsWidget = {}



---@class UEndOfRoundProgressSliderWidget : UUserWidget
---@field mpProgressBar UProgressBar
UEndOfRoundProgressSliderWidget = {}

---@param progressAlpha float
function UEndOfRoundProgressSliderWidget:SetProgress(progressAlpha) end
function UEndOfRoundProgressSliderWidget:NativeConstruct() end


---@class UEndOfRoundRewardPaginationWidget : UUserWidget
---@field mpCircleImage UImage
UEndOfRoundRewardPaginationWidget = {}



---@class UEndOfRoundRewardsWidget : UUserWidget
---@field mpItemImage UImage
---@field mpItemNameText UTextBlock
---@field mpPaginationBox UHorizontalBox
UEndOfRoundRewardsWidget = {}

---@param Index int32
function UEndOfRoundRewardsWidget:PresentReward(Index) end


---@class UEndOfRoundSceneSummaryWidget : UUserWidget
---@field mpSceneImage UImage
---@field mpSceneTitleText UTextBlock
---@field mpTaskListBox UVerticalBox
UEndOfRoundSceneSummaryWidget = {}



---@class UEndOfRoundScreen : UBaseScreen
---@field mpWidgetSwitcher UWidgetSwitcher
---@field mpMovieSummaryWidget UEndOfRoundMovieSummaryWidget
---@field mpLevelUpWidget UEndOfRoundLevelUpWidget
---@field mpIssueSummaryWidget UEndOfRoundIssueSummaryWidget
---@field mpWeaponRewardsWidget UEndOfRoundWeaponRewardsWidget
---@field mpAccountMasteryWidget UEndOfRoundAccountMasteryWidget
---@field mpMatchSummaryWidget UEndOfRoundMatchSummaryWidget
---@field mpPlayerDetailsWidget UEndOfRoundPlayerDetailsWidget
---@field mpSurvivalSummaryWidget UEndOfRoundSurvivalSummaryWidget
---@field mpBusyModal UBusyModalWidget
---@field mMatchSummaryInfoData FMatchSummaryInfoData
---@field bDebugModeEnabled boolean
UEndOfRoundScreen = {}



---@class UEndOfRoundSurvivalPlayerCard : UUserWidget
---@field mpPlayerName UTextBlock
---@field mpTotalScore UTextBlock
---@field mpHealthText UTextBlock
---@field mpPlayerHits UTextBlock
---@field mpPlayerState UTextBlock
---@field mpProfileIcon UImage
---@field mpPlayerIcon UImage
UEndOfRoundSurvivalPlayerCard = {}

---@param playerInfoData FPlayerMatchInfoData
function UEndOfRoundSurvivalPlayerCard:PopulatePlayerCard(playerInfoData) end
---@param pTex UTexture2D
function UEndOfRoundSurvivalPlayerCard:OnPortraitTextureLoaded(pTex) end


---@class UEndOfRoundSurvivalSummaryWidget : UEndOfRoundBaseWidget
---@field mPlayerCardClass TSubclassOf<UEndOfRoundSurvivalPlayerCard>
---@field mpPlayerBox UHorizontalBox
---@field mpDifficultyText UTextBlock
---@field mpRoundNumberText UTextBlock
---@field mpMatchTimeText UTextBlock
---@field mpMapName UTextBlock
UEndOfRoundSurvivalSummaryWidget = {}



---@class UEndOfRoundWeaponRewardsWidget : UEndOfRoundBaseWidget
---@field mpWeaponRewardsOverlayWidget UWeaponRewardsOverlayWidget
UEndOfRoundWeaponRewardsWidget = {}

---@param PlayerMatchInfoData FPlayerMatchInfoData
function UEndOfRoundWeaponRewardsWidget:OnActivate(PlayerMatchInfoData) end


---@class UEndPointManager : UObject
UEndPointManager = {}


---@class UEndSocket : UObject
UEndSocket = {}


---@class UEndofRoundRankAdjustmentWidget : UEndOfRoundBaseWidget
UEndofRoundRankAdjustmentWidget = {}

---@param rank int32
function UEndofRoundRankAdjustmentWidget:SetRank(rank) end


---@class UEnvQueryContext_ActiveDamageSources : UEnvQueryContext
UEnvQueryContext_ActiveDamageSources = {}


---@class UEnvQueryContext_DollMasterTraps : UEnvQueryContext
UEnvQueryContext_DollMasterTraps = {}


---@class UEnvQueryContext_EvilLethalWeaponThreats : UEnvQueryContext
UEnvQueryContext_EvilLethalWeaponThreats = {}


---@class UEnvQueryContext_EvilLinearWeaponThreats : UEnvQueryContext
UEnvQueryContext_EvilLinearWeaponThreats = {}


---@class UEnvQueryContext_EvilPath : UEnvQueryContext
UEnvQueryContext_EvilPath = {}


---@class UEnvQueryContext_HumanPlayers : UEnvQueryContext
UEnvQueryContext_HumanPlayers = {}


---@class UEnvQueryContext_VulnerableTeens : UEnvQueryContext
UEnvQueryContext_VulnerableTeens = {}


---@class UEnvQueryInstance_GridPath : UEnvQueryInstanceBlueprintWrapper
---@field mPaths TArray<FNavPathScore>
UEnvQueryInstance_GridPath = {}

---@param pAIController AAIController
function UEnvQueryInstance_GridPath:PrintClusters(pAIController) end
---@param Index int32
---@param resultLocation FVector
---@return boolean
function UEnvQueryInstance_GridPath:GetEQItemLocation(Index, resultLocation) end
---@return int32
function UEnvQueryInstance_GridPath:EvaluatePathTowardsClusters() end


---@class UEnvQueryTest_DistanceToDamageSources : UEnvQueryTest
---@field TestMode EEnvTestDistance::Type
---@field DistanceTo TSubclassOf<UEnvQueryContext>
UEnvQueryTest_DistanceToDamageSources = {}



---@class UEnvQueryTest_DotAndDistance : UEnvQueryTest
---@field mMaxDistance float
---@field mbInverseDistanceChecking boolean
---@field mDistanceScoreMulti float
---@field mDirectionLine FEnvDirection
---@field LineToContext TSubclassOf<UEnvQueryContext>
---@field TestMode EEnvTestDot
---@field bAbsoluteValue boolean
UEnvQueryTest_DotAndDistance = {}



---@class UEnvQueryTest_KNN_Regression : UEnvQueryTest
---@field mHalfBound float
UEnvQueryTest_KNN_Regression = {}



---@class UEradicatorAnimInstance : UEvilCharAnimInstance
---@field mEradAnimInstanceData FEradAnimInstanceData
UEradicatorAnimInstance = {}

---@param Notify UAnimNotify
function UEradicatorAnimInstance:AnimNotify_EradSurgeComplete(Notify) end


---@class UErrorDialogWidget : UUserWidget
---@field mMessage FString
---@field mpOKButton UButton
UErrorDialogWidget = {}

---@param aMessage FString
function UErrorDialogWidget:SetMessage(aMessage) end
---@return FString
function UErrorDialogWidget:GetMessage() end
function UErrorDialogWidget:EnableFocus() end


---@class UEventInfo : UObject
UEventInfo = {}


---@class UEventInfoTab : UMetaWidget
---@field mpParticipatingCountText URichTextBlock
---@field mpNonParticipatingOverlay UOverlay
---@field mpGoalDescriptionText UTextBlock
---@field mpTierObjectiveText UTextBlock
---@field mpEventRewardWidget UEventRewardGroupWidget
---@field mpEventTrackerWidget UEventTrackerWidget
UEventInfoTab = {}



---@class UEventRewardGroupWidget : UBaseRewardGroupWidget
UEventRewardGroupWidget = {}


---@class UEventRewardsTab : UMetaWidget
---@field statusClass TSubclassOf<UEventTierStatusWidget>
---@field mpScrollBox UNonSelectableScrollBox
---@field mpTiersBox UHorizontalBox
UEventRewardsTab = {}



---@class UEventScreen : UBaseScreen
---@field mpCategorySwitcher UCategorySwitcher
---@field mpWidgetSwitcher UWidgetSwitcher
---@field mpEventInfoTab UEventInfoTab
---@field mpEventRewardsTab UEventRewardsTab
---@field mpEventTitleText UTextBlock
---@field mpChallengeDescriptionText UTextBlock
UEventScreen = {}



---@class UEventTierStatusWidget : UMetaWidget
---@field mpTierText UTextBlock
---@field mpDescriptionText URichTextBlock
---@field mpStatusText UTextBlock
---@field mpEventRewardGroup UEventRewardGroupWidget
---@field mpViewUserButton UBoxUserButton
---@field mpClaimUserButton UBoxUserButton
UEventTierStatusWidget = {}

function UEventTierStatusWidget:OnViewPressed() end
function UEventTierStatusWidget:OnClaimPressed() end


---@class UEventTrackerTierWidget : UMetaWidget
---@field mpTierText UTextBlock
---@field mpCountText UTextBlock
UEventTrackerTierWidget = {}



---@class UEventTrackerUserButton : UBaseUserButton
---@field mpEventTitleText UTextBlock
---@field mpEventDescriptionText UTextBlock
---@field mpProgressBar UProgressBar
---@field mpTierProgressText UTextBlock
---@field mpTierNumText UTextBlock
UEventTrackerUserButton = {}



---@class UEventTrackerWidget : UMetaWidget
---@field TierClass TSubclassOf<UEventTrackerTierWidget>
---@field mpTierIdentifierOverlay UOverlay
---@field mpCurrentCountOverlay UOverlay
---@field mpProgressBar UProgressBar
---@field mpSizeBox USizeBox
---@field mpSizeBox2 USizeBox
---@field mpCurrentNumberText UTextBlock
UEventTrackerWidget = {}



---@class UEvent_Holiday_DataAsset : UDataAsset
---@field mOrnamentPickups TArray<UClass>
---@field mEvilOrnaments TArray<UClass>
UEvent_Holiday_DataAsset = {}



---@class UEvilAbilityProgressBar : UBaseActionProgressBar
---@field mpAbilityIcon UImage
UEvilAbilityProgressBar = {}



---@class UEvilAccessoryDataAsset : UEvilSkinBaseDataAsset
---@field mCharacterType ECharacterType
---@field mAccessorySlot EAccessorySlot
---@field mTPAccessoryMesh FSkinSkeletalMesh
---@field mFPAccessoryMesh FSkinSkeletalMesh
---@field mPersistentFXSystems TArray<FSkinFXSystemList>
---@field mSkinMasks TMap<FName, UTexture2D>
---@field mMaterialTransferByValue TArray<FMaterialTransferByValue>
---@field mHeelHeight FVector2D
---@field mHeelAngle FVector2D
---@field mSwitchState FString
UEvilAccessoryDataAsset = {}

---@return UEvilSkinDataAsset
function UEvilAccessoryDataAsset:GetCompatibleEvilSkin() end


---@class UEvilCharAnimInstance : UBaseCharAnimInstance
---@field mpSpawnableBasketballClass TSubclassOf<AInteractablePropBase>
---@field mRightHandBone FName
---@field mpFocusAbility1AnimSequence UAnimSequence
---@field mpFocusAbility2AnimSequence UAnimSequence
---@field mpFocusAbility3AnimSequence UAnimSequence
---@field mpOwnerFPChar AFPChar
---@field mFPCharAnimInstanceData FFPCharAnimInstanceData
UEvilCharAnimInstance = {}

---@return float
function UEvilCharAnimInstance:UpdateRotateInPlace() end
function UEvilCharAnimInstance:UpdateMainMenuAnimations() end
---@param DeltaTime float
---@return FFPCharAnimInstanceData
function UEvilCharAnimInstance:UpdateAnimData(DeltaTime) end
---@return boolean
function UEvilCharAnimInstance:ShouldRotateInPlace() end
---@param bRightFootPlaced boolean
function UEvilCharAnimInstance:SetLastFootPlacedRight(bRightFootPlaced) end
---@return boolean
function UEvilCharAnimInstance:IsPlayingInEditor() end
---@return float
function UEvilCharAnimInstance:GetStunIntroOutroLength() end
---@return boolean
function UEvilCharAnimInstance:GetLastFootPlacedRight() end
---@return FEmoteData
function UEvilCharAnimInstance:GetCurrentEmoteData() end
---@return float
function UEvilCharAnimInstance:GetCurrentAbilityChargePlayRate() end
---@return FFPCharAnimInstanceData
function UEvilCharAnimInstance:GetCharData() end
---@param pOwnerChar AFPChar
---@return float
function UEvilCharAnimInstance:CalculateAimPitch(pOwnerChar) end
---@param Notify UAnimNotify
function UEvilCharAnimInstance:AnimNotify_UseEffigy(Notify) end
---@param Notify UAnimNotify
function UEvilCharAnimInstance:AnimNotify_RightFootstep(Notify) end
---@param Notify UAnimNotify
function UEvilCharAnimInstance:AnimNotify_LeftTransformOut(Notify) end
---@param Notify UAnimNotify
function UEvilCharAnimInstance:AnimNotify_LeftStunOutro(Notify) end
---@param Notify UAnimNotify
function UEvilCharAnimInstance:AnimNotify_LeftStunIdle(Notify) end
---@param Notify UAnimNotify
function UEvilCharAnimInstance:AnimNotify_LeftFootstep(Notify) end
---@param Notify UAnimNotify
function UEvilCharAnimInstance:AnimNotify_LeftCoreMotion(Notify) end
---@param Notify UAnimNotify
function UEvilCharAnimInstance:AnimNotify_LeftCelebration(Notify) end
---@param Notify UAnimNotify
function UEvilCharAnimInstance:AnimNotify_HideEffigy(Notify) end
---@param Notify UAnimNotify
function UEvilCharAnimInstance:AnimNotify_FeastingLoopStart(Notify) end
---@param Notify UAnimNotify
function UEvilCharAnimInstance:AnimNotify_FeastingLoopEnd(Notify) end
---@param Notify UAnimNotify
function UEvilCharAnimInstance:AnimNotify_FallingSequenceStart(Notify) end
---@param Notify UAnimNotify
function UEvilCharAnimInstance:AnimNotify_FallingSequenceEnd(Notify) end
---@param Notify UAnimNotify
function UEvilCharAnimInstance:AnimNotify_EnterTransformOut(Notify) end
---@param Notify UAnimNotify
function UEvilCharAnimInstance:AnimNotify_EnterStunOutro(Notify) end
---@param Notify UAnimNotify
function UEvilCharAnimInstance:AnimNotify_EnterStunIntro(Notify) end
---@param Notify UAnimNotify
function UEvilCharAnimInstance:AnimNotify_EnterStunIdle(Notify) end
---@param Notify UAnimNotify
function UEvilCharAnimInstance:AnimNotify_EmoteComplete(Notify) end
---@param Notify UAnimNotify
function UEvilCharAnimInstance:AnimNotify_CreateEffigy(Notify) end
---@param Notify UAnimNotify
function UEvilCharAnimInstance:AnimNotify_ClearEmote(Notify) end
---@param Notify UAnimNotify
function UEvilCharAnimInstance:AnimNotify_ClearCreatingEffigy(Notify) end
---@return boolean
function UEvilCharAnimInstance:AllowedToPlayAbilityOutro() end


---@class UEvilDamageParticlesComponent : UActorComponent
---@field mpOwningFPChar AFPChar
---@field mDamageParticleData TMap<EDamageType, FDamageParticleData>
---@field mpToadArmorParticleSystem UParticleSystemComponent
---@field mDamageSystemPath FSoftObjectPath
---@field mpDamageShellMaterial UMaterialInstance
---@field mpFPDamageShellMaterial UMaterialInstance
---@field mpDamageNiagaraComponent UNiagaraComponent
UEvilDamageParticlesComponent = {}

---@param DeltaTime float
function UEvilDamageParticlesComponent:UpdateParticles(DeltaTime) end


---@class UEvilFeastDataAsset : UItemDataAsset
---@field mFeastParticles FSkinNiagaraSystem
---@field mFeastFPParticles FSkinNiagaraSystem
---@field mFeastEvilSpectralParticles FSkinNiagaraSystem
UEvilFeastDataAsset = {}



---@class UEvilOnlineSession : UOnlineSession
UEvilOnlineSession = {}


---@class UEvilRageDataAsset : UItemDataAsset
---@field mRageParticles FSkinNiagaraSystem
---@field mRageFPParticles FSkinNiagaraSystem
UEvilRageDataAsset = {}



---@class UEvilScreamDataAsset : UItemDataAsset
---@field mScreamParticles FSkinNiagaraSystem
---@field mpShockwaveSphereMaterial UMaterialInstance
---@field mpInvertedShockwaveSphereMaterial UMaterialInstance
---@field mpShockwaveSurfaceMaterial UMaterialInstance
---@field mScreamDecal FSkinDecal
---@field mScreamDecalSize FVector
UEvilScreamDataAsset = {}



---@class UEvilSeasonalEventComponent : UActorComponent
---@field mHeldOrnamentClasses TArray<UClass>
UEvilSeasonalEventComponent = {}

---@return TArray<UClass>
function UEvilSeasonalEventComponent:GetHeldOrnamentClasses() end
function UEvilSeasonalEventComponent:DoServerEmptyHeldOrnamentClasses() end
---@param pClass UClass
function UEvilSeasonalEventComponent:DoServerAddHeldHolidayOrnamentClass(pClass) end


---@class UEvilSkinBaseDataAsset : UItemDataAsset
---@field mCharacterStatusToMaterialScalarParameter TArray<FCharacterStatusToMaterialParameter>
UEvilSkinBaseDataAsset = {}



---@class UEvilSkinComponent : UBaseCustomizationComponent
---@field mAccessories TArray<UEvilAccessoryDataAsset>
---@field mpEvilSkin UEvilSkinDataAsset
---@field mpTPMeshComponent FEvilCustomizationMesh
---@field mpTPMeshShellComponent USkeletalMeshComponent
---@field mpFPMeshShellComponent USkeletalMeshComponent
---@field mpShellMaterial UMaterialInterface
---@field mpFPShellMaterial UMaterialInterface
---@field mbIsShellEnabled boolean
---@field mpFPMeshComponent FEvilCustomizationMesh
---@field mTPAccessoryMeshComponents TArray<FEvilCustomizationMesh>
---@field mFPAccessoryMeshComponents TArray<FEvilCustomizationMesh>
---@field mSpawnedFXComponents TArray<FStatusMappingTarget>
---@field mbUseSkinAnimInstances boolean
---@field mSharedParameters TArray<FMaterialTransferByValue>
---@field mSwitchState FString
UEvilSkinComponent = {}

---@return boolean
function UEvilSkinComponent:ShouldUseSkinAnimInstances() end
---@param bSet boolean
function UEvilSkinComponent:SetUseSkinAnimInstances(bSet) end
---@param pTPComponent USkeletalMeshComponent
function UEvilSkinComponent:SetTPMeshComponent(pTPComponent) end
---@param pTPShellMaterial UMaterialInterface
---@param pFPShellMaterial UMaterialInterface
function UEvilSkinComponent:SetShellMaterial(pTPShellMaterial, pFPShellMaterial) end
---@param bEnabled boolean
function UEvilSkinComponent:SetShellEnabled(bEnabled) end
---@param bSetTP boolean
---@param bSetFP boolean
function UEvilSkinComponent:SetOwnerNoSee(bSetTP, bSetFP) end
---@param bTPVisibility boolean
---@param bFPVisibility boolean
function UEvilSkinComponent:SetMeshVisibility(bTPVisibility, bFPVisibility) end
---@param ParameterName FName
---@param Value float
---@param bThirdPerson boolean
---@param bFirstPerson boolean
function UEvilSkinComponent:SetMaterialPropertyForAllMeshes(ParameterName, Value, bThirdPerson, bFirstPerson) end
---@param pFPComponent USkeletalMeshComponent
function UEvilSkinComponent:SetFPMeshComponent(pFPComponent) end
---@param bSetTP boolean
---@param bSetFP boolean
function UEvilSkinComponent:SetCastHiddenShadow(bSetTP, bSetFP) end
---@return USkeletalMeshComponent
function UEvilSkinComponent:GetTPMeshShellComponent() end
---@return USkeletalMeshComponent
function UEvilSkinComponent:GetTPMeshComponent() end
---@return FString
function UEvilSkinComponent:GetSwitchState() end
---@return UMaterialInterface
function UEvilSkinComponent:GetShellMaterial() end
---@param bThirdPerson boolean
---@param bFirstPerson boolean
---@return TArray<USkeletalMeshComponent>
function UEvilSkinComponent:GetMeshComponents(bThirdPerson, bFirstPerson) end
---@return FVector2D
function UEvilSkinComponent:GetHeelHeight() end
---@return FVector2D
function UEvilSkinComponent:GetHeelAngle() end
---@return USkeletalMeshComponent
function UEvilSkinComponent:GetFPMeshComponent() end
---@return UEvilSkinDataAsset
function UEvilSkinComponent:GetEquippedSkin() end
---@return TArray<UEvilAccessoryDataAsset>
function UEvilSkinComponent:GetEquippedAccessories() end
---@param pEvilSkin UEvilSkinDataAsset
---@param accessories TArray<UEvilAccessoryDataAsset>
function UEvilSkinComponent:EquipEvilSkin(pEvilSkin, accessories) end


---@class UEvilSkinDataAsset : UEvilSkinBaseDataAsset
---@field mCharacterType ECharacterType
---@field mThirdPersonMesh FSkinSkeletalMesh
---@field mFirstPersonMesh FSkinSkeletalMesh
---@field mFootstepDecalSize float
---@field mbEnableAccessories boolean
---@field mEnabledAccessorySlots TArray<EAccessorySlot>
---@field mAccessorySlotDefaults TArray<UEvilAccessoryDataAsset>
---@field mHeelHeight FVector2D
---@field mHeelAngle FVector2D
UEvilSkinDataAsset = {}

---@return TArray<FName>
function UEvilSkinDataAsset:GetFeastAttachBones() end
---@return boolean
function UEvilSkinDataAsset:AreAccessoriesEnabled() end


---@class UEvilSpectralAnimInstance : UAnimInstance
UEvilSpectralAnimInstance = {}

---@param DeltaTime float
---@return FEvilSpectralAnimInstanceData
function UEvilSpectralAnimInstance:UpdateAnimData(DeltaTime) end
---@return FEvilSpectralAnimInstanceData
function UEvilSpectralAnimInstance:GetCharData() end


---@class UEvilSpectralDataAsset : USpectralDataAsset
UEvilSpectralDataAsset = {}


---@class UEvilTransformationDataAsset : UItemDataAsset
---@field mTeenTransformSystem FSkinParticleSystem
---@field mEvilTransformSystem FSkinNiagaraSystem
UEvilTransformationDataAsset = {}



---@class UExtAkComponent : UAkComponent
---@field InitialDesignParams FAcousticsDesignParams
---@field ApplyAcousticsVolumes boolean
---@field PlayOnStart boolean
---@field ShowAcousticParameters boolean
---@field bCheckActiveEventsOnUpdate boolean
---@field bEnableUpdateRateOptimizations boolean
---@field CurrentDesignParams FAcousticsDesignParams
---@field mbUsesTriton boolean
---@field mbAddRandomPitch boolean
---@field mbIgnoreDistanceCulling boolean
---@field mLastOutdoornessValue float
UExtAkComponent = {}

function UExtAkComponent:UpdateTritonAcoustics() end
---@param bSet boolean
function UExtAkComponent:SetUsesTriton(bSet) end
---@param bSet boolean
function UExtAkComponent:SetIgnoreDistanceCulling(bSet) end
---@return boolean
function UExtAkComponent:IsUsingTriton() end
---@return boolean
function UExtAkComponent:IgnoreDistanceCulling() end


---@class UExtButton : UButton
UExtButton = {}

function UExtButton:SimulateRelease() end
function UExtButton:SimulatePress() end


---@class UExtGameUserSettings : UGameUserSettings
---@field DLSSMode uint8
---@field ColorBlindMode uint8
---@field ColorBlindIntensity float
---@field FrameRateSetting uint8
---@field MenuFrameRateLimit float
---@field MenuFrameRateSetting uint8
---@field MasterVolume float
---@field MenuMusicVolume float
---@field GameplayVolume float
---@field PingVolume float
---@field Enable3DHeadphones boolean
---@field AudioOutputDevice FString
---@field VoiceChatSpeakerVolume float
---@field VoiceChatMicVolume float
---@field VoiceChatInputDevice FString
---@field VoiceChatOutputDevice FString
---@field TeenMouseSensitivity float
---@field EvilMouseSensitivity float
---@field MouseFiringSensitivity float
---@field TeenControllerSensitivityX float
---@field TeenControllerSensitivityY float
---@field EvilControllerSensitivityX float
---@field EvilControllerSensitivityY float
---@field ControllerFiringSensitivity float
---@field ControllerVibration boolean
---@field DisplayGamma float
UExtGameUserSettings = {}

---@param Val float
function UExtGameUserSettings:SetVoiceChatSpeakerVolume(Val) end
---@param Val FString
function UExtGameUserSettings:SetVoiceChatOutputDevice(Val) end
---@param Val float
function UExtGameUserSettings:SetVoiceChatMicVolume(Val) end
---@param Val FString
function UExtGameUserSettings:SetVoiceChatInputDevice(Val) end
---@param Val float
function UExtGameUserSettings:SetTeenMouseSensitivity(Val) end
---@param vec FVector2D
function UExtGameUserSettings:SetTeenControllerSensitivity(vec) end
---@param Val float
function UExtGameUserSettings:SetPingVolume(Val) end
---@param Val float
function UExtGameUserSettings:SetMouseFiringSensitivity(Val) end
---@param Val float
function UExtGameUserSettings:SetMenuMusicVolume(Val) end
---@param Val uint8
function UExtGameUserSettings:SetMenuFrameRateSetting(Val) end
---@param NewLimit float
function UExtGameUserSettings:SetMenuFrameRateLimit(NewLimit) end
---@param Val float
function UExtGameUserSettings:SetMasterVolume(Val) end
---@param Val float
function UExtGameUserSettings:SetGameplayVolume(Val) end
---@param Val uint8
function UExtGameUserSettings:SetFrameRateSetting(Val) end
---@param Val float
function UExtGameUserSettings:SetEvilMouseSensitivity(Val) end
---@param vec FVector2D
function UExtGameUserSettings:SetEvilControllerSensitivity(vec) end
---@param Mode uint8
function UExtGameUserSettings:SetDLSSMode(Mode) end
---@param newGamma float
function UExtGameUserSettings:SetDisplayGamma(newGamma) end
---@param bSet boolean
function UExtGameUserSettings:SetControllerVibration(bSet) end
---@param Val float
function UExtGameUserSettings:SetControllerFiringSensitivity(Val) end
---@param Mode uint8
function UExtGameUserSettings:SetColorBlindMode(Mode) end
---@param Val float
function UExtGameUserSettings:SetColorBlindIntensity(Val) end
---@param Val FString
function UExtGameUserSettings:SetAudioOutputDevice(Val) end
---@param bSet boolean
function UExtGameUserSettings:Set3DHeadphonesEnabled(bSet) end
---@return float
function UExtGameUserSettings:GetVoiceChatSpeakerVolume() end
---@return FString
function UExtGameUserSettings:GetVoiceChatOutputDevice() end
---@return float
function UExtGameUserSettings:GetVoiceChatMicVolume() end
---@return FString
function UExtGameUserSettings:GetVoiceChatInputDevice() end
---@return float
function UExtGameUserSettings:GetTeenMouseSensitivity() end
---@return FVector2D
function UExtGameUserSettings:GetTeenControllerSensitivity() end
---@return float
function UExtGameUserSettings:GetPingVolume() end
---@return float
function UExtGameUserSettings:GetMouseFiringSensitivity() end
---@return float
function UExtGameUserSettings:GetMenuMusicVolume() end
---@return uint8
function UExtGameUserSettings:GetMenuFrameRateSetting() end
---@return float
function UExtGameUserSettings:GetMenuFrameRateLimit() end
---@return float
function UExtGameUserSettings:GetMasterVolume() end
---@return float
function UExtGameUserSettings:GetGameplayVolume() end
---@return uint8
function UExtGameUserSettings:GetFrameRateSetting() end
---@return float
function UExtGameUserSettings:GetEvilMouseSensitivity() end
---@return FVector2D
function UExtGameUserSettings:GetEvilControllerSensitivity() end
---@return uint8
function UExtGameUserSettings:GetDLSSMode() end
---@return float
function UExtGameUserSettings:GetDisplayGamma() end
---@return boolean
function UExtGameUserSettings:GetControllerVibration() end
---@return float
function UExtGameUserSettings:GetControllerFiringSensitivity() end
---@return uint8
function UExtGameUserSettings:GetColorBlindMode() end
---@return float
function UExtGameUserSettings:GetColorBlindIntensity() end
---@return FString
function UExtGameUserSettings:GetAudioOutputDevice() end
---@return boolean
function UExtGameUserSettings:Get3DHeadphonesEnabled() end


---@class UExtLocalPlayer : ULocalPlayer
---@field mMyClientState UClientStateManager
---@field mPlayerInfo FNetPlayerInfoStruct
UExtLocalPlayer = {}



---@class UExtParticleModuleCollision : UParticleModuleHBCustomBase
---@field mbUseSphericalCollision boolean
---@field mSphereCollisionRadius FRawDistributionFloat
---@field DampingFactor FRawDistributionVector
---@field DampingFactorRotation FRawDistributionVector
---@field MaxCollisions FRawDistributionFloat
---@field CollisionCompletionOption EParticleCollisionComplete
---@field CollisionTypes TArray<EObjectTypeQuery>
---@field mbUseCollisionChannel boolean
---@field mCollisionChannel ECollisionChannel
---@field bApplyPhysics boolean
---@field bIgnoreTriggerVolumes boolean
---@field ParticleMass FRawDistributionFloat
---@field DirScalar float
---@field bPawnsDoNotDecrementCount boolean
---@field bOnlyVerticalNormalsDecrementCount boolean
---@field VerticalFudgeFactor float
---@field DelayAmount FRawDistributionFloat
---@field bDropDetail boolean
---@field bCollideOnlyIfVisible boolean
---@field bIgnoreSourceActor boolean
---@field MaxCollisionDistance float
UExtParticleModuleCollision = {}



---@class UExtWindDirectionalSourceComponent : UWindDirectionalSourceComponent
---@field mpVectorField UVectorFieldStatic
---@field mbUseVectorFieldDirection boolean
---@field mbUseVectorFieldStrength boolean
---@field mWindSampleOffset FVector
---@field mVectorFieldRange FVector2D
---@field mWindSpeedRange FVector2D
UExtWindDirectionalSourceComponent = {}



---@class UExtendedGameViewportClient : UGameViewportClient
UExtendedGameViewportClient = {}


---@class UExtendedPrimaryAssetLabel : UPrimaryAssetLabel
---@field mChunkName FName
---@field mbOverridePriority boolean
---@field mbIsReleasable boolean
UExtendedPrimaryAssetLabel = {}

function UExtendedPrimaryAssetLabel:RefreshChunkID() end


---@class UFEDebugWidget : UUserWidget
---@field mpWidgetSwitcher UWidgetSwitcher
---@field mpCloseButton UTextUserButton
---@field mpServerNameTextBox UEditableTextBox
---@field mpNewFlagTextBox UEditableTextBox
---@field mpReportPlayerName UEditableTextBox
---@field mpReportPlayerAccountId UEditableTextBox
---@field mpAnnouncementTypesTextBox UEditableTextBox
---@field mpFakeEquipClothingSlot UEditableTextBox
---@field mpFakeEquipClothingGrantable UEditableTextBox
---@field mpReplayBusyModal UBusyModalWidget
---@field mpEnableTestButton UButton
---@field mpDisableTestButton UButton
---@field mpImageTest UImage
---@field mpProgressBarTest UProgressBar
---@field mpCheckboxTest UCheckBox
---@field mpTestLockdownButton1 UNavButton
---@field mpTestLockdownButton2 UNavButton
---@field mpDebugRewardsScreenClass UClass
---@field mpDebugMovieRewardsScreenClass UClass
---@field mpDebugIssueSummaryScreenClass UClass
---@field mpIssueDeltaExpTextBox UEditableTextBox
---@field mpSetPersonalCountTextBox UEditableTextBox
---@field mpSetPeronsalTierTextBox UEditableTextBox
---@field mpSetProgressCountTextBox UEditableTextBox
---@field mpJoinBackendGameSessionIDTextbox UEditableTextBox
---@field previousRewardsData FEORRewardsData
---@field currentRewardsData FEORRewardsData
---@field mCompletedScenesKeysData TArray<FString>
---@field mpFlipbookAnimator UFlipbookAnimator
---@field mpFlipbookFramerateTextBox UEditableTextBox
---@field mpFlipbookAnimTextBox UEditableTextBox
---@field mpFlipbookLoopCheckbox UCheckBox
---@field mpFlipbookReverseCheckbox UCheckBox
UFEDebugWidget = {}

function UFEDebugWidget:ShowEORMovieProgress() end
function UFEDebugWidget:ShowEORIssueProgress() end
---@param pButton UNavButton
function UFEDebugWidget:SelectMenu(pButton) end
---@param ID FString
function UFEDebugWidget:OnYesNoToastDeclined(ID) end
---@param ID FString
function UFEDebugWidget:OnYesNoToastConfirmed(ID) end
function UFEDebugWidget:OnUnfakeMatchmakingButton() end
function UFEDebugWidget:OnToggleSeasonPassPremium() end
function UFEDebugWidget:OnShowServerBrowser() end
function UFEDebugWidget:OnShowSeasonPassPreview() end
function UFEDebugWidget:OnShowSeasonPass() end
function UFEDebugWidget:OnShowRewardClaimScreen() end
function UFEDebugWidget:OnShowReportModalPressed() end
function UFEDebugWidget:OnShowNewsPressed() end
function UFEDebugWidget:OnShowLoadingScreenPrizes() end
function UFEDebugWidget:OnShowLoadingScreen() end
function UFEDebugWidget:OnShowEORS() end
function UFEDebugWidget:OnShowEORRewardsS() end
function UFEDebugWidget:OnSetSeasonalEventValentinesPressed() end
function UFEDebugWidget:OnSetSeasonalEventHolidaysPressed() end
function UFEDebugWidget:OnSetSeasonalEventHalloweenPressed() end
function UFEDebugWidget:OnSetSeasonalEventEasterPressed() end
function UFEDebugWidget:OnSetSeasonalEvent2xBonusPressed() end
function UFEDebugWidget:OnSetProgressCountPressed() end
function UFEDebugWidget:OnSetPersonalTierCountPressed() end
function UFEDebugWidget:OnSetAnnouncementsPressed() end
function UFEDebugWidget:OnReportHostDisconnected() end
function UFEDebugWidget:OnPopulateEventChallengePressed() end
function UFEDebugWidget:OnPlayTestReplay() end
function UFEDebugWidget:OnOldToastPressed() end
function UFEDebugWidget:OnJoinBackendGameSessionPressed() end
function UFEDebugWidget:OnHostP2PMatchmadeGame() end
function UFEDebugWidget:OnHostBackendGameSessionPressed() end
function UFEDebugWidget:OnHideLoadingScreen() end
function UFEDebugWidget:OnGetServerNotifications() end
function UFEDebugWidget:OnForceDisconnectLobby() end
function UFEDebugWidget:OnForceDeviceTypeMouseKbd() end
function UFEDebugWidget:OnForceDeviceTypeController() end
function UFEDebugWidget:OnFlipbookAnimPlayPressed() end
function UFEDebugWidget:OnFakeMatchmakingButton() end
function UFEDebugWidget:OnFakeEquipClothing() end
function UFEDebugWidget:OnExtImageEnabled() end
function UFEDebugWidget:OnExtImageDisabled() end
function UFEDebugWidget:OnEngageLockdownPressed() end
function UFEDebugWidget:OnEnableSeasonPass() end
function UFEDebugWidget:OnDisableLockdownPressed() end
function UFEDebugWidget:OnDeviceTypeChanged() end
function UFEDebugWidget:OnClosePressed() end
function UFEDebugWidget:OnClearSeasonalEventPressed() end
function UFEDebugWidget:OnClearForceDeviceType() end
function UFEDebugWidget:OnClearAllToastsPressed() end
function UFEDebugWidget:OnClearAllNewFlags() end
function UFEDebugWidget:OnAddWarningToastPressed() end
function UFEDebugWidget:OnAddRandomNewFlags() end
function UFEDebugWidget:OnAddNormalToastPressed() end
function UFEDebugWidget:OnAddNewFlag() end
function UFEDebugWidget:OnAddCriticalPersistentToastPressed() end


---@class UFeastEffectComponent : UActorComponent
---@field mAttachBones TArray<FName>
---@field mFPAttachBones TArray<FName>
---@field mFeastTPNiagaraComponents TArray<UNiagaraComponent>
---@field mFeastFPNiagaraComponents TArray<UNiagaraComponent>
---@field mpFeastSpectralNiagaraComponent UNiagaraComponent
---@field mFeastingSpectrals TArray<AInteractablePropBase>
UFeastEffectComponent = {}



---@class UFinishJourneyMapNode : UPurchasableJourneyMapNode
---@field ProgressTexture UTexture2D
---@field UncompletedColor FLinearColor
---@field CompletedColor FLinearColor
---@field mpBackgroundImage UImage
---@field mpProgressImage UImage
---@field mpProgressMaterialInstance UMaterialInstance
---@field mpDynProgressMaterialInstance UMaterialInstanceDynamic
UFinishJourneyMapNode = {}



---@class UFlameMineSkinDataAsset : UTeenWeaponSkinDataAsset
---@field mSummoningParticleSystem FSkinParticleSystem
---@field mWiseFlameMineSwitch EWise_WEP_FlameMine
---@field mFlameMineMesh FSkinSkeletalMesh
---@field mEmissionParticleSystem FSkinParticleSystem
---@field mFloatingParticleSystem FSkinParticleSystem
---@field mDiscNiagaraSystem FSkinNiagaraSystem
---@field mDiscLight FSkinLight
---@field mFloorDecal FSkinDecal
---@field mSplineMesh FSkinStaticMesh
UFlameMineSkinDataAsset = {}



---@class UFlamethrowerParticleModule : UParticleModuleHBCustomBase
---@field mTangentSpeed FRawDistributionFloat
---@field mProjectileLifetime FRawDistributionFloat
---@field mMinProjectileIdx int32
---@field mMaxProjectileIdx int32
UFlamethrowerParticleModule = {}



---@class UFlamethrowerSkinDataAsset : UTeenWeaponSkinDataAsset
---@field mIdleFlameSkin FSkinParticleSystem
---@field mStreamSkin FSkinParticleSystem
---@field mWiseFlamethrowerSwitch EWise_WEP_Flamethrower
UFlamethrowerSkinDataAsset = {}



---@class UFlipbookAnimator : UImage
---@field AnimSheets TMap<FString, UPaperFlipbook>
---@field FrameRate int32
---@field mCustomizedFrameRate int32
---@field mbUseCustomizedFrameRate boolean
---@field AlwaysLoops boolean
---@field Loops int32
---@field bSkipAnimDirtyFlag boolean
UFlipbookAnimator = {}

function UFlipbookAnimator:PlayNext() end
---@param animName FString
---@param StartFrame int32
---@param bLoop boolean
---@param bReverse boolean
function UFlipbookAnimator:PlayAnim(animName, StartFrame, bLoop, bReverse) end
---@param animName FString
---@param StartFrame int32
---@param bLoop boolean
---@param bReverse boolean
---@param bEndCurrentAnim boolean
---@param bUseDuration boolean
---@param Duration float
function UFlipbookAnimator:EnqueueAnimFlipBook(animName, StartFrame, bLoop, bReverse, bEndCurrentAnim, bUseDuration, Duration) end
function UFlipbookAnimator:ClearAnimQueue() end


---@class UFootstepManager : USceneComponent
---@field mpOwningActor AActor
UFootstepManager = {}

---@param bLeftFoot boolean
function UFootstepManager:OnFootstep(bLeftFoot) end
---@return FString
function UFootstepManager:GetCurrentFootstepSoundEvent() end


---@class UGameConstants : UBaseConstants
---@field AllowDebugKeys boolean
---@field HIT_DETECTION_DEBUG EDrawDebugTrace::Type
---@field HIT_DETECTION_SPHERE_RADIUS float
---@field MAX_LOBBY_PLAYERS int32
---@field MAX_PARTY_SIZE int32
---@field MAX_PLAYABLE_PLAYERS int32
---@field MAX_PLAYABLE_TEENS int32
---@field DEFAULT_MAX_SPECTATORS int32
---@field MAX_PLAYER_NAME_LENGTH int32
---@field INVALID_PLAYER_ID int32
---@field LOBBY_POSE_MIN_TIMER float
---@field LOBBY_POSE_MAX_TIMER float
---@field LOBBY_FLAVOR_MIN_TIMER float
---@field LOBBY_FLAVOR_MAX_TIMER float
---@field LOCSTRINGTABLE_MISSING_ENTRY FString
---@field ARCADE_SECRET_CODE FString
---@field ENDOFROUND_AUTOSKIP_TIME float
---@field GAMESTAGE_WAITING_TIME float
---@field GAMESTAGE_STARTUP_TIME float
---@field GAMESTAGE_TVINTRO_TIME float
---@field GAMESTAGE_INCUBATING_TIME float
---@field GAMESTAGE_TRANSFORMING_TIME float
---@field GAMESTAGE_GOODWINS_TIME float
---@field GAMESTAGE_PROCESSENDGAMEDATA_TIME float
---@field GAMESTAGE_EVILWINS_TIME float
---@field GAMESTAGE_NOBODYWINS_TIME float
---@field GAMESTAGE_MIN_INCUBATING_VAULT_TIME float
---@field Gravity FVector
---@field MOVIE_PREVIEW_YAW_LIMITS FVector2D
---@field MOVIE_PREVIEW_PITCH_LIMITS FVector2D
---@field LOBBY_COUNTDOWN_TIMER_MAX float
---@field LOBBY_COUNTDOWN_TIMER_LOCKED float
---@field LOBBY_SHOW_LOADING_TIMER float
---@field LOBBY_COUNTDOWN_TIMER_MATCHSTART float
---@field LOBBY_CONNECTION_TIMEOUT float
---@field LOBBY_DISINTEGRATION_RATE float
---@field LOBBY_MINIMUM_PLAYERS int32
---@field ANALYTICS_NEAR_DOWNED_TEEN_DISTANCE float
---@field ANALYTICS_CAMPING_DOWNED_TEEN_DISTANCE float
---@field MODAL_SCREEN_LAYER int32
---@field MAIN_MENU_SPIN_VELOCITY_NORMAL float
---@field FRONTEND_CAMERA_HEIGHT_LERP_MULTIPLIER float
---@field FRONTEND_CAMERA_TRANSITION_DURATION float
---@field FRONTEND_LOADOUT_TRANSITION_DURATION float
---@field FRONTEND_LOADOUT_TRANSITION_EASE_EXPONENT float
---@field MAIN_MENU_SPIN_VELOCITY_SLOW float
---@field MENU_LONG_PRESS_MINIMUM_PERIOD float
---@field MENU_LONG_PRESS_MAXIMUM_PERIOD float
---@field THEME_BORDER_COLOR FLinearColor
---@field THEME_COLOR_ONE FLinearColor
---@field THEME_COLOR_TWO FLinearColor
---@field THEME_COLOR_THREE FLinearColor
---@field THEME_COLOR_FOUR FLinearColor
---@field THEME_COLOR_BG_DEFAULT FLinearColor
---@field THEME_COLOR_BG_ONE FLinearColor
---@field THEME_COLOR_BG_TWO FLinearColor
---@field THEME_COLOR_BG_THREE FLinearColor
---@field THEME_COLOR_BG_FOUR FLinearColor
---@field THEME_COLOR_BLUR_DEFAULT FLinearColor
---@field THEME_COLOR_BLUR_ONE FLinearColor
---@field THEME_COLOR_BLUR_TWO FLinearColor
---@field THEME_COLOR_BLUR_THREE FLinearColor
---@field THEME_COLOR_BLUR_FOUR FLinearColor
---@field TOAST_DEFAULT_COLOR FLinearColor
---@field TOAST_WARNING_COLOR FLinearColor
---@field TOAST_CRITICAL_COLOR FLinearColor
---@field NAVWIDGET_BROADCAST_TIME float
---@field NAVWIDGET_DEFAULT_NORMAL_COLOR FLinearColor
---@field NAVWIDGET_DEFAULT_HOVER_COLOR FLinearColor
---@field NAVWIDGET_DEFAULT_SELECTED_COLOR FLinearColor
---@field NAVWIDGET_DEFAULT_PRESSED_COLOR FLinearColor
---@field NAVWIDGET_DEFAULT_DISABLED_COLOR FLinearColor
---@field NAVBUTTON_DOUBLE_CLICK_WINDOW float
---@field COLOR_THEME_UNSELECTED FLinearColor
---@field COLOR_THEME_TEEN FLinearColor
---@field COLOR_THEME_MONSTER FLinearColor
---@field COLOR_THEME_EVENT FLinearColor
---@field COLOR_THEME_BUTTON_ON FLinearColor
---@field COLOR_THEME_BUTTON_OFF FLinearColor
---@field COLOR_THEME_BUTTON_TEXT_ON FLinearColor
---@field COLOR_THEME_BUTTON_TEXT_OFF FLinearColor
---@field PRIMARY_NAVBUTTON_COLOR_NORMAL FLinearColor
---@field PRIMARY_NAVBUTTON_COLOR_SELECTED FLinearColor
---@field PRIMARY_NAVBUTTON_COLOR_HOVERED FLinearColor
---@field PRIMARY_NAVBUTTON_COLOR_PRESSED FLinearColor
---@field SECONDARY_NAVBUTTON_COLOR_NORMAL FLinearColor
---@field SECONDARY_NAVBUTTON_COLOR_SELECTED FLinearColor
---@field SECONDARY_NAVBUTTON_COLOR_HOVERED FLinearColor
---@field SECONDARY_NAVBUTTON_COLOR_PRESSED FLinearColor
---@field PRIMARY_ACTIONBUTTON_COLOR_NORMAL FLinearColor
---@field PRIMARY_ACTIONBUTTON_COLOR_HOVERED FLinearColor
---@field PRIMARY_ACTIONBUTTON_COLOR_PRESSED FLinearColor
---@field SECONDARY_ACTIONBUTTON_COLOR_NORMAL FLinearColor
---@field SECONDARY_ACTIONBUTTON_COLOR_HOVERED FLinearColor
---@field SECONDARY_ACTIONBUTTON_COLOR_PRESSED FLinearColor
---@field DISABLED_BUTTON_COLOR FLinearColor
---@field THEME_COLOR_NORMAL FLinearColor
---@field THEME_COLOR_ACTIVE FLinearColor
---@field THEME_COLOR_INACTIVE FLinearColor
---@field THEME_COLOR_NEUTRAL FLinearColor
---@field THEME_COLOR_WARNING FLinearColor
---@field THEME_COLOR_ERROR FLinearColor
---@field AFFINITY_COLOR_EXPERTISE FLinearColor
---@field AFFINITY_COLOR_RECOVERY FLinearColor
---@field AFFINITY_COLOR_SAVVY FLinearColor
---@field AFFINITY_COLOR_STEALTH FLinearColor
---@field AFFINITY_COLOR_SUPPORT FLinearColor
---@field AFFINITY_COLOR_TOUGHNESS FLinearColor
---@field AFFINITY_COLOR_NONE FLinearColor
---@field RARITY_COLOR_COMMON FLinearColor
---@field RARITY_COLOR_UNCOMMON FLinearColor
---@field RARITY_COLOR_RARE FLinearColor
---@field RARITY_COLOR_ULTRARARE FLinearColor
---@field RARITY_COLOR_LEGENDARY FLinearColor
---@field RARITY_COLOR_EVENT FLinearColor
---@field RARITY_COLOR_HIDDEN FLinearColor
---@field TROPHY_INCOMPLETE_COLOR FLinearColor
---@field TROPHY_COMPLETE_COLOR FLinearColor
---@field CURRENT_PLAYER_SETTINGS_VERSION_NUMBER uint32
---@field CATEGORYSWITCHER_BUTTON_NORMAL_COLOR FLinearColor
---@field CATEGORYSWITCHER_BUTTON_SELECTED_COLOR FLinearColor
---@field CATEGORYSWITCHER_BUTTON_HIGHLIGHTED_COLOR FLinearColor
---@field CATEGORYSWITCHER_TEXT_NORMAL_COLOR FLinearColor
---@field CATEGORYSWITCHER_TEXT_SELECTED_COLOR FLinearColor
---@field CATEGORYSWITCHER_TEXT_HIGHLIGHTED_COLOR FLinearColor
---@field JOURNEY_NUM_ACTS int32
---@field JOURNEY_MAXIMUM_ACTS int32
---@field JOURNEY_LINE_LOCKED_COLOR FLinearColor
---@field JOURNEY_LINE_UNLOCKED_COLOR FLinearColor
---@field JOURNEY_NODE_LOCKED_COLOR FLinearColor
---@field JOURNEY_NODE_UNLOCKED_COLOR FLinearColor
---@field JOURNEY_NODE_PURCHASED_COLOR FLinearColor
---@field LOADING_SCREEN_LAYER int32
---@field WATERMARK_LAYER int32
---@field STAGING_CONNECTION_TIMEOUT float
---@field LOBBY_TIMEOUT_CHECK_INTERVAL float
---@field LOBBY_DETAILS_UPDATE_TIMER float
---@field LOBBY_PRIZE_SCREEN_TIME float
---@field LOBBY_TIMEOUT_STRIKES_MAX int32
---@field LOBBY_CLIENT_SERVER_TIMEOUT_MULTIPLIER float
---@field EVIL_DEFAULT_MAX_TENSION_DISTANCE float
---@field EVIL_DEFAULT_MIN_TENSION_DISTANCE float
---@field EVIL_MAX_SEEABLE_DISTANCE float
---@field EVIL_BASE_MAX_RAGE float
---@field EVIL_PASSIVE_SECONDS_PER_RAGE float
---@field EVIL_FEASTING_RAGE_BONUS_MULTIPLIER float
---@field EVIL_SCREAM_RAGE_GAIN float
---@field BASE_PITCH_CONSTRAINT float
---@field FLAMETHROWER_BASE_LIFETIME float
---@field FLAMETHROWER_DAMAGE_TIME float
---@field FLAMETHROWER_ROTATION_MAX_SPEED float
---@field FLAMETHROWER_ROTATION_MIN_SCALE float
---@field FLAMETHROWER_TIME_TO_RAMP_RANGE float
---@field FLAMETHROWER_RANGE_RAMP_EXPONENT float
---@field FLAMETHROWER_BASE_RANGE float
---@field FLAMETHROWER_TIME_TO_REACH_RANGE float
---@field FLAMETHROWER_PROJECTILE_DAMAGE_DECAY_TIMER float
---@field FLAMETHROWER_PROJECTILE_FIRE_RATE float
---@field FLAMETHROWER_PROJECTILE_FALLOFF_TIME float
---@field FLAMETHROWER_PROJECTILE_BOUNCINESS float
---@field FLAMETHROWER_PROJECTILE_SPAWN_OFFSET float
---@field FLAMETHROWER_PROJECTILE_COLLISION_CAPSULE_SIZE float
---@field FLAMETHROWER_PROJECTILE_DAMAGE_CAPSULE_SIZE float
---@field HOLYSLINGSHOT_WEAPON_CHARGEMULTIPLIER float
---@field HOLYSLINGSHOT_WEAPON_DECREASEMULTIPLIER float
---@field HOLYSLINGSHOT_PROJECTILE_SPEED float
---@field HOLYSLINGSHOT_PROJECTILE_SPAWN_POSITION FVector
---@field RAYGUN_PROJECTILE_SPAWN_POSITION FVector
---@field RAYGUN_PROJECTILE_CLIENT_AUTHORITY boolean
---@field RAYGUN_PROJECTILE_SERVER_EXPIRY_GRACEPERIOD float
---@field STATICSHIELD_WARMUP_TIME float
---@field STATICSHIELD_TIME_UNTIL_POWERED float
---@field STATICSHIELD_ZAP_MAX_DISTANCE float
---@field STATICSHIELD_ENERGYPOINTS_REQUIRED float
---@field STATICSHIELD_BASE_MAX_SHIELD_TIME float
---@field STATICSHIELD_ACTIVATING_DEPLETION_FACTOR float
---@field STATICSHIELD_BASE_ENERGYPOINT_ENERGIZE_TIME float
---@field STATICSHIELD_DAMAGE_TIME float
---@field STATICSHIELD_MESH_FADEOUT_TIME float
---@field SHOCK_AURA_POWERED_COLOR FVector
---@field SHOCK_AURA_UNPOWERED_COLOR FVector
---@field HOLY_AURA_COLOR FVector
---@field BURN_AURA_COLOR FVector
---@field OCCULT_AURA_ABSORB_COLOR FVector
---@field OCCULT_AURA_POWERED_COLOR FVector
---@field STATICSHIELD_ACTIVE_SPEED_RAMP_TIME float
---@field TALISMAN_WARMUP_TIME float
---@field TALISMAN_TIME_UNTIL_POWERED float
---@field TALISMAN_ABSORB_AMOUNT_REQUIRED float
---@field TALISMAN_BASE_MAX_BEAM_TIME float
---@field TALISMAN_BASE_BEAM_MAX_DISTANCE float
---@field TALISMAN_CONE_LOCK_RADIUS float
---@field TALISMAN_CONE_UNLOCK_RADIUS float
---@field TALISMAN_BEAM_DAMAGE_TIME float
---@field PROJECTILE_WEAPON_AIM_MAGNETISM_MIN float
---@field PROJECTILE_WEAPON_AIM_MAGNETISM_MAX float
---@field PROJECTILE_WEAPON_AIM_MAGNETISM_CURVE_POWER float
---@field CHASE_MIN_FACING_YAW_RANGE float
---@field GOOD_CHASE_START_MIN_DISTANCE float
---@field GOOD_CHASE_REFRESH_MIN_DISTANCE float
---@field EVIL_CHASE_START_MIN_DISTANCE float
---@field EVIL_CHASE_REFRESH_MIN_DISTANCE float
---@field CHASE_ACTIVE_TIME float
---@field CHASE_ONGOING_MAX_TOLERANCE_SECS float
---@field EVIL_STOP_CHASE_DISTANCE float
---@field BASECHAR_LOOKUPRATE float
---@field BASECHAR_LOOK_MOUSE_SENS_MULT float
---@field BASECHAR_LOOK_MOUSE_BASE_SENS float
---@field BASECHAR_LOOK_HORIZONTAL_SENS_MULT float
---@field BASECHAR_LOOK_VERTICAL_SENS_MULT float
---@field BASECHAR_LOOK_HORIZONTAL_BASE_SENS float
---@field BASECHAR_LOOK_VERTICAL_BASE_SENS float
---@field BASECHAR_MOVEMENT_INTERACTION_BUFFER_TIME float
---@field BASECHAR_MOVEMENT_INTERACTION_MAX_TIME float
---@field BASECHAR_MOVEMENT_FRICTION_LERP_SPEED float
---@field BASECHAR_MOVEMENT_FRICTION_FORCE_MULTIPLIER float
---@field BASECHAR_MOVEMENT_FRICTION_MIN_SPEED_MULTIPLIER float
---@field BASECHAR_MOVEMENT_FRICTION_DOT_THRESHOLD float
---@field BASECHAR_CAPSULE_RADIUS float
---@field BASECHAR_CAPSULE_HALF_HEIGHT float
---@field BASECHAR_CAPSULE_PERCH_RADIUS float
---@field BASECHAR_PING_COOLDOWN_DURATION float
---@field BASECHAR_PING_LIFETIME float
---@field BASECHAR_PING_MIN_PENALTY_TIMER float
---@field BASECHAR_PING_PENALTY_TIME float
---@field BASECHAR_PING_VISIBILITY_BASE_RADIUS float
---@field BASECHAR_PING_VISIBILITY_RADIUS_MULTIPLIER float
---@field BASECHAR_PING_DOUBLECLICK_THRESHOLD float
---@field BASECHAR_PING_OFFSET_CRAFTINGSTATION float
---@field BASECHAR_PING_OFFSET_PICKUP float
---@field BASECHAR_PING_OFFSET_CHARACTER float
---@field BASECHAR_PING_OFFSET_REMOTECHAR float
---@field BASECHAR_PING_OFFSET_MEDKIT float
---@field BASECHAR_PING_OFFSET_HIDEPOINT float
---@field BASECHAR_PING_OFFSET_VENDINGMACHINE float
---@field BASECHAR_PING_OFFSET_WASTEBASKET float
---@field BASECHAR_PING_OFFSET_LOCKBOX float
---@field BASECHAR_PING_NUM_MAX_TEEN int32
---@field BASECHAR_PING_NUM_MAX_EVIL int32
---@field BASECHAR_PING_EVIL_AUTOREPLACE_DISTANCE int32
---@field BASECHAR_PING_EVIL_MIN_SPOTLIGHT_HEIGHT float
---@field BASECHAR_PING_COLOR_EVIL_0 FColor
---@field BASECHAR_PING_COLOR_EVIL_1 FColor
---@field BASECHAR_PING_COLOR_EVIL_2 FColor
---@field TEEN_HIGH_FALL_DURATION_THRESHOLD float
---@field TEEN_FALL_DURATION_MAX_TIME float
---@field TEEN_MAX_STEALTH_FALL_DISTANCE float
---@field TEEN_HIT_REACTION_LENGTH float
---@field TEEN_MIN_FALL_DURATION float
---@field TEEN_MAX_FALL_DURATION float
---@field TEEN_PERM_MARRED_TEEN_HIT_COUNTER int32
---@field TEEN_MARRED_LEVEL_1_TIME float
---@field TORN_STATUS_EFFECT_BLOOD_DROP_RATE_MULTIPLIER_INCREASE float
---@field TORN_STATUS_EFFECT_BLOOD_SIZE_MULTIPLIER_INCREASE float
---@field TORN_STATUS_EFFECT_BLOOD_LIFETIME_MULTIPLIER_INCREASE float
---@field TORN_STATUS_EFFECT_DEBUG_DURATION float
---@field TPCHAR_STATICSHIELD_ROTATION_RATE float
---@field TPCHAR_FALLING_LATERAL_FRICTION float
---@field TPCHAR_TURNINPLACE_ANIMLENGTH float
---@field TPCHAR_BREAKING_DECELERATION_FALLING float
---@field TPCHAR_CAPSULE_CROUCH_ANIM_DURATION float
---@field TPCHAR_CAPSULE_LANDING_ANIM_DURATION float
---@field TPCHAR_CAPSULE_CROUCH_HALF_HEIGHT float
---@field TPCHAR_CAPSULE_ROLLBACK_NUM_TIMESTEPS int32
---@field TPCHAR_TOGGLE_CROUCH_CANCEL_DELAY_AFTER_ACTION float
---@field TPCHAR_CAPSULE_GOOD_SHAPE_COLOR FColor
---@field TPCHAR_CAPSULE_EVIL_SHAPE_COLOR FColor
---@field TPCHAR_CAPSULE_TARGETING_SHAPE_COLOR FColor
---@field DOLLMINION_CAPSULE_HALF_HEIGHT float
---@field DOLLMINION_TARGETING_CAPSULE_RADIUS float
---@field TPCHAR_BASE_SPEED float
---@field TEEN_CRAWL_SPEED_MULTIPLIER float
---@field TEEN_CRAWL_SPEED_MINIGAME_BOOST_INCREASE_FACTOR float
---@field TEEN_CROUCH_SPEED_MULTIPLIER float
---@field TEEN_STEALTH_SPEED_MULTIPLIER float
---@field TEEN_WALK_SPEED_MULTIPLIER float
---@field TEEN_RUN_SPEED_MULTIPLIER float
---@field TEEN_TALISMAN_CROUCH_SPEED_MULTIPLIER float
---@field TEEN_TALISMAN_WALK_SPEED_MULTIPLIER float
---@field TEEN_MOLOTOV_AIM_MOVEMENT_SPEED_MULTIPLIER float
---@field TEEN_SLINGSHOT_AIM_MOVEMENT_SPEED_MULTIPLIER float
---@field TEEN_FLAMETHROWER_AIM_MOVEMENT_SPEED_MULTIPLIER float
---@field TEEN_CROSS_AIM_MOVEMENT_SPEED_MULTIPLIER float
---@field TEEN_CROSS_AIM_MOVEMENT_ANIMATED_SPEED float
---@field TEEN_SLINGSHOT_AIM_MOVEMENT_ANIMATED_SPEED float
---@field TEEN_TALISMAN_AIM_MOVEMENT_ANIMATED_SPEED float
---@field TEEN_TALISMAN_CHARGE_MOVEMENT_ANIMATED_SPEED float
---@field TEEN_TALISMAN_CROUCH_MOVEMENT_ANIMATED_SPEED float
---@field TEEN_MOLOTOV_AIM_MOVEMENT_ANIMATED_SPEED float
---@field TEEN_FLAMETHROWER_AIM_MOVEMENT_ANIMATED_SPEED float
---@field TEEN_STATICSHIELD_AIM_MOVEMENT_ANIMATED_SPEED float
---@field TEEN_RAYGUN_AIM_MOVEMENT_ANIMATED_SPEED float
---@field TEEN_DEMONSWORD_AIM_MOVEMENT_ANIMATED_SPEED float
---@field TEEN_HOLYSTAFF_AIM_MOVEMENT_ANIMATED_SPEED float
---@field TEEN_FLAMEMINE_AIM_MOVEMENT_ANIMATED_SPEED float
---@field TEEN_DEMONSWORD_AIM_MOVEMENT_SPEED_MULTIPLIER float
---@field TEEN_RAYGUN_AIM_MOVEMENT_SPEED_MULTIPLIER float
---@field TEEN_HOLYSTAFF_AIM_MOVEMENT_SPEED_MULTIPLIER float
---@field TEEN_TALISMAN_AIM_MOVEMENT_SPEED_MULTIPLIER float
---@field TEEN_ADRENALINE_SPEED_BONUS_MULTIPLIER float
---@field TEEN_INJURY_RUN_SPEED_PENALTY_MULTIPLIER float
---@field TEEN_INJURY_WALK_SPEED_PENALTY_MULTIPLIER float
---@field TEEN_STATICSHIELD_MIN_SPEED_MULTIPLIER float
---@field TEEN_STATICSHIELD_BASE_MAX_SPEED_MULTIPLIER float
---@field TEEN_WALKIE_TALKIE_WALK_SPEED_MULTIPLIER float
---@field MAGIC_SPHERE_SPEED_MULTIPLIER float
---@field MAGIC_SPHERE_ACCELERATION float
---@field RCCOPTER_SPEED_MULTIPLIER float
---@field RCCOPTER_ACCELERATION float
---@field EVIL_INCORPOREAL_SPEED_MULTIPLIER float
---@field EVIL_CROSS_RUN_SPEED_MULTIPLIER_MIN float
---@field EVIL_CROSS_RUN_SPEED_MULTIPLIER_MAX float
---@field EVIL_SLINGSHOT_RUN_SPEED_MULTIPLIER float
---@field EVIL_MOLOTOV_RUN_SPEED_MULTIPLIER float
---@field EVIL_STATICSHIELD_RUN_SPEED_MULTIPLIER float
---@field EVIL_PARCHMENT_RUN_SPEED_MULTIPLIER float
---@field EVIL_FLAMETHROWER_RUN_SPEED_MULTIPLIER_MIN float
---@field EVIL_FLAMETHROWER_RUN_SPEED_MULTIPLIER_MAX float
---@field EVIL_FLAMEMINE_RUN_SPEED_MULTIPLIER_MIN float
---@field EVIL_FLAMEMINE_RUN_SPEED_MULTIPLIER_MAX float
---@field EVIL_TALISMAN_RUN_SPEED_MULTIPLIER_MIN float
---@field EVIL_TALISMAN_RUN_SPEED_MULTIPLIER_MAX float
---@field EVIL_RCCOPTER_RUN_SPEED_MULTIPLIER_MIN float
---@field EVIL_RCCOPTER_RUN_SPEED_MULTIPLIER_MAX float
---@field EVIL_RAYGUN_RUN_SPEED_MULTIPLIER_MIN float
---@field EVIL_RAYGUN_RUN_SPEED_MULTIPLIER_MAX float
---@field EVIL_DEMONSWORD_RUN_SPEED_MULTIPLIER_MIN float
---@field EVIL_DEMONSWORD_RUN_SPEED_MULTIPLIER_MAX float
---@field EVIL_HOLYSTAFF_RUN_SPEED_MULTIPLIER_MIN float
---@field EVIL_HOLYSTAFF_RUN_SPEED_MULTIPLIER_MAX float
---@field EVIL_DISINTEGRATION_RUN_SPEED_MULTIPLIER float
---@field EVIL_BASE_ABILITY_CHARGE_MOVESPEED_MULTIPLIER float
---@field EVIL_WEAPON_DISTANCE_RUN_SPEED_MULTIPLIER_MIN float
---@field EVIL_WEAPON_DISTANCE_RUN_SPEED_MULTIPLIER_MAX float
---@field EVIL_WEAPON_DISTANCE_RUN_SPEED_DISTANCE_MIN float
---@field EVIL_WEAPON_DISTANCE_RUN_SPEED_DISTANCE_MAX float
---@field WEAPON_CRAFT_GAMEMODE_MULTIPLIER float
---@field CRAFTING_FLAMETHROWER_BASE_TIME float
---@field CRAFTING_MOLOTOV_BASE_TIME float
---@field CRAFTING_RCCOPTER_BASE_TIME float
---@field CRAFTING_PARCHMENT_BASE_TIME float
---@field CRAFTING_CROSS_BASE_TIME float
---@field CRAFTING_SLINGSHOT_BASE_TIME float
---@field CRAFTING_TALISMAN_BASE_TIME float
---@field CRAFTING_STATICSHIELD_BASE_TIME float
---@field CRAFTING_DEMONSWORD_BASE_TIME float
---@field CRAFTING_RAYGUN_BASE_TIME float
---@field CRAFTING_HOLYSTAFF_BASE_TIME float
---@field CRAFTING_FLAMEMINE_BASE_TIME float
---@field CRAFTING_BASE_DECAY_MULTIPLIER float
---@field WEREWOLF_RELATIVE_FPMESH_LOCATION FVector
---@field WEREWOLF_TP_ATTACK_PARTICLE_ROTATION FRotator
---@field WEREWOLF_FP_ATTACK_PARTICLE_LOCATION FVector
---@field WEREWOLF_RUN_SPEED_MULTIPLIER float
---@field WEREWOLF_ATTACK_HELD_RUN_SPEED_MULTIPLIER float
---@field WEREWOLF_ATTACK_RECOVERY_RUN_SPEED_MULTIPLIER float
---@field WEREWOLF_BERSERK_SPEED_BONUS_MULTIPLIER float
---@field WEREWOLF_BERSERK_ATTACK_RECOVERING_SPEED_BONUS_MULTIPLIER float
---@field WEREWOLF_BERSERK_TENSION_DISTANCE_BONUS_MULTIPLIER float
---@field WEREWOLF_ABILITY_LOCKOUT_BERSERK float
---@field EFFIGY_RAGE_FURY_MAX_SECONDS float
---@field EFFIGY_RAGE_FURY_TOTAL_INCREASE_MULTIPLIER float
---@field EFFIGY_AGONY_MAX_SECONDS float
---@field EFFIGY_AGONY_LIFE_LOSS_TIME_INCREASE float
---@field EFFIGY_POWER_MAX_SECONDS float
---@field EFFIGY_POWER_COOLDOWN_MULTIPLIER float
---@field EFFIGY_DREAD_MAX_SECONDS float
---@field EFFIGY_PESTILENCE_MARRED_MAX_SECONDS float
---@field EFFIGY_BASE_CHARGE_HITS_REQUIRED int32
---@field DOLLMASTER_TP_ATTACK_PARTICLE_ROTATION FRotator
---@field DOLLMASTER_FP_ATTACK_PARTICLE_LOCATION FVector
---@field DOLLMASTER_RUN_SPEED_MULTIPLIER float
---@field DOLLMASTER_ATTACK_HELD_RUN_SPEED_MULTIPLIER float
---@field DOLLMASTER_ATTACK_RECOVERY_RUN_SPEED_MULTIPLIER float
---@field DOLLMASTER_BONENAME_TRAP_SPAWN FName
---@field DOLLMINION_TP_ATTACK_PARTICLE_ROTATION FRotator
---@field DOLLMINION_FP_ATTACK_PARTICLE_LOCATION FVector
---@field DOLLMINION_RUN_SPEED_MULTIPLIER float
---@field DOLLMINION_ATTACK_HELD_RUN_SPEED_MULTIPLIER float
---@field DOLLMINION_ATTACK_RECOVERY_RUN_SPEED_MULTIPLIER float
---@field DOLLMINION_LEAP_SPEED_MULTIPLIER float
---@field DOLLMINION_LEAP_SPEED_DAMAGED_MULTIPLIER float
---@field DOLLMINION_DESTROY_DELAY_TIME float
---@field DOLLMINION_LEAP_CHARGE_MOVESPEED_MULTIPLIER float
---@field DOLLMINION_LEAP_TRIGGERED_COOLDOWN_REDUCTION_MULTIPLIER float
---@field TOAD_RELATIVE_FPMESH_LOCATION FVector
---@field TOAD_TP_ATTACK_PARTICLE_ROTATION FRotator
---@field TOAD_FP_ATTACK_PARTICLE_LOCATION FVector
---@field TOAD_RUN_SPEED_MULTIPLIER float
---@field TOAD_ATTACK_HELD_RUN_SPEED_MULTIPLIER float
---@field TOAD_ATTACK_RECOVERY_RUN_SPEED_MULTIPLIER float
---@field AUGMENT_TOAD_ARMOR_HITBONUS_TORN_DURATION float
---@field ANOMALY_IGNORE_FALLING_FRAMES float
---@field MIMIC_RUN_SPEED_MULTIPLIER float
---@field MIMIC_BONUS_CROUCH_SPEED_MULTIPLIER_INCREASE float
---@field AI_MIMIC_MAX_LIFE_SPAN float
---@field AI_MIMIC_RAGDOLL_LIFE_SPAN float
---@field ERADICATOR_RELATIVE_FPMESH_LOCATION FVector
---@field ERADICATOR_FPCAMERA_BOOM_LOCATION FVector
---@field ERADICATOR_FPMESH_LOCATION FVector
---@field ERADICATOR_RUN_SPEED_MULTIPLIER float
---@field ERADICATOR_ATTACK_HELD_RUN_SPEED_MULTIPLIER float
---@field ERADICATOR_ATTACK_RECOVERY_RUN_SPEED_MULTIPLIER float
---@field ERADICATOR_VEHICLE_SPEED_BONUS_MULTIPLIER float
---@field ERADICATOR_ABILITY_LOCKOUT_MODESWAP float
---@field ERADICATOR_ABILITY_LOCKOUT_ELECTRICSURGE float
---@field ERADICATOR_ABILITY_LOCKOUT_SCANNERBEAM float
---@field ERADICATOR_VEHICLE_TENSION_DISTANCE_BONUS_MULTIPLIER float
---@field ERADICATOR_CHANCE_TO_SAY_HIT_INJURY_PHRASE float
---@field ERADICATOR_MIN_HITS_BEFORE_SAY_HIT_INJURY_PHRASE int32
---@field TPCHAR_WEAPON_USEDUP_TIME_MAXIMUM float
---@field TPCHAR_PROJECTION_ARC FVector
---@field TPCHAR_PROJECTION_OFFSET FVector
---@field TPCHAR_PROJECTION_LIFETIME float
---@field TPCHAR_PROJECTION_INTERVAL float
---@field TPCHAR_PROJECTION_MAXIMUM_DISTANCE float
---@field TPCHAR_FRIENDLY_PROXIMITY_CLOSE float
---@field TPCHAR_FRIENDLY_PROXIMITY_MEDIUM float
---@field TPCHAR_FRIENDLY_PROXIMITY_FAR float
---@field PING_SPHERECAST_RADIUS_SMALL float
---@field PING_SPHERECAST_RADIUS_BIG float
---@field PING_HOVER_RADIUS float
---@field PING_INDICATOR_MIN_SIZE float
---@field PING_INDICATOR_MIN_SIZE_RADIUS float
---@field HUD_GUTTER_HORIZONTAL_SCALE float
---@field HUD_GUTTER_VERTICAL_SCALE float
---@field HUD_GUTTER_CORNER_TIGHTNESS float
---@field HUD_GUTTER_LOWER_DEAD_ZONE_ANGLE float
---@field PING_INDICATOR_MAX_SIZE_RADIUS float
---@field HUD_ACTION_BAR_LERP_SPEED float
---@field HUD_ACTION_BAR_SNAP_PERCENT_UPPER float
---@field HUD_ACTION_BAR_SNAP_PERCENT_LOWER float
---@field HUD_ACTION_BAR_SNAP_DIFFERENCE float
---@field HUD_RETICLE_COLOR_STIGMA_BURN FLinearColor
---@field HUD_RETICLE_COLOR_STIGMA_HOLY FLinearColor
---@field HUD_RETICLE_COLOR_STIGMA_OCCULT FLinearColor
---@field HUD_RETICLE_COLOR_STIGMA_SHOCK FLinearColor
---@field HUD_WEAPONCARD_LOCKED_OPACITY float
---@field TPCHAR_MAX_AIMING_PITCH float
---@field TPCHAR_BASE_GROUND_FRICTION float
---@field TPCHAR_GOOD_ACCELERATION float
---@field TPCHAR_GOOD_BOOSTED_ACCELERATION float
---@field TPCHAR_EVIL_BOOSTED_ACCELERATION float
---@field TPCHAR_STATIC_SHIELD_ACCELERATION float
---@field TPCHAR_OBSERVER_ACCELERATION float
---@field TPCHAR_OBSERVER_DECELERATION float
---@field EVIL_ACCELERATION float
---@field EVIL_ATTACK_RECOVERY_ACCELERATION float
---@field EVIL_ATTACK_VALIDATION_RANGE_MULTIPLIER float
---@field FPCHAR_MAX_DANGER_SENSE_RANGE float
---@field FPCHAR_DANGERSENSE_PRIMARYSWIRL_WOUND_COLOR FLinearColor
---@field FPCHAR_DANGERSENSE_SECONDARYSWIRL_WOUND_COLOR FLinearColor
---@field FPCHAR_DANGERSENSE_PRIMARYSWIRL_STUN_COLOR FLinearColor
---@field FPCHAR_DANGERSENSE_SECONDARYSWIRL_STUN_COLOR FLinearColor
---@field FPCHAR_DANGERSENSE_SETTINGS_COLOR_WHITE FColor
---@field FPCHAR_DANGERSENSE_SETTINGS_COLOR_BLUE FColor
---@field FPCHAR_DANGERSENSE_SETTINGS_COLOR_MAGENTA FColor
---@field FPCHAR_DANGERSENSE_SETTINGS_COLOR_YELLOW FColor
---@field FPCHAR_DANGERSENSE_SETTINGS_COLOR_CYAN FColor
---@field FPCHAR_DANGERSENSE_SETTINGS_COLOR_RED FColor
---@field FPCHAR_DANGERSENSE_SETTINGS_COLOR_GREEN FColor
---@field FPCHAR_DANGERSENSE_SETTINGS_SCALE_MAX float
---@field FPCHAR_DANGERSENSE_SETTINGS_SCALE_MIN float
---@field FPCHAR_FEAST_TARGET_MIN_FACING_DOTPRODUCT float
---@field FPCHAR_TEEN_COLLISION_THRESHOLD_SECONDS float
---@field FPCHAR_STUN_INTRO_OUTRO_TIME float
---@field FPCHAR_VICTIMFINDER_SCALE FVector
---@field FPCHAR_RETICLE_ASSIST_SCALE_REDUCTION FVector
---@field FPCHAR_VICTIMFINDER_EXTENDED_PITCHDOWN_REACH float
---@field EVIL_BONENAME_FEAST_SOURCE FName
---@field EVIL_RIGHT_BONENAME_BOUNCE_CHECK_START FName
---@field EVIL_RIGHT_BONENAME_BOUNCE_CHECK_END FName
---@field EVIL_LEFT_BONENAME_BOUNCE_CHECK_START FName
---@field EVIL_LEFT_BONENAME_BOUNCE_CHECK_END FName
---@field DOLLMINION_RELATIVE_FPMESH_LOCATION FVector
---@field DOLLMINION_LEAP_ACCELERATION float
---@field DOLLMINION_LEAP_MAX_HEIGHT float
---@field DOLLMINION_LEAP_MAX_ACCELERATION_SCALE float
---@field DOLLMINION_LEAP_MIN_ACCELERATION_SCALE float
---@field DOLLMINION_LEAP_TIME float
---@field DOLLMINION_WEAPON_DAMAGE_TIME_MULTIPLIER float
---@field EVIL_MINIMUM_FACING_DOT_PRODUCT float
---@field EVIL_SCREAM_RANGE float
---@field EVIL_RESPAWN_SCREAM_RANGE float
---@field EVIL_SCREAM_EFFECT_VERTEX_DENSITY int32
---@field EVIL_SCREAM_EFFECT_DURATION float
---@field EVIL_SCREAM_STARTING_RADIUS float
---@field EVIL_SCREAM_MIN_RADIUS_MULTIPLIER float
---@field EVIL_SCREAM_POST_PROCESS FPostProcessSettings
---@field EVIL_SCREAM_MAX_SHOCKWAVES int32
---@field EVIL_RESPAWN_SCREAM_MAX_SHOCKWAVES int32
---@field EVIL_SCREAM_SHOCKWAVE_DELAY float
---@field WEREWOLF_BERSERK_DURATION float
---@field WEREWOLF_BASE_HOWL_RANGE float
---@field WEREWOLF_BERSERK_BASE_COOLDOWN float
---@field WEREWOLF_HOWL_BASE_COOLDOWN float
---@field WEREWOLF_SENSE_BASE_COOLDOWN float
---@field WEREWOLF_HOWL_BASE_CHARGE_TIME float
---@field WEREWOLF_BERSERK_BASE_CHARGE_TIME float
---@field WEREWOLF_SENSE_BASE_CHARGE_TIME float
---@field DOLLMASTER_TRAP_BASE_COOLDOWN float
---@field DOLLMASTER_SUMMON_BASE_COOLDOWN float
---@field DOLLMASTER_SUMMON_RELEASE_COOLDOWN_REDUCTION float
---@field DOLLMASTER_TELEPORT_BASE_COOLDOWN float
---@field DOLLMINION_LEAP_BASE_COOLDOWN float
---@field DOLLMINION_LEAP_INITIAL_COOLDOWN_MULTIPLIER float
---@field EVIL_BASE_INCORPOREAL_TIME float
---@field EVIL_MINIMUM_INCORPOREAL_TIME float
---@field EVIL_DISINTEGRATION_TIME float
---@field EVIL_REINTEGRATION_TIME float
---@field EVIL_STUN_TIME float
---@field EVIL_STUN_RESISTANCE_TIME_MULTIPLIER float
---@field EVIL_STUN_MIN_MULTIPLIER float
---@field EVIL_STUN_MAX_MULTIPLIER float
---@field EVIL_STUN_MAX_TIME float
---@field EVIL_STUN_TIME_REDUCTION_RESET_TIME float
---@field EVIL_MAX_NUM_ABILITIES int32
---@field EVIL_FEAST_COOLDOWN_BONUS_MULTIPLIER float
---@field EVIL_SCREAM_COOLDOWN_BONUS_MULTIPLIER float
---@field EVIL_BONUS_COOLDOWN_EQUALIZER float
---@field EVIL_FLINCH_SPEED_MULTIPLIER float
---@field EVIL_SHARD_FLINCH_TIME float
---@field ATTACKABLE_OBJECT_RECOVERY_PLAYRATE_INCREASE float
---@field DOLLMASTER_BASE_MAX_TRAPS int32
---@field DOLLMASTER_MIN_TRAPS int32
---@field DOLLMASTER_TRAP_TRIGGERED_LIFETIME float
---@field DOLLMASTER_TRAP_SELECT_CAMERA_THRESHOLD float
---@field DOLLMASTER_TRAP_DISARM_TIME float
---@field DOLLMASTER_TRAP_DISARM_DISTANCE float
---@field DOLLMASTER_TRAP_FACING_LERP_SPEED float
---@field DOLLMASTER_TRAP_MAX_PLACEMENT_RADIUS float
---@field DOLLMASTER_TRAP_PLACEMENT_ALWAYS_VISIBLE boolean
---@field DOLLMASTER_TRAP_POST_RELEASE_INACTIVE_TIME float
---@field DOLLMASTER_TRAP_ABILITY_ABORT_INACTIVE_TIME float
---@field DOLLMASTER_DANGER_VIGNETTE_MIN_ALPHA float
---@field DOLLMASTER_DANGER_VIGNETTE_MAX_ALPHA float
---@field DOLLMASTER_BASE_TRAP_DETECTION_RADIUS float
---@field DOLLMASTER_BASE_TRAP_DETECTION_HEIGHT float
---@field DOLLMASTER_BASE_TRAP_PROXIMITY float
---@field DOLLMASTER_TRAP_MIN_APART_DISTANCE float
---@field DOLLMASTER_TRAP_MIN_ICON_DRAW_DISTANCE float
---@field DOLLMASTER_TRIGGERED_TRAP_CHARGE_TIME_REDUCTION_FACTOR float
---@field DOLLMASTER_MAX_DANGER_SENSE_POSSESSION_RANGE float
---@field DOLLMASTER_ABILITY_TRAP_CHARGE_TIME float
---@field DOLLMASTER_ABILITY_SUMMON_CHARGE_TIME float
---@field DOLLMASTER_ABILITY_TELEPORT_CHARGE_TIME float
---@field DOLLMASTER_ABILITY_REMOVE_TRAP_CHARGE_TIME float
---@field DOLLMASTER_DESTROY_MINION_EXPOSE_TIME float
---@field DOLLMASTER_TRAP_MAX_OUTLINE_VIEW_DISTANCE float
---@field DOLLMINION_DEFAULT_ACTIVE_TIME float
---@field DOLLMINION_LIFETIME_VIGNETTE_THRESHOLD float
---@field DOLLMINION_LIFETIME_VIGNETTE_MAX_AMOUNT float
---@field DOLLMINION_ABILITY_SUMMON_CHARGE_TIME float
---@field DOLLMINION_ABILITY_LEAP_CHARGE_TIME float
---@field DOLLMINION_TIME_TO_SCORE_AFTER_LEAP float
---@field DOLLMASTER_POSSESS_POSTPROCESS_TIME float
---@field WEREWOLF_SENSE_DURATION float
---@field WEREWOLF_SENSE_BASE_MINIMUM_RANGE float
---@field WEREWOLF_SENSE_BASE_MAXIMUM_RANGE float
---@field WEREWOLF_BERSERK_CHARGE_MOVESPEED_MULTIPLIER float
---@field WEREWOLF_HOWL_CHARGE_MOVESPEED_MULTIPLIER float
---@field WEREWOLF_SENSE_CHARGE_MOVESPEED_MULTIPLIER float
---@field TOAD_LEAP_MAX_ACCELERATION_SCALE float
---@field TOAD_LEAP_MIN_ACCELERATION_SCALE float
---@field TOAD_LEAP_ACCELERATION float
---@field TOAD_LEAP_MAX_HEIGHT float
---@field TOAD_LEAP_SPEED_MULTIPLIER float
---@field TOAD_LEAP_SPEED_DAMAGED_MULTIPLIER float
---@field TOAD_LEAP_TIME float
---@field TOAD_LEAP_BASE_COOLDOWN float
---@field TOAD_LEAP_SHOCKWAVE_DURATION float
---@field TOAD_LEAP_STAGGER_DURATION float
---@field TOAD_LEAP_SHOCKWAVE_RANGE float
---@field TOAD_LEAP_CHARGE_MOVESPEED_MULTIPLIER float
---@field TOAD_ACIDARMOR_BASE_CHARGE_TIME float
---@field TOAD_LEAP_BASE_CHARGE_TIME float
---@field TOAD_LEAP_WEAPON_SHOCKWAVE_SIZE_REDUCTION_MULTIPLIER float
---@field TOAD_ECHOLOCATION_BASE_CHARGE_TIME float
---@field TOAD_ACIDARMOR_BASE_DURATION float
---@field TOAD_ACIDARMOR_CHARGE_MOVESPEED_MULTIPLIER float
---@field TOAD_ACIDARMOR_BASE_COOLDOWN float
---@field TOAD_ACIDARMOR_SHATTER_FLINCH_TIME float
---@field TOAD_ECHOLOCATION_BASE_COOLDOWN float
---@field TOAD_ECHOLOCATION_CLOSE_RANGE float
---@field TOAD_ECHOLOCATION_RANGE float
---@field TOAD_ECHOLOCATION_RESONANCE_TIME_TO_REVEAL_FOR float
---@field TOAD_ECHOLOCATION_EFFECT_DURATION float
---@field TOAD_ECHOLOCATION_CHARGE_MOVESPEED_MULTIPLIER float
---@field TOAD_ECHOLOCATION_CLONE_MAX_OUTLINE_VALUE float
---@field TOAD_ECHOLOCATION_CLONE_MIN_OUTLINE_VALUE float
---@field TOAD_ECHOLOCATION_CLONE_MAX_OUTLINE_DISTANCE float
---@field TOAD_ECHOLOCATION_CLONE_MIN_OUTLINE_DISTANCE float
---@field TOAD_ECHOLOCATION_CLONE_BRIGHTNESS_MULTIPLIER float
---@field TOAD_TIME_TO_SCORE_AFTER_ECHOLOCATION float
---@field TOAD_TIME_TO_SCORE_AFTER_LEAP float
---@field TOAD_LEAP_CAMERA_LERP_FACTOR float
---@field ERADICATOR_VEHICLEMODE_ACCELERATION float
---@field ERADICATOR_VEHICLEMODE_BRAKING_DECELERATION float
---@field ERADICATOR_VEHICLEMODE_GROUND_FRICTION float
---@field ERADICATOR_VEHICLEMODE_PIVOT_MAXSPEED_MULT float
---@field ERADICATOR_VEHICLEMODE_PIVOT_IMPULSE float
---@field ERADICATOR_VEHICLEMODE_MIN_SPEED_TO_TRIGGER_IMPULSE float
---@field ERADICATOR_VEHICLE_INPUT_CLEAR_TIMER float
---@field ERADICATOR_VEHICLEMODE_SPEEDBOOST_REDUCTION_MULTIPLIER float
---@field ERADICATOR_VEHICLEMODE_DOT_PRODUCT_THRESHOLD float
---@field ERADICATOR_VEHICLEMODE_MIN_SPEED_THRESHOLD float
---@field ERADICATOR_VEHICLEMODE_NUMBER_OF_MOVEMENT_VECTORS int32
---@field ERADICATOR_SCANNERBEAM_CHARGE_TIME float
---@field ERADICATOR_SCANNERBEAM_REVEAL_TIME float
---@field ERADICATOR_TARGETED_SURGE_CHARGE_TIME float
---@field ERADICATOR_TARGETED_SURGE_TIME_TO_ADD float
---@field ERADICATOR_TARGETED_SURGE_PERCENT_OF_MAX_TO_ADD float
---@field ERADICATOR_TARGETED_SURGE_BASE_OVERCHARGE float
---@field ERADICATOR_TARGETED_SURGE_BASE_OVERCHARGE_NO_WEAPON_HIGHLIGHT float
---@field ERADICATOR_TARGETED_SURGE_BASE_COOLDOWN float
---@field ERADICATOR_TARGETED_SURGE_FAST_CHARGE_MULTIPLIER float
---@field ERADICATOR_TARGETED_SURGE_FAST_CHARGE_TIME float
---@field ERADICATOR_TARGETED_SURGE_MAX_NUM_CHARGES float
---@field ERADICATOR_TARGETED_SURGE_STUNTIME float
---@field ERADICATOR_TIME_TO_SCORE_AFTER_SCANNERBEAM float
---@field ERAD_TIME_TO_SCORE_AFTER_MODESWAP float
---@field ERADICATOR_SCANNERBEAM_BASE_COOLDOWN float
---@field ERADICATOR_TARGETED_SURGE_CHARGE_MOVESPEED_MULTIPLIER float
---@field ERADICATOR_SCANNERBEAM_CHARGE_MOVESPEED_MULTIPLIER float
---@field ERADICATOR_MODESWAP_TO_ASSAULT_CHARGE_MOVESPEED_MULTIPLIER float
---@field ERADICATOR_MODESWAP_TO_VEHICLE_CHARGE_MOVESPEED_MULTIPLIER float
---@field ERADICATOR_MODESWAP_CHARGE_TIME_TO_VEHICLE float
---@field ERADICATOR_MODESWAP_CHARGE_TIME_TO_ASSAULT float
---@field ERADICATOR_MODESWAP_CHARGE_TIME_INCORPOREAL float
---@field ERADICATOR_SCANNERBEAM_SCAN_MOVESPEED_BONUS_MULTIPLIER float
---@field ERADICATOR_ELECTROCUTION_SPEED_PENALTY float
---@field ERADICATOR_SCANNERBEAM_OPEN_TIME float
---@field ERADICATOR_SCANNERBEAM_WARMUP_TIME float
---@field ERADICATOR_SCANNERBEAM_FADEOUT_TIME float
---@field ERADICATOR_SCANNERBEAM_SCAN_TEENS_TIME float
---@field ERADICATOR_SCANNERBEAM_SCANNER_DEPTH float
---@field ERADICATOR_SCANNERBEAM_START_ANGLE float
---@field ERADICATOR_SCANNERBEAM_END_ANGLE float
---@field ERADICATOR_SCANNERBEAM_TIME_BEFORE_SWEEP_TO_PLAY_AUDIO float
---@field ERADICATOR_SCANNERBEAM_TEEN_BATCH_TIME float
---@field ERADICATOR_SCANNERBEAM_MAX_RESPONSE_THRESHOLD float
---@field ERADICATOR_TARGETED_SURGE_MAX_RESPONSE_THRESHOLD float
---@field ERADICATOR_TARGETED_SURGE_EFFECT_DEPTH float
---@field ERADICATOR_SCANNERBEAM_SCANBOX_SIZE float
---@field ERADICATOR_SURGE_BOX_SIZE_WIDTH float
---@field ERADICATOR_SURGE_BOX_SIZE_HEIGHT float
---@field ERADICATOR_SCANNERBEAM_BASE_TO_HEIGHT_RATIO float
---@field ERADICATOR_TARGETED_SURGE_BASE_TO_HEIGHT_RATIO float
---@field EVIL_ATTACK_MAX_HELD_TIME float
---@field EVIL_ATTACK_MIN_HELD_TIME float
---@field EVIL_ATTACK_UNRESPONSIVE_MAX_HELD_TIME float
---@field EVIL_ATTACK_INTRO_PLAYRATE_MODIFIER float
---@field EVIL_ATTACK_RELEASE_PLAYRATE_MODIFIER float
---@field REMOTE_CHAR_SHUTDOWN_TIME float
---@field REMOTE_CHAR_EXPLOSION_TIME float
---@field REMOTE_CHAR_VIEW_BLEND_TIME float
---@field REMOTE_CHAR_SPAWN_DISTANCE float
---@field REMOTE_CHAR_TARGET_HEIGHT_OFFSET float
---@field REMOTE_CHAR_INIT_GRAVITY_MULTIPLIER float
---@field REMOTE_CHAR_SEEKING_GRAVITY_MULTIPLIER float
---@field REMOTE_CHAR_ACCELERATION float
---@field MAGIC_SPHERE_SUMMONING_TIME float
---@field MAGIC_SPHERE_BASE_MAX_LIFETIME float
---@field MAGIC_SPHERE_EVIL_COLLISION_RADIUS float
---@field MAGIC_SPHERE_DETONATION_TIME float
---@field MAGIC_SPHERE_CAPSULE_RADIUS float
---@field MAGIC_SPHERE_DAMAGE_TIME float
---@field RCCOPTER_SUMMONING_TIME float
---@field RCCOPTER_BASE_LIFETIME float
---@field RCCOPTER_EXPLOSION_TIME float
---@field RCCOPTER_TURN_RATE float
---@field RCCOPTER_ZAP_DAMAGE_TIME float
---@field RCCOPTER_BASE_BEAM_LIFETIME_MULTIPLIER float
---@field RCCOPTER_MAX_TILT_ROTATION_ANGLE float
---@field RCCOPTER_TILT_DECAY_RATE float
---@field RCCOPTER_BEAM_MAX_DISTANCE float
---@field RCCOPTER_CAMERA_RELATIVE_LOCATION FVector
---@field RCCOPTER_CAPSULE_RADIUS float
---@field RCCOPTER_CONE_LOCK_RADIUS float
---@field RCCOPTER_CONE_UNLOCK_RADIUS float
---@field RCCOPTER_FIRING_SPEED_MULTIPLIER_PENALTY float
---@field RCCOPTER_PHYSICS_PROP_LAUNCH_FORCE float
---@field RCCOPTER_FIRING_WARMUP_TIME float
---@field RCCOPTER_ELECTRICITY_ARC_CURVE_MULTIPLIER float
---@field RCCOPTER_EVIL_COLLISION_RADIUS float
---@field TEENSPECTRAL_CAPSULE_RADIUS float
---@field TEENSPECTRAL_EVIL_SENSE_RANGE float
---@field LIFEESSENCE_REVIVE_TIME_BONUS_SMALL float
---@field LIFEESSENCE_REVIVE_TIME_BONUS_LARGE float
---@field LIFEESSENCE_SPAWNER_BASE_TIME float
---@field LIFEESSENCE_SPAWNER_MAX_PERCENT_OCCUPIED float
---@field LIFEESSENCE_SPAWNER_COOLDOWN float
---@field LIFEESSENCE_LARGE_SIZE_MULTIPLIER float
---@field LIFEESSENCE_SMALL_SIZE_MULTIPLIER float
---@field LIFEESSENCE_SIZE_PROBABILITIES FVector
---@field EVILENERGY_SPAWN_INTERVAL float
---@field EVILENERGY_MAX_NUM int32
---@field COOP_SCORE_BASE_ASSIST_WINDOW float
---@field COOP_SCORE_BASE_ASSIST_COOLDOWN float
---@field COOP_SCORE_EYEBALL_RANGE float
---@field COOP_SCORE_STATICSHIELD_RANGE float
---@field TEEN_HARRIED_MAX_SECONDS float
---@field TEEN_GUARDIAN_RANGE float
---@field EVIL_COMBAT_TIMEOUT_SECS float
---@field CROSS_DAMAGE_TIME float
---@field CROSS_BASE_LIFETIME float
---@field CROSS_BASE_MAX_DISTANCE float
---@field CROSS_RADIUS_BASE_SIZE float
---@field CROSS_TIME_TO_MAX_EFFECT float
---@field MOLOTOV_BASE_THROW_DISTANCE float
---@field MOLOTOV_DAMAGE_TIME float
---@field MOLOTOV_DEBRIS_BASE_LIFETIME float
---@field MOLOTOV_THROWN_LIFETIME float
---@field MOLOTOV_FADE_TIME float
---@field MOLOTOV_MAX_DEBRIS_SPREAD int32
---@field MOLOTOV_MAX_SPREAD_LEVELS int32
---@field MOLOTOV_DEBRIS_SPREAD_OFFSET float
---@field MOLOTOV_MAX_DAMAGE_RADIUS float
---@field MOLOTOV_DEBRIS_VERTICAL_SPREAD float
---@field MOLOTOV_DEBRIS_SPREAD_PROXY float
---@field MOLOTOV_RELOAD_TIME float
---@field MOLOTOV_PROJECTILE_SPAWN_POSITION FVector
---@field MOLOTOV_PROJECTILE_MAX_DAMAGE_ZONES int32
---@field MOLOTOV_PROJECTILE_DAMAGE_SPREAD float
---@field MOLOTOV_PROJECTILE_MAX_DEBRIS_SPEED float
---@field MOLOTOV_PROJECTILE_MIN_DEBRIS_SPEED float
---@field HOLYSLINGSHOT_DAMAGE_TIME float
---@field HOLYSLINGSHOT_FLY_DURATION float
---@field HOLYSLINGSHOT_BURN_DURATION float
---@field HOLYSLINGSHOT_EXTINQUISH_DURATION float
---@field HOLYSLINGSHOT_RELOAD_TIME float
---@field HOLYSLINGSHOT_BASE_NUM_BULLETS int32
---@field HOLYSLINGSHOT_SPLASH_RADIUS float
---@field HOLYSLINGSHOT_PROJECTILE_RADIUS float
---@field RAYGUN_DAMAGE_SPHERE_END_RADIUS float
---@field RAYGUN_DAMAGE_SPHERE_START_RADIUS float
---@field RAYGUN_DAMAGE_RADIUS_BLEND_TIME float
---@field RAYGUN_CHARGE_TIME float
---@field RAYGUN_DAMAGE_TIME float
---@field RAYGUN_PROJECTILE_SPEED float
---@field RAYGUN_PROJECTILE_DAMAGE_SECS float
---@field RAYGUN_PROJECTILE_CLEANUP_TIME float
---@field RAYGUN_PROJECTILE_DAMAGE_DECAY_TIMER float
---@field RAYGUN_MAX_NUM_SHOTS float
---@field RAYGUN_WARMUP_TIME float
---@field RAYGUN_RANGE float
---@field CROSS_WARMUP_TIME float
---@field FLAMETHROWER_WARMUP_TIME float
---@field HOLYSLINGSHOT_WARMUP_TIME float
---@field MOLOTOV_WARMUP_TIME float
---@field HOLYSTAFF_BEAM_MIN_RADIUS float
---@field HOLYSTAFF_BEAM_MAX_RADIUS float
---@field HOLYSTAFF_BEAM_MOVE_SPEED float
---@field HOLYSTAFF_DAMAGE_TIME float
---@field HOLYSTAFF_HEAL_SPEED_INCREASE float
---@field HOLYSTAFF_PHYSICS_PROP_LAUNCH_FORCE float
---@field HOLYSTAFF_BEAM_MAX_RANGE float
---@field HOLYSTAFF_BEAM_PERCENT_CHARGED_PER_FULL_HEAL float
---@field HOLYSTAFF_MAX_CHARGE float
---@field HOLYSTAFF_WARMUP_TIME float
---@field HOLYSTAFF_ALLHEALTHY_CHARGEREGEN_PER_SECOND float
---@field HOLYSTAFF_TIME_UNTIL_POWERED float
---@field TEEN_FLAMEMINE_AIM_MOVEMENT_SPEED_MULTIPLIER float
---@field FLAMEMINE_BASE_BEAM_MAX_DISTANCE float
---@field FLAMEMINE_BASE_CHARGE_TIME float
---@field FLAMEMINE_BASE_SUMMONING_TIME float
---@field FLAMEMINE_FIRE_WARMUP_TIME float
---@field FLAMEMINE_DAMAGE_TIME float
---@field FLAMEMINE_WARMUP_CHARGE_REDUCTION_MULTIPLIER float
---@field FLAMEMINE_FIRE_CHARGE_REDUCTION_MULTIPLIER float
---@field FLAMEMINE_BASE_MINES_AT_ONCE int32
---@field FLAMEMINE_SUMMON_PERCENT_TO_CREATE_NEW_MINE float
---@field FLAMEMINE_SUMMON_PERCENT_TO_CANCEL_OLD_MINE float
---@field FLAMEMINE_CAMERABOOM_LENGTH float
---@field FLAMEMINE_CAMERABOOM_POSITION FVector
---@field FLAMEMINE_SUMMON_CHARGE_PERCENT_COST float
---@field FLAMEMINE_SEPARATION_DISTANCE float
---@field FLAMEMINE_EVILVIEWING_MIN_DRAIN_PER_SECOND float
---@field FLAMEMINE_EVILVIEWING_MAX_DRAIN_PER_SECOND float
---@field FLAMEMINE_EVILVIEWING_DRAIN_RAMP_SECONDS float
---@field FLAMEMINE_EVILVIEWING_DRAIN_MAX_RANGE float
---@field FLAMEMINE_EVILVIEWING_DRAIN_DECAY_MULTIPLIER float
---@field FLAMEMINE_PULSE_RATE float
---@field FLAMEMINE_PULSE_RANGE FVector2D
---@field FLAMEMINE_IDLE_COLOUR FLinearColor
---@field FLAMEMINE_ALERT_COLOUR FLinearColor
---@field FLAMEMINE_FIRING_COLOUR FLinearColor
---@field FLAMEMINE_GRAVITY_MULTIPLIER float
---@field FLAMEMINE_CHAR_TARGET_HEIGHT_OFFSET float
---@field DEMONSWORD_PROJECTILE_MAXWALK_SPEED float
---@field DEMONSWORD_PROJECTILE_CLEANUP_TIME float
---@field DEMONSWORD_PROJECTILE_DAMAGE_DECAY_TIMER float
---@field DEMONSWORD_INITIAL_CHARGE_TIME float
---@field DEMONSWORD_CHARGE_TIME float
---@field DEMONSWORD_CHARGE_PERCENT_ALLOW_BUFFERSHOT float
---@field DEMONSWORD_MIN_AIM_TARGET_DISTANCE float
---@field DEMONSWORD_FRAMEBUFFER_TIME float
---@field DEMONSWORD_DAMAGE_TIME float
---@field DEMONSWORD_MAX_NUM_SHOTS float
---@field DEMONSWORD_WARMUP_TIME float
---@field DEMONSWORD_PARTICLE_ROTATION FRotator
---@field DEMONSWORD_PROJECTILE_SCALE FVector
---@field DEMONSWORD_PROJECTILE_TRAIL_TIME float
---@field DEMONSWORD_PROJECTILE_TRAIL_DAMAGE_RATE float
---@field DEMONSWORD_MAX_RANGE float
---@field PROJECTILE_ROTATION_RATE float
---@field CONTROLLER_TURN_TO_FACE_INTERP_SPEED float
---@field CONTROLLER_TURN_TO_FACE_QUICK_INTERP_SPEED float
---@field VAULTPOINT_FALLING_ANIM_ABORT_TIME float
---@field VAULTPOINT_MIN_LERP_SPEED float
---@field VAULTPOINT_MAX_LERP_SPEED float
---@field VAULTPOINT_MAX_LERP_REQUIRED_VELOCITY float
---@field VAULTPOINT_ROOTMOTION_MINIMUM_FORWARD_TRANSLATION float
---@field VAULTPOINT_MONSTER_ROOTMOTION_MINIMUM_FORWARD_TRANSLATION float
---@field TPCHAR_BASE_HIDESPEED_MULTIPLIER float
---@field TPCHAR_BASE_VAULTSPEED_MULTIPLIER float
---@field TPCHAR_BASE_VAULTSPEED_ADRENALINE_MULTIPLIER float
---@field FPCHAR_BASE_VAULTSPEED_MULTIPLIER float
---@field FPCHAR_INCORPOREAL_VAULTSPEED_MULTIPLIER float
---@field VAULTPOINT_SIBLING_FLAT_SEARCH_DISTANCE float
---@field VAULTPOINT_SIBLING_MAX_HEIGHT_DIFFERENCE float
---@field TPCHAR_RELATIVE_MESH_LOCATION FVector
---@field TPCHAR_RELATIVE_CAMERA_BOOM_LOCATION FVector
---@field TPCHAR_RELATIVE_CAMERA_COMPONENT_LOCATION FVector
---@field TPCHAR_CAMERA_BOOM_ARM_LENGTH float
---@field TPCHAR_CAMERA_BOOM_ARM_INTERP_SPEED float
---@field TPCHAR_CAMERA_BOOM_ARM_MOVE_MULTIPLIER float
---@field TPCHAR_CAMERA_BOOM_ARM_RUN_MULTIPLIER float
---@field TPCHAR_CAMERA_BOOM_ARM_SPRINT_MULTIPLIER float
---@field TPCHAR_INTERACTION_HEALING_RADIUS float
---@field TPCHAR_INTERACTION_HEALING_BUFFER float
---@field TPCHAR_INTERACTION_REVIVE_RADIUS float
---@field TPCHAR_INTERACTION_REVIVE_BUFFER float
---@field TPCHAR_INTERACTION_RESURRECTION_RADIUS float
---@field TPCHAR_INTERACTION_TRAPDISARM_RADIUS float
---@field TPCHAR_INTERACTION_TRAPDISARM_BUFFER float
---@field TPCHAR_CAMERA_BOOM_ARM_AIMING_LENGTH float
---@field TPCHAR_CAMERA_BOOM_ARM_STATICSHIELD_LENGTH float
---@field TPCHAR_CAMERA_BOOM_ARM_OFFSET FVector
---@field TPCHAR_CAMERA_BOOM_ARM_PRONE_OFFSET FVector
---@field TPCHAR_CAMERA_BOOM_ARM_AIMING_OFFSET FVector
---@field TPCHAR_CAMERA_BOOM_ARM_CROUCH_AIMING_OFFSET FVector
---@field TPCHAR_CAMERA_BOOM_ARM_CROUCH_OFFSET FVector
---@field TPCHAR_CAMERA_BOOM_ARM_STATICSHIELD_OFFSET FVector
---@field TPCHAR_CAMERA_BOOM_ARM_PROBE_SIZE float
---@field TPCHAR_RELATIVE_MESH_ROTATION FRotator
---@field TPCHAR_CAMERA_FIELD_OF_VIEW float
---@field TPCHAR_CAMERA_TRANSITION_SCALE float
---@field TPCHAR_AUDIO_COMPONENT_OFFSET FVector
---@field FP_CAMERA_FIELD_OF_VIEW float
---@field WEREWOLF_HOWL_COWERING_TIME float
---@field WEREWOLF_TPCHAR_RELATIVE_MESH_ROTATION FRotator
---@field WEREWOLF_FPCAMERA_BOOM_LOCATION FVector
---@field DOLLMASTER_FPCAMERA_BOOM_LOCATION FVector
---@field DOLLMINION_FPCAMERA_BOOM_LOCATION FVector
---@field DOLLMINION_TPCAMERA_BOOM_LOCATION FVector
---@field DOLLMASTER_RELATIVE_MESH_LOCATION FVector
---@field DOLLMASTER_RELATIVE_FPMESH_LOCATION FVector
---@field DOLLMINION_RELATIVE_MESH_LOCATION FVector
---@field OBSERVER_CAMERA_BOOM_LOCATION FVector
---@field TPCHAR_BREATHING_CROSSFADE_TIME_FACTOR float
---@field TPCHAR_WEAPON_DISCARD_TIME float
---@field TPCHAR_BASE_ADRENALINE_TIME float
---@field TPCHAR_INJURY_EVILPASSTHROUGH_SECS float
---@field TPCHAR_HEAL_BASE_TIME float
---@field TPCHAR_HEAL_TWO_PARTICIPANT_SPEED_DECREASE float
---@field TPCHAR_HEAL_THREE_PARTICIPANT_SPEED_DECREASE float
---@field TPCHAR_HEAL_MEDKIT_REDUCTION_FACTOR float
---@field TPCHAR_HEAL_HOLYSTAFF_SELF_REDUCTION_FACTOR float
---@field TPCHAR_RESURRECT_LIFE float
---@field TPCHAR_REVIVE_BASE_TIME float
---@field TPCHAR_REVIVE_TWO_PARTICIPANT_SPEED_DECREASE float
---@field TPCHAR_REVIVE_THREE_PARTICIPANT_SPEED_DECREASE float
---@field TPCHAR_BASE_RESURRECT_TIME float
---@field TPCHAR_BASE_SUBDUED_TIME float
---@field TPCHAR_EVIL_RESPAWN_SUBDUED_TIME float
---@field TPCHAR_BASE_MANUAL_TRANSFORM_TIME float
---@field TPCHAR_BASE_DOUBLE_VISION_MAX_STRENGTH float
---@field TPCHAR_BASE_DOUBLE_VISION_TIME float
---@field TPCHAR_BASE_MAX_LIFE float
---@field TPCHAR_BASE_EXT_LIFE float
---@field TPCHAR_SHORT_GAME_LIFE_PENALTY float
---@field TPCHAR_INJURY_LIFE_LOSS float
---@field TPCHAR_KNOCKDOWN_LIFE_LOSS float
---@field TPCHAR_MINIMUM_PRONE_LIFE float
---@field TPCHAR_PRONE_LIFE_LOSS_PER_SECOND float
---@field TPCHAR_PRONE_SKILLTEST_FAIL_LIFE_LOSS float
---@field TPCHAR_HIDING_CAPSULE_RADIUS float
---@field TPCHAR_MAX_DEATH_SECS float
---@field TPCHAR_MAX_INJURED_SECS float
---@field TPCHAR_MAX_TIME_SINCE_CRAFT_FAIL float
---@field TPCHAR_MAX_TIME_SINCE_EVIL_STUN_OR_TRANSFORM float
---@field TPCHAR_MAX_TIME_DEAD_OUTLINE float
---@field TPCHAR_STOP_HEAL_AXIS_THRESHOLD float
---@field TPCHAR_INHIBITED_HEAL_SPEED_MULTIPLIER float
---@field TPCHAR_INHIBITED_SOLO_HEAL_SPEED_MULTIPLIER float
---@field TPCHAR_INHIBITED_CRAFT_SPEED_MULTIPLIER float
---@field TPCHAR_STAGGER_SPEED_PENALTY float
---@field SKILLTEST_MINIGAME_MINIMUM_SPEED float
---@field SKILLTEST_MINIGAME_MAXIMUM_SPEED float
---@field SKILLTEST_MINIGAME_MINIMUM_POSITION float
---@field SKILLTEST_MINIGAME_MAXIMUM_POSITION float
---@field SKILLTEST_MINIGAME_MINIMUM_TIMER float
---@field SKILLTEST_MINIGAME_MAXIMUM_TIMER float
---@field SKILLTEST_MINIGAME_WARNING_TIMER float
---@field SKILLTEST_MINIGAME_TIMEOUT_TIMER float
---@field SKILLTEST_MINIGAME_INCREMENT_MULTIPLAYER float
---@field SKILLTEST_MINIGAME_INCREMENT_COOLDOWN float
---@field SKILLTEST_MINIGAME_PRONE_MULTIPLIER float
---@field SKILLTEST_MINIGAME_ENERGIZING_MULTIPLIER float
---@field SKILLTEST_MINIGAME_COOLDOWN_TIMER float
---@field SKILLTEST_MINIGAME_COMMON_BOOST_TIMER float
---@field SKILLTEST_MINIGAME_CRAFTING_BOOST_TIMER float
---@field SKILLTEST_MINIGAME_BASE_PENALTY_TIMER float
---@field SKILLTEST_MINIGAME_PRONE_PENALTY_TIMER float
---@field SKILLTEST_MINIGAME_INACTIVE_PENALTY_TIME_FACTOR float
---@field SKILLTEST_MINIGAME_COMMON_FAIL_SPEED_PENALTY float
---@field SKILLTEST_MINIGAME_COMMON_BOOSTED_SPEED_INCREASE float
---@field SKILLTEST_MINIGAME_CRAFTING_BOOSTED_SPEED_INCREASE float
---@field MINIGAME_RINGALIGN_TIMEOUT_TIMER float
---@field MINIGAME_RINGALIGN_MAX_TARGET_RADIUS float
---@field MINIGAME_RINGALIGN_MIN_TARGET_RADIUS float
---@field MINIGAME_RINGALIGN_MAX_TARGET_WIDTH float
---@field MINIGAME_RINGALIGN_MIN_TARGET_WIDTH float
---@field MINIGAME_RINGALIGN_MIN_ADJUSTMENT_SPEED float
---@field MINIGAME_RINGALIGN_MAX_ADJUSTMENT_SPEED float
---@field SKILLTEST_MINIGAME_BULLSEYE_SCORE float
---@field SKILLTEST_MINIGAME_PASS_SCORE float
---@field SKILLTEST_MINIGAME_POST_SUBMIT_TIME float
---@field ENERGYPOINT_MIN_POWER_ON_TIME float
---@field ENERGYPOINT_MAX_POWER_ON_TIME float
---@field PICKUP_MAX_CANDIDATE_DISTANCE float
---@field PICKUP_ONTHEFLOOR_DISTANCE_HIGH_THRESHOLD float
---@field PICKUP_ONTHEFLOOR_DISTANCE_MEDIUM_THRESHOLD float
---@field DARKSHARD_ENABLED float
---@field DARKSHARD_BASE_INITIAL_SPAWN_TIME float
---@field DARKSHARD_INTERVAL float
---@field DARKSHARD_GOOD_EFFECT_DURATION float
---@field DARKSHARD_EVIL_EFFECT_DURATION float
---@field DARKSHARD_LIFETIME float
---@field DARKSHARD_SELECTION_THRESHOLD float
---@field DARKSHARD_REVEAL_TIME float
---@field DARKSHARD_TEEN_SCORING_RANGE float
---@field DARKSHARD_ACTIVATION_RADIUS float
---@field DARKSHARD_ICON_HEIGHT float
---@field DARKSHARD_RAMP_SPEEDUP_MAX_SECS float
---@field DARKSHARD_MIN_SPAWN_DELAY_AFTER_EVENT float
---@field DARKSHARD_MAX_SPAWN_DELAY_AFTER_EVENT float
---@field DARKSHARD_INACTIVE_COLOR FLinearColor
---@field DARKSHARD_PER_TEEN_LOSS_SPAWN_DELAY_BONUS_MULTIPLIER float
---@field DARKSHARD_PER_TEEN_LOSS_EVIL_EFFECT_REDUCTION_MULTIPLIER float
---@field DARKSHARD_EMPOWERED_SCREAM_RANGE float
---@field DARKSHARD_EMPOWERED_SCREAM_EFFECT_DURATION float
---@field DARKSHARD_EVIL_EMPOWERED_BONUS_DURATION float
---@field PICKUP_PILLS_FED_DURATION float
---@field PICKUP_PILLS_FED_EXPONENT float
---@field PICKUP_PILLS_LIFE_RESTORED float
---@field PICKUP_PILLS_HEAL_PULSE_RATE float
---@field PICKUP_ADRENALINE_PULSE_RATE float
---@field PICKUP_ADRENALINE_DURATION float
---@field PICKUP_ADRENALINE_RAMP_TIME float
---@field PICKUP_WALKIE_TALKIE_EFFECT_SPREAD_RANGE float
---@field PICKUP_WALKIE_TALKIE_CHARGE_TIME float
---@field PICKUP_WALKIE_TALKIE_NOISE_AMOUNT float
---@field PICKUP_WALKIE_TALKIE_NOISE_FREQUENCY float
---@field PICKUP_WALKIE_RUN_SPEED_PENALTY_MULTIPLIER float
---@field PICKUP_WALKIE_UI_COLOR_CHANGE_SPEED float
---@field PICKUP_NOISEMAKER_REVEAL_TIME float
---@field PICKUP_NOISEMAKER_POST_SHUTDOWN_LIFETIME float
---@field PICKUP_NOISEMAKER_ARMING_TIME float
---@field PICKUP_NOISEMAKER_RADIUS float
---@field PICKUP_SMOKEBOMB_BLIND_CAPSULE_HALF_HEIGHT float
---@field PICKUP_SMOKEBOMB_BLIND_CAPSULE_RADIUS float
---@field PICKUP_SMOKEBOMB_NIAGARA_RADIUS float
---@field PICKUP_SMOKEBOMB_LIFETIME float
---@field PICKUP_SMOKEBOMB_POSTPROCESS_FADING_DURATION float
---@field PICKUP_SMOKEBOMB_BLIND_TIME float
---@field PICKUP_SMOKEBOMB_TEEN_HIDE_DURATION float
---@field PICKUP_SMOKEBOMB_SELF_CLEANING_DURATION float
---@field PICKUP_SMOKEBOMB_EXTINQUISH_DURATION float
---@field PICKUP_PERCENT_IN_SEARCHABLES_MIN float
---@field PICKUP_PERCENT_IN_SEARCHABLES_MAX float
---@field TEENSPECTRAL_REVIVE_PULSE_RATE float
---@field TEENSPECTRAL_FEAST_PULSE_RATE float
---@field TEENSPECTRAL_TEENVISION_MAX_RANGE float
---@field TEENSPECTRAL_SHUTDOWN_TIME float
---@field TEENSPECTRAL_MAX_ACCELERATION float
---@field TEENSPECTRAL_SPEED_MULTIPLIER float
---@field TEEN_CLOSE_BY_RANGE float
---@field MIN_BLEEDING_DECAL_DURATION float
---@field MAX_BLEEDING_DECAL_DURATION float
---@field MIN_BLEEDING_DECAL_INTERVAL float
---@field MAX_BLEEDING_DECAL_INTERVAL float
---@field MIN_BLEEDING_DECAL_SIZE float
---@field MAX_BLEEDING_DECAL_SIZE float
---@field BLEEDING_DECAL_DURATION_INITIAL_DECLINE_TIME float
---@field BLEEDING_DECAL_DURATION_INITIAL_BONUS_MULTIPLIER float
---@field BLEEDING_DECAL_SIZE_INITIAL_DECLINE_TIME float
---@field BLEEDING_DECAL_SIZE_INITIAL_BONUS_MULTIPLIER float
---@field BLEEDING_DECAL_INTERVAL_INITIAL_DECLINE_TIME float
---@field BLEEDING_DECAL_INTERVAL_INITIAL_REDUCTION_MULTIPLIER float
---@field BLEED_BONUS_DELAY_SECS_UNTIL_MAX float
---@field BLEED_BONUS_DELAY_MAX_AMOUNT float
---@field MIN_ATTACK_DECAL_DURATION float
---@field MAX_ATTACK_DECAL_DURATION float
---@field INVENTORY_SLOTS_PER_SCREEN int32
---@field MAX_EQUIPPED_PERKS int32
---@field STATION_UNUSED_LIGHT_COLOR FLinearColor
---@field STATION_USED_LIGHT_COLOR FLinearColor
---@field STATION_PROGRESS_TINT_COLOR FLinearColor
---@field STATION_FAIL_GLOW_TIME float
---@field ENERGYPOINT_FAIL_GLOW_TIME float
---@field BASECHAR_MIN_ROTATION_RATE float
---@field BASECHAR_SLOW_MAX_ROTATION_RATE float
---@field BASECHAR_FAST_MAX_ROTATION_RATE float
---@field BASECHAR_DEFAULT_MANUAL_ROTATION_RATE float
---@field BASECHAR_VELOCITY_ROTATION_THRESHOLD float
---@field MOTION_SENTINEL_RADIUS float
---@field MOTION_SENTINEL_MAX_SPEED float
---@field MOTION_SENTINEL_MIN_SPEED float
---@field MOTION_SENTINEL_PLAYER_SPEED_THRESHOLD float
---@field MOTION_SENTINEL_BREADCRUMB_START_TIMER float
---@field MOTION_SENTINEL_BREADCRUMB_TIMER float
---@field MOTION_SENTINEL_BREADCRUMB_PROXIMITY float
---@field MOTION_SENTINEL_REVEAL_REDUCTION_MULTIPLIER float
---@field MOTION_SENTINEL_MAX_BREADCRUMBS int32
---@field MOTION_SENTINEL_REVEAL_PARTICLE_TIMER float
---@field MOTION_SENTINEL_REVEAL_WHISPER_TIMER float
---@field MOTION_SENTINEL_REVEAL_AURA_TIMER float
---@field MOTION_SENTINEL_REVEAL_MAX_TIMER float
---@field MOTION_SENTINEL_WHISPER_MODIFIER float
---@field MOTION_SENTINEL_WHISPER_MIN_SCALE float
---@field MOTION_SENTINEL_WHISPER_MAX_SCALE float
---@field DARKSHARD_PROGRESS_TIME_REQUIRED float
---@field DARKSHARD_EMPOWERED_REVEAL_TIME float
---@field DARKSHARD_EMPOWERED_PROGRESS_TIME_REQUIRED float
---@field HUD_INPUT_DEAD_ZONE float
---@field HUD_SCOREPOPUP_SPACER_TIME float
---@field TRITON_OCCLUSION_MAX_DISTANCE float
---@field TRITON_LISTENER_UP_OFFSET float
---@field TRITON_EMITTER_UP_OFFSET float
---@field TRITION_ACOUSTICS_MAX_UPDATE_DISTANCE float
---@field TRITON_MAX_ALLOW_LASTVALIDPOSITION_DISTANCE float
---@field COWER_POSTPROCESS_FADE_IN_TIME float
---@field COWER_POSTPROCESS_FADE_OUT_TIME float
---@field DEAFEN_RECOVERY_SECS float
---@field GAME_SCORE_MAX_PER_CATEGORY float
---@field GAME_SCORE_MIN_CHASE_TIME float
---@field GAME_SCORE_LONG_CHASE_SECS float
---@field GAME_SCORE_MAX_CHASE_DURATION_POINTS float
---@field ROOMFRAME_MIN_SECS_TO_CHANGE_ROOMS float
---@field ROOMFRAME_SECS_TO_FADE_ROOM_LABEL float
---@field CONTROLLER_INPUT_DEAD_ZONE float
---@field INPUTMANAGER_INPUT_BUFFER_DURATION float
---@field ROOMFRAME_MAX_NAME_LENGTH int32
---@field ROOMFRAME_LOCAL_PLAYER_TEXT_SIZE int32
---@field BASECHAR_DISTANCE_TRAVELLED_PERIOD float
---@field BASECHAR_DISTANCE_TRAVELLED_PERIOD_STEP float
---@field TPCHAR_SPRINT_VAULT_DISTANCE_TRAVELLED_REQUIRED float
---@field EVENT_HOLIDAY_SEARCHABLECOUNT_ORNAMENT int32
---@field EVENT_HOLIDAY_SEARCHABLECOUNT_JACKINTHEBOX int32
---@field EVENT_HOLIDAY_EVIL_PROPCOUNT_ORNAMENT int32
---@field EVENT_HOLIDAY_EVIL_ORNAMENT_SHRINK_TIME float
---@field EVENT_HOLIDAY_EVIL_ORNAMENT_INITIAL_SCALE float
---@field EVENT_HOLIDAY_EVIL_ORNAMENT_INITIAL_LIFETIME float
---@field EVENT_HOLIDAY_EVIL_ORNAMENT_INITIAL_OFFSET FVector
---@field EVENT_HOLIDAY_EVIL_ORNAMENT_DISAPPEARPARTICLE_OFFSET FVector
---@field EVENT_HOLIDAY_EVIL_ORNAMENT_DISAPPEARPARTICLE_SPAWNTIMEBEFORE_SECONDS float
---@field EVENT_HOLIDAY_EVIL_PROPCOUNT_JACKINTHEBOX int32
---@field EVENT_HALLOWEEN_EVIL_PROPCOUNT int32
---@field EVENT_EASTER_EVIL_PROPCOUNT int32
---@field EVENT_EASTER_EVILEVENTPROP_COLOR_0 FColor
---@field EVENT_EASTER_EVILEVENTPROP_COLOR_1 FColor
---@field EVENT_EASTER_EVILEVENTPROP_COLOR_2 FColor
---@field EVENT_EASTER_EVILEVENTPROP_COLOR_3 FColor
---@field EVENT_EASTER_EVILEVENTPROP_COLOR_4 FColor
---@field EVENT_EASTER_EVILEVENTPROP_COLOR_5 FColor
---@field EVENT_EASTER_TEENSEARCHABLE_COLOR_0 FColor
---@field EVENT_EASTER_TEENSEARCHABLE_COLOR_1 FColor
---@field EVENT_EASTER_TEENSEARCHABLE_COLOR_2 FColor
---@field EVENT_EASTER_TEENSEARCHABLE_COLOR_3 FColor
---@field EVENT_EASTER_TEENSEARCHABLE_COLOR_4 FColor
---@field EVENT_EASTER_TEENSEARCHABLE_COLOR_5 FColor
---@field SEARCHABLE_MANAGER_TOTAL_ADRENALINE int32
---@field SEARCHABLE_MANAGER_TOTAL_PILLS int32
---@field SEARCHABLE_MANAGER_TOTAL_WALKIE int32
---@field SEARCHABLE_MANAGER_TOTAL_NOISEMAKER int32
---@field SEARCHABLE_MANAGER_TOTAL_RESURRECT int32
---@field SEARCHABLE_MANAGER_TOTAL_SMOKEBOMB int32
---@field SEARCHABLE_MANAGER_MIN_LOCKBOX_DISTANCE_FROM_GOOD float
---@field SEARCHABLE_MAX_PUZZLES_NODES int32
---@field SEARCHABLE_MIN_PUZZLES_NODES int32
---@field SEARCHABLE_MINIGAME_BASE_SPIN_SPEED float
---@field SEARCHABLE_SHUTDOWN_LOCKOUT_TIME float
---@field SEARCHABLE_VENDINGMACHINE_SHUTDOWN_SHAKETRANSLATION_MAX float
---@field SEARCHABLE_VENDINGMACHINE_SHUTDOWN_SHAKEROTATION_MAX float
---@field SEARCHABLE_VENDINGMACHINE_SHUTDOWN_FLICKER_TIME float
---@field SEARCHABLE_POPVENDINGMACHINE_ADRENALINE_CHANCE float
---@field SEARCHABLE_CANDYVENDINGMACHINE_PILLS_CHANCE float
---@field SEARCHABLE_WASTEBASKET_WALKIE_CHANCE float
---@field SEARCHABLE_WASTEBASKET_NOISEMAKER_CHANCE float
---@field SEARCHABLE_WASTEBASKET_SMOKEBOMB_CHANCE float
---@field SEARCHABLE_LOCKBOX_BOOKOFDEAD_CHANCE float
---@field SEARCHABLE_POPVENDINGMACHINE_BASE_PUZZLES int32
---@field SEARCHABLE_CANDYVENDINGMACHINE_BASE_PUZZLES int32
---@field SEARCHABLE_WASTEBASKET_BASE_PUZZLES int32
---@field SEARCHABLE_LOCKBOX_BASE_PUZZLES int32
---@field SEARCHABLE_EVENT_HALLOWEEN_BASE_PUZZLES int32
---@field SEARCHABLE_EVENT_HOLIDAY_BASE_PUZZLES int32
---@field SEARCHABLE_EVENT_EASTER_BASE_PUZZLES int32
---@field SEARCHABLE_EVENT_HOLIDAY_SEARCHABLECOUNT_ORNAMENT int32
---@field SEARCHABLE_EVENT_HOLIDAY_SEARCHABLECOUNT_JACKINTHEBOX int32
---@field SEARCHABLE_EVENT_EASTER_SEARCHABLECOUNT int32
---@field SEARCHABLE_LOCKBOX_DISINTEGRATION_DURATION float
---@field SEARCHABLE_LOCKBOX_DISINTEGRATION_MAX_WARPSCALE float
---@field SEARCHABLE_LOCKBOX_RESPAWN_MAX_CHECK_DISTANCE float
---@field SEARCHABLE_LOCKBOX_MAX_AURASFX_ATTENUATION_SCALE float
---@field SEARCHABLE_LOCKBOX_AURASFX_RAMP_SECS float
---@field SEARCHABLE_VENDINGMACHINE_MIN_RECHARGE_TIME float
---@field SEARCHABLE_VENDINGMACHINE_MAX_RECHARGE_TIME float
---@field SEARCHABLE_ROTATOR_MIN_ANGLE float
---@field SEARCHABLE_WASTEBASKET_TIP_ANGLE float
---@field SEARCHABLE_ROTATOR_CONFIRMATION_TIME float
---@field SEASONALEVENTCENTERPIECE_SPECTRAL_ORBIT_RADIUS float
---@field SEASONALEVENTCENTERPIECE_SPECTRAL_SPAWNNUM int32
---@field SEASONALEVENTCENTERPIECE_SPECTRAL_VERTICALOFFSET float
---@field SEASONALEVENTCENTERPIECE_POINTRADIUS_MIN float
---@field SEASONALEVENTCENTERPIECE_POINTRADIUS_MAX float
---@field SEASONALEVENTCENTERPIECE_HOLIDAY_EVIL_ORNAMENT_ANIMATION_TIME float
---@field SEASONALEVENTCENTERPIECE_HOLIDAY_EVIL_ORNAMENT_REVEAL_INTERVAL float
---@field SEASONALEVENTCENTERPIECE_HOLIDAY_EVIL_ORNAMENTS_PER_LAYER int32
---@field SEASONALEVENTCENTERPIECE_HOLIDAY_LAYER_FADEINTIME float
---@field SEASONALEVENTCENTERPIECE_HOLIDAY_EVIL_ORNAMENT_ARCHEIGHT float
---@field STATIONBASE_POINTRADIUS_MIN float
---@field STATIONBASE_POINTRADIUS_MAX float
---@field SIGNAL_SECONDS_TO_SHOW int32
---@field SIGNAL_BASE_HEIGHT int32
---@field SIGNAL_CROUCHED_HEIGHT int32
---@field BASECHAR_SECONDS_BEFORE_SIGNAL_MENU_SHOWN float
---@field VOICECHAT_TILE_MAX_NAME_LENGTH int32
---@field VOICECHAT_MAX_SPEAKERS_GAIN int32
---@field VOICECHAT_REQUEST_TIMEOUT float
---@field VOICECHAT_REQUEST_BACKOFF_INCREMENT float
---@field VOICECHAT_REQUEST_BACKOFF_MAX float
---@field VOICECHAT_MAX_CHANNEL_CONNECTION_ATTEMPTS int32
---@field VOICECHAT_PREVIOUS_ATTEMPTS_TO_REMEMBER int32
---@field VOICECHAT_MAX_MICROPHONE_GAIN int32
---@field DARKSHARD_DESTROYED_TIME float
---@field MAX_AUGMENT_TIER int32
---@field AUGMENT_STAT_LIFETIME_BOOST_SECONDS_1 float
---@field AUGMENT_STAT_LIFETIME_BOOST_SECONDS_2 float
---@field AUGMENT_STAT_LIFETIME_BOOST_SECONDS_3 float
---@field AUGMENT_STAT_FASTENERGIZE_BOOST_1 float
---@field AUGMENT_STAT_FASTENERGIZE_BOOST_2 float
---@field AUGMENT_STAT_FASTENERGIZE_BOOST_3 float
---@field AUGMENT_STAT_MAX_SPEED_BOOST_1 float
---@field AUGMENT_STAT_MAX_SPEED_BOOST_2 float
---@field AUGMENT_STAT_MAX_SPEED_BOOST_3 float
---@field AUGMENT_STAT_FASTDEPLOYMOVE_DEPLOY_SPEED_BONUS_MULTIPLIER float
---@field AUGMENT_STAT_FASTDEPLOYMOVE_ACTIVE_SPEED_PENALTY_MULTIPLIER float
---@field AUGMENT_STAT_HEAREVIL_EXTRA_CHARGES_REQUIRED float
---@field AUGMENT_STAT_FASTENERGIZE_FUSE_BOX_DISCOUNT int32
---@field AUGMENT_STAT_FASTENERGIZE_CHARGE_TIME_BONUS_SECONDS float
---@field AUGMENT_STAT_MAXSPEED_TOP_SPEED_BONUS_MULTIPLIER float
---@field AUGMENT_STAT_MAXSPEED_ENERGY_CONSUMPTION_BONUS_MULTIPLIER float
---@field AUGMENT_STAT_ENERGIZEDMOVE_SPEEDBOOST_BONUS_MULTIPLIER float
---@field AUGMENT_STAT_ENERGIZEDMOVE_SPEEDBOOST_TIME_SECONDS float
---@field AUGMENT_STAT_ENERGIZEDMOVE_SHIELD_CRAFT_TIME_BONUS_MULTIPLIER float
---@field AUGMENT_CROS_EXTRAENERGY_ENERGY_CONSUMPTION_REDUCTION float
---@field AUGMENT_CROS_EXTRAENERGY_TIME_TO_MAX_EFFECT_INCREASE float
---@field AUGMENT_CROS_FASTCRAFT_CRAFT_SPEED_BONUS_MULTIPLIER float
---@field AUGMENT_CROS_WIDEBEAM_STUN_TIME_DECREASE_MULTIPLIER float
---@field AUGMENT_CROS_WIDEBEAM_INCORPOREAL_TIME_INCREASE_MULTIPLIER float
---@field AUGMENT_CROS_DAMAGEBLOCK_DURATION float
---@field AUGMENT_CROS_LONGRANGE_RANGE_MULTIPLIER_INCREASE float
---@field AUGMENT_SLIN_LIFETIME_BOOST_SECONDS_1 float
---@field AUGMENT_SLIN_LIFETIME_BOOST_SECONDS_2 float
---@field AUGMENT_SLIN_LIFETIME_BOOST_SECONDS_3 float
---@field AUGMENT_SLIN_EXTRASHOT_BOOST float
---@field AUGMENT_SLIN_BLIND_BLINDTIME float
---@field AUGMENT_SLIN_BLIND_CRAFTTIME_BONUS_MULTIPLIER float
---@field AUGMENT_SLIN_DIRECTHIT_EXTRASHOTS int32
---@field AUGMENT_SLIN_NOSTICK_EXTRA_GRENADES int32
---@field AUGMENT_SLIN_FASTCRAFT_CRAFT_SPEED_BONUS_MULTIPLIER float
---@field AUGMENT_SLIN_FASTCRAFT_GRENADE_REDUCTION int32
---@field AUGMENT_SLIN_STICKBONUS_STUN_TIME_INCREASE_MULTIPLIER float
---@field AUGMENT_SLIN_STICKBONUS_INCORPOREAL_TIME_DECREASE_MULTIPLIER float
---@field AUGMENT_WEREWOLF_HOWL_FASTCOOLDOWN_COOLDOWN_REDUCTION_BONUS_MULTIPLIER float
---@field AUGMENT_WEREWOLF_HOWL_FASTCOOLDOWN_RANGE_REDUCTION_MULTIPLIER float
---@field AUGMENT_WEREWOLF_HOWL_STAGGER_TIME float
---@field AUGMENT_WEREWOLF_HOWL_STAGGER_DEAFEN_TIME float
---@field AUGMENT_WEREWOLF_HOWL_STAGGER_COOLDOWN_INCREASE_MULTIPLIER float
---@field AUGMENT_WEREWOLF_HOWL_REACTION_TIME float
---@field AUGMENT_WEREWOLF_HOWL_REACTION_DAMAGE_CHARGE_TIME_REDUCTION_MULTIPLIER float
---@field AUGMENT_WEREWOLF_HOWL_REACTION_CHARGE_TIME_BONUS_MULTIPLIER float
---@field AUGMENT_WEREWOLF_BERSERK_HITPERSIST_COOLDOWN_BONUS_MULTIPLIER float
---@field AUGMENT_WEREWOLF_BERSERK_HITPERSIST_EXTENDED_SECONDS float
---@field AUGMENT_WEREWOLF_BERSERK_LONGDURATION_DURATION_BONUS_MULTIPLIER float
---@field AUGMENT_WEREWOLF_BERSERK_LONGDURATION_SPEED_BOOST_PENALTY_BONUS_MULTIPLIER float
---@field AUGMENT_WEREWOLF_BERSERK_INSTANTREFRESH_CHARGE_TIME_REDUCTION float
---@field AUGMENT_WEREWOLF_BERSERK_INSTANTREFRESH_COOLDOWN_REDUCTION_MULTIPLIER float
---@field AUGMENT_WEREWOLF_SENSE_EXTENDRANGE_MAX_RANGE_BONUS_MULTIPLIER float
---@field AUGMENT_WEREWOLF_SENSE_EXTENDRANGE_MIN_RANGE_BONUS_MULTIPLIER float
---@field AUGMENT_WEREWOLF_SENSE_MARK_TEEN_IN_RANGE_CONSUMPTION_BONUS_MULTIPLIER float
---@field AUGMENT_WEREWOLF_SENSE_MARK_TEEN_OUT_OF_RANGE_CONSUMPTION_PENALTY_MULTIPLIER float
---@field AUGMENT_WEREWOLF_SENSE_TOGGLE_MINIMUM_COOLDOWN_SECONDS float
---@field AUGMENT_DOLLMASTER_TRAP_IMPROVEDDETECT_RADIUS float
---@field AUGMENT_DOLLMASTER_TRAP_IMPROVEDDETECT_MAX_TRAP_REDUCTION float
---@field AUGMENT_DOLLMASTER_TRAP_EXTRATRAPS_MAX_TRAP_INCREASE float
---@field AUGMENT_DOLLMASTER_TRAP_EXTRATRAPS_TRIGGER_DISTANCE_REDUCTION_MULTIPLIER float
---@field AUGMENT_DOLLMASTER_TRAP_TRIPPERSIST_REVEAL_TIME float
---@field AUGMENT_DOLLMASTER_TRAP_TRIPPERSIST_SUMMON_COOLDOWN_REDUCTION_MULTIPLIER float
---@field AUGMENT_DOLLMASTER_SUMMON_LONGDURATION_DURATION_BONUS_MULTIPLIER float
---@field AUGMENT_DOLLMASTER_SUMMON_LONGDURATION_POSSESSION_TIME_BONUS_MULTIPLIER float
---@field AUGMENT_DOLLMASTER_SUMMON_EXTRAJUMPS_EXTRA_JUMPS float
---@field AUGMENT_DOLLMASTER_SUMMON_EXTRAJUMPS_MOVESPEED_PENALTY_MULTIPLIER float
---@field AUGMENT_DOLLMASTER_SUMMON_JUMPREFRESH_POSSESSION_DURATION_PENALTY_MULTIPLIER float
---@field AUGMENT_DOLLMASTER_SUMMON_JUMPREFRESH_COOLDOWN_REDUCTION_MULTIPLIER float
---@field AUGMENT_DOLLMASTER_TELEPORT_HITREFRESH_DURATION float
---@field AUGMENT_DOLLMASTER_TELEPORT_HITREFRESH_COOLDOWN_SECONDS float
---@field AUGMENT_DOLLMASTER_TELEPORT_HITREFRESH_TELEPORT_COOLDOWN_PENALTY_MULTIPLIER float
---@field AUGMENT_DOLLMASTER_TELEPORT_DOUBLETELEPORT_WINDOW_DURATION float
---@field AUGMENT_DOLLMASTER_TELEPORT_DOUBLETELEPORT_ACTIVATION_TIME_BONUS_MULTIPLIER float
---@field AUGMENT_DOLLMASTER_TELEPORT_NOTARGETING_ACTIVATION_TIME_PENALTY_MULTIPLIER float
---@field TOAD_FPCAMERA_BOOM_LOCATION FVector
---@field AUGMENT_TOAD_LEAP_IMPROVEDSTAGGER_STAGGER_RADIUS_BONUS_MULTIPLIER float
---@field AUGMENT_TOAD_LEAP_IMPROVEDSTAGGER_STAGGER_DURATION_BONUS_MULTIPLIER float
---@field AUGMENT_TOAD_LEAP_IMPROVEDSTAGGER_LEAP_COOLDOWN_BONUS_MULTIPLIER float
---@field AUGMENT_TOAD_LEAP_FASTSPEED_LEAP_SPEED_BONUS_MULTIPLIER float
---@field AUGMENT_TOAD_LEAP_FASTSPEED_LEAP_TIME_PENALTY_MULTIPLIER float
---@field AUGMENT_TOAD_LEAP_FASTSPEED_LEAP_ACTIVATION_TIME_BONUS_MULTIPLIER float
---@field AUGMENT_TOAD_LEAP_FASTCOOLDOWN_LEAP_COOLDOWN_PENALTY_MULTIPLIER float
---@field AUGMENT_TOAD_LEAP_FASTCOOLDOWN_STAGGER_RADIUS_PENALTY_MULTIPLIER float
---@field AUGMENT_TOAD_ARMOR_HITBONUS_DAMAGE_BONUS_MULTIPLIER float
---@field AUGMENT_TOAD_ARMOR_HITBONUS_LEAP_LOCKOUT_SECONDS float
---@field AUGMENT_TOAD_ARMOR_SPEEDBONUS_SPEED_BONUS_MULTIPLIER float
---@field AUGMENT_TOAD_ARMOR_SPEEDBONUS_ACTIVATION_TIME_BONUS_MULTIPLIER float
---@field AUGMENT_TOAD_ARMOR_FASTCOOLDOWN_ARMOR_COOLDOWN_PENALTY_MULTIPLIER float
---@field AUGMENT_TOAD_ECHOLOCATION_CLONEMOTION_FREQUENCY_SECONDS float
---@field AUGMENT_TOAD_ECHOLOCATION_CLONEMOTION_LIFETIME_SECONDS float
---@field AUGMENT_TOAD_ECHOLOCATION_CLONEMOTION_COPY_SECONDS float
---@field AUGMENT_TOAD_ECHOLOCATION_CLONEMOTION_ACTIVATION_TIME_BONUS_MULTIPLIER float
---@field AUGMENT_TOAD_ECHOLOCATION_DEAFEN_DEAFEN_TIME float
---@field AUGMENT_TOAD_ECHOLOCATION_WEAPONDETECT_AURA_COLOR FLinearColor
---@field AUGMENT_TOAD_ECHOLOCATION_WEAPONDETECT_COOLDOWN_BONUS_MULTIPLIER float
---@field AUGMENT_ERADICATOR_MODESWAP_SPEEDBOOST_RUN_SPEED_BONUS_MULTIPLIER float
---@field AUGMENT_ERADICATOR_MODESWAP_SPEEDBOOST_BOOST_SECONDS float
---@field AUGMENT_ERADICATOR_MODESWAP_SPEEDBOOST_LOCKOUT_SECONDS float
---@field AUGMENT_ERADICATOR_MODESWAP_FASTCHARGE_SWAP_CHARGE_REDUCTION_MULTIPLIER float
---@field AUGMENT_ERADICATOR_MODESWAP_FASTCHARGE_VEHICLE_SPEED_REDUCTION_MULTIPLIER float
---@field AUGMENT_ERADICATOR_MODESWAP_FASTSURGECOOLDOWN_ASSAULT_SURGE_COOLDOWN_PENALTY_MULTIPLIER float
---@field AUGMENT_ERADICATOR_MODESWAP_FASTSURGECOOLDOWN_VEHICLE_SURGE_COOLDOWN_BONUS_MULTIPLIER float
---@field AUGMENT_ERADICATOR_ELECTRICSURGE_EXPOSE_CHARGE_TIME_INCREASE_MULTIPLIER float
---@field AUGMENT_ERADICATOR_ELECTRICSURGE_INHIBIT_INHIBITED_SECONDS float
---@field AUGMENT_ERADICATOR_ELECTRICSURGE_INHIBIT_OVERCHARGED_EXTRA_SECONDS float
---@field AUGMENT_ERADICATOR_ELECTRICSURGE_EXTRASURGE_AREA_INCREASE_MULTIPLIER float
---@field AUGMENT_ERADICATOR_SCANNERBEAM_ARMED_EXPOSED_DURATION_BONUS_MULTIPLIER float
---@field AUGMENT_ERADICATOR_SCANNERBEAM_ARMED_EXPOSED_DURATION_REDUCTION_MULTIPLIER float
---@field AUGMENT_ERADICATOR_SCANNERBEAM_WIDEAREA_SCAN_SIZE_MULTIPLIER float
---@field AUGMENT_ERADICATOR_SCANNERBEAM_WIDEAREA_CHARGE_TIME_INCREASE_MULTIPLIER float
---@field AUGMENT_ERADICATOR_SCANNERBEAM_FASTMOVING_RUN_SPEED_BONUS_MULTIPLIER float
---@field AUGMENT_ERADICATOR_SCANNERBEAM_FASTMOVING_RUN_SPEED_PENALTY_MULTIPLIER float
---@field AUGMENT_TECHNICIAN_ATTENUATION_REDUCTION_FACTOR float
---@field AUGMENT_TECHNICIAN_VOLUME_REDUCTION_FACTOR float
---@field AUGMENT_TECHNICIAN_MAX_ACTIVE_TEENS_1 int32
---@field AUGMENT_TECHNICIAN_MAX_ACTIVE_TEENS_2 int32
---@field AUGMENT_TECHNICIAN_MAX_ACTIVE_TEENS_3 int32
---@field AUGMENT_STATIONVISION_MAX_VIEW_DISTANCE_INCREASE_MULTIPLIER_1 float
---@field AUGMENT_STATIONVISION_MAX_VIEW_DISTANCE_INCREASE_MULTIPLIER_2 float
---@field AUGMENT_TECHNICIAN_PULSE_RATE float
---@field AUGMENT_TECHNICIAN_PULSE_MAX float
---@field AUGMENT_CRAFTMASTER_TOKEN_CRAFTING_BONUS_MULTIPLIER_1 float
---@field AUGMENT_CRAFTMASTER_TOKEN_CRAFTING_BONUS_MULTIPLIER_2 float
---@field AUGMENT_CRAFTMASTER_TOKEN_CRAFTING_BONUS_MULTIPLIER_3 float
---@field AUGMENT_MULTITASKER_CRAFTING_DECAY_REDUCTION_MULTIPLIER_1 float
---@field AUGMENT_MULTITASKER_CRAFTING_DECAY_REDUCTION_MULTIPLIER_2 float
---@field AUGMENT_MULTITASKER_CRAFTING_DECAY_REDUCTION_MULTIPLIER_3 float
---@field AUGMENT_HEALMASTER_SPEED_INCREASE_MULTIPLIER_1 float
---@field AUGMENT_HEALMASTER_SPEED_INCREASE_MULTIPLIER_2 float
---@field AUGMENT_HEALMASTER_SPEED_INCREASE_MULTIPLIER_3 float
---@field AUGMENT_ESSENCERESTORE_LIFELOSS_PREVENTION_TIME_1 float
---@field AUGMENT_ESSENCERESTORE_LIFELOSS_PREVENTION_TIME_2 float
---@field AUGMENT_ESSENCERESTORE_LIFELOSS_PREVENTION_TIME_3 float
---@field AUGMENT_ESSENCERESTORE_MOVEMENT_SPEED_TIME_1 float
---@field AUGMENT_ESSENCERESTORE_MOVEMENT_SPEED_TIME_2 float
---@field AUGMENT_ESSENCERESTORE_MOVEMENT_SPEED_TIME_3 float
---@field AUGMENT_ESSENCERESTORE_MOVEMENT_SPEED_BONUS_MULTIPLIER float
---@field AUGMENT_REVIVEMASTER_REVIVE_SPEED_INCREASE_1 float
---@field AUGMENT_REVIVEMASTER_REVIVE_SPEED_INCREASE_2 float
---@field AUGMENT_REVIVEMASTER_REVIVE_SPEED_INCREASE_3 float
---@field AUGMENT_REVIVEMASTER_REVIVE_BONUS_LIFE_FACTOR_1 float
---@field AUGMENT_REVIVEMASTER_REVIVE_BONUS_LIFE_FACTOR_2 float
---@field AUGMENT_REVIVEMASTER_REVIVE_BONUS_LIFE_FACTOR_3 float
---@field AUGMENT_INJURYVISION_INJURED_AURA_TIME_1 float
---@field AUGMENT_INJURYVISION_INJURED_AURA_TIME_2 float
---@field AUGMENT_INJURYVISION_INJURED_AURA_TIME_3 float
---@field AUGMENT_HARDY_BONUS_HEALTH_1 float
---@field AUGMENT_HARDY_BONUS_HEALTH_2 float
---@field AUGMENT_HARDY_BONUS_HEALTH_3 float
---@field AUGMENT_HARDY_BONUS_HEALTH_DURATION float
---@field AUGMENT_SLOWDYING_TIME_DECREASE_1 float
---@field AUGMENT_SLOWDYING_TIME_DECREASE_2 float
---@field AUGMENT_SLOWDYING_TIME_DECREASE_3 float
---@field AUGMENT_BLEEDREDUCTION_CLOT_SECS_1 float
---@field AUGMENT_BLEEDREDUCTION_CLOT_SECS_2 float
---@field AUGMENT_BLEEDREDUCTION_CLOT_SECS_3 float
---@field AUGMENT_BLEEDREDUCTION_TIME_TO_MAX_INTERVAL float
---@field AUGMENT_KEEPWEAPON_NUM_DEATHS_REQUIRED_1 float
---@field AUGMENT_KEEPWEAPON_NUM_DEATHS_REQUIRED_2 float
---@field AUGMENT_PICKUPVISION_RANGE_1 float
---@field AUGMENT_PICKUPVISION_RANGE_2 float
---@field AUGMENT_PICKUPVISION_RANGE_3 float
---@field AUGMENT_SEARCHMASTER_ATTENUATION_SCALE_FACTOR_1 float
---@field AUGMENT_SEARCHMASTER_ATTENUATION_SCALE_FACTOR_2 float
---@field AUGMENT_SEARCHMASTER_ATTENUATION_SCALE_FACTOR_3 float
---@field AUGMENT_SEARCHMASTER_VOLUME_REDUCTION_FACTOR float
---@field AUGMENT_SEARCHMASTER_SEARCHABLE_MINIGAME_SPEED_INCREASE_1 float
---@field AUGMENT_SEARCHMASTER_SEARCHABLE_MINIGAME_SPEED_INCREASE_2 float
---@field AUGMENT_SEARCHMASTER_SEARCHABLE_MINIGAME_SPEED_INCREASE_3 float
---@field AUGMENT_MEDKITMASTER_HEAL_SPEED_BONUS_MULTIPLIER_1 float
---@field AUGMENT_MEDKITMASTER_HEAL_SPEED_BONUS_MULTIPLIER_2 float
---@field AUGMENT_MEDKITMASTER_HEAL_SPEED_BONUS_MULTIPLIER_3 float
---@field AUGMENT_PICKUPEXPERT_BONUS_MULTIPLIER_1 float
---@field AUGMENT_PICKUPEXPERT_BONUS_MULTIPLIER_2 float
---@field AUGMENT_PICKUPEXPERT_BONUS_MULTIPLIER_3 float
---@field AUGMENT_TEENVISION_MAX_RANGE_1 float
---@field AUGMENT_TEENVISION_MAX_RANGE_2 float
---@field AUGMENT_TEENVISION_MAX_RANGE_3 float
---@field AUGMENT_SPRY_ADRENALINE_TIME_INCREASE_MULTIPLIER_1 float
---@field AUGMENT_SPRY_ADRENALINE_TIME_INCREASE_MULTIPLIER_2 float
---@field AUGMENT_SPRY_ADRENALINE_TIME_INCREASE_MULTIPLIER_3 float
---@field AUGMENT_MOTIVATOR_MAX_RANGE float
---@field AUGMENT_MOTIVATOR_ACTION_SPEED_INCREASE_1 float
---@field AUGMENT_MOTIVATOR_ACTION_SPEED_INCREASE_2 float
---@field AUGMENT_MOTIVATOR_ACTION_SPEED_INCREASE_3 float
---@field AUGMENT_ESSENCEVISION_ESSENCE_VISION_RADIUS_1 float
---@field AUGMENT_ESSENCEVISION_ESSENCE_VISION_RADIUS_2 float
---@field AUGMENT_ESSENCEVISION_ESSENCE_VISION_TEENSPECTRAL_MOVEMENT_BONUS_MULTIPLIER_1 float
---@field AUGMENT_ESSENCEVISION_ESSENCE_VISION_TEENSPECTRAL_MOVEMENT_BONUS_MULTIPLIER_2 float
---@field AUGMENT_ESSENCEVISION_ESSENCE_VISION_TEENSPECTRAL_MOVEMENT_BONUS_MULTIPLIER_3 float
---@field AUGMENT_CROUCHMASTER_SPEED_INCREASE_1 float
---@field AUGMENT_CROUCHMASTER_SPEED_INCREASE_2 float
---@field AUGMENT_CROUCHMASTER_SPEED_INCREASE_3 float
---@field AUGMENT_HIDEMASTER_COOLDOWN_1 float
---@field AUGMENT_HIDEMASTER_COOLDOWN_2 float
---@field AUGMENT_HIDEMASTER_COOLDOWN_3 float
---@field AUGMENT_HIDEMASTER_UNTRACEABLE_SECS_1 float
---@field AUGMENT_HIDEMASTER_UNTRACEABLE_SECS_2 float
---@field AUGMENT_HIDEMASTER_UNTRACEABLE_SECS_3 float
---@field AUGMENT_VAULTMASTER_COOLDOWN_1 float
---@field AUGMENT_VAULTMASTER_COOLDOWN_2 float
---@field AUGMENT_VAULTMASTER_COOLDOWN_3 float
---@field AUGMENT_VAULTMASTER_VAULT_SPEED_BONUS_MULTIPLIER float
---@field AUGMENT_VAULTMASTER_SPEED_BOOST_DURATION float
---@field AUGMENT_FAILMASTER_FAIL_CHANCE_DECREASE_1 float
---@field AUGMENT_FAILMASTER_FAIL_CHANCE_DECREASE_2 float
---@field AUGMENT_FAILMASTER_FAIL_CHANCE_DECREASE_3 float
---@field AUGMENT_LONEWOLF_MOVESPEED_BONUS_MULTIPLIER_1 float
---@field AUGMENT_LONEWOLF_MOVESPEED_BONUS_MULTIPLIER_2 float
---@field AUGMENT_LONEWOLF_MOVESPEED_BONUS_MULTIPLIER_3 float
---@field AUGMENT_LONEWOLF_MIN_RANGE float
---@field AUGMENT_INSPIRED_MAX_TOKENS_1 float
---@field AUGMENT_INSPIRED_MAX_TOKENS_2 float
---@field AUGMENT_INSPIRED_MAX_TOKENS_3 float
---@field AUGMENT_SECONDWIND_INJURY_RECOVERY_SECS_1 float
---@field AUGMENT_SECONDWIND_INJURY_RECOVERY_SECS_2 float
---@field AUGMENT_SECONDWIND_INJURY_RECOVERY_SECS_3 float
---@field AUGMENT_LETHALITY_LIFE_LOSS_BONUS_1 float
---@field AUGMENT_LETHALITY_LIFE_LOSS_BONUS_2 float
---@field AUGMENT_LETHALITY_LIFE_LOSS_BONUS_3 float
---@field AUGMENT_RESOLVE_MIN_RECOVERY_AMOUNT_1 float
---@field AUGMENT_RESOLVE_MIN_RECOVERY_AMOUNT_2 float
---@field AUGMENT_RESOLVE_MIN_RECOVERY_AMOUNT_3 float
---@field AUGMENT_INVIGORATING_ADRENALINE_BOOST_SECS_1 float
---@field AUGMENT_INVIGORATING_ADRENALINE_BOOST_SECS_2 float
---@field AUGMENT_INVIGORATING_ADRENALINE_BOOST_SECS_3 float
---@field AUGMENT_AUGUR_EVIL_REVEAL_SECS_1 float
---@field AUGMENT_AUGUR_EVIL_REVEAL_SECS_2 float
---@field AUGMENT_AUGUR_EVIL_REVEAL_SECS_3 float
---@field AUGMENT_FEROCITY_RECOVERY_PLAYRATE_INCREASE_1 float
---@field AUGMENT_FEROCITY_RECOVERY_PLAYRATE_INCREASE_2 float
---@field AUGMENT_FEROCITY_RECOVERY_PLAYRATE_INCREASE_3 float
---@field AUGMENT_GLUTTONY_FEAST_RAGE_BONUS_MULTIPLIER_INCREASE_1 float
---@field AUGMENT_GLUTTONY_FEAST_RAGE_BONUS_MULTIPLIER_INCREASE_2 float
---@field AUGMENT_GLUTTONY_FEAST_RAGE_BONUS_MULTIPLIER_INCREASE_3 float
---@field AUGMENT_VIGILANCE_CRAFT_FAIL_REVEAL_SECS_1 float
---@field AUGMENT_VIGILANCE_CRAFT_FAIL_REVEAL_SECS_2 float
---@field AUGMENT_VIGILANCE_CRAFT_FAIL_REVEAL_SECS_3 float
---@field AUGMENT_VIGILANCE_SKILLTEST_TIMER_BONUS_MULTIPLIER_1 float
---@field AUGMENT_VIGILANCE_SKILLTEST_TIMER_BONUS_MULTIPLIER_2 float
---@field AUGMENT_VIGILANCE_SKILLTEST_TIMER_BONUS_MULTIPLIER_3 float
---@field AUGMENT_WRATH_DAMAGED_RAGE_LOSS_REDUCTION_1 float
---@field AUGMENT_WRATH_DAMAGED_RAGE_LOSS_REDUCTION_2 float
---@field AUGMENT_WRATH_DAMAGED_RAGE_LOSS_REDUCTION_3 float
---@field AUGMENT_VENGEANCE_SPEED_BOOST_SECS_1 float
---@field AUGMENT_VENGEANCE_SPEED_BOOST_SECS_2 float
---@field AUGMENT_VENGEANCE_SPEED_BOOST_SECS_3 float
---@field AUGMENT_VENGEANCE_SPEED_BONUS_MULTIPLIER float
---@field AUGMENT_HIDESENSE_REVEAL_TIME_SECONDS float
---@field AUGMENT_HIDESENSE_REVEAL_DELAY_SECONDS_1 float
---@field AUGMENT_HIDESENSE_REVEAL_DELAY_SECONDS_2 float
---@field AUGMENT_HIDESENSE_REVEAL_DELAY_SECONDS_3 float
---@field AUGMENT_HIDESENSE_HIDE_PLAYRATE_BONUS_MULTIPLIER_1 float
---@field AUGMENT_HIDESENSE_HIDE_PLAYRATE_BONUS_MULTIPLIER_2 float
---@field AUGMENT_HIDESENSE_HIDE_PLAYRATE_BONUS_MULTIPLIER_3 float
---@field AUGMENT_INCORPOREALMASTER_INCORPOREAL_SPEED_BONUS_MULTIPLIER_2 float
---@field AUGMENT_INCORPOREALMASTER_INCORPOREAL_SPEED_BONUS_MULTIPLIER_3 float
---@field AUGMENT_INCORPOREALMASTER_ACCELERATION float
---@field AUGMENT_HEALSENSE_RANGE_1 float
---@field AUGMENT_HEALSENSE_RANGE_2 float
---@field AUGMENT_HEALSENSE_RANGE_3 float
---@field AUGMENT_HEALSENSE_MIN_HEALING_TIME float
---@field AUGMENT_FEASTSTEALTH_DURATION_1 float
---@field AUGMENT_FEASTSTEALTH_DURATION_2 float
---@field AUGMENT_FEASTSTEALTH_DURATION_3 float
---@field AUGMENT_FEASTSTEALTH_COOLDOWN float
---@field AUGMENT_FEASTDRAINESSENSE_LIFE_LOSS_PERCENT_PER_SECOND_1 float
---@field AUGMENT_FEASTDRAINESSENSE_LIFE_LOSS_PERCENT_PER_SECOND_2 float
---@field AUGMENT_FEASTDRAINESSENSE_LIFE_LOSS_PERCENT_PER_SECOND_3 float
---@field AUGMENT_RAGESPEED_MOVESPEED_BONUS_MULTIPLIER_1 float
---@field AUGMENT_RAGESPEED_MOVESPEED_BONUS_MULTIPLIER_2 float
---@field AUGMENT_RAGESPEED_MOVESPEED_BONUS_MULTIPLIER_3 float
---@field AUGMENT_RAGESPEED_ABILITY_COOLDOWN_PENALTY_MULTIPLIER_1 float
---@field AUGMENT_RAGESPEED_ABILITY_COOLDOWN_PENALTY_MULTIPLIER_2 float
---@field AUGMENT_RAGESPEED_ABILITY_COOLDOWN_PENALTY_MULTIPLIER_3 float
---@field AUGMENT_KILLINHIBIT_INHIBIT_TIME_SECONDS_1 float
---@field AUGMENT_KILLINHIBIT_INHIBIT_TIME_SECONDS_2 float
---@field AUGMENT_KILLINHIBIT_INHIBIT_TIME_SECONDS_3 float
---@field AUGMENT_KILLINHIBIT_COOLDOWN_SECONDS float
---@field AUGMENT_EXTENDSUBDUED_TIME_BONUS_MULTIPLIER_1 float
---@field AUGMENT_EXTENDSUBDUED_TIME_BONUS_MULTIPLIER_2 float
---@field AUGMENT_EXTENDSUBDUED_TIME_BONUS_MULTIPLIER_3 float
---@field AUGMENT_EVILSHARDMASTER_CAPTURE_TIME_REDUCTION_SECONDS_1 float
---@field AUGMENT_EVILSHARDMASTER_CAPTURE_TIME_REDUCTION_SECONDS_2 float
---@field AUGMENT_EVILSHARDMASTER_CAPTURE_TIME_REDUCTION_SECONDS_3 float
---@field AUGMENT_EVILPICKUPUSEREVEAL_REVEAL_TIME_SECONDS_1 float
---@field AUGMENT_EVILPICKUPUSEREVEAL_REVEAL_TIME_SECONDS_2 float
---@field AUGMENT_EVILPICKUPUSEREVEAL_REVEAL_TIME_SECONDS_3 float
---@field AUGMENT_PRONEREVEAL_RANGE_1 float
---@field AUGMENT_PRONEREVEAL_RANGE_2 float
---@field AUGMENT_PRONEREVEAL_RANGE_3 float
---@field AUGMENT_CROWDREVEAL_MIN_OTHER_TEENS int32
---@field AUGMENT_CROWDREVEAL_DURATION float
---@field AUGMENT_CROWDREVEAL_MIN_ACTIVATION_DISTANCE float
---@field AUGMENT_CROWDREVEAL_TEEN_RANGE float
---@field AUGMENT_CROWDREVEAL_COOLDOWN_1 float
---@field AUGMENT_CROWDREVEAL_COOLDOWN_2 float
---@field AUGMENT_CROWDREVEAL_COOLDOWN_3 float
---@field AUGMENT_PICKUPDROP_COOLDOWN_SECONDS_1 float
---@field AUGMENT_PICKUPDROP_COOLDOWN_SECONDS_2 float
---@field AUGMENT_PICKUPDROP_COOLDOWN_SECONDS_3 float
---@field AUGMENT_SCREAMRANGE_RANGE_BONUS_MULTIPLIER_1 float
---@field AUGMENT_SCREAMRANGE_RANGE_BONUS_MULTIPLIER_2 float
---@field AUGMENT_SCREAMRANGE_RANGE_BONUS_MULTIPLIER_3 float
---@field AUGMENT_RCTR_SPEEDANDCONSUMPTION_SPEED_BONUS float
---@field AUGMENT_RCTR_SPEEDANDCONSUMPTION_CONSUMPTION_BONUS_MULTIPLIER float
---@field AUGMENT_RCTR_EXTRAHEALTH_SPEED_PENALTY float
---@field AUGMENT_RCTR_EXTRAHEALTH_EVIL_HIT_PERCENT_LOST float
---@field AUGMENT_RCTR_BEAMRANGE_RANGE_INCREASE float
---@field AUGMENT_RCTR_BEAMRANGE_EXPOSED_DISTANCE float
---@field AUGMENT_RCTR_REVEALTEENS_REVEAL_MAX_RANGE float
---@field AUGMENT_RCTR_REVEALTEENS_DEPLOY_TIME_BONUS_SECONDS float
---@field AUGMENT_RCTR_LONGDURATION_ENERGY_CONSUMPTION_MULTIPLIER float
---@field AUGMENT_RYGN_FASTCRAFT_CRAFTSPEED_BONUS_MULTIPLIER float
---@field AUGMENT_RYGN_SHOTBOUNCE_NUMBER_OF_BOUNCES int32
---@field AUGMENT_RYGN_SPREADSHOT_WARMUPTIME_PENALTY float
---@field AUGMENT_RYGN_SHOTBOUNCE_CRAFT_TIME_PENALTY_MULTIPLIER float
---@field AUGMENT_RYGN_SPREADSHOT_SHOOTING_ANGLE float
---@field AUGMENT_RYGN_SPREADSHOT_PROJECTILE_NUMBER_OF_SHOTS float
---@field AUGMENT_RYGN_REVEALINGSHOTS_REVEAL_TIME float
---@field AUGMENT_RYGN_REVEALINGSHOTS_AMMO_PENALTY_MULTIPLIER float
---@field AUGMENT_RYGN_HEALTHRESTORE_PERCENT_PER_SHOT float
---@field AUGMENT_RYGN_HEALTHRESTORE_RANGE_REDUCTION_MULTIPLIER float
---@field AUGMENT_STAF_CHARGEREGEN_HEALTH_LOSS_PERCENT_PER_SECOND float
---@field AUGMENT_STAF_CHARGEREGEN_MAX_CHARGE_PERCENT float
---@field AUGMENT_STAF_PRONEHEALTH_CHARGE_PERCENT_FROM_REVIVE float
---@field AUGMENT_STAF_PRONEHEALTH_CONSUMPTION_BONUS_MULTIPLIER float
---@field AUGMENT_STAF_INJUREONCRAFT_CHARGE_PERCENT_FROM_INJURY float
---@field AUGMENT_STAF_CHARGEREVEAL_CRAFTTIME_BONUS_MULTIPLIER float
---@field AUGMENT_STAF_FASTHEAL_HEALSPEED_BONUS_MULTIPLIER float
---@field AUGMENT_MOLO_SPEEDBOOST_SPEED_BONUS_MULTIPLIER float
---@field AUGMENT_MOLO_SPEEDBOOST_DEBRIS_LIFE_REDUCTION_MULTIPLIER float
---@field AUGMENT_MOLO_BOUNCETHROW_BOUNCINESS float
---@field AUGMENT_MOLO_BOUNCETHROW_NUMBER_OF_BOUNCES int32
---@field AUGMENT_MOLO_EXTRAMOLOTOV_EXTRA_AMOUNT int32
---@field AUGMENT_MOLO_EXTRAMOLOTOV_CRAFT_SPEED_MULTIPLIER float
---@field AUGMENT_MOLO_LONGBURN_POWER_REDUCTION_MULTIPLIER float
---@field AUGMENT_MOLO_LONGBURN_DEBRIS_LIFE_BONUS_MULTIPLIER float
---@field AUGMENT_MOLO_SLOWRECOVERY_SPEED_PENALTY_BONUS_MULTIPLIER float
---@field AUGMENT_MOLO_SLOWRECOVERY_EVIL_RECOVERY_PENALTY_SECONDS float
---@field AUGMENT_MOLO_SLOWRECOVERY_WARMUP_TIME_BONUS float
---@field AUGMENT_MOLO_SPEEDBOOST_DURATION float
---@field AUGMENT_FLTR_AMMOREGEN_PERCENT_PER_SECOND float
---@field AUGMENT_FLTR_AMMOREGEN_CHARGE_CONSUMPTION_BONUS_MULTIPLIER float
---@field AUGMENT_FLTR_INJUREDFREEFIRE_FREE_FIRE_TIME float
---@field AUGMENT_FLTR_INJUREDFREEFIRE_SHOW_OWNER_TIME float
---@field AUGMENT_FLTR_LONGRANGE_RANGE_BONUS_MULTIPLIER float
---@field AUGMENT_FLTR_LONGRANGE_WARMUP_TIME_BONUS float
---@field AUGMENT_FLTR_REDUCERAGE_RAGE_PERCENT_PER_SECOND float
---@field AUGMENT_FLTR_REDUCERAGE_CRAFT_SPEED_PENALTY_MULTIPLIER float
---@field AUGMENT_FLTR_FASTCRAFT_CRAFT_SPEED_BONUS_MULTIPLIER float
---@field AUGMENT_FLAMEMINE_EXPOSE_SUMMON_TIME_INCREASE_MULTIPLIER float
---@field AUGMENT_FLAMEMINE_MULTI_MAX_MINES int32
---@field AUGMENT_FLAMEMINE_MULTI_FIRING_COST_INCREASE_MULTIPLIER float
---@field AUGMENT_FLAMEMINE_LONGDURATION_FIRING_COST_REDUCTION_MULTIPLIER float
---@field AUGMENT_FLAMEMINE_LONGDURATION_CRAFT_TIME_INCREASE_MULTIPLIER float
---@field AUGMENT_FLAMEMINE_MOBILE_MOVESPEED float
---@field AUGMENT_FLAMEMINE_SIGHT_WARMUP_CHARGE_REDUCTION_BONUS_MULTIPLIER float
---@field AUGMENT_DSRD_SPEEDBOOST_TRAIL_DURATION_PENALTY_MULTIPLIER float
---@field AUGMENT_DSRD_SPEEDBOOST_SPEED_BONUS_MULTIPLIER float
---@field AUGMENT_DSRD_SPEEDBOOST_DURATION float
---@field AUGMENT_DSRD_REVEALEVIL_TEEN_REVEAL_TIME float
---@field AUGMENT_DSRD_FASTCRAFT_CRAFTING_BONUS_MULTIPLIER float
---@field AUGMENT_DSRD_PROJECTILELIFETIME_TRAIL_DURATION_BONUS_MULTIPLIER float
---@field AUGMENT_DSRD_PROJECTILELIFETIME_SWING_TIME_BONUS_MULTIPLIER float
---@field AUGMENT_DSRD_REVEALEVIL_EVIL_REVEAL_TIME float
---@field AUGMENT_DSRD_EXTRASWINGS_AMMO_BONUS int32
---@field AUGMENT_DSRD_EXTRASWINGS_CRAFT_PENALTY float
---@field AUGMENT_PRCH_TELEPORT_CRAFTING_BONUS_MULTIPLIER float
---@field AUGMENT_PRCH_TELEPORT_CHARGE_TIME float
---@field AUGMENT_PRCH_REVEAL_AURA_REVEAL_TIME float
---@field AUGMENT_PRCH_REVEAL_SPEED_PENALTY_BONUS_MULTIPLIER float
---@field AUGMENT_PRCH_LONGDURATION_SUMMONING_BONUS_SECONDS float
---@field AUGMENT_PRCH_LONGDURATION_ENERGY_BONUS_MULTIPLIER float
---@field AUGMENT_PRCH_FASTMOVEMENT_MAX_SPEED_BONUS_MULTIPLIER float
---@field AUGMENT_PRCH_FASTMOVEMENT_CONSUMPTION_INCREASE_MULTIPLIER float
---@field AUGMENT_PRCH_SENSEEVIL_RANGE float
---@field AUGMENT_PRCH_SENSEEVIL_EXPLOSION_RADIUS_REDUCTION_MULTIPLIER float
---@field AUGMENT_TALI_SILENT_CHARGE_TIME_BONUS_MULTIPLIER float
---@field AUGMENT_TALI_SILENT_CHARGE_VOLUME_REDUCTION_MULTIPLIER float
---@field AUGMENT_TALI_LIFECHARGE_HEALTH_LOSS_PERCENT_PER_SECOND float
---@field AUGMENT_TALI_LIFECHARGE_ABSORB_PERCENT_PER_SECOND float
---@field AUGMENT_TALI_LIFECHARGE_MAX_CHARGE_PERCENT float
---@field AUGMENT_TALI_LONGRANGE_WARMUP_TIME_BONUS float
---@field AUGMENT_TALI_LONGRANGE_RANGE_BONUS_MULTIPLIER float
---@field AUGMENT_TALI_ABSORBREVEALED_ABSORB_BONUS_MULTIPLIER float
---@field AUGMENT_TALI_ABSORBREVEALED_CRAFT_SPEED_BONUS_MULTIPLIER float
---@field AUGMENT_TALI_RECHARGEABLE_CRAFT_SPEED_PENALTY_MULTIPLIER float
---@field STICKER_MAX_PLACEMENT_DISTANCE_TEEN float
---@field STICKER_MAX_PLACEMENT_DISTANCE_EVIL float
---@field STICKER_MAX_PLACEMENT_COOLDOWN float
---@field STICKER_MAX_PER_CHARACTER int32
---@field STICKER_LIFETIME_SECS float
---@field STICKER_BASE_SCALE FVector
---@field EVIL_STICKER_BASE_SCALE FVector
---@field MAX_VISIBLE_STATUS_EFFECTS int32
---@field MAX_VISIBLE_STATUS_EFFECT_TOKENS int32
---@field STATUS_TILE_COLOR_POSITIVE FLinearColor
---@field STATUS_TILE_COLOR_NEUTRAL FLinearColor
---@field STATUS_TILE_COLOR_NEGATIVE FLinearColor
---@field STATUS_TILE_COLOR_TIER_1 FLinearColor
---@field STATUS_TILE_COLOR_TIER_2 FLinearColor
---@field STATUS_TILE_COLOR_TIER_3 FLinearColor
---@field STATUS_TILE_COLOR_ABILITY FLinearColor
---@field CINEMATIC_CAMERA_SPEED_MULTIPLIER_MAX float
---@field CINEMATIC_CAMERA_DOF_FOCUS_PLANE_MAX float
---@field CINEMATIC_CAMERA_DOF_INTENSITY_MAX float
---@field CINEMATIC_CAMERA_DPAD_INCREMENT_AMOUNT float
---@field CINEMATIC_CAMERA_BASE_FLY_SPEED float
---@field CINEMATIC_CAMERA_FAST_MODE_SPEED_MULTIPLIER float
---@field CINEMATIC_CAMERA_ROLL_BASE_RATE float
---@field CINEMATIC_CAMERA_CRANE_BASE_RATE float
---@field CINEMATIC_CAMERA_FOV_CHANGE_BASE_RATE float
---@field CINEMATIC_CAMERA_STICK_PRESS_THRESHOLD float
---@field CINEMATIC_CAMERA_ORBIT_ZOOM_SPEED float
---@field CINEMATIC_CAMERA_MENU_CURSOR_COOLDOWN float
---@field CINEMATIC_CAMERA_LOCK_ON_SEARCH_RADIUS float
---@field MATCHMOD_POINTBOOST_MULTI_ALL_MULTIPLIER float
---@field MATCHMOD_POINTBOOST_SINGLE_ALL_MULTIPLIER float
---@field MATCHMOD_POINTBOOST_SINGLE_INGENUITYPURSUIT_1_MULTIPLIER float
---@field MATCHMOD_POINTBOOST_SINGLE_COOPTORMENT_1_MULTIPLIER float
---@field MATCHMOD_POINTBOOST_SINGLE_WEAPONRYONSLAUGHT_1_MULTIPLIER float
---@field MATCHMOD_POINTBOOST_SINGLE_GRITDOMINANCE_1_MULTIPLIER float
---@field MATCHMOD_POINTBOOST_SINGLE_INGENUITYPURSUIT_2_MULTIPLIER float
---@field MATCHMOD_POINTBOOST_SINGLE_COOPTORMENT_2_MULTIPLIER float
---@field MATCHMOD_POINTBOOST_SINGLE_WEAPONRYONSLAUGHT_2_MULTIPLIER float
---@field MATCHMOD_POINTBOOST_SINGLE_GRITDOMINANCE_2_MULTIPLIER float
---@field MATCHMOD_RESURRECTMODIFIER_EXTRAHEALTH_BONUS_PERCENT float
---@field MATCHMOD_RESURRECTMODIFIER_LESSPUZZLES_NUM_PUZZLES float
---@field MATCHMOD_PICKUPSTARVE_PILLS_01_REMOVED_NUM int32
---@field MATCHMOD_PICKUPSTARVE_PILLS_02_REMOVED_NUM int32
---@field MATCHMOD_PICKUPSTARVE_ADRENALINE_01_REMOVED_NUM int32
---@field MATCHMOD_PICKUPSTARVE_ADRENALINE_02_REMOVED_NUM int32
---@field MATCHMOD_PICKUPSTARVE_COMBO_01_PILLS_REMOVED_NUM int32
---@field MATCHMOD_PICKUPSTARVE_COMBO_01_ADRENALINE_REMOVED_NUM int32
---@field MATCHMOD_SPAWNSTART_ALLTOGETHER_RADIUS float
---@field MATCHMOD_TRANSFORMSTART_DELAY_BONUS_MULTIPLIER float
---@field MATCHMOD_TRANSFORMSTART_TRANSFORM_TIME_REDUCTION_MULTIPLIER float
---@field MATCHMOD_SPAWNSTART_ALTOGETHER_MAX_TARGETS int32
---@field SPAWNSTART_ALTOGETHER_DEBUG_CAPSULES float
---@field EMOTE_COOLDOWN_DURATION float
---@field EMOTE_LOCK_IN_PLACE_TIME float
---@field EVILSPECTRAL_TARGET_SPAWN_DEFAULT_NUM int32
---@field EVILSPECTRAL_ORBIT_RADIUS_DEFAULT float
---@field EVILSPECTRAL_ORBIT_RADIUS_FEASTING float
---@field EVILSPECTRAL_ORBIT_RADIUS_PING float
---@field EVILSPECTRAL_VERTICALOFFSET_PING_MIN float
---@field EVILSPECTRAL_VERTICALOFFSET_PING_MAX float
---@field EVILSPECTRAL_TARGET_SPAWN_NUM_PING int32
---@field MATCHEVENTQUEUE_TRAPATTACKAFTERTRIGGER_NUM_SECONDS float
---@field MATCHEVENTQUEUE_DOLLTELEPORTATTACK_NUM_SECONDS float
---@field TPCHAR_ACTION1_BUFFER_DURATION float
---@field SCOREPOPUP_LERPSPEED float
---@field SCOREPOPUP_DISTANCE_BETWEEN float
---@field SCOREPOPUP_ADDITIONAL_MESSAGE_SCALE float
---@field SCOREPOPUP_SCALE_LERP_SPEED float
---@field SCOREPOPUP_ADDITIONAL_MESSAGE_OPACITY float
---@field SCOREPOPUP_TIME_BETWEEN_MESSAGES float
---@field SCOREPOPUP_FULL_OPACITY_TIME float
---@field SCOREPOPUP_FADEOUT_TIME float
---@field SCOREPOPUP_FADEIN_TIME float
---@field PLAYERNAME_HOVER_TIME_BEFORE_FADE_IN float
---@field PLAYERNAME_FADE_IN_RATE float
---@field STATION_BURN_COLOR FLinearColor
---@field STATION_HOLY_COLOR FLinearColor
---@field STATION_OCCULT_COLOR FLinearColor
---@field STATION_SHOCK_COLOR FLinearColor
---@field STATION_UNUSED_COLOR FLinearColor
---@field STATION_USED_COLOR FLinearColor
---@field STATION_FAILED_COLOR FLinearColor
---@field STATION_DEFAULT_ELECTRIC_WEAPON EWeaponTypeEnum
---@field STATION_DEFAULT_FLAME_WEAPON EWeaponTypeEnum
---@field STATION_DEFAULT_OCCULT_WEAPON EWeaponTypeEnum
---@field STATION_DEFAULT_HOLY_WEAPON EWeaponTypeEnum
---@field EVILDAMAGEPANEL_BURN_FILLED_COLOR FLinearColor
---@field EVILDAMAGEPANEL_OCCULT_FILLED_COLOR FLinearColor
---@field EVILDAMAGEPANEL_HOLY_FILLED_COLOR FLinearColor
---@field EVILDAMAGEPANEL_ELECTRIC_FILLED_COLOR FLinearColor
---@field EVILDAMAGEPANEL_BURN_UNFILLED_COLOR FLinearColor
---@field EVILDAMAGEPANEL_OCCULT_UNFILLED_COLOR FLinearColor
---@field EVILDAMAGEPANEL_HOLY_UNFILLED_COLOR FLinearColor
---@field EVILDAMAGEPANEL_ELECTRIC_UNFILLED_COLOR FLinearColor
---@field DARKSHARD_OVERLAY_ICON_LERP_SPEED_SECONDS float
---@field TPCHAR_BASE_STATIONVISION_RANGE float
---@field TPCHAR_BASE_MEDKIT_VISION_RANGE float
---@field TPCHAR_BASE_RESURRECT_DEAD_VISION_RANGE float
---@field PLAYER_1_COLOR FLinearColor
---@field PLAYER_2_COLOR FLinearColor
---@field PLAYER_3_COLOR FLinearColor
---@field PLAYER_4_COLOR FLinearColor
---@field PLAYER_5_COLOR FLinearColor
---@field PLAYER_6_COLOR FLinearColor
---@field PLAYER_7_COLOR FLinearColor
---@field PLAYERCARD_HEALTH_DEFAULT_COLOR FLinearColor
---@field PLAYERCARD_HEALTH_INJURED_COLOR FLinearColor
---@field PLAYERCARD_HEALTH_PRONE_COLOR FLinearColor
---@field PLAYERCARD_HEALTH_DEAD_COLOR FLinearColor
---@field PLAYERCARD_HEALTH_HARDY_COLOR FLinearColor
---@field PLAYERCARD_HEALTH_DEFAULT_BORDERCOLOR FLinearColor
---@field PLAYERCARD_EVILHIT_SHAKE_TIME float
---@field PLAYERCARD_EVILHIT_SHAKE_TRANSLATIONSCALE float
---@field PLAYERCARD_EVILHIT_SHAKE_ENRAGED_MULTIPLIER float
---@field PLAYERCARD_EVILHIT_SHAKE_ROTATIONSCALE float
---@field PHYSICS_HAIR_MAX_WINDSPEED float
---@field PHYSICS_HAIR_ANGULAR_MULTIPLIER float
---@field PHYSICS_HAIR_ANGULAR_DECAY float
---@field PHYSICS_HAIR_MAX_DELTA float
---@field PHYSICS_HAIR_MATERIAL_ENABLED boolean
---@field SCORE_TEEN_REVIVE float
---@field SCORE_TEEN_RESURRECT float
---@field SCORE_TEEN_HEAL float
---@field SCORE_TEEN_WOUND_ASSIST float
---@field SCORE_TEEN_STUN_ASSIST float
---@field SCORE_TEEN_CHASE_ASSIST float
---@field SCORE_TEEN_GUARDIAN float
---@field SCORE_TEEN_CENTERPIECE_COMPLETED_HOLIDAY float
---@field SCORE_TEEN_LIFEESSENCE_SMALL float
---@field SCORE_TEEN_LIFEESSENCE_LARGE float
---@field SCORE_TEEN_SURVIVED_MATCH float
---@field SCORE_TEEN_DAMAGE_AVOIDANCE_MAX_BONUS float
---@field SCORE_TEEN_SELF_HEAL float
---@field SCORE_TEEN_CHASE_POINTS_PER_SECOND float
---@field SCORE_TEEN_ESCAPED_CHASE float
---@field SCORE_TEEN_PING_RESURRECT float
---@field GAME_SCORE_EASTER_TEEN_HUNT_COMPLETED float
---@field SCORE_TEEN_PERFECT_SKILL float
---@field SCORE_TEEN_PASS_SKILL float
---@field SCORE_TEEN_FIND_ITEM float
---@field SCORE_TEEN_TRICK_OR_TREAT float
---@field SCORE_TEEN_EVIL_TRIP_NOISEMAKER float
---@field SCORE_TEEN_DISARM_DOLLMASTER_TRAP float
---@field SCORE_TEEN_USED_PILLS float
---@field SCORE_TEEN_USED_ADRENALINE float
---@field SCORE_TEEN_USED_WALKIE float
---@field SCORE_TEEN_USED_SMOKEBOMB float
---@field SCORE_TEEN_SHARD_ACTIVATED float
---@field SCORE_TEEN_SHARD_ACTIVATED_ASSIST float
---@field SCORE_TEEN_SEARCHED_PRESENT_HOLIDAY float
---@field SCORE_TEEN_USED_ORNAMENT_HOLIDAY float
---@field SCORE_TEEN_HOLIDAY_USED_TREAT float
---@field GAME_SCORE_EASTER_SEARCHED_EVENT float
---@field SCORE_TEEN_CRAFTING_POINTS_PER_SECOND float
---@field SCORE_TEEN_WOUND_EVIL float
---@field SCORE_TEEN_STUN_EVIL float
---@field SCORE_TEEN_KILL_EVIL float
---@field SCORE_TEEN_DESTROY_MINION float
---@field SCORE_TEEN_DAMAGED_EVIL float
---@field SCORE_TEEN_HARRIED_EVIL float
---@field SCORE_TEEN_TOAD_ARMOR_BROKEN float
---@field SCORE_TEEN_TALISMAN_FULL_CHARGE float
---@field SCORE_TEEN_HOLYSTAFF_FULL_CHARGE float
---@field SCORE_TEEN_STATICSHIELD_FULL_CHARGE float
---@field SCORE_EVIL_INJURES_PLAYER float
---@field SCORE_EVIL_KNOCKDOWN_TEEN float
---@field SCORE_EVIL_KILLS_PLAYER float
---@field SCORE_EVIL_REVENGE_HIT float
---@field SCORE_EVIL_CHASE_COMPLETED float
---@field SCORE_EVIL_FOUND_HIDING_TEEN float
---@field SCORE_EVIL_CHASE_POINTS_PER_SECOND float
---@field SCORE_EVIL_ATTACKED_PRESENT_HOLIDAY float
---@field SCORE_EVIL_USED_ORNAMENT_HOLIDAY float
---@field SCORE_EVIL_ENERGY_COLLECTED float
---@field GAME_SCORE_EASTER_EVENT_ATTACKED float
---@field SCORE_EVIL_KNOCKDOWN_WITH_RAGE float
---@field SCORE_EVIL_SHARD_ACTIVATED float
---@field SCORE_EVIL_POINTS_PER_WOUND_AVOIDED float
---@field SCORE_EVIL_HIT_ARMED_TEEN float
---@field SCORE_EVIL_DESTROYS_COPTER float
---@field SCORE_EVIL_HIT_VENDINGMACHINE float
---@field SCORE_EVIL_EVENT_ATTACKED_HALLOWEEN_PUMPKIN float
---@field SCORE_EVIL_CENTERPIECE_COMPLETED_HOLIDAY float
---@field GAME_SCORE_EASTER_EVIL_HUNT_COMPLETED float
---@field SCORE_EVIL_CREATE_EFFIGY float
---@field SCORE_WEREWOLF_HOWL_HIT float
---@field SCORE_WEREWOLF_BERSERK_HIT float
---@field SCORE_WEREWOLF_SENSE_HIT float
---@field SCORE_DOLLMASTER_TRAP_TRIGGER float
---@field SCORE_DOLLMASTER_DOLL_HIT float
---@field SCORE_DOLLMASTER_DOLL_LEAP_ATTACK float
---@field SCORE_DOLLMASTER_TELEPORT_ESCAPE float
---@field SCORE_DOLLMASTER_TELEPORT_ATTACK float
---@field SCORE_TOAD_ECHOLOCATION_ATTACK float
---@field SCORE_TOAD_ARMOR_ATTACK float
---@field SCORE_TOAD_LEAP_ATTACK float
---@field SCORE_ERADICATOR_SCAN_HIT float
---@field SCORE_ERADICATOR_ELECTROCUTED_HIT float
---@field SCORE_ERADICATOR_TEEN_ELECTROCUTED float
---@field SCORE_ERADICATOR_TEEN_ELECTROCUTED_EXTRA_TEEN_BONUS float
---@field SCORE_ERADICATOR_VEHICLEMODE_HIT float
---@field WEAPONXP_MAX_POINTS_PER_MATCH int32
---@field WEAPONXP_POINTS_PER_CRAFT_PERCENT int32
---@field WEAPONXP_POINTS_CRAFT_WEAPON int32
---@field WEAPONXP_POINTS_PER_CHARGE_PERCENT int32
---@field WEAPONXP_POINTS_PER_REMOTECHAR_SEC int32
---@field WEAPONXP_POINTS_PER_DAMAGE_EVIL_SEC int32
---@field WEAPONXP_POINTS_TOAD_ARMOR_BREAK int32
---@field WEAPONXP_POINTS_DESTROY_MINION int32
---@field WEAPONXP_POINTS_STUN_EVIL int32
---@field WEAPONXP_POINTS_WOUND_EVIL int32
---@field WEAPONXP_POINTS_ASSIST_TEEN int32
---@field PROPS_IMPACT_SOUND_INTENSITY_HEAVYBUMP float
---@field PROPS_IMPACT_SOUND_INTENSITY_LIGHTBUMP float
---@field PROPS_IMPACT_SOUND_INTENSITY_KICK float
---@field PROP_STABILIZATION_MULTIPLIER float
---@field PROP_SLEEP_MULTIPLIER float
---@field STORE_TILE_SLIDESHOW_TIME_PER_SLIDE float
---@field STORE_BASE_FP_PER_USD float
---@field STORE_PRIZE_PACK_TILE_BACKGROUND FColor
---@field STORE_PRIZE_PACK_TILE_SPACER_SIZE int32
---@field FOOTSTEP_FX_SYSTEM_ENABLED boolean
---@field HIDEPOINT_GLINT_COLOR FLinearColor
---@field HIDEPOINT_ROOTMOTION_MINIMUM_FORWARD_TRANSLATION float
---@field HIDEPOINT_TIME_HIDING_UNTIL_SUCCESSFULLY_AVOIDED_FOR_STATS float
---@field MET_CNT_HITTEENSHORTLYAFTERTRANSFORM_SECONDS float
---@field MET_CNT_HITTEENSHORTLYAFTERFAILEDSTATION_SECONDS float
---@field MET_CNT_HITTEENSHORTLYAFTERRETURN_SECONDS float
---@field MET_CNT_SCREAMAFFECTSMANY_TEENS_REQUIRED int32
---@field MET_CNT_REVENGEHITTEEN_MAX_TIME float
---@field DAMAGE_INDICATOR_COLOR_BURN FLinearColor
---@field DAMAGE_INDICATOR_COLOR_SHOCK FLinearColor
---@field DAMAGE_INDICATOR_COLOR_OCCULT FLinearColor
---@field DAMAGE_INDICATOR_COLOR_HOLY FLinearColor
---@field SHOW_ABILITY_TIP_TIMER float
---@field OBSERVER_TP_CAMERA_ROTATION_LAG float
---@field OBSERVER_FP_CAMERA_ROTATION_LAG float
---@field AI_CAMERA_BOOM_USECONTROLROTATION boolean
---@field AI_BEST_TARGET_LOW_BIAS int32
---@field AI_BEST_TARGET_MEDIUM_BIAS int32
---@field AI_BEST_TARGET_HIGH_BIAS int32
---@field AI_TEEN_HITS_IMPORTANCE_MULTIPLIER float
---@field AI_TIME_SPENT_CHASING_DECAY_MULTIPLIER float
---@field AI_MIN_TIME_SPENT_CHASING_BEFORE_TARGET_CHANGE float
---@field AI_PATROL_UTILITY_SCORE_ULTRA_HIGH float
---@field AI_PATROL_UTILITY_SCORE_HIGH float
---@field AI_PATROL_UTILITY_SCORE_MED float
---@field AI_PATROL_UTILITY_SCORE_LOW float
---@field AI_PATROL_UTILITY_SCORE_ZERO float
---@field AI_PATROL_TEEN_VISITED_COOLDOWN float
---@field AI_PATROL_TEEN_PRONE_VALID_TIME float
---@field AI_PATROL_TEEN_SEARCHING_DISTANCE_LOWERBOUND float
---@field AI_PATROL_TEEN_SEARCHING_DISTANCE_UPPERBOUND float
---@field AI_PATROL_STATION_VISITED_COOLDOWN float
---@field AI_PATROL_STATION_FAILED_DURATION float
---@field AI_PATROL_STATION_SEARCHING_DISTANCE_LOWERBOUND float
---@field AI_PATROL_STATION_SEARCHING_DISTANCE_UPPERBOUND float
---@field AI_PATROL_DARKSHARD_VISITED_COOLDOWN float
---@field AI_PATROL_MEDKIT_VISITED_COOLDOWN float
---@field AI_PATROL_MEDKIT_SEARCHING_DISTANCE_LOWERBOUND float
---@field AI_PATROL_MEDKIT_SEARCHING_DISTANCE_UPPERBOUND float
---@field AI_DEBUG_NOHIT boolean
---@field AI_DEBUG_NOSEE boolean
---@field AI_DEBUG_NOHEAR boolean
---@field AI_DEBUG_LOG_NOISE_EVENTS boolean
---@field AI_DEBUG_LOG_BEHAVIOR boolean
---@field AI_TIME_BEFORE_TRITON_UPDATE float
---@field BASECHAR_DISTANCE_THRESHOLD_BEFORE_TRITON_UPDATE float
---@field AI_INITIAL_HEARING_ACCURACY float
---@field AI_HEARING_ACCURACY_DECREASE_PER_DIFFICULTY_LEVEL float
---@field AI_EVIL_ADDITIONAL_SPACING_BUFFER float
---@field AI_EVIL_MAX_DAMAGE_RANGE_AWARENESS float
---@field AI_EVIL_ROTATION_RATE float
---@field AMMO_PERCENTAGE_TO_DISCARD_WEAPON float
---@field PARCHMENT_CHARGE_REDUCTION_ONHIT float
---@field COPTER_CHARGE_REDUCTION_ONHIT float
---@field STAT_CHARGE_REDUCTION_ONHIT float
---@field SURVIVAL_DOLL_ROUND int32
UGameConstants = {}

---@return UGameConstants
function UGameConstants:GetDefaultGameConstants() end


---@class UGameInfoInstance : UGameInstance
---@field mMatchSummaryInfoData FMatchSummaryInfoData
---@field mbForceTritonOff boolean
---@field mbIsReturningToFEnd boolean
---@field mVoiceChatParticipants TArray<FString>
---@field mPartyVoiceChatId FString
---@field mLobbyVoiceChatId FString
---@field mpLobbyManager ULobbyManager
---@field mpTipsManager UTipsManager
---@field mErrorString FString
---@field mBackendManagerForHost UBackendManager
---@field mpBackendQueueManager UBackendQueueManager
---@field mLoadoutManagerForHost ULoadoutManager
---@field mLoadoutManagerForClient ULoadoutManager
---@field mpSeasonPassManager USeasonPassManager
---@field mpPatchNotesManager UPatchNotesManager
---@field mpServerNotificationManager UServerNotificationManager
---@field mpSeasonalEventManager USeasonalEventManager
---@field mbShowEndOfRound boolean
---@field mpAudioMetaData UDataTable
---@field mpNavWidgetManager UNavWidgetManager
---@field mpInputManager UInputManager
---@field mpGuideSystem UGuideSystem
---@field mpModalManager UModalManager
---@field mpGameScriptingManager UGameScriptingManager
---@field mpSocialManager USocialManager
---@field mpSmokeTestEngine USmokeTestEngine
---@field mpPlayerSaveGame UPlayerSaveGame
---@field mpPlayerJourneyDataSave UPlayerJourneyDataSave
---@field mpNewFlagTracker UNewFlagTracker
---@field mpLoadingScreenWidget UHUDLoadingScreenWidget
---@field mpWatermarkWidget UHUDWatermarkWidget
---@field mHUDWatermarkWidgetClass TSubclassOf<UHUDWatermarkWidget>
---@field mpToastWidget UToastWidget
---@field mToastWidgetClass TSubclassOf<UToastWidget>
---@field mbWaitingToStartReplay boolean
---@field mQueuedReplay FReplayInfo
---@field mNumFEVisits int32
---@field mUploadPlayerSettings boolean
---@field mpDbItemDatabase UDbItemDatabase
---@field mpPlotTwistManager UPlotTwistManager
---@field mpAnalyticsManager UAnalyticsManager
---@field mpJourneyManager UJourneyManager
---@field mpMovieManager UMovieManager
---@field mpRewardManager URewardManager
---@field mpCharacterTemplateManager UCharacterTemplateManager
---@field mpStoreManager UStoreManager
---@field mHUDLoadingScreenWidgetClass TSubclassOf<UHUDLoadingScreenWidget>
---@field mpGameLiftManagerForClient UGameLiftManagerForClient
---@field mpGameLiftManagerForServer UGameLiftManagerForServer
---@field mpGameLiftRegionManager UGameLiftRegionManager
---@field mpMatchmakingNotificationManager UMatchmakingNotificationManager
---@field mpMatchmakingNotificationPeer UMatchmakingNotificationPeer
---@field mpSimpleProfilerManager USimpleProfilerManager
---@field mpDiscordManager UDiscordManager
UGameInfoInstance = {}

function UGameInfoInstance:UpdateStartReplay() end
function UGameInfoInstance:UpdateSettingsVersionNumber() end
function UGameInfoInstance:UpdateReturnToFrontEnd() end
function UGameInfoInstance:UpdatePushToTalk() end
---@param CurrentLevel ELevelType
---@param currentSubLevel ESubLevelType
---@param currentCharacterType ECharacterType
function UGameInfoInstance:ShowPrizesScreen(CurrentLevel, currentSubLevel, currentCharacterType) end
---@param CurrentLevel ELevelType
---@param currentSubLevel ESubLevelType
---@param currentCharacterType ECharacterType
function UGameInfoInstance:ShowLoadingScreen(CurrentLevel, currentSubLevel, currentCharacterType) end
---@param Val float
function UGameInfoInstance:SetVoiceChatOutputVolume(Val) end
---@param DeviceID FString
function UGameInfoInstance:SetVoiceChatOutputDevice(DeviceID) end
---@param bNewValue boolean
function UGameInfoInstance:SetVoiceChatMuteOnUnfocused(bNewValue) end
---@param voiceChatMode EVoiceChatMode
function UGameInfoInstance:SetVoiceChatMode(voiceChatMode) end
---@param Val float
function UGameInfoInstance:SetVoiceChatInputVolume(Val) end
---@param DeviceID FString
function UGameInfoInstance:SetVoiceChatInputDevice(DeviceID) end
function UGameInfoInstance:SetSaveFileCreated() end
---@param roomName FString
function UGameInfoInstance:SetPartyVoiceChatId(roomName) end
---@param roomName FString
function UGameInfoInstance:SetLobbyVoiceChatId(roomName) end
---@param bSet boolean
function UGameInfoInstance:SetForceTritonOff(bSet) end
---@param str FString
function UGameInfoInstance:SetErrorString(str) end
---@param DeviceID FString
function UGameInfoInstance:SetAudioOutputDevice(DeviceID) end
---@param UniqueId FString
function UGameInfoInstance:RemoveVoiceChatParticipantFromList(UniqueId) end
---@param ChannelName FString
---@param PlayerName FString
---@param bIsTalking boolean
function UGameInfoInstance:OnVoiceChatPlayerTalkingUpdate(ChannelName, PlayerName, bIsTalking) end
---@param ChannelName FString
---@param PlayerName FString
function UGameInfoInstance:OnVoiceChatPlayerRemoved(ChannelName, PlayerName) end
---@param ChannelName FString
---@param PlayerName FString
function UGameInfoInstance:OnVoiceChatPlayerAdded(ChannelName, PlayerName) end
---@param ChannelName FString
function UGameInfoInstance:OnVoiceChatChannelJoined(ChannelName) end
---@param newVersionNumber uint32
function UGameInfoInstance:OnSettingsVersionNumberIncremented(newVersionNumber) end
function UGameInfoInstance:OnPreExit() end
function UGameInfoInstance:OnNetworkErrorConfirm() end
function UGameInfoInstance:OnInputBindingChanged() end
---@param FailureType ENetworkFailure::Type
---@return FString
function UGameInfoInstance:NetErrorToString(FailureType) end
---@return boolean
function UGameInfoInstance:IsWorldAudible() end
---@return boolean
function UGameInfoInstance:IsSuspended() end
---@return boolean
function UGameInfoInstance:IsSaveFileCreated() end
---@param aServerName FString
---@return boolean
function UGameInfoInstance:IsSameBrandOfServer(aServerName) end
---@return boolean
function UGameInfoInstance:IsHoldingPushToTalk() end
---@return boolean
function UGameInfoInstance:IsForceTritonOff() end
---@return boolean
function UGameInfoInstance:IsCustomGameMode() end
function UGameInfoInstance:IncrementNumFEVisits() end
function UGameInfoInstance:HideLoadingScreen() end
---@return boolean
function UGameInfoInstance:HasFocus() end
---@return TArray<FString>
function UGameInfoInstance:GetVoiceChatParticipantsList() end
---@return boolean
function UGameInfoInstance:GetTutorialModeActive() end
---@return UTipsManager
function UGameInfoInstance:GetTipsManager() end
---@return UStoreManager
function UGameInfoInstance:GetStoreManager() end
---@return USocialManager
function UGameInfoInstance:GetSocialManager() end
---@return USimpleProfilerManager
function UGameInfoInstance:GetSimpleProfilerManager() end
---@return UServerNotificationManager
function UGameInfoInstance:GetServerNotificationManager() end
---@return FString
function UGameInfoInstance:GetServerName() end
---@return ESubLevelType
function UGameInfoInstance:GetSelectedSubLevelType() end
---@return USeasonPassManager
function UGameInfoInstance:GetSeasonPassManager() end
---@return USeasonalEventManager
function UGameInfoInstance:GetSeasonalEventManager() end
---@return URewardManager
function UGameInfoInstance:GetRewardManager() end
---@return UPlotTwistManager
function UGameInfoInstance:GetPlotTwistManager() end
---@return FString
function UGameInfoInstance:GetPlayerSettingsSaveName() end
---@return UPlayerSaveGame
function UGameInfoInstance:GetPlayerSaveGame() end
---@return UPatchNotesManager
function UGameInfoInstance:GetPatchNotesManager() end
---@return FString
function UGameInfoInstance:GetPartyVoiceChatId() end
---@return int32
function UGameInfoInstance:GetNumFEVisits() end
---@return UNewFlagTracker
function UGameInfoInstance:GetNewFlagTracker() end
---@return UNavWidgetManager
function UGameInfoInstance:GetNavWidgetManager() end
---@return UMovieManager
function UGameInfoInstance:GetMovieManager() end
---@return UMatchmakingNotificationPeer
function UGameInfoInstance:GetMatchmakingNotificationPeer() end
---@return UMatchmakingNotificationManager
function UGameInfoInstance:GetMatchmakingNotificationManager() end
---@return FString
function UGameInfoInstance:GetLobbyVoiceChatId() end
---@return ULobbyManager
function UGameInfoInstance:GetLobbyManager() end
---@return UHUDLoadingScreenWidget
function UGameInfoInstance:GetLoadingScreen() end
---@return UJourneyManager
function UGameInfoInstance:GetJourneyManager() end
---@return UGameScriptingManager
function UGameInfoInstance:GetGameScriptingManager() end
---@return UGameLiftRegionManager
function UGameInfoInstance:GetGameLiftRegionManager() end
---@return UGameLiftManagerForServer
function UGameInfoInstance:GetGameLiftManagerForServer() end
---@return UGameLiftManagerForClient
function UGameInfoInstance:GetGameLiftManagerForClient() end
---@return FString
function UGameInfoInstance:GetErrorString() end
---@return UDiscordManager
function UGameInfoInstance:GetDiscordManager() end
---@return UDbItemDatabase
function UGameInfoInstance:GetDbItemDatabase() end
---@return UCharacterTemplateManager
function UGameInfoInstance:GetCharacterTemplateManager() end
---@param bParty boolean
---@return FString
function UGameInfoInstance:GetChannelString(bParty) end
---@return UBackendQueueManager
function UGameInfoInstance:GetBackendQueueManager() end
---@return UAnalyticsManager
function UGameInfoInstance:GetAnalyticsManager() end
function UGameInfoInstance:DoVoiceChatLogin() end
function UGameInfoInstance:DoTryToQuitTheApplication() end
---@param errorMessage FString
function UGameInfoInstance:DisplayErrorMessage(errorMessage) end
function UGameInfoInstance:CreateNewSaveFile() end
function UGameInfoInstance:ClearVoiceChatParticipantsList() end
function UGameInfoInstance:ApplySoundSettings() end
function UGameInfoInstance:ApplyLanguage() end
---@param UniqueId FString
function UGameInfoInstance:AddVoiceChatParticipantToList(UniqueId) end


---@class UGameLiftManagerForClient : UObject
UGameLiftManagerForClient = {}

---@param pWorldContextObject UObject
---@return UGameLiftManagerForClient
function UGameLiftManagerForClient:GetGameLiftManagerForClientInstance(pWorldContextObject) end


---@class UGameLiftManagerForServer : UObject
UGameLiftManagerForServer = {}

---@param pWorldContextObject UObject
---@return UGameLiftManagerForServer
function UGameLiftManagerForServer:GetGameLiftManagerForServerInstance(pWorldContextObject) end


---@class UGameLiftRegionManager : UObject
UGameLiftRegionManager = {}

---@param pWorldContextObject UObject
---@return UGameLiftRegionManager
function UGameLiftRegionManager:GetGameLiftRegionManagerInstance(pWorldContextObject) end


---@class UGameLiftUtils : UObject
UGameLiftUtils = {}


---@class UGameModeDataAsset : UPrimaryDataAsset
---@field mDisplayName FText
---@field mDescription FText
---@field mGameModePath FSoftObjectPath
---@field mpThumbnail UTexture2D
---@field mbOverrideSkipToHuntStage boolean
---@field mbShouldSkipToHuntStage boolean
---@field mbOverridePreferredFaction boolean
---@field mPlayerPreferredFaction EFaction
---@field mGameModeClassFilePath FString
UGameModeDataAsset = {}

---@return FString
function UGameModeDataAsset:GetGameModeFilePath() end
function UGameModeDataAsset:GenerateClassPath() end


---@class UGameModeOverlayWidget : UBaseOverlay
---@field SignalTextures TMap<int32, UTexture2D>
---@field mpWidgetSwitcher UWidgetSwitcher
---@field mpGameModeOverlay UOverlay
---@field mpCustomGameOverlay UOverlay
---@field mpCodeEntryOverlay UOverlay
---@field mpFactionSettingsOverlay UOverlay
---@field mpFactionBackground UImage
---@field mpRegionBackground UImage
---@field mpQuickPlayMatchmakingButton UGameModeUserButton
---@field mpMatchmakingModeButton UGameModeUserButton
---@field mpCustomGamesModeButton UGameModeUserButton
---@field mpTutorialModeButton UGameModeUserButton
---@field mpTrainingModeButton UGameModeUserButton
---@field mpHostButton UGameModeUserButton
---@field mpJoinButton UGameModeUserButton
---@field mpSubmitCodeUserButton UBaseUserButton
---@field mpCancelCodeUserButton UBaseUserButton
---@field mpLobbyCodeTextBox UEditableTextBox
---@field mpRegionLeftButton UButton
---@field mpRegionLeftPrompt UButtonPromptWidget
---@field mpRegionRightButton UButton
---@field mpRegionRightPrompt UButtonPromptWidget
---@field mpRegionText UTextBlock
---@field mpRegionSignalImage UImage
---@field mpFactionLeftButton UButton
---@field mpFactionLeftPrompt UButtonPromptWidget
---@field mpFactionRightButton UButton
---@field mpFactionRightPrompt UButtonPromptWidget
---@field mpFactionPrefix UTextBlock
---@field mpFactionText UTextBlock
---@field mEvilQuickPlayImage FSlateBrush
---@field mTeenQuickPlayImage FSlateBrush
---@field mEvilMatchmakingImage FSlateBrush
---@field mTeenMatchmakingImage FSlateBrush
---@field mEvilCustomImage FSlateBrush
---@field mTeenCustomImage FSlateBrush
---@field mEvilTrainingImage FSlateBrush
---@field mTeenTrainingImage FSlateBrush
---@field mEvilTutorialImage FSlateBrush
---@field mTeenTutorialImage FSlateBrush
---@field m2xEventIcon FSlateBrush
---@field mFactionBackgroundDefaultColor FSlateColor
---@field mFactionTextDisabledColor FLinearColor
---@field mFactionBackgroundDisabledColor FSlateColor
---@field mRegionCooldownTimer float
UGameModeOverlayWidget = {}

function UGameModeOverlayWidget:OnTutorialModeSelected() end
function UGameModeOverlayWidget:OnTrainingModeSelected() end
function UGameModeOverlayWidget:OnTeenTutorialPressed() end
function UGameModeOverlayWidget:OnTeenTrainingPressed() end
function UGameModeOverlayWidget:OnSubmitCodePressed() end
function UGameModeOverlayWidget:OnRegionRightPressed() end
function UGameModeOverlayWidget:OnRegionLeftPressed() end
function UGameModeOverlayWidget:OnQuickPlayMatchmakingModeSelected() end
function UGameModeOverlayWidget:OnMatchmakingModeSelected() end
function UGameModeOverlayWidget:OnJoinPressed() end
function UGameModeOverlayWidget:OnHostPressed() end
function UGameModeOverlayWidget:OnFactionRightPressed() end
function UGameModeOverlayWidget:OnFactionLeftPressed() end
function UGameModeOverlayWidget:OnEvilTutorialPressed() end
function UGameModeOverlayWidget:OnEvilTrainingPressed() end
function UGameModeOverlayWidget:OnCustomGameModeSelected() end
function UGameModeOverlayWidget:OnCancelCodePressed() end


---@class UGameModeSelectUserButton : UBaseUserButton
---@field mpRegionText UTextBlock
---@field mpSelectedGameModeText UTextBlock
---@field mpSelectedGameModeSubText UTextBlock
---@field mpBgImage UImage
---@field mpBlurImage UImage
UGameModeSelectUserButton = {}



---@class UGameModeUserButton : UBaseUserButton
---@field QuickplayIcons TMap<ECharacterType, UTexture2D>
---@field mpModeTextBlock UTextBlock
---@field mpModeDescriptionTextBlock UTextBlock
---@field mpBonusPanel UWidget
---@field mpBonusIcon UImage
---@field mpQuickplayBorder UBorder
---@field mpBonusTextBlock UTextBlock
---@field mpGameModeImage UImage
---@field GameModeImagePadding FMargin
---@field mModeText FText
---@field mModeDescriptionText FText
---@field mBonusText FText
---@field IsQuickplay boolean
---@field mpHoverAnimation UWidgetAnimation
UGameModeUserButton = {}



---@class UGameScriptingManager : UObject
---@field OnTutorialButton1Pressed FGameScriptingManagerOnTutorialButton1Pressed
---@field OnTutorialButton2Pressed FGameScriptingManagerOnTutorialButton2Pressed
---@field OnTutorialButton3Pressed FGameScriptingManagerOnTutorialButton3Pressed
---@field OnTutorialButton4Pressed FGameScriptingManagerOnTutorialButton4Pressed
---@field OnTutorialScroll FGameScriptingManagerOnTutorialScroll
UGameScriptingManager = {}

---@param pTPChar ATPChar
function UGameScriptingManager:TutorialOnly_UnPossesSpectral(pTPChar) end
---@param charToStop ATPChar
function UGameScriptingManager:TutorialOnly_StopAIBehaviour(charToStop) end
function UGameScriptingManager:TutorialOnly_StartTransformingStage() end
---@param Location FVector
---@param Color FColor
function UGameScriptingManager:TutorialOnly_SpawnPingAtLocation(Location, Color) end
---@param typeToSpawn ECharacterType
---@param SpawnTransform FTransform
---@param isAIControlled boolean
---@param ControllerClass TSubclassOf<AAIController>
---@param pOwner AActor
---@return ATPChar
function UGameScriptingManager:TutorialOnly_SpawnCharacter(typeToSpawn, SpawnTransform, isAIControlled, ControllerClass, pOwner) end
---@param givenTransform FTransform
function UGameScriptingManager:TutorialOnly_SpawnBloodOrbAtLocation(givenTransform) end
---@param charToSetState AWerewolfChar
---@param charState EWerewolfCharacterState
function UGameScriptingManager:TutorialOnly_SetWerewolfCharacterState(charToSetState, charState) end
---@param Visibility ESlateVisibility
function UGameScriptingManager:TutorialOnly_SetTutorialTextVisibility(Visibility) end
---@param Visibility ESlateVisibility
function UGameScriptingManager:TutorialOnly_SetTutorialSubTextVisibility(Visibility) end
---@param Visibility ESlateVisibility
function UGameScriptingManager:TutorialOnly_SetTutorialPanelVisibility(Visibility) end
---@param Val boolean
function UGameScriptingManager:TutorialOnly_SetTutorialHideUI(Val) end
---@param pTPChar ATPChar
---@param Val boolean
function UGameScriptingManager:TutorialOnly_SetTutorialCharacter(pTPChar, Val) end
---@param weaponsList TArray<EWeaponTypeEnum>
function UGameScriptingManager:TutorialOnly_SetTutorialAllowedWeaponsList(weaponsList) end
---@param isImmortal boolean
---@param charToSetImmortality ATPChar
function UGameScriptingManager:TutorialOnly_SetIsImmortal(isImmortal, charToSetImmortality) end
---@param IsPaused boolean
function UGameScriptingManager:TutorialOnly_SetGameplayPause(IsPaused) end
---@param frozen boolean
---@param charToSetInput ATPChar
function UGameScriptingManager:TutorialOnly_SetFrozen(frozen, charToSetInput) end
---@param availableEvils ECharacterType
function UGameScriptingManager:TutorialOnly_SetEvilTypeToTransform(availableEvils) end
---@param Enabled boolean
function UGameScriptingManager:TutorialOnly_SetEnableHeartBeat(Enabled) end
---@param damageTypeList TArray<EDamageType>
function UGameScriptingManager:TutorialOnly_SetDamageTypeHitEvil(damageTypeList) end
---@param pTPChar ATPChar
---@param Enabled boolean
---@param customRotation FRotator
---@param rotationSpeed float
function UGameScriptingManager:TutorialOnly_SetCustomRotation(pTPChar, Enabled, customRotation, rotationSpeed) end
---@param charToSetState ATPChar
---@param newState ECharacterState
function UGameScriptingManager:TutorialOnly_SetCharacterState(charToSetState, newState) end
---@param givenCharacter ATPChar
---@param Val boolean
function UGameScriptingManager:TutorialOnly_SetCharacterObjectVolumeEnabled(givenCharacter, Val) end
---@param pTPChar ATPChar
---@param bloodTrailLifetime float
---@param overrideDefault boolean
function UGameScriptingManager:TutorialOnly_SetBloodTrailTime(pTPChar, bloodTrailLifetime, overrideDefault) end
---@param pTPChar ATPChar
---@param bCanMove boolean
function UGameScriptingManager:TutorialOnly_SetAllowedToMove(pTPChar, bCanMove) end
---@param pCharToMove ATPChar
---@param pCharToRevive ATPChar
---@param movementSpeedType EMovementSpeedType
function UGameScriptingManager:TutorialOnly_ReviveCharacter(pCharToMove, pCharToRevive, movementSpeedType) end
---@param pCharToMove ATPChar
---@param pCharToResurrect ATPChar
---@param movementSpeedType EMovementSpeedType
function UGameScriptingManager:TutorialOnly_ResurrectCharacter(pCharToMove, pCharToResurrect, movementSpeedType) end
---@param textToPrint FText
---@param timeToPrint float
---@param bConfirmationOverlay boolean
function UGameScriptingManager:TutorialOnly_PrintTutorialText(textToPrint, timeToPrint, bConfirmationOverlay) end
---@param textToPrint FText
---@param timeToPrint float
---@param bConfirmationOverlay boolean
function UGameScriptingManager:TutorialOnly_PrintTutorialSubtext(textToPrint, timeToPrint, bConfirmationOverlay) end
function UGameScriptingManager:TutorialOnly_PopulatePlayerSettings() end
---@return boolean
function UGameScriptingManager:TutorialOnly_IsLoadingScreenActive() end
---@param pCharToMove ATPChar
---@param movementSpeedType EMovementSpeedType
function UGameScriptingManager:TutorialOnly_InteractHidepoint(pCharToMove, movementSpeedType) end
---@param pCharToMove ATPChar
---@param pCharToHeal ATPChar
---@param movementSpeedType EMovementSpeedType
function UGameScriptingManager:TutorialOnly_HealCharacter(pCharToMove, pCharToHeal, movementSpeedType) end
---@param charToMove ATPChar
---@param givenLocation FVector
---@param movementSpeedType EMovementSpeedType
---@param bOverrideSpeed boolean
function UGameScriptingManager:TutorialOnly_GoToLocation(charToMove, givenLocation, movementSpeedType, bOverrideSpeed) end
---@param charToMove ATPChar
---@param givenCharacter ATPChar
---@param movementSpeedType EMovementSpeedType
---@param bOverrideSpeed boolean
function UGameScriptingManager:TutorialOnly_GoToCharacter(charToMove, givenCharacter, movementSpeedType, bOverrideSpeed) end
---@param charToGetState AWerewolfChar
---@return EWerewolfCharacterState
function UGameScriptingManager:TutorialOnly_GetWerewolfCharacterState(charToGetState) end
---@return TArray<EWeaponTypeEnum>
function UGameScriptingManager:TutorialOnly_GetWeaponTypeHitEvil() end
---@return TArray<EWeaponTypeEnum>
function UGameScriptingManager:TutorialOnly_GetTutorialAllowedWeaponsList() end
---@param pTPChar ATPChar
---@return float
function UGameScriptingManager:TutorialOnly_GetRevivePercentage(pTPChar) end
---@return TArray<EDamageType>
function UGameScriptingManager:TutorialOnly_GetDamageTypeHitEvil() end
---@param Index int32
---@return ECharacterType
function UGameScriptingManager:TutorialOnly_GetCharacterType(Index) end
---@param charToGetState ATPChar
---@return ECharacterState
function UGameScriptingManager:TutorialOnly_GetCharacterState(charToGetState) end
---@param Index int32
---@return FText
function UGameScriptingManager:TutorialOnly_GetCharacterLocName(Index) end
function UGameScriptingManager:TutorialOnly_FinishTeenTutorialBackendCall() end
function UGameScriptingManager:TutorialOnly_FinishEvilTutorialBackendCall() end
---@param pCharToMove ATPChar
---@param givenLocation FVector
---@param movementSpeedType EMovementSpeedType
---@param bOverrideSpeed boolean
function UGameScriptingManager:TutorialOnly_EvilPatrol(pCharToMove, givenLocation, movementSpeedType, bOverrideSpeed) end
---@param weaponType EWeaponTypeEnum
---@param charToEquipWeapon ATPChar
function UGameScriptingManager:TutorialOnly_EquipWeapon(weaponType, charToEquipWeapon) end
---@param pickupType EPickupType
---@param charToEquip ATPChar
function UGameScriptingManager:TutorialOnly_EquipItem(pickupType, charToEquip) end
function UGameScriptingManager:TutorialOnly_DisconnectTutorial() end
---@param damageTypeList TArray<EDamageType>
function UGameScriptingManager:TutorialOnly_ClearDamageTypesEvil(damageTypeList) end
---@param charToMove AFPChar
---@param givenCharacter ATPChar
---@param movementSpeedType EMovementSpeedType
function UGameScriptingManager:TutorialOnly_ChaseAndHitCharacter(charToMove, givenCharacter, movementSpeedType) end
---@param CharacterType ECharacterType
---@param SpawnTransform FTransform
function UGameScriptingManager:TutorialOnly_ChangeCharacter(CharacterType, SpawnTransform) end


---@class UGameTab : UBaseTab
---@field mpNavScrollBox UNavScrollBox
---@field mpAutomaticRegionToggle UOptionToggleUserButton
---@field mpRegionSelector UOptionSelectorUserButton
---@field mpLanguageSelector UOptionSelectorUserButton
---@field mpGameHUDToggle UOptionToggleUserButton
---@field mpReticleToggle UOptionToggleUserButton
---@field mpScoreFeedToggle UOptionToggleUserButton
---@field mpHintsToggle UOptionsFlagSelectorUserButton
---@field mpDangerSenseOptionsButton UOptionSingleUserButton
---@field mLanguage ELanguageSetting
UGameTab = {}

function UGameTab:OnDangerSenseOptionsPressed() end
---@param bSet boolean
function UGameTab:OnAutoRegionChanged(bSet) end


---@class UGameUtilStatics : UObject
UGameUtilStatics = {}

---@param WorldContextObject UObject
---@param AkEvent UAkAudioEvent
---@param EarlyReflectionsBus UAkAuxBus
---@param Location FVector
---@param Orientation FRotator
---@param AutoPost boolean
---@param EventName FString
---@param EarlyReflectionsBusName FString
---@param AutoDestroy boolean
---@return UExtAkComponent
function UGameUtilStatics:SpawnExtAkComponentAtLocation(WorldContextObject, AkEvent, EarlyReflectionsBus, Location, Orientation, AutoPost, EventName, EarlyReflectionsBusName, AutoDestroy) end
---@param pWorldContextObject UObject
---@param pComponent USceneComponent
---@param Visibility FEffectVisibility
function UGameUtilStatics:RegisterComponentToEffectsManager(pWorldContextObject, pComponent, Visibility) end
---@param WorldPosition FVector
---@param pWorld UWorld
---@return FVector2D
function UGameUtilStatics:ProjectWorldToViewBilateral(WorldPosition, pWorld) end
---@param angleInDegrees float
---@param Height float
---@param Width float
---@param curveTightness float
---@return FVector2D
function UGameUtilStatics:GetEdgeOfRoundedRectangle(angleInDegrees, Height, Width, curveTightness) end
---@param angleInDegrees float
---@param Height float
---@param Width float
---@return FVector2D
function UGameUtilStatics:GetEdgeOfEllipse(angleInDegrees, Height, Width) end
---@param pWorld UWorld
---@param InLocation FVector
---@param outScreenPosition FVector2D
---@param outRotationAngleDegrees float
---@param bIsOnScreen boolean
function UGameUtilStatics:FindScreenEdgeLocationForWorldLocation(pWorld, InLocation, outScreenPosition, outRotationAngleDegrees, bIsOnScreen) end


---@class UGameplayHUDInterface : UUserWidget
---@field mpPlayerCardPanel UHUDPlayerCardPanel
---@field mpEvilDamagePanel UHUDEvilDamagePanel
---@field mpDarkShardOverlayPanel UHUDDarkShardOverlay
---@field mpEvilRageOverlayPanel UHUDEvilRagePanel
---@field mpNotificationsPanel UHUDNotificationsPanel
---@field mpActionBarPanel UHUDActionBar
UGameplayHUDInterface = {}

---@return UHUDPlayerCardPanel
function UGameplayHUDInterface:GetPlayerCardPanelHUD() end
---@return APlayerController
function UGameplayHUDInterface:GetOwningPlayerController() end
---@return UHUDNotificationsPanel
function UGameplayHUDInterface:GetNotificationsPanelHUD() end
---@return UHUDEvilRagePanel
function UGameplayHUDInterface:GetEvilRagePanelHUD() end
---@return UHUDEvilDamagePanel
function UGameplayHUDInterface:GetEvilDamagePanelHUD() end
---@return UHUDDarkShardOverlay
function UGameplayHUDInterface:GetDarkShardOverlay() end
---@return UHUDActionBar
function UGameplayHUDInterface:GetActionBarPanel() end


---@class UGameplayTask_FacingCamera : UGameplayTask
---@field mpTargetComponent UPrimitiveComponent
---@field pTargetActor AActor
---@field mpPlayerCameraManager APlayerCameraManager
---@field OnTaskFinished FGameplayTask_FacingCameraOnTaskFinished
---@field OnTaskFailed FGameplayTask_FacingCameraOnTaskFailed
UGameplayTask_FacingCamera = {}

---@param TaskOwner TScriptInterface<IGameplayTaskOwnerInterface>
---@param pRotatingComponent UPrimitiveComponent
---@param pPlayerCameraManager APlayerCameraManager
---@return UGameplayTask_FacingCamera
function UGameplayTask_FacingCamera:ConstructTask(TaskOwner, pRotatingComponent, pPlayerCameraManager) end


---@class UGameplayTask_PlayMaterialEffects : UGameplayTask
---@field mpTargetMeshComp UMeshComponent
---@field mMaterialScalerSetterContexts TArray<FMaterialScalerSetterContext>
---@field mpMIDs TArray<UMaterialInstanceDynamic>
---@field OnTaskFinished FGameplayTask_PlayMaterialEffectsOnTaskFinished
---@field OnTaskFailed FGameplayTask_PlayMaterialEffectsOnTaskFailed
UGameplayTask_PlayMaterialEffects = {}

---@param TaskOwner TScriptInterface<IGameplayTaskOwnerInterface>
---@param materialScalerSetterContexts TArray<FMaterialScalerSetterContext>
---@param pMeshComp UMeshComponent
---@param bConvertMatToDynamic boolean
---@return UGameplayTask_PlayMaterialEffects
function UGameplayTask_PlayMaterialEffects:ConstructTask(TaskOwner, materialScalerSetterContexts, pMeshComp, bConvertMatToDynamic) end


---@class UGoodCharAnimInstance : UBaseCharAnimInstance
---@field mProxy FGoodCharAnimInstanceProxy
---@field mpOwnerTPChar ATPChar
---@field mpLandMontage UAnimMontage
---@field mpCrouchAnimSequence UAnimSequence
---@field mEyeBlinkRange FVector2D
---@field mEyeBlinkOpenRange FVector2D
---@field mpWeaponUsedUpSequence UAnimSequence
---@field mpDemonswordLoopAnimSequence UAnimSequence
---@field mpDemonswordIntroAnimSequence UAnimSequence
---@field mpRaygunIntroAnimationSequence UAnimSequence
---@field mpSligshotIntroAnimationSequence UAnimSequence
---@field mpMolotovIntroAnimationSequence UAnimSequence
---@field mpHolyStaffAnimationSequence UAnimSequence
---@field mpCrossAnimationSequence UAnimSequence
---@field mpFlamethrowerAnimationSequence UAnimSequence
---@field mpFlameMineAnimationSequence UAnimSequence
---@field mpStaticShieldAnimationSEquence UAnimSequence
UGoodCharAnimInstance = {}

---@return boolean
function UGoodCharAnimInstance:ShouldRotateInPlace() end
---@param Val boolean
function UGoodCharAnimInstance:SetSimulateReaction(Val) end
---@param Val boolean
function UGoodCharAnimInstance:SetIsPlayingResurrectOutro(Val) end
---@param Val FVector
function UGoodCharAnimInstance:SetHitAngle(Val) end
---@param footPosition float
function UGoodCharAnimInstance:SetFootPosition(footPosition) end
---@param Val boolean
function UGoodCharAnimInstance:SetAllowProneRotation(Val) end
---@return FTPWeaponStateData
function UGoodCharAnimInstance:GetWeaponStateData() end
---@return float
function UGoodCharAnimInstance:GetUsedUpAnimationPlayRate() end
---@return boolean
function UGoodCharAnimInstance:GetSimulateReaction() end
---@return UBlendSpaceBase
function UGoodCharAnimInstance:GetLocomotionOverride() end
---@return FVector
function UGoodCharAnimInstance:GetHitAngle() end
---@return float
function UGoodCharAnimInstance:GetCurrentWeaponTravelTimePlayRate() end
---@return float
function UGoodCharAnimInstance:GetCurrentWeaponLoopTimePlayRate() end
---@return float
function UGoodCharAnimInstance:GetCurrentWeaponIntroTimePlayRate() end
---@return float
function UGoodCharAnimInstance:GetCurrentWeaponFrameBufferTime() end
---@return float
function UGoodCharAnimInstance:GetCrouchForwardAnimationPlayRate() end
---@return float
function UGoodCharAnimInstance:GetCrouchAnimationPlayRate() end
---@return float
function UGoodCharAnimInstance:GetCrawlAnimationPlayRate() end
---@return FTPCharStateData
function UGoodCharAnimInstance:GetCharStateData() end
---@return FTPMovementData
function UGoodCharAnimInstance:GetCharMovementData() end
---@return FCharacterBodyShapePreset
function UGoodCharAnimInstance:GetBodyShapePreset() end
---@param DeltaTime float
function UGoodCharAnimInstance:ClientUpdatePanicAnims(DeltaTime) end
---@param Notify UAnimNotify
function UGoodCharAnimInstance:AnimNotify_WeaponShootStart(Notify) end
---@param Notify UAnimNotify
function UGoodCharAnimInstance:AnimNotify_WeaponShootEnd(Notify) end
---@param Notify UAnimNotify
function UGoodCharAnimInstance:AnimNotify_VendingMachineHitAnimNotify(Notify) end
---@param Notify UAnimNotify
function UGoodCharAnimInstance:AnimNotify_ThrowWeaponAnimNotify(Notify) end
---@param Notify UAnimNotify
function UGoodCharAnimInstance:AnimNotify_StopPlayingPickupAnim(Notify) end
---@param Notify UAnimNotify
function UGoodCharAnimInstance:AnimNotify_StopPlayingPanicAnimation(Notify) end
---@param Notify UAnimNotify
function UGoodCharAnimInstance:AnimNotify_StopPickupInteractingSequence(Notify) end
---@param Notify UAnimNotify
function UGoodCharAnimInstance:AnimNotify_StopJustWoundedEvil(Notify) end
---@param Notify UAnimNotify
function UGoodCharAnimInstance:AnimNotify_StaticShieldActiveStart(Notify) end
---@param Notify UAnimNotify
function UGoodCharAnimInstance:AnimNotify_StaticShieldActiveEnd(Notify) end
---@param Notify UAnimNotify
function UGoodCharAnimInstance:AnimNotify_StartProneSequence(Notify) end
---@param Notify UAnimNotify
function UGoodCharAnimInstance:AnimNotify_StartPickupInteractingSequence(Notify) end
---@param Notify UAnimNotify
function UGoodCharAnimInstance:AnimNotify_StartKilledSequence(Notify) end
---@param Notify UAnimNotify
function UGoodCharAnimInstance:AnimNotify_SlingshotAimStart(Notify) end
---@param Notify UAnimNotify
function UGoodCharAnimInstance:AnimNotify_SlingshotAimEnd(Notify) end
---@param Notify UAnimNotify
function UGoodCharAnimInstance:AnimNotify_SlingshotActivateStart(Notify) end
---@param Notify UAnimNotify
function UGoodCharAnimInstance:AnimNotify_SetUnsafeFENDAnimation(Notify) end
---@param Notify UAnimNotify
function UGoodCharAnimInstance:AnimNotify_SetSafeFENDAnimation(Notify) end
---@param Notify UAnimNotify
function UGoodCharAnimInstance:AnimNotify_SetCraftingItem(Notify) end
---@param Notify UAnimNotify
function UGoodCharAnimInstance:AnimNotify_SearchLoopStart(Notify) end
---@param Notify UAnimNotify
function UGoodCharAnimInstance:AnimNotify_RiseFromProne_Entered(Notify) end
---@param Notify UAnimNotify
function UGoodCharAnimInstance:AnimNotify_RightFootstep(Notify) end
---@param Notify UAnimNotify
function UGoodCharAnimInstance:AnimNotify_RevivingLoopStart(Notify) end
---@param Notify UAnimNotify
function UGoodCharAnimInstance:AnimNotify_RevivingLoopEnd(Notify) end
---@param Notify UAnimNotify
function UGoodCharAnimInstance:AnimNotify_ResurrectLoopStart(Notify) end
---@param Notify UAnimNotify
function UGoodCharAnimInstance:AnimNotify_RCCopterActiveStop(Notify) end
---@param Notify UAnimNotify
function UGoodCharAnimInstance:AnimNotify_RCCopterActiveStart(Notify) end
---@param Notify UAnimNotify
function UGoodCharAnimInstance:AnimNotify_ProneToLoco(Notify) end
---@param Notify UAnimNotify
function UGoodCharAnimInstance:AnimNotify_ParchmentActiveStop(Notify) end
---@param Notify UAnimNotify
function UGoodCharAnimInstance:AnimNotify_ParchmentActiveStart(Notify) end
---@param Notify UAnimNotify
function UGoodCharAnimInstance:AnimNotify_NoisemakerArmLoopStart(Notify) end
---@param Notify UAnimNotify
function UGoodCharAnimInstance:AnimNotify_MolotovAimStart(Notify) end
---@param Notify UAnimNotify
function UGoodCharAnimInstance:AnimNotify_MolotovAimEnd(Notify) end
---@param Notify UAnimNotify
function UGoodCharAnimInstance:AnimNotify_MolotovActivateStart(Notify) end
---@param Notify UAnimNotify
function UGoodCharAnimInstance:AnimNotify_MedKitHealLoopStop(Notify) end
---@param Notify UAnimNotify
function UGoodCharAnimInstance:AnimNotify_MedKitHealLoopStart(Notify) end
---@param Notify UAnimNotify
function UGoodCharAnimInstance:AnimNotify_LobbyPoseFullyBlended(Notify) end
---@param Notify UAnimNotify
function UGoodCharAnimInstance:AnimNotify_LobbyPose_Left(Notify) end
---@param Notify UAnimNotify
function UGoodCharAnimInstance:AnimNotify_LobbyPose_Entered(Notify) end
---@param Notify UAnimNotify
function UGoodCharAnimInstance:AnimNotify_LobbyFlavorFinished(Notify) end
---@param Notify UAnimNotify
function UGoodCharAnimInstance:AnimNotify_LeftResurrectOutro(Notify) end
---@param Notify UAnimNotify
function UGoodCharAnimInstance:AnimNotify_LeftFootstep(Notify) end
---@param Notify UAnimNotify
function UGoodCharAnimInstance:AnimNotify_HealingLoopStart(Notify) end
---@param Notify UAnimNotify
function UGoodCharAnimInstance:AnimNotify_HealingLoopEnd(Notify) end
---@param Notify UAnimNotify
function UGoodCharAnimInstance:AnimNotify_GivePickup_Left(Notify) end
---@param Notify UAnimNotify
function UGoodCharAnimInstance:AnimNotify_ForceClothReset(Notify) end
---@param Notify UAnimNotify
function UGoodCharAnimInstance:AnimNotify_FlamethrowerFireStart(Notify) end
---@param Notify UAnimNotify
function UGoodCharAnimInstance:AnimNotify_FlamethrowerAimEnd(Notify) end
---@param Notify UAnimNotify
function UGoodCharAnimInstance:AnimNotify_FireDemonSword(Notify) end
---@param Notify UAnimNotify
function UGoodCharAnimInstance:AnimNotify_FinishProneSequence(Notify) end
---@param Notify UAnimNotify
function UGoodCharAnimInstance:AnimNotify_FinishKilledSequence(Notify) end
---@param Notify UAnimNotify
function UGoodCharAnimInstance:AnimNotify_Feasted_Idle_Left(Notify) end
---@param Notify UAnimNotify
function UGoodCharAnimInstance:AnimNotify_Feasted_Idle_Entered(Notify) end
---@param Notify UAnimNotify
function UGoodCharAnimInstance:AnimNotify_FallingSequenceEnd(Notify) end
---@param Notify UAnimNotify
function UGoodCharAnimInstance:AnimNotify_EnteredTransformIntro(Notify) end
---@param Notify UAnimNotify
function UGoodCharAnimInstance:AnimNotify_EnteredStopping(Notify) end
---@param Notify UAnimNotify
function UGoodCharAnimInstance:AnimNotify_EnteredResurrectOutro(Notify) end
---@param Notify UAnimNotify
function UGoodCharAnimInstance:AnimNotify_EnergizeShieldStart(Notify) end
---@param Notify UAnimNotify
function UGoodCharAnimInstance:AnimNotify_EnergizeShieldEnd(Notify) end
---@param Notify UAnimNotify
function UGoodCharAnimInstance:AnimNotify_EmoteStart(Notify) end
---@param Notify UAnimNotify
function UGoodCharAnimInstance:AnimNotify_EmoteComplete(Notify) end
---@param Notify UAnimNotify
function UGoodCharAnimInstance:AnimNotify_DMSW_FireTransition(Notify) end
---@param Notify UAnimNotify
function UGoodCharAnimInstance:AnimNotify_DisarmTrapStart(Notify) end
---@param Notify UAnimNotify
function UGoodCharAnimInstance:AnimNotify_DemonSwordFireStart(Notify) end
---@param Notify UAnimNotify
function UGoodCharAnimInstance:AnimNotify_DemonSwordFireEnd(Notify) end
---@param Notify UAnimNotify
function UGoodCharAnimInstance:AnimNotify_DemonSwordAimStart(Notify) end
---@param Notify UAnimNotify
function UGoodCharAnimInstance:AnimNotify_DemonSwordAimEnd(Notify) end
---@param Notify UAnimNotify
function UGoodCharAnimInstance:AnimNotify_DemonSwordAbort(Notify) end
---@param Notify UAnimNotify
function UGoodCharAnimInstance:AnimNotify_CrossFireStart(Notify) end
---@param Notify UAnimNotify
function UGoodCharAnimInstance:AnimNotify_CrossAimEnd(Notify) end
---@param Notify UAnimNotify
function UGoodCharAnimInstance:AnimNotify_CraftSuccessComplete(Notify) end
---@param Notify UAnimNotify
function UGoodCharAnimInstance:AnimNotify_CraftLoopStop(Notify) end
---@param Notify UAnimNotify
function UGoodCharAnimInstance:AnimNotify_CraftLoopStart(Notify) end
---@param Notify UAnimNotify
function UGoodCharAnimInstance:AnimNotify_CraftFailComplete(Notify) end
---@param Notify UAnimNotify
function UGoodCharAnimInstance:AnimNotify_CoreMotion_Start(Notify) end
---@param Notify UAnimNotify
function UGoodCharAnimInstance:AnimNotify_CoreMotion_FullyBlended(Notify) end
---@param Notify UAnimNotify
function UGoodCharAnimInstance:AnimNotify_CoreMotion_End(Notify) end
---@param Notify UAnimNotify
function UGoodCharAnimInstance:AnimNotify_ClearEmote(Notify) end
---@param Notify UAnimNotify
function UGoodCharAnimInstance:AnimNotify_CenterpieceIntroEnd(Notify) end


---@class UGoodCharUBAnimInstance : UAnimInstance
UGoodCharUBAnimInstance = {}

---@param Notify UAnimNotify
function UGoodCharUBAnimInstance:AnimNotify_UsedPickupAnimNotify(Notify) end
---@param Notify UAnimNotify
function UGoodCharUBAnimInstance:AnimNotify_ClearPickupAnimNotify(Notify) end


---@class UGrantableButtonWidget : UUserWidget
---@field mpNavButton UNavButton
---@field mpItemWidget UGrantableItemWidget
UGrantableButtonWidget = {}



---@class UGrantableItemWidget : UUserWidget
---@field mpNameText UTextBlock
---@field mpIcon UImage
UGrantableItemWidget = {}

---@param pTex UTexture2D
function UGrantableItemWidget:OnTextureLoaded(pTex) end


---@class UGuideModalWidget : UBaseModal
---@field mpDismissButton UNavButton
---@field mpDisableButton UNavButton
---@field mpContentBox UBorder
---@field mpTitle UTextBlock
---@field mpContent UUserWidget
UGuideModalWidget = {}

function UGuideModalWidget:HideModal() end


---@class UGuideSuggestionWidget : UMetaWidget
---@field mbIsInViewport boolean
---@field HorizontalOffset float
---@field VerticalAlignment float
UGuideSuggestionWidget = {}

---@param MyGeometry FGeometry
---@param InDeltaTime float
function UGuideSuggestionWidget:NativeTick(MyGeometry, InDeltaTime) end
function UGuideSuggestionWidget:HideSuggestion() end
function UGuideSuggestionWidget:DismissSuggestion() end


---@class UGuideSystem : UObject
UGuideSystem = {}


---@class UHBCreditsScreen : UBaseScreen
---@field mpVerticalBox UVerticalBox
---@field mpIntroAnim UWidgetAnimation
---@field mpScrollAnim UWidgetAnimation
---@field mTimeToShowCredits float
UHBCreditsScreen = {}

function UHBCreditsScreen:RestartSequence() end
function UHBCreditsScreen:OnIntroFinished() end


---@class UHUDActionBar : UUserWidget
---@field mpActionTypeWidgetSwitcher UWidgetSwitcher
---@field mpHUDCraftingBar UCraftingProgressBar
---@field mpHUDWeaponProgressBar UWeaponProgressBar
---@field mpHUDHealingProgressBar UHealingProgressBar
---@field mpHUDEvilAbilityProgressBar UEvilAbilityProgressBar
---@field mpHUDDarkShardProgressBar UDarkShardProgressBar
---@field mpHUDDiscardProgressBar UDiscardWeaponProgressBar
---@field mpHUDManualTransformProgressBar UManualTransformProgressBar
---@field mpHUDDisarmDollTrapProgressBar UDisarmDollTrapProgressBar
---@field mpDeployNoisemakerProgressBar UDeployNoisemakerProgressBar
UHUDActionBar = {}

---@param pTrackedChar ATPChar
function UHUDActionBar:Update(pTrackedChar) end


---@class UHUDActionPromptPanel : UUserWidget
---@field mpPromptTextLeft URichTextBlock
---@field mpPromptTextRight URichTextBlock
---@field mpButtonPromptWidget UButtonPromptWidget
UHUDActionPromptPanel = {}



---@class UHUDAnnouncementPanel : UUserWidget
---@field mpMessagePanel UCanvasPanel
---@field mpMessageText URichTextBlock
---@field mpShowMessage UWidgetAnimation
---@field mMessageQueue TArray<FMessageInfo>
---@field mCurrentMessageInfo FMessageInfo
UHUDAnnouncementPanel = {}

function UHUDAnnouncementPanel:OnAnimFinished() end


---@class UHUDAugmentPanel : UUserWidget
---@field mpHorizontalBox UHorizontalBox
---@field mpAugmentTextBlock UTextBlock
---@field mpLastTrackedTPChar ATPChar
---@field mpTrackedGameplayPC AGameplayPC
UHUDAugmentPanel = {}



---@class UHUDAuraIndicatorWidget : UUserWidget
---@field mpTrackedActor AActor
---@field mTrackedPosition FVector
---@field mLifetimeRemaining float
---@field mpPointerIcon UImage
---@field mbPrivate boolean
---@field mpOwningPS AGameplayPS
---@field mbTrackingActor boolean
---@field mbTeenFaction boolean
---@field mbHasLifetime boolean
---@field mIndicatorType EAuraIndicatorType
---@field mValidator TScriptInterface<IAuraIndicatorInterface>
UHUDAuraIndicatorWidget = {}



---@class UHUDDamageIndicator : UUserWidget
---@field mpDamageCursorImage UImage
---@field mpDamageBloomImage UImage
---@field mpPivotWidget UWidget
---@field mTotalDuration float
---@field mWeaponType EWeaponTypeEnum
UHUDDamageIndicator = {}



---@class UHUDDamagePanelStigmaWidget : UUserWidget
---@field mpIconMaterialInterfaces TArray<UMaterialInterface>
---@field mLethalColor FLinearColor
---@field mNonLethalColor FLinearColor
---@field mpIconMaterialInterface UMaterialInterface
---@field mDamageType EDamageType
---@field mpLethalSwitcher UWidgetSwitcher
---@field mpStigmaIconImage UImage
---@field mpBGLethalImage UImage
---@field mpBGNonLethalImage UImage
---@field mpDamageComplete UWidgetAnimation
---@field mpIconMaterialInstance UMaterialInstanceDynamic
---@field mpMainEvil AFPChar
UHUDDamagePanelStigmaWidget = {}

function UHUDDamagePanelStigmaWidget:UpdateHitPercentage() end
function UHUDDamagePanelStigmaWidget:SetDynamicMaterials() end
---@param DamageType EDamageType
function UHUDDamagePanelStigmaWidget:OnDamageApplied(DamageType) end
---@param bIsLethal boolean
---@return float
function UHUDDamagePanelStigmaWidget:GetCurrentDamagePercentageForDamageType(bIsLethal) end


---@class UHUDDangerSenseWidget : UUserWidget
---@field mpDangerSensePanel UCanvasPanel
---@field mpDangerSenseImage UImage
---@field mpDangerSenseSettingsOverlay UOverlay
---@field mpDangerSenseToggleAnim UWidgetAnimation
---@field mpDangerSenseIdleAnim UWidgetAnimation
UHUDDangerSenseWidget = {}

---@param pTrackedTPChar ATPChar
function UHUDDangerSenseWidget:Update(pTrackedTPChar) end
---@param Color int32
---@return FColor
function UHUDDangerSenseWidget:GetColorForDangerSenseSetting(Color) end


---@class UHUDDarkShardOverlay : UUserWidget
---@field mpShardIconImage UImage
---@field mpShardPanel UCanvasPanel
---@field mpShardStartTargetCanvas UCanvasPanel
---@field mpProgressBarImage UImage
---@field mpMessageText UTextBlock
---@field mpDistanceText UTextBlock
---@field mpCircularProgressMaterialInstance UMaterialInstance
---@field mpShardSpawnedAnimation UWidgetAnimation
---@field mpShardIconAppearAnimation UWidgetAnimation
---@field mpShardInactiveTexture UTexture2D
---@field mShardInactiveColor FLinearColor
---@field mpShardActiveTexture UTexture2D
---@field mbDidShardExistLastFrame boolean
---@field mbShardRevealedLastFrame boolean
---@field mbHasAnimatedToPosition boolean
---@field mbIconAllowedToAnimate boolean
---@field mShardIconStartPosition FVector2D
---@field mLerpProgress float
---@field mbShardExists boolean
---@field mShardLifetimeRemaining float
---@field mbShardBeingTaken boolean
---@field mTimeBeforeShardTaken float
---@field mPlayerNamesTakingShard TArray<FText>
---@field mbShardExistedLastFrame boolean
---@field mCurrentStartLocation FVector2D
UHUDDarkShardOverlay = {}

---@param bShardExists boolean
---@param shardLifetimeRemaining float
---@param bShardBeingTaken boolean
---@param timeBeforeShardTaken float
---@param playerNamesTakingShard TArray<FText>
function UHUDDarkShardOverlay:UpdateShardInfo(bShardExists, shardLifetimeRemaining, bShardBeingTaken, timeBeforeShardTaken, playerNamesTakingShard) end
function UHUDDarkShardOverlay:OnShardTimedOut() end
function UHUDDarkShardOverlay:OnShardTaken() end
function UHUDDarkShardOverlay:OnShardIconAppearAnimationFinished() end


---@class UHUDEffigyPanel : UUserWidget
---@field mpEffigyImage UImage
---@field mpCurrentChargeText UTextBlock
---@field mpMaxChargeText UTextBlock
---@field mpChargeHorizontalBox UHorizontalBox
---@field mpMainHorizontalBox UHorizontalBox
---@field mpButtonSizeBox USizeBox
---@field mpButtonPromptWidget UButtonPromptWidget
---@field mpEffigyBackingImage UImage
---@field mDollMasterPanelOffset float
---@field mpPortalPulseAnimation UWidgetAnimation
---@field mpEffigyNumWobblingAnimation UWidgetAnimation
---@field mStartHeight float
---@field mpEffigyPortalActive_Texture UTexture2D
---@field mpEffigyPortalInactive_Texture UTexture2D
---@field mpEffigyTriangleActive_Texture UTexture2D
---@field mpEffigyTriangleCannotUse_Texture UTexture2D
---@field mpEffigyTriangleInactive_Texture UTexture2D
UHUDEffigyPanel = {}



---@class UHUDEmoteMenu : UHUDRadialMenu
---@field mpCancelPrompt UButtonPromptWidget
---@field mpCooldownImage UImage
---@field mpRingTexture UTexture2D
---@field mpCircularProgressMaterialInstance UMaterialInstance
---@field mbPopulatedEmoteData boolean
---@field mpLastPopulatedTPChar ATPChar
UHUDEmoteMenu = {}



---@class UHUDEradicatorOverlayPanel : UHUDEvilOverlayPanel
---@field mpPowerSlideMaterialInterface UMaterialInterface
---@field mpEradicatorHUDParameterCollection UMaterialParameterCollection
---@field mpSurgeSizeBox USizeBox
---@field mpSlideAvailableAnimation UWidgetAnimation
---@field mpAssaultModeAnimation UWidgetAnimation
---@field mpAssaultOutAnimation UWidgetAnimation
---@field mpAssaultToVehicleAnimation UWidgetAnimation
---@field mpScanMiddleAnimation UWidgetAnimation
---@field mpScanWarmupAnimation UWidgetAnimation
---@field mpVehicleModeAnimation UWidgetAnimation
---@field mpSurgeOutAnimation UWidgetAnimation
---@field mpSurgeWarmupAnimation UWidgetAnimation
---@field mpIncorporealAnimation UWidgetAnimation
---@field mpIncorporealOutAnimation UWidgetAnimation
---@field mpBigScanAnimation UWidgetAnimation
---@field bDebugMode boolean
---@field mpScanSizeBox USizeBox
---@field mpVehicleContainer UOverlay
---@field mpAssaultContainer UOverlay
---@field mpBanishedContainer UOverlay
---@field mpScanSweepBar UImage
---@field pOwningDeathwireStateMachineComponent UStateMachineComponent
---@field mPrevState EEradicatorHUDState
---@field mNewState EEradicatorHUDState
---@field mCurrentStateTime float
---@field mbObserved_DirtyFlag boolean
UHUDEradicatorOverlayPanel = {}

---@param pEradChar AEradicatorChar
function UHUDEradicatorOverlayPanel:UpdateSurgeBoxSize(pEradChar) end
---@param prevState int32
---@param newState int32
---@param currentStateTime float
---@param prevStateExitTime float
function UHUDEradicatorOverlayPanel:TryUpdateFlipbookAnimator(prevState, newState, currentStateTime, prevStateExitTime) end
---@param currentState int32
---@param currentTime float
function UHUDEradicatorOverlayPanel:OnStateUpdate(currentState, currentTime) end
---@param prevState int32
---@param newState int32
---@param endTime float
function UHUDEradicatorOverlayPanel:OnStateChange(prevState, newState, endTime) end
---@param StateMachineComponent UStateMachineComponent
function UHUDEradicatorOverlayPanel:CaptureCurrentStateProgress(StateMachineComponent) end


---@class UHUDEvilAbilityItemWidget : UUserWidget
---@field mAbilityReadyColor FLinearColor
---@field mAbilityOnCooldownColor FLinearColor
---@field mAbilityCooldownBoostColor FLinearColor
---@field mAbilityLockoutColor FLinearColor
---@field mActionType EGameActionType
---@field mpBackgroundPortraits TArray<UTexture2D>
---@field mpAbilityIconMaterialInterface UMaterialInterface
---@field mAbilityState EEvilAbilityState
---@field mCooldownAlpha float
---@field mpCanvasPanel UCanvasPanel
---@field mpCooldownProgressBar UProgressBar
---@field mpAbilityCountText UTextBlock
---@field mpCooldownSecondsText UTextBlock
---@field mpAbilityControlButtonImage UButtonPromptWidget
---@field mpBackgroundImage UImage
---@field mpAbilityResourceCounterPanel UCanvasPanel
---@field mpResourceCounterFullCircle UImage
---@field mpAbilityNotUsable UWidgetAnimation
---@field mpAbilityIconMaterialInstance UMaterialInstanceDynamic
---@field mpFPChar AFPChar
UHUDEvilAbilityItemWidget = {}



---@class UHUDEvilDamagePanel : UUserWidget
---@field mpArmourMaterialInterface UMaterialInterface
---@field mpDollMinionMaterialInterface UMaterialInterface
---@field mpAnomalyMimicMaterialInterface UMaterialInterface
---@field mpArmourOn UWidgetAnimation
---@field mpArmourBroken UWidgetAnimation
---@field mpArmourTimeout UWidgetAnimation
---@field mpDollMinionOn UWidgetAnimation
---@field mpDollMinionTimeout UWidgetAnimation
---@field mpAnomalyMimicOn UWidgetAnimation
---@field mpAnomalyMimicDestroyed UWidgetAnimation
---@field mpArmourImage UImage
---@field mpDollImage UImage
---@field mpAnomalyImage UImage
---@field mpArmourLeft UImage
---@field mpArmourRight UImage
---@field mpGameModeSwitcher UWidgetSwitcher
---@field mpDollPanel UHorizontalBox
---@field mpExtraDollsSizeBox USizeBox
---@field mpExtraDollsText UTextBlock
---@field mMaxNumberOfDollFaces int32
---@field mbIsShowingRageMessageText boolean
---@field mbPlayingDollDamageAnimationForward boolean
---@field mbPlayingAnomalyMimicDamageAnimationForward boolean
---@field mbMimicDamagedLastFrame boolean
---@field mpArmourMaterialInstance UMaterialInstanceDynamic
---@field mpDollMinionMaterialInstance UMaterialInstanceDynamic
---@field mpAnomalyMimicMaterialInstance UMaterialInstanceDynamic
---@field mSurvivalDollCharWidgetClass TSubclassOf<UHUDSurvivalDollCharWidget>
UHUDEvilDamagePanel = {}



---@class UHUDEvilIcon_Widget : UUserWidget
---@field mpIconFG UImage
---@field mpIconBG UImage
UHUDEvilIcon_Widget = {}

function UHUDEvilIcon_Widget:HighlightSelection() end
---@return UImage
function UHUDEvilIcon_Widget:GetFGEvilIcon() end
function UHUDEvilIcon_Widget:ClearHighlight() end


---@class UHUDEvilOverlayPanel : UCustomizableUserWidget
UHUDEvilOverlayPanel = {}

---@param pTrackedTPChar ATPChar
function UHUDEvilOverlayPanel:Update(pTrackedTPChar) end
---@param pTrackedTPChar ATPChar
function UHUDEvilOverlayPanel:InitializeState(pTrackedTPChar) end
---@param pstateMachineComponent UStateMachineComponent
function UHUDEvilOverlayPanel:BindStateMachineDelegate(pstateMachineComponent) end


---@class UHUDEvilPanel : UUserWidget
---@field mpEvilAbilityItem0 UHUDEvilAbilityItemWidget
---@field mpEvilAbilityItem1 UHUDEvilAbilityItemWidget
---@field mpEvilAbilityItem2 UHUDEvilAbilityItemWidget
---@field mpDollTrapsPanel UCanvasPanel
---@field mpCurrentTrapsPlaced UTextBlock
---@field mpTotalTrapsAvailable UTextBlock
---@field mpRemoveTrapButton UButtonPromptWidget
---@field mpRemoveTrapTextBlock UTextBlock
UHUDEvilPanel = {}



---@class UHUDEvilRagePanel : UUserWidget
---@field mpRageMaterialInterface UMaterialInterface
---@field mpRageText UTextBlock
---@field mpRageBarFill UImage
---@field mpRageBarFull UWidgetAnimation
---@field mpRageBarPulse UWidgetAnimation
---@field mpFilledTexture UTexture2D
---@field mpUnFilledTexture UTexture2D
---@field mpRageMaterialInstance UMaterialInstanceDynamic
UHUDEvilRagePanel = {}

---@param pTrackedTPChar ATPChar
function UHUDEvilRagePanel:UpdateRageProgressBar(pTrackedTPChar) end
---@param pTrackedTPChar ATPChar
function UHUDEvilRagePanel:Update(pTrackedTPChar) end
function UHUDEvilRagePanel:OnRageBarFullFinished() end


---@class UHUDEvilWheelPanel : UUserWidget
---@field mEvilIconWidgets TArray<UHUDEvilIcon_Widget>
---@field mpActiveControlsBox UHorizontalBox
---@field mpEvilIconsBox UHorizontalBox
---@field mpCountdownText UTextBlock
---@field mpChangeLeftImage UImage
---@field mpChangeRightImage UImage
---@field mpTransformImage UImage
---@field mpTrackedChar ATPChar
---@field mTutorialAvailableEvils TArray<ECharacterType>
---@field mAvailableEvils TArray<ECharacterType>
---@field mCurrentEvilIndex int32
---@field mbIsSelectingRandom boolean
UHUDEvilWheelPanel = {}

---@param availableEvils TArray<ECharacterType>
function UHUDEvilWheelPanel:SetAvailableTutorialEvils(availableEvils) end
function UHUDEvilWheelPanel:OnDeviceTypeChanged() end
---@return TArray<ECharacterType>
function UHUDEvilWheelPanel:GetEvilList() end
---@return ECharacterType
function UHUDEvilWheelPanel:GetCurrentSelectedEvilType() end


---@class UHUDFailedStationIndicatorWidget : UUserWidget
---@field mpTrackedStation AStationBase
---@field mpIndicatorCanvas UCanvasPanel
---@field mpStationIcon UImage
---@field mpOnStationFailedAnimation UWidgetAnimation
UHUDFailedStationIndicatorWidget = {}

---@param pStation AStationBase
function UHUDFailedStationIndicatorWidget:SetTrackedStation(pStation) end
function UHUDFailedStationIndicatorWidget:OnStationFailedAnimationFinished() end
---@return AStationBase
function UHUDFailedStationIndicatorWidget:GetTrackedStation() end


---@class UHUDLoadingScreenWidget : UUserWidget
---@field HintTitleTextures TArray<UTexture2D>
---@field mpHintsDefTable UDataTable
---@field mLoadingScreenData TArray<FLoadingScreenData>
---@field mpDefaultTexture UTexture2D
---@field mpSurvivalTexture UTexture2D
---@field PrizeRevealPadding FMargin
---@field TeenToEvilSpacer FVector2D
---@field ShowPrizeRevealPerPlayer float
---@field ScreenTransitionTime float
---@field mpBackgroundBorder UBorder
---@field mpVoiceGroupWidget ULoadingScreenVoiceGroupWidget
---@field mpTipTitleText UTextBlock
---@field mpTipsOverlay UOverlay
---@field mpTipsBox UVerticalBox
---@field mpTip1TitleIcon UImage
---@field mpTip1TitleText UTextBlock
---@field mpTip1Text UTextBlock
---@field mpTip2TitleIcon UImage
---@field mpTip2TitleText UTextBlock
---@field mpTip2Text UTextBlock
---@field mpTip3TitleIcon UImage
---@field mpTip3TitleText UTextBlock
---@field mpTip3Text UTextBlock
---@field mpLevelNameText UTextBlock
---@field mpPrizePanel UCanvasPanel
---@field mpPrizeBox UHorizontalBox
---@field mpToggleDetailsButton UButton
---@field mpToggleDetailsText UTextBlock
---@field mpLoadingOverlay UOverlay
---@field mpLoadingImage UImage
---@field mpLoadingWaitingText UTextBlock
---@field mpSpinnerOverlay UOverlay
---@field mpEarlyAccessImage UImage
---@field mState ELoadingScreenState
---@field mHintData TMap<FString, FHintData>
---@field mHiddenPrizeData TMap<FDbItemId, EFaction>
---@field mHintIds TArray<FString>
---@field mTeenPrizeIds TArray<FDbItemId>
---@field mEvilPrizeId FDbItemId
---@field mPrizeRevealWidgets TArray<UPrizeRevealWidget>
---@field mCurrentPrize int32
---@field mStateTimer float
---@field mbIsInViewport boolean
---@field mLevelType ELevelType
---@field mSubLevelType ESubLevelType
---@field mCharacterType ECharacterType
UHUDLoadingScreenWidget = {}

function UHUDLoadingScreenWidget:UpdateToggleDetailsText() end
---@param DeltaTime float
function UHUDLoadingScreenWidget:UpdateState(DeltaTime) end
---@param InDeltaTime float
function UHUDLoadingScreenWidget:UpdateLoadingHintText(InDeltaTime) end
---@param Names TArray<FString>
function UHUDLoadingScreenWidget:ShowWaiting(Names) end
function UHUDLoadingScreenWidget:ShowRandomHint() end
function UHUDLoadingScreenWidget:ShowLoadingScreenDirectly() end
function UHUDLoadingScreenWidget:SetupPrizeReveal() end
function UHUDLoadingScreenWidget:SetupAndStartScreen() end
---@param SubLevelType ESubLevelType
function UHUDLoadingScreenWidget:SetSubLevelType(SubLevelType) end
---@param State ELoadingScreenState
function UHUDLoadingScreenWidget:SetState(State) end
---@param LevelType ELevelType
function UHUDLoadingScreenWidget:SetLevelType(LevelType) end
---@param CharType ECharacterType
function UHUDLoadingScreenWidget:SetCharacterType(CharType) end
function UHUDLoadingScreenWidget:PopulateHintTable() end
function UHUDLoadingScreenWidget:OnToggleDetailsPressed() end
function UHUDLoadingScreenWidget:OnAltActionPressed() end
---@param bPressed boolean
function UHUDLoadingScreenWidget:InputAction_ToggleShowPrizeDetails(bPressed) end
---@param bPressed boolean
function UHUDLoadingScreenWidget:InputAction_NextHint(bPressed) end
function UHUDLoadingScreenWidget:Hide() end
---@param bFadeIn boolean
---@return boolean
function UHUDLoadingScreenWidget:FadeBackground(bFadeIn) end
function UHUDLoadingScreenWidget:BeginFadeOut() end
---@param ItemId FDbItemId
---@param bIsEvilCharacter boolean
function UHUDLoadingScreenWidget:AddPrizeWidget(ItemId, bIsEvilCharacter) end
---@param Name FString
---@param hint FHintData
function UHUDLoadingScreenWidget:AddHint(Name, hint) end
function UHUDLoadingScreenWidget:AddAllPrizeData() end
function UHUDLoadingScreenWidget:AddAllHints() end
function UHUDLoadingScreenWidget:_DEBUG_SimulatePrizes() end


---@class UHUDMinigame_BarTiming : UUserWidget
---@field mpActionBarPanel UCanvasPanel
---@field mpTargetBarImage UImage
---@field mpBarPanel UCanvasPanel
---@field mpBarPanelSlot UCanvasPanelSlot
---@field mpStatusImage UImage
---@field mpPassBox1 USizeBox
---@field mpPassBox2 USizeBox
---@field mpBullseyeBox USizeBox
---@field mCurrentValue float
---@field mTargetValue float
---@field mpCraftingCurrentValueIndicatorImage UImage
---@field mpCraftingCurrentValueIndicatorSlot UCanvasPanelSlot
---@field mpProneCurrentValueIndicatorImage UImage
---@field mpProneCurrentValueIndicatorSlot UCanvasPanelSlot
---@field mpTargetAreaBoxSlot UCanvasPanelSlot
---@field mpNeutralHammerIcon UTexture2D
---@field mpPassHammerIcon UTexture2D
---@field mpFailHammerIcon UTexture2D
---@field mpBullseyeHammerIcon UTexture2D
---@field mpNeutralProneLine UTexture2D
---@field mpBullseyeProneLine UTexture2D
---@field mpFailProneLine UTexture2D
---@field mpBullseyeGlow UTexture2D
---@field mpFailGlow UTexture2D
---@field mpDarkGlow UImage
---@field mpColoredGlow UImage
---@field mMinigameStyleGuides TMap<EBarTimingMinigameType, FBarTimingStyleGuide>
---@field mpReviveLineLeft UImage
---@field mpReviveLineRight UImage
---@field mCurrentMinigameType EBarTimingMinigameType
---@field mpDescriptionText UTextBlock
---@field mpProneLeftSideBox USizeBox
---@field mpProneRightSideBox USizeBox
---@field mReviveSpriteGlowOffset float
---@field mpReviveLineBox UHorizontalBox
---@field mpProneLineSpacer USpacer
---@field mpDescriptionOverlaySlot UCanvasPanelSlot
---@field mpMinigameBoxSlot UCanvasPanelSlot
---@field mpMinigameStatusPanel UCanvasPanel
UHUDMinigame_BarTiming = {}

---@param pTrackedChar ATPChar
function UHUDMinigame_BarTiming:UpdateVisibility(pTrackedChar) end
---@param pTrackedChar ATPChar
function UHUDMinigame_BarTiming:UpdateMinigame(pTrackedChar) end
---@param pTrackedChar ATPChar
function UHUDMinigame_BarTiming:Update(pTrackedChar) end
---@param pTrackedChar ATPChar
---@return boolean
function UHUDMinigame_BarTiming:ShouldShowMinigameStatus(pTrackedChar) end
---@param pTrackedChar ATPChar
---@return boolean
function UHUDMinigame_BarTiming:ShouldShowMinigameProgressBar(pTrackedChar) end


---@class UHUDMinigame_RingAligning : UUserWidget
---@field mpRingAlignPanel UCanvasPanel
---@field mpRingAlignRingImage UImage
---@field mpRingAlignActionBox UHorizontalBox
---@field mpHeartMaterial UMaterialInstance
---@field mpCrossMaterial UMaterialInstance
---@field mpPentagonMaterial UMaterialInstance
---@field mpCurrentRingAlignMaterial UMaterialInstanceDynamic
---@field mCurrentMinigameType ERingAligningMinigameType
---@field mMinigameTypeLastFrame ERingAligningMinigameType
UHUDMinigame_RingAligning = {}

---@param pTrackedChar ATPChar
function UHUDMinigame_RingAligning:UpdateVisibility(pTrackedChar) end
---@param pTrackedChar ATPChar
function UHUDMinigame_RingAligning:UpdateMinigameType(pTrackedChar) end
---@param pTrackedChar ATPChar
function UHUDMinigame_RingAligning:UpdateMinigame(pTrackedChar) end
---@param pTrackedChar ATPChar
function UHUDMinigame_RingAligning:Update(pTrackedChar) end
---@param pTrackedChar ATPChar
---@return boolean
function UHUDMinigame_RingAligning:ShouldShowMinigame(pTrackedChar) end


---@class UHUDMinigame_Rotator : UUserWidget
---@field mpRotatorPanel UCanvasPanel
---@field mpRotatorNodePanel UCanvasPanel
---@field mpRotatorChallengeNumIndicatorBox UHorizontalBox
---@field mpRotatorNodeImage UTexture2D
---@field mpRotatorNodeLockedImage UTexture2D
---@field mpRotatorNodeCorrectImage UTexture2D
---@field mpRotatorTargetImage UTexture2D
---@field mProgressNodeNegativeMargin int32
---@field mpBackgroundImage UImage
---@field mpButtonPromptLeft UButtonPromptWidget
---@field mpButtonPromptRight UButtonPromptWidget
---@field mpRotatorTargetPanel UCanvasPanel
---@field mRotatorRadius float
---@field mRotatorTargetDiameter float
---@field mMaxRotatorNodes int32
---@field mMaxRotatorPuzzles int32
---@field mRotatorTargetImageList TArray<UImage>
---@field mRotatorNodeImageList TArray<UImage>
---@field mpConfirmControls UVerticalBox
---@field mProgressNodeClass TSubclassOf<UHUDMinigame_Rotator_ProgressNode>
---@field mCurrentProgressNodes TArray<UHUDMinigame_Rotator_ProgressNode>
---@field mViewedPuzzlesCompleteLastFrame int32
---@field mpControlsBox UVerticalBox
---@field mpLastViewedTPChar ATPChar
---@field mbNeedsObserverRefresh boolean
---@field mMinigameStyleGuides TMap<ERotatorMinigameType, FRotatorStyleGuide>
---@field mCurrentDisplayedRotatorStyle ERotatorMinigameType
UHUDMinigame_Rotator = {}

---@param pTrackedChar ATPChar
function UHUDMinigame_Rotator:UpdateVisibility(pTrackedChar) end
---@param pTrackedChar ATPChar
function UHUDMinigame_Rotator:UpdateRotatorGame(pTrackedChar) end
---@param pTrackedChar ATPChar
function UHUDMinigame_Rotator:UpdateObserver(pTrackedChar) end
---@param pTrackedChar ATPChar
function UHUDMinigame_Rotator:Update(pTrackedChar) end
---@param pPoint ASearchablePoint
---@return ERotatorMinigameType
function UHUDMinigame_Rotator:GetRotatorTypeFromSearchablePoint(pPoint) end
---@param pMinigame URotatorMinigame
function UHUDMinigame_Rotator:GenerateRotatorUI(pMinigame) end
---@param Num int32
function UHUDMinigame_Rotator:GenerateProgressNodes(Num) end
---@param anglePositions TArray<int32>
---@param puzzleRotation float
---@param pTrackedChar ATPChar
function UHUDMinigame_Rotator:AlignRotatorUI(anglePositions, puzzleRotation, pTrackedChar) end


---@class UHUDMinigame_Rotator_ProgressNode : UUserWidget
---@field mpContainerBorder UImage
---@field mpOnCompleteImage UImage
---@field mpContainerFilledImage UTexture2D
---@field mpCurrentPuzzleIndicator UImage
UHUDMinigame_Rotator_ProgressNode = {}

---@param pEmptyContainer UTexture2D
---@param pFullContainer UTexture2D
---@param pOnComplete UTexture2D
function UHUDMinigame_Rotator_ProgressNode:PopulateData(pEmptyContainer, pFullContainer, pOnComplete) end
function UHUDMinigame_Rotator_ProgressNode:DoSetCurrent() end
function UHUDMinigame_Rotator_ProgressNode:DoSetComplete() end


---@class UHUDNotification : UUserWidget
---@field mbIsPermanent boolean
---@field mpNotificationFadeIn UWidgetAnimation
---@field mpNotificationFadeOut UWidgetAnimation
---@field mpEnragedTextAnim UWidgetAnimation
---@field mpNotificationTextBlock UTextBlock
UHUDNotification = {}

function UHUDNotification:UpdateVisibility() end
function UHUDNotification:StartNotification() end
function UHUDNotification:ShowNotification() end
---@param Val EHUDNotificationType
function UHUDNotification:SetNotificationType(Val) end
---@param Duration float
---@param textToShow FText
function UHUDNotification:SetDurationAndText(Duration, textToShow) end
---@return boolean
function UHUDNotification:IsShowingNotification() end
function UHUDNotification:HideNotification() end
function UHUDNotification:FinishNotification() end


---@class UHUDNotificationsPanel : UUserWidget
---@field mHUDNotificationWidgetClass TSubclassOf<UHUDNotification>
---@field mpPermanentHUDNotification UHUDNotification
---@field mNotificationsQueue TArray<UHUDNotification>
---@field mpCurrentNotification UHUDNotification
---@field mbEvilWasEnragedLastFrame boolean
---@field mbWasSpectralLastFrame boolean
---@field mbShowedWinConditionNotification boolean
UHUDNotificationsPanel = {}

---@param pTrackedChar ATPChar
function UHUDNotificationsPanel:UpdateWinConditionNotifications(pTrackedChar) end
---@param pTrackedChar ATPChar
function UHUDNotificationsPanel:UpdateSpectralNotifications(pTrackedChar) end
---@param pTrackedChar ATPChar
function UHUDNotificationsPanel:UpdateRageNotifications(pTrackedChar) end
function UHUDNotificationsPanel:UpdateQueue() end
---@param pTrackedChar ATPChar
function UHUDNotificationsPanel:Update(pTrackedChar) end
---@param textToShow FText
---@param notificationType EHUDNotificationType
function UHUDNotificationsPanel:SetPermanentNotification(textToShow, notificationType) end
---@param Duration float
---@param textToShow FText
---@param notificationType EHUDNotificationType
function UHUDNotificationsPanel:QueueNotification(Duration, textToShow, notificationType) end
function UHUDNotificationsPanel:HidePermanentNotification() end
---@param notificationType EHUDNotificationType
function UHUDNotificationsPanel:ClearNotificationsOfType(notificationType) end


---@class UHUDPickupPanel : UUserWidget
---@field mpKeyPrompt_Use UButtonPromptWidget
---@field mpKeyPrompt_Give UButtonPromptWidget
---@field mpGiveItemPanel UCanvasPanel
---@field mpPickupImage UImage
---@field mpWalkieProgressBar UImage
---@field mWalkieProgressBarStartingLength float
---@field mpGiveIcon UTexture2D
---@field mpDropIcon UTexture2D
---@field mpGiveItemImage UImage
UHUDPickupPanel = {}



---@class UHUDPingIndicatorWidget : UUserWidget
---@field mpBackgroundBorder UImage
---@field mpBackgroundFill UImage
---@field mpPingIcon UImage
---@field mpHoveredIndicatorImage UImage
---@field mpDistanceIndicatorText UTextBlock
---@field mpMainCanvas UCanvasPanel
---@field mpOnScreenCanvas UCanvasPanel
---@field mpOffScreenCanvas UCanvasPanel
---@field mpOffScreenIcon UImage
---@field mpPingProgressBar UCustomProgressBar
---@field mpOffscreenTexture UTexture2D
---@field mpOwningHUD AGameplayHUD
---@field mpPlayerController APlayerController
---@field mpTrackedPing APing
UHUDPingIndicatorWidget = {}

function UHUDPingIndicatorWidget:UpdateVisibility() end
function UHUDPingIndicatorWidget:UpdatePingIndicator() end
function UHUDPingIndicatorWidget:Update() end
---@param pPing APing
function UHUDPingIndicatorWidget:SetTrackedPing(pPing) end
---@param PlayerController APlayerController
function UHUDPingIndicatorWidget:SetPlayerController(PlayerController) end
---@param pHUD AGameplayHUD
function UHUDPingIndicatorWidget:SetGameplayHUD(pHUD) end
function UHUDPingIndicatorWidget:OnUnGuttered() end
function UHUDPingIndicatorWidget:OnGuttered() end
---@return float
function UHUDPingIndicatorWidget:GetTrackedPingLifetimeRemainingPercentage() end
---@return APing
function UHUDPingIndicatorWidget:GetTrackedPing() end
---@return AGameplayHUD
function UHUDPingIndicatorWidget:GetGameplayHUD() end
function UHUDPingIndicatorWidget:Clear() end


---@class UHUDPingMenu : UHUDRadialMenu
---@field mpCancelImage UImage
---@field mpSwitchMenuImage UImage
---@field mpCooldownImage UImage
---@field mpRingTexture UTexture2D
---@field mpCircularProgressMaterialInstance UMaterialInstance
UHUDPingMenu = {}



---@class UHUDPlayerCard : UUserWidget
---@field mHealthBarUpdateInterval float
---@field mLethalWeaponColor FLinearColor
---@field mNonLethalWeaponColor FLinearColor
---@field mNonActiveWeaponColor FLinearColor
---@field mActiveWeaponColor FLinearColor
---@field mHighWeaponIconColor FLinearColor
---@field mMidWeaponIconColor FLinearColor
---@field mLowWeaponIconColor FLinearColor
---@field mShadowBarFillColor FLinearColor
---@field mHudStateToColors TArray<FLinearColor>
---@field mReviveBarColor FLinearColor
---@field mpNormalHealthBarTexture UTexture
---@field mpProneHealthBarTexture UTexture
---@field mpCurrentActionTextures TArray<UTexture2D>
---@field mpProneArrowsNormal UTexture2D
---@field mpProneArrowsMarred UTexture2D
---@field mpCanvasPanel UCanvasPanel
---@field mpPlayerName UTextBlock
---@field mpCharacterPortraitImage UImage
---@field mpTeenBGStateSwitcher UWidgetSwitcher
---@field mpTeenStateSwitcher UWidgetSwitcher
---@field mpTeenStateIconSwitcher UWidgetSwitcher
---@field mpRoomLabelText UTextBlock
---@field mpEvilRoomLabelText UTextBlock
---@field mpStatusBarImage UImage
---@field mpStatusBarPanel UCanvasPanel
---@field mpWeaponIconImage UImage
---@field mpHealthBar UCustomProgressBar
---@field mpHealthBarShadow UCustomProgressBar
---@field mpHealthBarBackgroundSwitcher UWidgetSwitcher
---@field mpSpeakerImage UImage
---@field mpPingIndicatorImage UImage
---@field mpPickupImage UImage
---@field mpHealthBarCanvasPanel UCanvasPanel
---@field mpTeenStatusBarVerticalPanel UVerticalBox
---@field mpEvilStatusBarVerticalPanel UVerticalBox
---@field mpHitsTextBlock UTextBlock
---@field mpCriticalHealthImage UImage
---@field mpReviveBar UProgressBar
---@field mpFactionSwitcher UWidgetSwitcher
---@field mpEvilStateSwitcher UWidgetSwitcher
---@field mpCharacterRageBGImage UImage
---@field mpEvilCharacterPortraitImage UImage
---@field mpCharacterRageEyeGlowImage UImage
---@field mpEvilPlayerName UTextBlock
---@field mpWeaponCanvasPanel UCanvasPanel
---@field mpWeaponIconGlowBGImage UImage
---@field mpWeaponIconBorderImage UImage
---@field mpWeaponIconBGImage UImage
---@field mpHardyHealthCanvasPanel UCanvasPanel
---@field mpHardyHealthBarSizeBox USizeBox
---@field mpHardyHealthBarShadowSizeBox USizeBox
---@field mpHardyHealthBar UCustomProgressBar
---@field mpHardySpacer USpacer
---@field mpHardyShadowHealthBar UCustomProgressBar
---@field mpDollMinionPanel UCanvasPanel
---@field mpDollMinionLifetimeBar UCustomProgressBar
---@field mpDollMinionRageImage UImage
---@field mpDismissButton UButtonPromptWidget
---@field mpEvilEventHolidayHB UHorizontalBox
---@field mpEvilEventHolidayText UTextBlock
---@field mpCriticalIconAnim UWidgetAnimation
---@field mpProneIconAnim UWidgetAnimation
---@field mpInjuredIconAnim UWidgetAnimation
---@field mpWeaponCraftAnim UWidgetAnimation
---@field mpMarredIconAnim UWidgetAnimation
---@field mCurrentShakeTime float
---@field mbEnragedShake boolean
---@field mpTrackedTPChar ATPChar
---@field mpLocallyViewedChar ATPChar
UHUDPlayerCard = {}



---@class UHUDPlayerCardPanel : UUserWidget
---@field MAX_PLAYER_CARDS int32
---@field mHudPlayerCardClass TSubclassOf<UHUDPlayerCard>
---@field mpPlayerCards TArray<UHUDPlayerCard>
---@field mpSelfCard UHUDPlayerCard
---@field mpLastTrackedTPChar ATPChar
---@field mpCurrentlyDisplayedRoomFrame ARoomFrame
---@field mpLocalRoomFrameLocationText UTextBlock
---@field mpLocalRoomFrameLocationImage UImage
---@field mpPlayersBox UVerticalBox
---@field mpSpectatorCanvas UCanvasPanel
---@field mpSpectatorTitleText UTextBlock
---@field mpMessageSwitcher UWidgetSwitcher
UHUDPlayerCardPanel = {}

---@param pTrackedChar ATPChar
function UHUDPlayerCardPanel:UpdateSpectatorPanel(pTrackedChar) end


---@class UHUDPlayerName : UUserWidget
---@field mTimeHoveringTargetChar float
---@field mLastSeenPosition FVector
---@field mpPlayerNameText UTextBlock
---@field mTimeHoveredOnChar float
---@field mpHeightOffsetCurve UCurveFloat
---@field mpTextSizeCurve UCurveFloat
---@field mpContentCanvas UCanvasPanel
UHUDPlayerName = {}

---@param bWantToSee boolean
function UHUDPlayerName:UpdateVisibility(bWantToSee) end
function UHUDPlayerName:NativeConstruct() end
---@return float
function UHUDPlayerName:GetTimeToHoverBeforeShowing() end
---@return float
function UHUDPlayerName:GetFadeRate() end


---@class UHUDRadialMenu : UUserWidget
---@field mIconNonHighlightedColor FLinearColor
---@field mNumberOfSegments int32
---@field mMenuRadius int32
---@field mSegmentAngleOffset float
---@field mCursorRotationRadius int32
---@field mTimeHasBeenVisible float
---@field mMenuExpansionAnimationRate float
---@field mIconDistanceOffset float
---@field mMenuDeadZone float
---@field mIndividualIconSize FVector2D
---@field mbIsShown boolean
---@field mSegmentList TArray<FRadialMenuSegement>
---@field mpRadialSegmentImage_UnSelected UTexture2D
---@field mpRadialSegmentImage_Selected UTexture2D
---@field mpCanvasPanel UCanvasPanel
---@field mpBackgroundBlur UBackgroundBlur
---@field mpCurrentPlayerController APlayerController
---@field mpCurrentChar ATPChar
---@field mCurrentSegmentSelection int32
---@field mLastNonZeroAccel FVector2D
---@field mMouseAccelMinMagnitude float
---@field mbDisableEntireMenu boolean
---@field mpSegmentNameText UTextBlock
UHUDRadialMenu = {}

---@param pTrackedTPChar ATPChar
function UHUDRadialMenu:Update(pTrackedTPChar) end
---@param bPressed boolean
---@param bDoCancelDoResetCursor boolean
function UHUDRadialMenu:TurnMenuOnOrOff(bPressed, bDoCancelDoResetCursor) end
---@param bNewValue boolean
function UHUDRadialMenu:SetIsShown(bNewValue) end
---@param NewValue boolean
function UHUDRadialMenu:SetEntireMenuDisabled(NewValue) end
---@param pNewValue APlayerController
function UHUDRadialMenu:SetCurrentPlayerController(pNewValue) end
---@param pNewValue ATPChar
function UHUDRadialMenu:SetCurrentChar(pNewValue) end
---@param segmentNum int32
function UHUDRadialMenu:RecieveSegementSelection(segmentNum) end
---@return boolean
function UHUDRadialMenu:IsEntireMenuDisabled() end
---@return boolean
function UHUDRadialMenu:IsCurrentlyShown() end
---@return FVector2D
function UHUDRadialMenu:GetCursorPosition() end
---@return FVector2D
function UHUDRadialMenu:GetCursorMovementVector() end
---@return APlayerController
function UHUDRadialMenu:GetCurrentPlayerController() end
---@return ATPChar
function UHUDRadialMenu:GetCurrentChar() end


---@class UHUDRadialMenuSegment : UUserWidget
---@field mpSelectedTexture UTexture2D
---@field mpUnSelectedTexture UTexture2D
---@field mpIconImage UImage
---@field mpSegmentBackground UImage
---@field mpSelectorImage UImage
UHUDRadialMenuSegment = {}

---@param bSelected boolean
function UHUDRadialMenuSegment:SetSelected(bSelected) end
---@param NewValue float
function UHUDRadialMenuSegment:SetSegmentIconAngle(NewValue) end
---@param pIconTexture UTexture2D
function UHUDRadialMenuSegment:PopulateData(pIconTexture) end


---@class UHUDReplayPanel : UUserWidget
---@field mpPauseButton UButton
---@field mpSlowDownButton UButton
---@field mpSpeedUpButton UButton
---@field mpSkipForwardButton UButton
---@field mpSkipBackwardButton UButton
---@field mpTimeDilationText UTextBlock
---@field mpProgressBar UProgressBar
---@field mpCurrentTimeText UTextBlock
---@field mpTotalTimeText UTextBlock
---@field mbIsPaused boolean
---@field mMaxTimeDilationPower int16
---@field mMinTimeDilationPower int16
---@field mTimeDilationPower int16
---@field mbIsScrubbing boolean
---@field mbIsMouseDown boolean
---@field mClickedPosition FVector2D
---@field mCurrentPosition FVector2D
UHUDReplayPanel = {}

---@return boolean
function UHUDReplayPanel:ShouldShowCursor() end
function UHUDReplayPanel:OnTimeDilate() end
function UHUDReplayPanel:OnSpeedUp() end
function UHUDReplayPanel:OnSlowDown() end
function UHUDReplayPanel:OnSkipForward() end
function UHUDReplayPanel:OnSkipBackward() end
function UHUDReplayPanel:OnPause() end
---@return float
function UHUDReplayPanel:GetScrubPercent() end


---@class UHUDReticle : UUserWidget
---@field mpReticleImage UImage
---@field mpInnerRing UImage
---@field mpOuterRing UImage
---@field mpMiddleRing UImage
---@field mpMonsterAssistRing UImage
---@field mpDisabledRingImage UImage
---@field mpHitMarkerAnimation UWidgetAnimation
---@field mpWeaponDisabledAnimation UWidgetAnimation
---@field mpRingTexture UTexture2D
---@field mpCircularProgressMaterialInstance UMaterialInstance
UHUDReticle = {}

---@param pTrackedTPChar ATPChar
function UHUDReticle:Update(pTrackedTPChar) end
function UHUDReticle:StopDisabledAnimation() end
---@param pTrackedTPChar ATPChar
---@return boolean
function UHUDReticle:ShouldPlayDisabledWeaponEffect(pTrackedTPChar) end
function UHUDReticle:PlayHitmarkerAnimation() end
function UHUDReticle:PlayDisabledAnimation() end


---@class UHUDScorePopup : UUserWidget
---@field mpMessageTextBlock UTextBlock
---@field mpScoreTextBlock UTextBlock
---@field mpMessageBorder UBorder
---@field mpOwnerHUD AGameplayHUD
UHUDScorePopup = {}



---@class UHUDScoreWidget : UUserWidget
---@field mpMatchSummaryWidget UMatchStateSummaryWidget
UHUDScoreWidget = {}



---@class UHUDServerTypeWidget : UUserWidget
---@field mpServerTypeText UTextBlock
UHUDServerTypeWidget = {}

function UHUDServerTypeWidget:SetServerText() end


---@class UHUDSignalMenu : UHUDRadialMenu
---@field mpCancelImage UImage
---@field mpCooldownImage UImage
---@field mpRingTexture UTexture2D
---@field mpCircularProgressMaterialInstance UMaterialInstance
UHUDSignalMenu = {}



---@class UHUDStatusPanels : UUserWidget
---@field mCurrentStatusTileList TArray<UHUDStatusTile>
---@field mAllStatusData TArray<FStatusTileData>
---@field mStatusTileClass TSubclassOf<UHUDStatusTile>
---@field mpTileBox UHorizontalBox
UHUDStatusPanels = {}

---@param allData TArray<FStatusTileData>
---@param pTrackedChar ATPChar
function UHUDStatusPanels:PresentStatusData(allData, pTrackedChar) end


---@class UHUDStatusTile : UUserWidget
---@field mpCanvas UCanvasPanel
---@field mpProgressRingForeground UImage
---@field mpProgressRingBackground UImage
---@field mpStatusIcon UImage
---@field mpStatusText UTextBlock
---@field mpCircularProgressMaterialInstance UMaterialInstance
---@field mIndex int32
---@field mTier1Effect FLinearColor
---@field mTier2Effect FLinearColor
---@field mTier3Effect FLinearColor
---@field mPositiveEffect FLinearColor
---@field mNegativeEffect FLinearColor
---@field mAbilityEffect FLinearColor
---@field mNeutralEffect FLinearColor
---@field mTokenBlips TArray<UImage>
UHUDStatusTile = {}



---@class UHUDStickerMenu : UHUDRadialMenu
---@field mpCooldownImage UImage
---@field mpRingTexture UTexture2D
---@field mpCircularProgressMaterialInstance UMaterialInstance
---@field mpCancelPrompt UButtonPromptWidget
---@field mbPopulatedStickerData boolean
---@field mpLastTrackedTPChar ATPChar
UHUDStickerMenu = {}



---@class UHUDSurvivalDollCharWidget : UUserWidget
---@field mpDollImage UImage
UHUDSurvivalDollCharWidget = {}



---@class UHUDTabScreen : UBaseOverlay
---@field mpCategorySwitcher UCategorySwitcher
---@field mpTabScreenWidgetSwitcher UWidgetSwitcher
---@field mpMatchSummaryWidget UMatchStateSummaryWidget
---@field mpPlayerDetailsWidget UEndOfRoundPlayerDetailsWidget
---@field mpWarningText UTextBlock
---@field mpSceneSummaryWidget USceneSummaryWidget
---@field mpLastViewedBaseChar ABaseChar
UHUDTabScreen = {}

---@param pTrackedTPChar ATPChar
function UHUDTabScreen:Update(pTrackedTPChar) end


---@class UHUDTextureLibrary : UObject
UHUDTextureLibrary = {}


---@class UHUDTutorialPanel : UBaseScreen
---@field mpBottomTutorialImagePanel UImage
---@field mpOverlayPanel UCanvasPanel
---@field mpMainTextPanel UCanvasPanel
---@field mpBottomTextPanel UCanvasPanel
---@field mpSubTextPanel UCanvasPanel
---@field mpBottomTutorialText UTypeWriterWidget
---@field mpSubtextTutorialText UTypeWriterWidget
---@field mpOverlaySubText UTypeWriterWidget
---@field mpOverlayMainText UTypeWriterWidget
---@field mpConfirmButton UNavButton
---@field mOverlayButtonDelay float
---@field mOverlayButtonTimer float
UHUDTutorialPanel = {}

function UHUDTutorialPanel:OnConfirmPressed() end


---@class UHUDWatermarkWidget : UUserWidget
---@field mbIsInViewport boolean
---@field mCurrentIdentifier FString
---@field mpWatermarkCanvasPanel UCanvasPanel
UHUDWatermarkWidget = {}

---@param Identifier FString
function UHUDWatermarkWidget:ShowWatermark(Identifier) end
function UHUDWatermarkWidget:Hide() end


---@class UHUDWeaponPanel : UUserWidget
---@field mpAmmoDepletingTexture UTexture2D
---@field mpAmmoBarNormalTexture UTexture2D
---@field mpAmmoBar UCustomProgressBar
---@field mpChargeBar UCustomProgressBar
---@field mpCurrentAmmoCountText UTextBlock
---@field mpTotalAmmoCountText UTextBlock
---@field mpAmmoCountWidgetSwitcher UWidgetSwitcher
---@field mpStigmaIconImage UImage
---@field mpWeaponIconImage UImage
---@field mpUseText UTextBlock
---@field mpChargeBarBox UHorizontalBox
---@field mpWeaponPanel UCanvasPanel
---@field mpChargeBar0 UCustomProgressBar
---@field mpChargeBar1 UCustomProgressBar
---@field mpChargeBar2 UCustomProgressBar
---@field mpChargeBar3 UCustomProgressBar
---@field mpChargeBoxWidgetSwitcher UWidgetSwitcher
---@field mpDiscardPanel UHorizontalBox
---@field mpUseWeaponPanel UHorizontalBox
---@field mpDiscardActionButton UButtonPromptWidget
---@field mpUseWeaponActionButton UButtonPromptWidget
---@field mpDismissPanel UHorizontalBox
---@field mpDismissText UTextBlock
---@field mpDismissWeaponActionButton UButtonPromptWidget
---@field mpActionIconsBox UHorizontalBox
---@field mpCurrentWeapon AWeaponBase
---@field mpTrackedChar ATPChar
UHUDWeaponPanel = {}

function UHUDWeaponPanel:UpdateKeyBinding() end
function UHUDWeaponPanel:UpdateIcons() end
---@param DeltaTime float
function UHUDWeaponPanel:UpdateCharged(DeltaTime) end
---@param DeltaTime float
function UHUDWeaponPanel:UpdateAmmo(DeltaTime) end
---@param pTrackedChar ATPChar
function UHUDWeaponPanel:Update(pTrackedChar) end


---@class UHUDWeaponSelectionWheel : UHUDWheelPanelBase
---@field mpWeaponImage UImage
---@field mLastDamageTypePopulated EDamageType
---@field mbLastDamageTypePopulatedLethalLastFrame boolean
---@field mpMainCanvasPanel UCanvasPanel
---@field mbWantToFadeOut boolean
---@field mpCraftingAnimation UWidgetAnimation
---@field mpCurrentlyTrackedChar ATPChar
---@field mpWeaponPowerText UTextBlock
---@field mpActiveCraftingWeaponNameText UTextBlock
---@field mpActiveCraftingStigmaImage UImage
---@field mpActiveCraftingWeaponImage UImage
---@field mpWeaponWheelWidgetSwitcher UWidgetSwitcher
---@field mpRightPromptBox UHorizontalBox
---@field mpLeftPromptBox UHorizontalBox
---@field mpWeaponPowerTextBorder UBorder
---@field mSpectatorNumWeaponsForTypeTotal int32
---@field mbForceSpectatorRefresh boolean
UHUDWeaponSelectionWheel = {}

---@param NewValue FText
function UHUDWeaponSelectionWheel:SetItemNameText(NewValue) end
---@param wepList TArray<EWeaponTypeEnum>
---@param augmentBlockedWeapons TArray<EWeaponTypeEnum>
function UHUDWeaponSelectionWheel:PopulateWeaponData(wepList, augmentBlockedWeapons) end
---@param animationTime float
---@param bReverse boolean
function UHUDWeaponSelectionWheel:PlayCraftingAnimation(animationTime, bReverse) end
---@return boolean
function UHUDWeaponSelectionWheel:IsCurrentWeaponTypeBlockedByAugment() end
---@param pTrackedChar ATPChar
---@param wepType EWeaponTypeEnum
---@return FText
function UHUDWeaponSelectionWheel:GetWeaponPowerNameForWeapon(pTrackedChar, wepType) end
---@param pTrackedChar ATPChar
---@param wepType EWeaponTypeEnum
---@return UTexture2D
function UHUDWeaponSelectionWheel:GetWeaponPowerIconForWeapon(pTrackedChar, wepType) end
---@return EWeaponTypeEnum
function UHUDWeaponSelectionWheel:GetCurrentWeaponTypeSelected() end
---@return boolean
function UHUDWeaponSelectionWheel:AllowedToCycle() end


---@class UHUDWeaponSelectionWheelCard : UUserWidget
---@field mpWeaponPowerBox USizeBox
---@field mpWeaponPowerImage UImage
---@field mpStigmaImage UImage
---@field mpWeaponImage UImage
---@field mpWeaponPanel UCanvasPanel
---@field mpLockPanel UCanvasPanel
UHUDWeaponSelectionWheelCard = {}



---@class UHUDWeaponSkinIcon : UUserWidget
---@field mpIconImage UImage
UHUDWeaponSkinIcon = {}



---@class UHUDWheelPanelBase : UUserWidget
---@field mCurrentItemData TArray<UWheelItemData>
---@field mWheelCardList TArray<UWidget>
---@field mpItemNameText UTextBlock
---@field mpLeftPrompt UButtonPromptWidget
---@field mpRightPrompt UButtonPromptWidget
---@field mCurrentlySelectedIndex int32
UHUDWheelPanelBase = {}

---@param textureList TArray<UTexture2D>
---@param nameList TArray<FText>
function UHUDWheelPanelBase:PopulateData(textureList, nameList) end
---@return int32
function UHUDWheelPanelBase:GetSelectedIndex() end
---@param Direction int32
function UHUDWheelPanelBase:Cycle(Direction) end


---@class UHUDWheelPanelIcon : UUserWidget
---@field mpIconImage UImage
UHUDWheelPanelIcon = {}



---@class UHealingProgressBar : UBaseActionProgressBar
---@field mbShowedProgressLastFrame boolean
UHealingProgressBar = {}



---@class UHideCustomMatchSettingsUserButton : UBaseUserButton
---@field mpHideCustomMatchSettingsButtonText UTextBlock
---@field mpArrowIcon UImage
---@field HideAnim UWidgetAnimation
UHideCustomMatchSettingsUserButton = {}



---@class UHolySlingshotSkinDataAsset : UTeenWeaponSkinDataAsset
---@field mProjectileMesh FSkinStaticMesh
---@field mSlingshotMesh FSkinSkeletalMesh
---@field mBlastParticleSystem FSkinParticleSystem
---@field mTrailParticleSystem FSkinParticleSystem
---@field mEvilBeamParticleSystem FSkinParticleSystem
---@field mProjectileImpactDecal FSkinDecal
---@field mWiseHolySlingshotSwitch EWise_WEP_HolySlingshot
UHolySlingshotSkinDataAsset = {}



---@class UHolyStaffSkinDataAsset : UTeenWeaponSkinDataAsset
---@field mpHolyStaffNiagaraSystem FSkinNiagaraSystem
---@field mWiseHolyStaffSwitch EWise_WEP_HolyStaff
---@field mIndicatorSystem FSkinParticleSystem
UHolyStaffSkinDataAsset = {}



---@class UHoverBorder : UBorder
---@field OnMouseEnterEvent FHoverBorderOnMouseEnterEvent
---@field OnMouseLeaveEvent FHoverBorderOnMouseLeaveEvent
UHoverBorder = {}



---@class UHttpRequestInfo : UObject
---@field mEndPoint FString
---@field mRequestContent FString
UHttpRequestInfo = {}



---@class UHttpService : UObject
---@field mOnHttpResponseDelegate TArray<UDelegateInfo>
---@field mRequestInfoArray TArray<UHttpRequestInfo>
UHttpService = {}



---@class UImageNavButton : UNavButton
UImageNavButton = {}


---@class UImageTextUserButton : UImageUserButton
---@field Text FText
---@field mpTextBlock UTextBlock
UImageTextUserButton = {}



---@class UImageUserButton : UBaseUserButton
---@field NormalImageTexture UTexture2D
---@field HighlightImageTexture UTexture2D
---@field mpNormalImage UImage
UImageUserButton = {}



---@class UInGameTipWidget : UUserWidget
---@field mpFadeToggle UWidgetAnimation
---@field mpDelay UWidgetAnimation
---@field mpTipText UTextBlock
---@field mpTipIcon UImage
---@field mAnimPlayRate float
---@field mpStateSwitcher UTextStateSwitch
---@field mTipToShow FTip
---@field mTipTimer float
---@field mTimeToShow float
---@field mbShowingTip boolean
UInGameTipWidget = {}

---@param Tip FTip
function UInGameTipWidget:ShowInGameTip(Tip) end
function UInGameTipWidget:OnDelayFinished() end
---@return boolean
function UInGameTipWidget:IsShowingInGameTip() end
function UInGameTipWidget:HideTip() end


---@class UIndexIndicatorBoxTileWidget : UUserWidget
---@field mpSelectedCanvas UCanvasPanel
---@field mpUnSelectedCanvas UCanvasPanel
UIndexIndicatorBoxTileWidget = {}

---@param bNewValue boolean
function UIndexIndicatorBoxTileWidget:SetIsSelected(bNewValue) end


---@class UIndexIndicatorBoxWidget : UUserWidget
---@field mpTileContainer UHorizontalBox
---@field mTileClass TSubclassOf<UIndexIndicatorBoxTileWidget>
---@field mGeneratedTiles TArray<UIndexIndicatorBoxTileWidget>
UIndexIndicatorBoxWidget = {}

---@param NewValue int32
function UIndexIndicatorBoxWidget:SetTotalIndexCount(NewValue) end
---@param NewValue int32
function UIndexIndicatorBoxWidget:SetSelectedIndex(NewValue) end


---@class UInputManager : UObject
---@field mKeyToGameActions TMap<FKey, FGameActionsArray>
---@field mActionTypeToKeysMap TMap<EGameActionType, FKeysArray>
---@field mXbInputAxisLook FVector2D
---@field mXbInputAxisMovement FVector2D
---@field mKbInputAxisLook FVector2D
---@field mKbInputAxisMovement FVector2D
---@field mMenuInputAxis FVector2D
---@field mMenuRotateAxis FVector2D
---@field mXbTriggerLeft float
---@field mXbTriggerRight float
---@field mLastRecordedMousePos FVector2D
---@field mbKbForwardPressed boolean
---@field mbKbRightPressed boolean
---@field mbKbBackwardPressed boolean
---@field mbKbLeftpressed boolean
---@field mbXbDPadUpPressed boolean
---@field mbXbDPadDownPressed boolean
---@field mbXbDPadLeftPressed boolean
---@field mbXbDPadRightPressed boolean
---@field mpGamepadRSVerticalAimingCurve UCurveFloat
---@field mpGamepadRSHorizontalAimingCurve UCurveFloat
---@field mpGamepadLSVerticalAimingCurve UCurveFloat
---@field mpGamepadLSHorizontalAimingCurve UCurveFloat
---@field mpBasePC ABasePC
---@field mbMonkeyActive boolean
---@field mMonkeyKeyPressedArray TArray<boolean>
---@field mbIsInInputRebindMode boolean
---@field mCurrentlyBufferedActions TArray<EGameActionType>
---@field mTimeSinceLastActionBuffered float
---@field mEligibleBufferActions TArray<EGameActionType>
---@field mSecretCodeKeyBuffer TArray<FKey>
---@field mTimeSinceSecretCodeKeyBuffered float
---@field mbSecretCodeEntered boolean
UInputManager = {}

---@param DeltaTime float
function UInputManager:UpdateInputBuffers(DeltaTime) end
---@param Action EGameActionType
function UInputManager:UnbindAction(Action) end
---@param inputConfig TMap<FKey, FGameActionsArray>
---@return TMap<FKey, FGameActionsArray>
function UInputManager:StripInvalidActionKeys(inputConfig) end
---@param pInputComponent UInputComponent
---@param pGamepadRSVerticalAimingCurve UCurveFloat
---@param pGamepadRSHorizontalAimingCurve UCurveFloat
---@param pGamepadLSVerticalAimingCurve UCurveFloat
---@param pGamepadLSHorizontalAimingCurve UCurveFloat
---@param pBasePC ABasePC
function UInputManager:SetupAxisBinds(pInputComponent, pGamepadRSVerticalAimingCurve, pGamepadRSHorizontalAimingCurve, pGamepadLSVerticalAimingCurve, pGamepadLSHorizontalAimingCurve, pBasePC) end
---@param bShow boolean
function UInputManager:SetShowMouseCursor(bShow) end
---@param bVal boolean
function UInputManager:SetInInputRebindMode(bVal) end
function UInputManager:RestoreDefaultConfiguration() end
---@param aGameAction EGameActionType
---@param listener FGameActionEventHandle
function UInputManager:RemoveGameActionEventListener(aGameAction, listener) end
---@param aKey FKey
---@param Action EGameActionType
function UInputManager:RemapKeyToAction(aKey, Action) end
function UInputManager:RefreshMovementAxis() end
function UInputManager:MonkeyToggleRandomButton() end
---@param aKey FKey
---@param Action EGameActionType
function UInputManager:MapKeyToAction(aKey, Action) end
---@param Key FKey
---@return boolean
function UInputManager:IsKeyLegalToRemap(Key) end
---@return boolean
function UInputManager:IsHoldingAnyModifierKeys() end
---@param GameActionType EGameActionType
---@return boolean
function UInputManager:IsActionLegalToRemap(GameActionType) end
---@param givenGameAction EGameActionType
---@param gameActionToRemap EGameActionType
---@return boolean
function UInputManager:IsActionGroupPairCompatible(givenGameAction, gameActionToRemap) end
---@param givenKey FKey
---@return int32
function UInputManager:GetThumbMouseButtonIndex(givenKey) end
---@return float
function UInputManager:GetRightTriggerAxis() end
---@return FVector2D
function UInputManager:GetMoveAxis() end
---@return FVector2D
function UInputManager:GetMenuRotateAxis() end
---@return FVector2D
function UInputManager:GetMenuMoveAxis() end
---@return FVector2D
function UInputManager:GetLookAxis() end
---@return float
function UInputManager:GetLeftTriggerAxis() end
---@return TArray<EGameActionType>
function UInputManager:GetInputBufferedCommands() end
---@param GameActionType EGameActionType
---@return EInputActionGroup
function UInputManager:GetActionGroup(GameActionType) end
function UInputManager:ForceKeyboardMouseInput() end
function UInputManager:ForceDeviceTypeChanged() end
---@param DeltaTime float
function UInputManager:DoTick(DeltaTime) end
---@param ActionType EGameActionType
function UInputManager:ConsumeBufferedInput(ActionType) end
function UInputManager:ClearInputs() end
function UInputManager:ClearAllEventListeners() end
function UInputManager:ClearAllDeviceTypeChangedEvents() end


---@class UInputRebindModal : UBaseModal
---@field mpMessageText UTextBlock
---@field mpGameActionText UTextBlock
---@field mpCancelText UTextBlock
UInputRebindModal = {}

---@param ActionType EGameActionType
---@param cat EInputBindingCategory
---@param bIsKeyboard boolean
function UInputRebindModal:SetInputData(ActionType, cat, bIsKeyboard) end
---@param Key FKey
---@param bIsPressedDown boolean
function UInputRebindModal:OnKeyPressed(Key, bIsPressedDown) end
function UInputRebindModal:OnDeviceTypeChanged() end


---@class UInteractablePropManager : UWorldSubsystem
---@field mInteractableProps TArray<AInteractablePropBase>
---@field mSpectralProps TArray<AInteractablePropBase>
---@field mSpectralMeshComponentPool TArray<USkeletalMeshComponent>
---@field mpSpectralSphereMesh UStaticMesh
---@field mDynamicFadeMaterialLibrary TMap<FName, UMaterialInstanceDynamic>
---@field mbShouldHideInteractions boolean
---@field mPropSoundsThisTick int32
UInteractablePropManager = {}

---@param pProp AInteractablePropBase
function UInteractablePropManager:RemoveInteractableProp(pProp) end
---@param pProp AInteractablePropBase
function UInteractablePropManager:AddInteractableProp(pProp) end


---@class UInteractableTrainingObjectWidget : UUserWidget
UInteractableTrainingObjectWidget = {}


---@class UInterconnectJourneyMapNode : UBaseJourneyMapNode
UInterconnectJourneyMapNode = {}


---@class UIssue1Widget : UUserWidget
---@field PageDefs TArray<TSubclassOf<UIssuePageWidget>>
---@field mpPageLeftButton UButton
---@field mpPageRightButton UButton
---@field mpLeftPage UCanvasPanel
---@field mpRightPage UCanvasPanel
---@field mpAnimLeftPage UCanvasPanel
---@field mpAnimRightPage UCanvasPanel
---@field IdleAnim UWidgetAnimation
---@field PageLeftAnim UWidgetAnimation
---@field PageRightAnim UWidgetAnimation
UIssue1Widget = {}

function UIssue1Widget:OnPageRightButton() end
function UIssue1Widget:OnPageLeftButton() end
function UIssue1Widget:OnAnimPageAnimComplete() end


---@class UIssueBoxCostUserButton : UBoxUserButton
---@field mpCostBox UHorizontalBox
---@field mpCostIconBox UHorizontalBox
---@field mpCurrencyIcon UImage
---@field mpCostText UTextBlock
---@field mbForceHideCostBox boolean
UIssueBoxCostUserButton = {}



---@class UIssueFeaturePageWidget : UIssuePageWidget
---@field ButtonData FString
---@field CostType EPointType
---@field Cost int32
---@field mpUserButton UIssueBoxCostUserButton
UIssueFeaturePageWidget = {}

function UIssueFeaturePageWidget:OnButtonPressed() end


---@class UIssueFluffWidget : UBaseIssueWidget
---@field mpItemIcon UImage
---@field mpItemText UTextBlock
UIssueFluffWidget = {}

---@param pTex UTexture2D
function UIssueFluffWidget:OnTextureLoaded(pTex) end
function UIssueFluffWidget:OnItemClicked() end


---@class UIssueItemWidget : UBaseIssueWidget
---@field mpItemIcon UImage
---@field mpStateSwitcher UStateSwitcher
---@field mpRarityBackground UImage
---@field mpRarityBorder UBorder
---@field mpRarityText UTextBlock
---@field mpTierText UTextBlock
---@field mpFreePanel UCanvasPanel
---@field mpFreeImage UImage
---@field mpCompletedPanel UCanvasPanel
---@field mpItemNameText UTextBlock
---@field mpItemTypeText UTextBlock
UIssueItemWidget = {}

---@param pTex UTexture2D
function UIssueItemWidget:OnTextureLoaded(pTex) end
function UIssueItemWidget:OnItemClicked() end


---@class UIssueMoviePageWidget : UIssuePageWidget
---@field MovieID FString
---@field mpAvailabilityText UTextBlock
---@field mpTitleText UTextBlock
---@field mpUserButton UBaseUserButton
UIssueMoviePageWidget = {}

function UIssueMoviePageWidget:OnScenesPressed() end


---@class UIssuePageFooterWidget : UMetaWidget
---@field mpPageNumberText UTextBlock
UIssuePageFooterWidget = {}



---@class UIssuePageHeaderWidget : UMetaWidget
---@field mpTierText UTextBlock
---@field mpDaysText UTextBlock
---@field mpRemainingText UTextBlock
---@field mpPurchasePassButton UIssueBoxCostUserButton
---@field mpStarsWidget USeasonPassTierStarsWidget
UIssuePageHeaderWidget = {}

function UIssuePageHeaderWidget:OnPurchasePassPressed() end
function UIssuePageHeaderWidget:OnPurchasePassConfirmed() end


---@class UIssuePageWidget : UMetaWidget
---@field mpGrid UGridPanel
---@field mpPageHeader UIssuePageHeaderWidget
---@field mpPageFooter UIssuePageFooterWidget
UIssuePageWidget = {}

---@param dir ESelectionNavigation
function UIssuePageWidget:OnNavDirection(dir) end


---@class UIssueRewardWidget : UBaseRewardWidget
---@field mpBackground UImage
---@field Intro UWidgetAnimation
---@field Claim UWidgetAnimation
---@field Outro UWidgetAnimation
UIssueRewardWidget = {}



---@class UIssueSummaryMovieUserButton : UImageUserButton
---@field MovieSetID FString
---@field TargetPage int32
UIssueSummaryMovieUserButton = {}

---@param pTex UTexture2D
function UIssueSummaryMovieUserButton:OnTextureLoaded(pTex) end
function UIssueSummaryMovieUserButton:OnButtonPressed() end


---@class UIssueSummaryPageWidget : UIssuePageWidget
---@field mpTierText UTextBlock
---@field mpStarsWidget USeasonPassTierStarsWidget
UIssueSummaryPageWidget = {}



---@class UIssueToCPageWidget : UIssuePageWidget
UIssueToCPageWidget = {}


---@class UIssueToCWidget : UBaseIssueWidget
---@field PageNumber int32
---@field TitleText FText
---@field OptionalTexture UTexture2D
---@field mpItemIcon UImage
---@field mpPageNumText UTextBlock
---@field mpItemText UTextBlock
UIssueToCWidget = {}

function UIssueToCWidget:OnItemClicked() end


---@class UIssueTrackerPageButton : UUserWidget
---@field mpButton UButton
---@field mpSizeBox USizeBox
---@field mpCompletedPageBackground UImage
---@field mpFeaturePageBackground UImage
---@field mpRewardPageBackground UImage
---@field mpHighlightItemBorder UImage
---@field mpSelectedItemBackground UImage
---@field mpTrackerPageText UTextBlock
UIssueTrackerPageButton = {}

function UIssueTrackerPageButton:OnButtonPressed() end


---@class UIssueTrackerWidget : UUserWidget
---@field mpTrackerBox UHorizontalBox
UIssueTrackerWidget = {}



---@class UItemDataAsset : UPrimaryDataAsset
---@field mDisplayName FText
---@field mAssetData TArray<UCustomizationConfigBase>
UItemDataAsset = {}

---@return FText
function UItemDataAsset:GetSkinDisplayName() end


---@class UItemDataAssetBlueprintFunctionLibrary : UBlueprintFunctionLibrary
UItemDataAssetBlueprintFunctionLibrary = {}

---@param pItemDataAsset UItemDataAsset
---@return AActor
function UItemDataAssetBlueprintFunctionLibrary:SpawnActorFromItemDataAsset(pItemDataAsset) end
---@param assetFilterTags TMap<FName, FString>
---@param nameFilters TArray<FString>
---@param categoryTag FName
---@param outCollections TArray<FItemDataAssetCollection>
function UItemDataAssetBlueprintFunctionLibrary:CreateItemDataAssetCollection(assetFilterTags, nameFilters, categoryTag, outCollections) end
---@param staticMeshSkin FSkinStaticMesh
---@param pMeshComponent UStaticMeshComponent
function UItemDataAssetBlueprintFunctionLibrary:ApplyStaticMeshSkin(staticMeshSkin, pMeshComponent) end
---@param skeletalMeshSkin FSkinSkeletalMesh
---@param pSkinnedMeshComponent USkinnedMeshComponent
---@param bUseAnimInstance boolean
function UItemDataAssetBlueprintFunctionLibrary:ApplySkeletalMeshSkin(skeletalMeshSkin, pSkinnedMeshComponent, bUseAnimInstance) end
---@param particleSystemSkin FSkinParticleSystem
---@param pParticleSystemComponent UParticleSystemComponent
function UItemDataAssetBlueprintFunctionLibrary:ApplyParticleSystemSkin(particleSystemSkin, pParticleSystemComponent) end
---@param particleSystemSkin FSkinNiagaraSystem
---@param pParticleSystemComponent UNiagaraComponent
function UItemDataAssetBlueprintFunctionLibrary:ApplyNiagaraSystemSkin(particleSystemSkin, pParticleSystemComponent) end
---@param lightSkin FSkinLight
---@param pLightComponent ULightComponent
function UItemDataAssetBlueprintFunctionLibrary:ApplyLightSkin(lightSkin, pLightComponent) end
---@param decalSkin FSkinDecal
---@param pDecalComponent UDecalComponent
function UItemDataAssetBlueprintFunctionLibrary:ApplyDecalSkin(decalSkin, pDecalComponent) end


---@class UItemListHeaderWidget : UUserWidget
---@field mpItemListHeaderText UTextBlock
UItemListHeaderWidget = {}



---@class UItemTileNavButton : UNavButton
UItemTileNavButton = {}


---@class UItemTileUserButton : UBaseUserButton
---@field mpItemIcon UImage
UItemTileUserButton = {}



---@class UItemTileWidget : UMetaWidget
---@field mpListItemNavButton UItemTileNavButton
---@field mpImageIcon UImage
---@field mpTitleText UTextBlock
---@field mpRankIcon UImage
---@field mpNewIcon UImage
---@field mpCostPanel UCanvasPanel
---@field mpCostText UTextBlock
---@field mpQuantityPanel UCanvasPanel
---@field mpQuantityText UTextBlock
---@field mpEquippedIcon UImage
---@field mpRimBackgroundColor UBorder
UItemTileWidget = {}

---@param pTex UTexture2D
function UItemTileWidget:OnTextureLoaded(pTex) end


---@class UJourneyActButtonWidget : UCategoryButtonWidget
UJourneyActButtonWidget = {}


---@class UJourneyActSelectorWidget : UCategorySwitcher
UJourneyActSelectorWidget = {}

---@param highestAct int32
function UJourneyActSelectorWidget:SetHighestVisibleAct(highestAct) end
---@param highestAct int32
function UJourneyActSelectorWidget:SetFirstLockedAct(highestAct) end
---@param Act int32
---@param Completed int32
---@param Total int32
function UJourneyActSelectorWidget:SetActProgression(Act, Completed, Total) end


---@class UJourneyAuraWidget : UUserWidget
---@field ProgressBarTexture UTexture2D
---@field mpAuraAmountText UTextBlock
---@field mpAuraProgressText UTextBlock
---@field mpProgressImage UImage
---@field mpProgressMaterialInstance UMaterialInstance
---@field mpDynProgressMaterialInstance UMaterialInstanceDynamic
UJourneyAuraWidget = {}



---@class UJourneyInformationPanelWidget : UUserWidget
---@field LockedColor FLinearColor
---@field PurchaseColor FLinearColor
---@field InsufficientAuraColor FLinearColor
---@field IdleAnim UWidgetAnimation
---@field CelebrateAnim UWidgetAnimation
---@field mpWidgetSwitcher UWidgetSwitcher
---@field mpInfoPanel UCanvasPanel
---@field mpBusyPanel UCanvasPanel
---@field mpInfoBorder UBorder
---@field mpButtonPromptWidget UButtonPromptWidget
---@field mpInfoText UTextBlock
UJourneyInformationPanelWidget = {}

function UJourneyInformationPanelWidget:ShowPurchase() end
function UJourneyInformationPanelWidget:ShowLocked() end
function UJourneyInformationPanelWidget:ShowInsufficientAura() end
---@param journeyNum int32
---@param actNum int32
function UJourneyInformationPanelWidget:ShowFinalLocked(journeyNum, actNum) end
---@param bShow boolean
function UJourneyInformationPanelWidget:ShowBusy(bShow) end
function UJourneyInformationPanelWidget:PlayCelebrateAnim() end
function UJourneyInformationPanelWidget:Hide() end


---@class UJourneyLineCanvasWidget : UUserWidget
---@field LineLayer int32
---@field LineThickness int32
---@field mpBrushActive USlateBrushAsset
---@field mpBrushInactive USlateBrushAsset
---@field mpBrushFadeUp USlateBrushAsset
---@field mpBrushFadeRight USlateBrushAsset
---@field mpBrushFadeDown USlateBrushAsset
---@field mpBrushFadeLeft USlateBrushAsset
---@field mpReferencePanel UGridPanel
UJourneyLineCanvasWidget = {}



---@class UJourneyManager : UObject
---@field mJourneyDataGuid FString
UJourneyManager = {}



---@class UJourneyMapWidget : UMetaWidget
---@field BackgroundColor FLinearColor
---@field BorderMargin FMargin
---@field CellPadding FMargin
---@field ActSize FVector2D
---@field mpJourneyMapGridPanel UGridPanel
---@field mpJourneyMapGridBackgroundPanel UGridPanel
---@field mpJourneyLineCanvasWidget UJourneyLineCanvasWidget
UJourneyMapWidget = {}

---@param pButton UNavButton
function UJourneyMapWidget:OnNodeSelected(pButton) end
---@param pButton UNavButton
function UJourneyMapWidget:OnNodeLongPress(pButton) end


---@class UJourneyNodePreviewWidget : UMetaWidget
---@field mpWidgetSwitcher UWidgetSwitcher
---@field mpRewardPanel UGridPanel
---@field mpCharacterPanel UCanvasPanel
---@field mpNodeTypeIcon UImage
---@field mpNodeTypeText UTextBlock
---@field mpNodeTypeBox UHorizontalBox
---@field mpCostBox UHorizontalBox
---@field mpCostText UTextBlock
---@field mpRewardTypeSwitcher UWidgetSwitcher
---@field mpNodeRewardPanel UCanvasPanel
---@field mpFinalRewardPanel UCanvasPanel
---@field mpItemIcon UImage
---@field mpItemNameText UTextBlock
---@field mpItemDescriptionText URichTextBlock
---@field mpCharacterTitleText UTextBlock
---@field mpCharacterDescText UTextBlock
---@field mpCharacterPortraitIcon UImage
---@field mpNonSelectableScrollBox UNonSelectableScrollBox
UJourneyNodePreviewWidget = {}

---@param pTex UTexture2D
function UJourneyNodePreviewWidget:OnTextureLoaded(pTex) end


---@class UJourneyScreen : UBaseScreen
---@field AuraAvailableColor FLinearColor
---@field AuraUnavailableColor FLinearColor
---@field mpCategorySwitcher UJourneyActSelectorWidget
---@field mpJourneyMapWidget UJourneyMapWidget
---@field mpJourneyNodePreviewWidget UJourneyNodePreviewWidget
---@field mpScrollBox UScrollBox
---@field mpJourneyInfoPanelWidget UJourneyInformationPanelWidget
---@field mpAuraImage UImage
---@field mpAuraCountText UTextBlock
---@field mpLeftActButton UButton
---@field mpRightActButton UButton
UJourneyScreen = {}

function UJourneyScreen:OnRightActPressed() end
function UJourneyScreen:OnLeftActPressed() end
function UJourneyScreen:OnCharacterSelected() end
---@param Index int32
function UJourneyScreen:OnCategoryChanged(Index) end


---@class UJourneyUserButton : UBaseUserButton
---@field DisableLongPress boolean
---@field mpProgressImage UImage
---@field mpProgressMaterialInstance UMaterialInstance
---@field mpDynProgressMaterialInstance UMaterialInstanceDynamic
UJourneyUserButton = {}



---@class ULetterboxBordersWidget : UUserWidget
---@field mpTopBorderPanel UCanvasPanel
---@field mpBottomBorderPanel UCanvasPanel
---@field mpBottomBorder UBorder
---@field mpTopBorder UBorder
---@field mpMovieReminderBorder UBorder
---@field mpMovieReminderText URichTextBlock
ULetterboxBordersWidget = {}

function ULetterboxBordersWidget:UpdateColorTheme() end


---@class ULicenseModalWidget : UBaseModal
---@field mpAcceptButton UBoxUserButton
---@field mpDeclineButton UBoxUserButton
---@field mpBodyText UTextBlock
---@field mpScrollBox UNonSelectableScrollBox
ULicenseModalWidget = {}

---@param Path FString
function ULicenseModalWidget:SetLicenseText(Path) end
---@param MyGeometry FGeometry
---@param InDeltaTime float
function ULicenseModalWidget:NativeTick(MyGeometry, InDeltaTime) end
function ULicenseModalWidget:NativeConstruct() end
function ULicenseModalWidget:Decline() end
function ULicenseModalWidget:Accept() end


---@class ULiquidEffectComponent : UActorComponent
---@field mMaterialSlot FName
---@field mLiquidVolumeSocket FName
---@field mLiquidVolumeExtent FVector
---@field mStrengthScale FVector
---@field mDefaultLiquidHeight float
---@field mpUpdatedComponent UMeshComponent
ULiquidEffectComponent = {}



---@class ULoadingScreenVoiceGroupWidget : UUserWidget
---@field mpVerticalBox UVerticalBox
---@field mLoadingScreeMemberWidgetClass TSubclassOf<ULoadingScreenVoiceMemberWidget>
ULoadingScreenVoiceGroupWidget = {}



---@class ULoadingScreenVoiceMemberWidget : UMetaWidget
---@field mpPlayerMuteToggleImage UButtonPromptWidget
---@field mpDisplayName UTextBlock
---@field mpSocialVoiceIndicatorWidget USocialVoiceIndicatorWidget
ULoadingScreenVoiceMemberWidget = {}

---@param bVal boolean
function ULoadingScreenVoiceMemberWidget:OnInputAction_ToggleMute(bVal) end


---@class ULoadoutBase : UDataAsset
---@field mPointsByPointType TMap<EPointType, FLoadoutValuePoint>
---@field mGrantablesBySlot TMap<uint32, FLoadoutValueGrantable>
---@field mDiscountsByAffinityType TMap<EPerkAffinityType, FLoadoutValuePoint>
ULoadoutBase = {}



---@class ULoadoutClothingMenuButtonWidget : UMetaWidget
---@field SlotType EUISlot
---@field TitleText FText
---@field Icon UTexture2D
---@field NewFlagType ENewFlagType
---@field mpNavButton UNavButton
---@field mpTitleText UTextBlock
---@field mpIcon UImage
---@field mpNewFlag UNewFlagWidget
ULoadoutClothingMenuButtonWidget = {}



---@class ULoadoutClothingMenuScreen : UBaseLoadoutScreen
---@field CameraTransitionTime float
---@field mpWidgetSwitcher UWidgetSwitcher
---@field mpClothingMenuWidget ULoadoutClothingMenuWidget
---@field mpClothingLoadoutWidget UClothingLoadoutWidget
---@field mpCostumeConflictPanel UCanvasPanel
---@field mpCostumeConflictText UTextBlock
ULoadoutClothingMenuScreen = {}

function ULoadoutClothingMenuScreen:OnPreSelectedCharacter() end
function ULoadoutClothingMenuScreen:OnPostSelectedCharacter() end


---@class ULoadoutClothingMenuWidget : UUserWidget
---@field TeenCostumesIcon UTexture2D
---@field EvilSkinsIcon UTexture2D
---@field TeenEmotesIcon UTexture2D
---@field EvilTauntsIcon UTexture2D
---@field TeenStickersIcon UTexture2D
---@field EvilScratchesIcon UTexture2D
---@field TeenSpectralsIcon UTexture2D
---@field EvilOmensIcon UTexture2D
---@field mpOwningScreen ULoadoutClothingMenuScreen
---@field mpFactionSwitcher UWidgetSwitcher
---@field mpTeenBox UVerticalBox
---@field mpEvilBox UVerticalBox
---@field mpTeenCostumesButton ULoadoutClothingSlotUserButton
---@field mpTeenSkinsButton ULoadoutClothingSlotUserButton
---@field mpTeenHairButton ULoadoutClothingSlotUserButton
---@field mpTeenHeadButton ULoadoutClothingSlotUserButton
---@field mpTeenFaceButton ULoadoutClothingSlotUserButton
---@field mpTeenEyesButton ULoadoutClothingSlotUserButton
---@field mpTeenOuterButton ULoadoutClothingSlotUserButton
---@field mpTeenTopButton ULoadoutClothingSlotUserButton
---@field mpTeenHandsButton ULoadoutClothingSlotUserButton
---@field mpTeenBottomButton ULoadoutClothingSlotUserButton
---@field mpTeenSocksButton ULoadoutClothingSlotUserButton
---@field mpTeenShoesButton ULoadoutClothingSlotUserButton
---@field mpTeenEmotesButton ULoadoutClothingSlotUserButton
---@field mpTeenStickersButton ULoadoutClothingSlotUserButton
---@field mpTeenSpectralsButton ULoadoutClothingSlotUserButton
---@field mpEvilSkinsButton ULoadoutClothingSlotUserButton
---@field mpEvilTraitsButton ULoadoutClothingSlotUserButton
---@field mpEvilUpperButton ULoadoutClothingSlotUserButton
---@field mpEvilMidButton ULoadoutClothingSlotUserButton
---@field mpEvilLowerButton ULoadoutClothingSlotUserButton
---@field mpEvilTauntsButton ULoadoutClothingSlotUserButton
---@field mpEvilScratchesButton ULoadoutClothingSlotUserButton
---@field mpEvilOmensButton ULoadoutClothingSlotUserButton
---@field mpEvilScreamButton ULoadoutClothingSlotUserButton
---@field mpEvilRageButton ULoadoutClothingSlotUserButton
---@field mpEvilFeastButton ULoadoutClothingSlotUserButton
---@field mpLastButton UNavButton
ULoadoutClothingMenuWidget = {}

---@param Data FString
function ULoadoutClothingMenuWidget:OnButtonPressed(Data) end


---@class ULoadoutClothingSlotUserButton : UBaseUserButton
---@field SlotType EUISlot
---@field TitleText FText
---@field Icon UTexture2D
---@field NewFlagType ENewFlagType
---@field mpTextBlock UTextBlock
---@field mpIcon UImage
---@field mpNewFlag UNewFlagWidget
ULoadoutClothingSlotUserButton = {}



---@class ULoadoutColorSwatchWidget : UMetaWidget
---@field mpButton UButton
---@field mpIcon UImage
---@field mpHighlight UImage
---@field mpMaterialInstance UMaterialInstance
---@field mpDynMaterialInstance UMaterialInstanceDynamic
ULoadoutColorSwatchWidget = {}

function ULoadoutColorSwatchWidget:OnButtonPressed() end


---@class ULoadoutEquipSlotWidget : UMetaWidget
---@field mpNavButton UNavButton
---@field mpImageIcon UImage
---@field mpLockIcon UImage
---@field mpTitleText UTextBlock
ULoadoutEquipSlotWidget = {}

---@param pTex UTexture2D
function ULoadoutEquipSlotWidget:OnTextureLoaded(pTex) end


---@class ULoadoutLoadStep : UPlayerLoadStep
---@field mpLoadoutManager ULoadoutManager
ULoadoutLoadStep = {}



---@class ULoadoutManager : UDataAsset
---@field mpPlayerLoadoutsByLobbyIndex TMap<int32, UPlayerLoadout>
---@field mSavedPlayerLoadouts TMap<int32, UPlayerLoadout>
---@field mPendingPlayerLoadoutsAsyncLoads int32
ULoadoutManager = {}

function ULoadoutManager:OnPlayerLoadoutFullyLoaded() end


---@class ULoadoutPerksMenuScreen : UBaseLoadoutScreen
---@field mpPerkLoadoutWidget UPerkLoadoutWidget
ULoadoutPerksMenuScreen = {}

function ULoadoutPerksMenuScreen:OnPreSelectedCharacter() end
function ULoadoutPerksMenuScreen:OnPostSelectedCharacter() end


---@class ULoadoutRadialMenuWidget : UUserWidget
---@field IsPreview boolean
---@field mpBlockerCanvas UCanvasPanel
ULoadoutRadialMenuWidget = {}

function ULoadoutRadialMenuWidget:SetupNavOverrides() end


---@class ULoadoutRadialOverlayWidget : UBaseOverlay
---@field mpRadialMenuWidget ULoadoutRadialMenuWidget
ULoadoutRadialOverlayWidget = {}



---@class ULoadoutRadialUserButton : UBaseUserButton
---@field mpItemIcon UImage
ULoadoutRadialUserButton = {}



---@class ULoadoutRadialWedgeWidget : UUserWidget
---@field mpUserButton ULoadoutRadialUserButton
ULoadoutRadialWedgeWidget = {}

---@param Angle float
function ULoadoutRadialWedgeWidget:SetIconAngle(Angle) end
---@param pTex UTexture2D
function ULoadoutRadialWedgeWidget:OnTextureLoaded(pTex) end
function ULoadoutRadialWedgeWidget:OnButtonPressed() end


---@class ULoadoutScreen : UBaseScreen
---@field ClothingTeenImage UTexture2D
---@field ClothingEvilImage UTexture2D
---@field WeaponsImage UTexture2D
---@field MutationsImage UTexture2D
---@field PerksTeenImage UTexture2D
---@field PerksEvilImage UTexture2D
---@field mpClothingButton ULoadoutUserButton
---@field mpWeaponsMutationsButton ULoadoutUserButton
---@field mpPerksButton ULoadoutUserButton
ULoadoutScreen = {}

function ULoadoutScreen:OnWeaponsMutationsPressed() end
function ULoadoutScreen:OnPerksPressed() end
function ULoadoutScreen:OnClothingPressed() end


---@class ULoadoutUserButton : UBaseUserButton
---@field TeenImage UTexture2D
---@field EvilImage UTexture2D
---@field TeenTextMaterial UMaterialInstance
---@field EvilTextMaterial UMaterialInstance
---@field EventMaterials TMap<ESeasonalEventType, UMaterialInstance>
---@field TeenText FText
---@field EvilText FText
---@field TeenNewFlagType ENewFlagType
---@field EvilNewFlagType ENewFlagType
---@field TeenNewFlagSlot EUISlot
---@field EvilNewFlagSlot EUISlot
---@field mpTextBlock UTextBlock
---@field mpNormalImage UImage
---@field mpNewFlag UNewFlagWidget
ULoadoutUserButton = {}



---@class ULobbyChallengeWidget : UUserWidget
ULobbyChallengeWidget = {}


---@class ULobbyChatTextWidget : UUserWidget
---@field mpText URichTextBlock
ULobbyChatTextWidget = {}

---@param Text FText
function ULobbyChatTextWidget:SetText(Text) end


---@class ULobbyChatWidget : UUserWidget
---@field mpChatLogScroll UScrollBox
---@field mpChatLogBox UVerticalBox
---@field mpEntryBox UEditableTextBox
---@field mChatTextClass TSubclassOf<ULobbyChatTextWidget>
ULobbyChatWidget = {}

---@param Text FText
---@param CommitType ETextCommit::Type
function ULobbyChatWidget:OnTextCommit(Text, CommitType) end
function ULobbyChatWidget:ClearChat() end
---@param Text FText
function ULobbyChatWidget:AddTextLine(Text) end


---@class ULobbyLoadoutController : UObject
---@field mOwningClientStateManager TWeakObjectPtr<UClientStateManager>
---@field mLoadoutChangeQueue TArray<FLoadoutChange>
ULobbyLoadoutController = {}



---@class ULobbyManager : UObject
---@field mLobbyIndexCount int32
---@field mClientLobbyState ELobbyClientState
---@field mConnectionTimeoutTimer float
---@field mpLeaveLobbyBusyModal UBusyModalWidget
---@field mpLobbyBeaconHost ALobbyBeaconHost
---@field mpServerBeaconHost AServerBeaconHost
---@field mpServerBeaconClient AServerBeaconClient
---@field mConnectingPlayers TMap<uint32, FConnectingPlayer>
---@field mBotPlayers TArray<FNetPlayerInfoStruct>
---@field mAllClientStatesByLobbyIndex TMap<int32, UClientStateManager>
---@field mSavedClientsStates TArray<UClientStateManager>
---@field mHostMatchSettings FMatchSettings
---@field mHostLobbyDetails FLobbyDetails
---@field mbMatchSettingsDirty boolean
---@field mMatchId FString
---@field mLobbyConnectionUID int32
---@field mbCameFromVotedOnMapSelection boolean
---@field mServerConnectionType EServerConnectionType
---@field mGameModeDataAssets TArray<UGameModeDataAsset>
---@field mpJoiningLobbyBusyModal UBusyModalWidget
---@field mClientMatchmakingType EClientMatchmakingType
ULobbyManager = {}

---@param MatchSettings FMatchSettings
function ULobbyManager:SetMatchSettings(MatchSettings) end
function ULobbyManager:QueueAddBotPlayer() end
---@return UGameModeDataAsset
function ULobbyManager:GetGameModeDataAsset() end
---@return int32
function ULobbyManager:DoServerIncrementLobbyIndex() end
---@param reason ELobbyDisconnectReason
---@param bWasInLobby boolean
---@param bLeaveParty boolean
function ULobbyManager:DisconnectLobby(reason, bWasInLobby, bLeaveParty) end
---@param Add int32
function ULobbyManager:AddToGameModeIndex(Add) end


---@class ULobbyMatchSettingsOverlayWidget : UBaseOverlay
---@field mpPerksSelectorUserButton UOptionSelectorUserButton
---@field mpWeaponPowersSelectorUserButton UOptionSelectorUserButton
---@field mpMutationsSelectorUserButton UOptionSelectorUserButton
---@field mpWinConditionSelectorUserButton UOptionSelectorUserButton
---@field mpVoiceChatModeUserButton UOptionSelectorUserButton
---@field mpSurvivalEvilAIDifficultyUserButton UOptionSelectorUserButton
---@field mpGeneratedSettingButtonClass TSubclassOf<UOptionSelectorUserButton>
---@field mpGeneratedSliderButtonClass TSubclassOf<UOptionSliderUserButton>
---@field mpCustomMatchSettingsTitleBackground UImage
---@field mpSettingsBox UPanelWidget
---@field mpGameModeSettingsPanel UPanelWidget
---@field mpCustomMatchSettingsMap UWidget
---@field mpCustomMatchModeName UTextBlock
---@field mpGameModeThumbnail UImage
---@field mpGameModeDescription UTextBlock
---@field mpMapNameText UTextBlock
---@field mpMapThumbnail UImage
---@field mpMapLeftButton UButton
---@field mpMapRightButton UButton
---@field mpGameModeRightButton UButton
---@field mpGameModeLeftButton UButton
---@field mGeneratedSettingsWidgets TMap<FName, UOptionUserButton>
ULobbyMatchSettingsOverlayWidget = {}

---@param Value float
function ULobbyMatchSettingsOverlayWidget:OnMatchSettingsSliderChanged(Value) end
function ULobbyMatchSettingsOverlayWidget:OnMatchSettingsChanged() end
function ULobbyMatchSettingsOverlayWidget:OnMapRight() end
function ULobbyMatchSettingsOverlayWidget:OnMapLeft() end
function ULobbyMatchSettingsOverlayWidget:OnGameModeRight() end
function ULobbyMatchSettingsOverlayWidget:OnGameModeLeft() end


---@class ULobbyPlayerWidget : UUserWidget
---@field mpPlayerNameText UTextBlock
---@field mpPortraitBox UWidget
---@field mpPortraitIcon UImage
---@field mpReadyIcon UImage
---@field mpReadyButton UButton
---@field mpRemoveBotButton UButton
---@field mpConfigureBotButton UButton
---@field mpSlotMenuButton UNavButton
---@field mpSlotButtons UWidget
---@field mpHighlightImage UImage
---@field mpCRText UTextBlock
---@field mpPlayerCardPanel UWidget
---@field mpOpenSlotButtonContainer UWidget
---@field mpAddBotButton UButton
---@field mpInviteFriendButton UButton
---@field mpJoinAsPlayerButton UButton
---@field mpSlotMenuHoverAnimation UWidgetAnimation
---@field mpLeftButtonWidgetSwitcher UWidgetSwitcher
---@field mpPlayerStatusBox UWidget
---@field mpAddPlayerIcon UWidget
---@field mMode ELobbyPlayerWidgetMode
ULobbyPlayerWidget = {}

function ULobbyPlayerWidget:OnRemoveBotPressed() end
function ULobbyPlayerWidget:OnReadyPressed() end
---@param pTex UTexture2D
function ULobbyPlayerWidget:OnPortraitLoaded(pTex) end
function ULobbyPlayerWidget:OnMenuButtonUnhover() end
function ULobbyPlayerWidget:OnMenuButtonHover() end
function ULobbyPlayerWidget:OnJoinAsPlayerPressed() end
function ULobbyPlayerWidget:OnInviteFriendPressed() end
function ULobbyPlayerWidget:OnConfigureBotPressed() end
function ULobbyPlayerWidget:OnAddBotPressed() end
function ULobbyPlayerWidget:OnAction() end


---@class ULobbyScreen : UBaseScreen
---@field mpPlayReadyPanel UPlayReadyPanel
---@field mpPrizeBoxUserButton UPrizeBoxUserButton
---@field mpPrizeSelectionWidget UPrizeSelectionWidget
---@field mpClientOpenMatchSettingsButton UButton
---@field mpCustomMatchAlertPanel UWidget
---@field mpSelectedMapName UTextBlock
---@field mpSelectedMapThumbnail UImage
---@field mpSelectedGameModeText UTextBlock
---@field mpSelectedGameModeDescription UTextBlock
---@field mpCustomSettingsPerksName UTextBlock
---@field mpCustomSettingsMutationsName UTextBlock
---@field mpCustomSettingsWeaponsName UTextBlock
---@field mpCustomSettingsWinConditionName UTextBlock
---@field mpCustomSettingsVoiceChatMode UTextBlock
---@field mpHideCustomMatchSettingsButton UHideCustomMatchSettingsUserButton
---@field mpMovieEquipmentWidget UMovieEquipmentWidget
---@field mpCustomMatchCollapsableSettings UWidget
---@field mpCustomMatchOverlay UWidget
---@field mpCustomMatchHost UWidget
---@field mpCustomMatchClient UWidget
---@field mpCustomCodeUserWidget UCustomCodeUserWidget
---@field mpCustomMatchSettingsWidgetSwitcher UWidgetSwitcher
---@field mpCustomMatchSettingsUserButton UBaseUserButton
---@field mpCustomMatchHideSettingsAnimation UWidgetAnimation
---@field mpPlayerWidgets TArray<ULobbyPlayerWidget>
---@field mpMatchIdTextBox UMatchIdTextBox
---@field mpCustomMatchAlertText UTextBlock
---@field mFriendsCount int32
---@field mbGameStarted boolean
ULobbyScreen = {}

function ULobbyScreen:OnToggleShowLobbyCode() end
function ULobbyScreen:OnToggleHideMatchSettings() end
function ULobbyScreen:OnReady() end
function ULobbyScreen:OnOpenMatchSettings() end
function ULobbyScreen:OnCopyLobbyCodeToClipboard() end


---@class ULobbyServerResultWidget : UUserWidget
---@field mpServerNameText UTextBlock
---@field mpMapText UTextBlock
---@field mpPlayersText UTextBlock
---@field mpTeenCountText UTextBlock
---@field mpEvilCountText UTextBlock
---@field mpPingText UTextBlock
---@field mpJoinTeenButton UNavButton
---@field mpJoinEvilButton UNavButton
---@field mpSpectateButton UNavButton
---@field mRefreshTimer float
---@field mPort int32
ULobbyServerResultWidget = {}

function ULobbyServerResultWidget:OnSpectatePressed() end
function ULobbyServerResultWidget:OnJoinPressed() end


---@class ULobbyStatusWidget : UUserWidget
---@field mpCancelButton UButton
---@field mpStatusText UTextBlock
---@field mpStatusPanel UCanvasPanel
---@field mpPartyActionsAvailablePanel UCanvasPanel
---@field mpControllerBox UHorizontalBox
---@field mLobbyState ELobbyClientState
---@field mNumPlayers int32
---@field mMaxPlayers int32
---@field mStateTimer float
---@field mLastCountdownTime int32
---@field PulseAnim UWidgetAnimation
---@field IdleAnim UWidgetAnimation
---@field mpProgressBar UProgressBar
ULobbyStatusWidget = {}

function ULobbyStatusWidget:OnCancelPressed() end


---@class ULocUtilStatics : UObject
ULocUtilStatics = {}

---@param weaponType EWeaponTypeEnum
---@return FText
function ULocUtilStatics:GetWeaponFriendlyName(weaponType) end
---@param str FString
---@return ESeasonalEventType
function ULocUtilStatics:GetSeasonalEventFromString(str) end
---@param tipVisiblityFlag ETipsVisibilityFlags
---@return FText
function ULocUtilStatics:GetLocTextFromTipVisibility(tipVisiblityFlag) end
---@param GameActionType EGameActionType
---@return FText
function ULocUtilStatics:GetLocStringFromGameAction(GameActionType) end
---@param ItemType EDbItemType
---@return FText
function ULocUtilStatics:GetLocFromItemType(ItemType) end
---@param rarityType EItemRarity
---@return FText
function ULocUtilStatics:GetLocFromItemRarity(rarityType) end
---@param weaponType EWeaponTypeEnum
---@return FText
function ULocUtilStatics:GetLocForWeaponDescription(weaponType) end
---@param weaponType EWeaponTypeEnum
---@return FText
function ULocUtilStatics:GetLocForWeaponCraftingTime(weaponType) end
---@param weaponType EWeaponTypeEnum
---@return FText
function ULocUtilStatics:GetLocForWeaponAmmoTitleText(weaponType) end
---@param weaponType EWeaponTypeEnum
---@return FText
function ULocUtilStatics:GetLocForWeaponAmmoAmountText(weaponType) end
---@param uiSlot EUISlot
---@return FText
function ULocUtilStatics:GetLocForUISlot(uiSlot) end
---@param scoringCategoryType EScoringCategory
---@return FText
function ULocUtilStatics:GetLocForScoringCateogry(scoringCategoryType) end
---@param Type EPointType
---@param Val int32
---@param bDescription boolean
---@return FText
function ULocUtilStatics:GetLocForPointType(Type, Val, bDescription) end
---@param playerSlot EPlayerSlot
---@return FText
function ULocUtilStatics:GetLocForPlayerSlot(playerSlot) end
---@param State EPlayerPresenceState
---@return FText
function ULocUtilStatics:GetLocForPlayerPresenceState(State) end
---@param StatType EPlayerAccountStatType
---@return FText
function ULocUtilStatics:GetLocForPlayerAccountStat(StatType) end
---@param perkType EPerkAffinityType
---@return FText
function ULocUtilStatics:GetLocForPerkAffinityType(perkType) end
---@param perkType EPerkAffinityType
---@return FText
function ULocUtilStatics:GetLocForPerkAffinityDescription(perkType) end
---@param menuScreen EMenuScreen
---@return FText
function ULocUtilStatics:GetLocForMenuScreen(menuScreen) end
---@param CharacterType ECharacterType
---@return FText
function ULocUtilStatics:GetLocForCharacterType(CharacterType) end
---@param CharacterType ECharacterType
---@return FText
function ULocUtilStatics:GetLocForCharacterQuoteType(CharacterType) end
---@param difficulty EDifficultyType
---@return FText
function ULocUtilStatics:GetLocForCharacterDifficulty(difficulty) end
---@param CharacterType ECharacterType
---@return FText
function ULocUtilStatics:GetLocForCharacterAboutMeType(CharacterType) end
---@param CurrencyCode FString
---@return FText
function ULocUtilStatics:GetLocCurrencyTextFromCurrencyCode(CurrencyCode) end
---@param PlayerMatchInfoData FPlayerMatchInfoData
---@return FText
function ULocUtilStatics:GetLocCharacterState(PlayerMatchInfoData) end
---@param pWorldContext UObject
---@param GameActionType EGameActionType
---@param outKeyColor FLinearColor
---@return FText
function ULocUtilStatics:GetKeyNameFromGameAction(pWorldContext, GameActionType, outKeyColor) end
---@param str FString
---@return EItemRarity
function ULocUtilStatics:GetItemRarityFromString(str) end
---@param pTemplate UDbItemTemplate
---@return FText
function ULocUtilStatics:GetFormattedStoreItemTitleForItemTemplate(pTemplate) end
---@param abilityType EEvilAbilityType
---@return FText
function ULocUtilStatics:GetEvilAbilityFriendlyName(abilityType) end
---@param abilityType EEvilAbilityType
---@return FText
function ULocUtilStatics:GetEvilAbilityDescription(abilityType) end
---@param DamageType EDamageType
---@return FText
function ULocUtilStatics:GetDamageFriendlyName(DamageType) end
---@param DamageType EDamageType
---@return FLinearColor
function ULocUtilStatics:GetColorFromDamageType(DamageType) end
---@param pWorldContext UObject
---@param Text FText
---@return FText
function ULocUtilStatics:ExpandCompoundInputs(pWorldContext, Text) end


---@class ULogSender : UObject
ULogSender = {}


---@class UMESChallengeItemWidget : UMetaWidget
---@field mpStatusIcon UImage
---@field mpDescriptionText URichTextBlock
---@field mpProgressBar UProgressBar
---@field mpTallyText UTextBlock
UMESChallengeItemWidget = {}



---@class UMESTaskListItemWidget : UUserWidget
---@field mpCompletedIcon UImage
---@field mpDescriptionText UTextBlock
---@field mpProgressText UTextBlock
---@field mpProgressBar UProgressBar
---@field mpDeltaProgressBar UProgressBar
UMESTaskListItemWidget = {}



---@class UMainMenuButton : UUserWidget
---@field Title FText
---@field TargetScreen EMenuScreen
---@field IsPlayOverride boolean
---@field IsLoadoutButton boolean
---@field IsPortraitButton boolean
---@field TeenColorText FLinearColor
---@field EvilColorText FLinearColor
---@field EventColorText FLinearColor
---@field mpBackgroundPanel UCanvasPanel
---@field mpBackgroundImage UImage
---@field mpHoverPanel UCanvasPanel
---@field mpButton UButton
---@field mpText UTextBlock
---@field mpNewFlagIcon UImage
UMainMenuButton = {}

function UMainMenuButton:Rebuild() end
function UMainMenuButton:OnButtonPressed() end


---@class UMainMenuButtonBackground : UUserWidget
---@field mpCanvasSlot UCanvasPanelSlot
UMainMenuButtonBackground = {}



---@class UMainMenuSeasonalEventWidget : USeasonalEventWidget
---@field mpEventIcon UImage
---@field mpEventText UTextBlock
---@field mpEventDetails UTextBlock
---@field m2xEventIcon FSlateBrush
UMainMenuSeasonalEventWidget = {}



---@class UMainMenuWidget : UUserWidget
---@field mpTopBorder ULetterboxBordersWidget
---@field mpPlayButton UMainMenuButton
---@field mpLoadoutButton UMainMenuButton
---@field mpJourneyButton UMainMenuButton
---@field mpMoviesButton UMainMenuButton
---@field mpStoreButton UMainMenuButton
---@field mpEventButton UMainMenuButton
---@field mpSeasonPassButton UMainMenuButton
---@field mMenuButtons TArray<UMainMenuButton>
---@field mSelectedMenuIndex int32
UMainMenuWidget = {}

---@param tabIndex uint32
function UMainMenuWidget:TransitionActiveWidgetTab(tabIndex) end
---@param Index int32
function UMainMenuWidget:SelectMenu(Index) end
function UMainMenuWidget:OnRightMenuPressed() end
function UMainMenuWidget:OnMenu7Pressed() end
function UMainMenuWidget:OnMenu6Pressed() end
function UMainMenuWidget:OnMenu5Pressed() end
function UMainMenuWidget:OnMenu4Pressed() end
function UMainMenuWidget:OnMenu3Pressed() end
function UMainMenuWidget:OnMenu2Pressed() end
function UMainMenuWidget:OnMenu1Pressed() end
function UMainMenuWidget:OnLeftMenuPressed() end
function UMainMenuWidget:OnHomePressed() end
---@param pButton UMainMenuButton
function UMainMenuWidget:OnButtonPressed(pButton) end


---@class UManualTransformProgressBar : UBaseActionProgressBar
UManualTransformProgressBar = {}


---@class UMapDataAsset : UPrimaryDataAsset
---@field mTags FGameplayTag
---@field mDisplayName FText
---@field mLevelType ELevelType
---@field mSubLevelType ESubLevelType
---@field mLevelRoot FSoftObjectPath
---@field mLevelsToStreamIn TArray<FSoftObjectPath>
---@field mLevelsToStreamOut TArray<FSoftObjectPath>
---@field mLoadingScreens TArray<FLoadingScreenData>
---@field mpThumbnail UTexture2D
---@field mAmbientSoundEvents TArray<UAkAudioEvent>
---@field mColorParameters TMap<FName, FLinearColor>
---@field mScalarParameters TMap<FName, float>
UMapDataAsset = {}



---@class UMatchEventQueue : UObject
---@field mOwningClientStateManager TWeakObjectPtr<UClientStateManager>
UMatchEventQueue = {}



---@class UMatchEventUtilStatics : UObject
UMatchEventUtilStatics = {}


---@class UMatchIdTextBox : UUserWidget
---@field GetIdFromMatchSettings boolean
---@field mpMatchIdText UTextBlock
UMatchIdTextBox = {}



---@class UMatchModManager : UActorComponent
---@field mPlayerNameToMM TArray<FPlayerToMatchMod>
UMatchModManager = {}

---@param DeltaTime float
function UMatchModManager:PrintCurrentMatchMods(DeltaTime) end
---@param pPlayerPS AGameplayPS
---@param matchModType EMatchModType
---@return boolean
function UMatchModManager:IsMatchModActiveForPlayer(pPlayerPS, matchModType) end
---@param matchModType EMatchModType
---@return boolean
function UMatchModManager:IsMatchModActive(matchModType) end
---@return TArray<FPlayerToMatchMod>
function UMatchModManager:GetPlayerNameToMM() end
---@param pPlayerPS AGameplayPS
---@param matchModeType EMatchModType
---@param Tier int32
function UMatchModManager:AssignMatchMod(pPlayerPS, matchModeType, Tier) end


---@class UMatchStateSummaryWidget : UUserWidget
---@field mEndOfRoundPlayerWidgetsList TArray<UEndOfRoundPlayerInfoWidget>
---@field mpMapNameText UTextBlock
---@field mpMatchTimeText UTextBlock
---@field mpWonTextBox UHorizontalBox
---@field mpLostTextBox UHorizontalBox
---@field mpPingCategoryText UTextBlock
---@field mpPingCategoryText2 UTextBlock
---@field mpUpperBox UVerticalBox
---@field mpLowerBox UVerticalBox
---@field mpWonText UTextBlock
---@field mpLostText UTextBlock
---@field mpTeenTitleHeaders UHorizontalBox
---@field mpEvilTitleHeaders UHorizontalBox
UMatchStateSummaryWidget = {}

---@param MatchSummaryInfoData FMatchSummaryInfoData
function UMatchStateSummaryWidget:Update(MatchSummaryInfoData) end
---@return boolean
function UMatchStateSummaryWidget:IsInGameScreen() end


---@class UMatchmakingNotificationManager : UObject
UMatchmakingNotificationManager = {}

---@param pWorldContextObject UObject
---@return UMatchmakingNotificationManager
function UMatchmakingNotificationManager:GetMatchmakingNotificationManagerInstance(pWorldContextObject) end


---@class UMatchmakingNotificationPeer : UEndSocket
UMatchmakingNotificationPeer = {}

---@param pWorldContextObject UObject
---@return UMatchmakingNotificationPeer
function UMatchmakingNotificationPeer:GetMatchmakingNotificationPeerInstance(pWorldContextObject) end


---@class UMatchmakingScreen : UBaseScreen
---@field mpNewsBox UVerticalBox
---@field mpNewsButton UButton
---@field mpSeasonpassSummaryWidget USeasonPassSummaryWidget
---@field mpEventTrackerUserButton UEventTrackerUserButton
---@field mpMovieEquipmentWidget UMovieEquipmentWidget
---@field mpInfoPanel UWidget
---@field mpInfoText URichTextBlock
---@field mpPlayReadyPanel UPlayReadyPanel
---@field mpPrizeBoxUserButton UPrizeBoxUserButton
---@field mpPrizeSelectionWidget UPrizeSelectionWidget
---@field mpQuickplayIcon UImage
---@field mbIsMouseDown boolean
---@field mClickedPosition FVector2D
---@field mCurrentPosition FVector2D
---@field mCursorDelta float
---@field mCurrentZoom float
---@field mCurrentAddedRotation float
---@field mTargetAddedRotation float
---@field mbFirstTimeVisit boolean
UMatchmakingScreen = {}

function UMatchmakingScreen:UpdateInfoPanel() end
function UMatchmakingScreen:OnQuitButton() end
function UMatchmakingScreen:OnPlayButton() end
function UMatchmakingScreen:OnPlayAsEvilSelected() end
function UMatchmakingScreen:OnPlayAsButton() end
function UMatchmakingScreen:OnNewsPressed() end
function UMatchmakingScreen:OnModeButton() end
function UMatchmakingScreen:OnEventPressed() end
function UMatchmakingScreen:OnDeviceTypeChanged() end


---@class UMaterialTransferConfig : UDataAsset
---@field mMaterialParameterTransferByName TArray<FMaterialTransferByName>
---@field mMaterialParameterTransferByValue TArray<FMaterialTransferByValue>
---@field mMaterialParameterTransferReceivers TArray<FMaterialTransferReceiver>
UMaterialTransferConfig = {}



---@class UMeshWidgetComponent : UWidgetComponent
UMeshWidgetComponent = {}


---@class UMetaWidget : UUserWidget
---@field mMetaData FString
---@field mDbItemId FDbItemId
---@field mGrantable FGrantable
---@field mpButtonSelectAnim UWidgetAnimation
---@field mpAnimButton UBaseUserButton
UMetaWidget = {}

function UMetaWidget:OnUnselected() end
function UMetaWidget:OnUnhover() end
function UMetaWidget:OnSelected() end
function UMetaWidget:OnPressed() end
function UMetaWidget:OnHover() end
function UMetaWidget:OnDoubleClick() end
function UMetaWidget:OnAnimUnselect() end
function UMetaWidget:OnAnimSelect() end


---@class UMetaWidgetTemplate : UMetaWidget
UMetaWidgetTemplate = {}


---@class UMiscBlueprintFunctionLibrary : UBlueprintFunctionLibrary
UMiscBlueprintFunctionLibrary = {}

---@param RenderTarget UTextureRenderTarget2D
---@param Name FString
---@param CompressionSettings TextureCompressionSettings
---@param MipSettings TextureMipGenSettings
---@param bOutputToFile boolean
---@param outputFilePath FString
---@param outputFileName FString
function UMiscBlueprintFunctionLibrary:RenderTargetOverwriteStaticTexture2DEditorOnly(RenderTarget, Name, CompressionSettings, MipSettings, bOutputToFile, outputFilePath, outputFileName) end
---@param InSoftObjectPtr TSoftObjectPtr<UObject>
---@return UObject
function UMiscBlueprintFunctionLibrary:LoadAssetSynchronous(InSoftObjectPtr) end
---@return FString
function UMiscBlueprintFunctionLibrary:GetSourceControlWorkSpace() end
---@param Table ELocalizationTable
---@param Key FString
---@return FText
function UMiscBlueprintFunctionLibrary:GetLocalizationText(Table, Key) end
---@param SaveTextB FString
---@param FileNameB FString
---@return boolean
function UMiscBlueprintFunctionLibrary:FileSaveString(SaveTextB, FileNameB) end
---@param SaveTextB FString
---@param FileNameB FString
---@return boolean
function UMiscBlueprintFunctionLibrary:FileAppendString(SaveTextB, FileNameB) end
---@param Settings FBulkApplyLightingSettings
---@param Actors TArray<AActor>
function UMiscBlueprintFunctionLibrary:ApplyBulkLightingSettings(Settings, Actors) end


---@class UModalManager : UObject
---@field mModalQueue TArray<UBaseModal>
---@field mpActiveModal UBaseModal
---@field mpLastModalConfirmed UBaseModal
UModalManager = {}

---@param pBaseModal UBaseModal
function UModalManager:SetLastModalConfirmed(pBaseModal) end
---@param modal UBaseModal
function UModalManager:PushModal(modal) end
function UModalManager:ProcessModalQueue() end
---@param pModal UBaseModal
function UModalManager:PopModal(pModal) end
---@return TSubclassOf<URewardItemWidget>
function UModalManager:GetRewardItemClass() end
---@return TSubclassOf<UReplayItemWidget>
function UModalManager:GetReplayItemClass() end
---@return int32
function UModalManager:GetNumActiveAndPendingRewardModals() end
function UModalManager:DoBackPress() end
function UModalManager:ClearAllRewards() end
function UModalManager:ClearAll() end
---@param modal UBaseModal
function UModalManager:AddModal(modal) end


---@class UMolotovSkinDataAsset : UTeenWeaponSkinDataAsset
---@field mExplosionParticleSystem FSkinParticleSystem
---@field mFlamePoolParticleSystem FSkinParticleSystem
---@field mFallingFlamesParticleSystem FSkinParticleSystem
---@field mIdleFlameParticleSystem FSkinParticleSystem
---@field mIdleFlameLight FSkinLight
---@field mProjectileParticleSystem FSkinParticleSystem
---@field mWiseMolotovSwitch EWise_WEP_Molotov
UMolotovSkinDataAsset = {}



---@class UMotionSentinelComponent : USceneComponent
---@field mpTransformComponent USceneComponent
---@field mRevealTimer float
---@field mbRevealAuraActive boolean
---@field mBreadcrumbTimer float
---@field mbWarningActive boolean
---@field mbWhisperActive boolean
---@field mbDrawDebug boolean
---@field mpOwningTPChar ATPChar
---@field mServerAfkDuration float
UMotionSentinelComponent = {}

function UMotionSentinelComponent:MulticastAllStopWhisperAudio() end
function UMotionSentinelComponent:MulticastAllStopIdleWarningParticle() end
function UMotionSentinelComponent:MulticastAllStartWhisperAudio() end
function UMotionSentinelComponent:MulticastAllStartIdleWarningParticle() end
---@return boolean
function UMotionSentinelComponent:IsRevealAuraActive() end
---@return float
function UMotionSentinelComponent:GetWhisperAttenuationScalar() end
---@return float
function UMotionSentinelComponent:GetRevealTimer() end
---@param DeltaTime float
function UMotionSentinelComponent:DoServerUpdateSentinelMovement(DeltaTime) end
---@param DeltaTime float
function UMotionSentinelComponent:DoServerUpdatePlayerReveal(DeltaTime) end
---@param DeltaTime float
function UMotionSentinelComponent:DoServerUpdateBreadcrumbs(DeltaTime) end
---@param DeltaTime float
function UMotionSentinelComponent:DoServerUpdateAfkDuration(DeltaTime) end
---@param DeltaTime float
function UMotionSentinelComponent:DoServerUpdate(DeltaTime) end
---@param bSet boolean
function UMotionSentinelComponent:DoServerSetWhisperActive(bSet) end
---@param bSet boolean
function UMotionSentinelComponent:DoServerSetWarningActive(bSet) end
---@param Timer float
function UMotionSentinelComponent:DoServerSetRevealTimer(Timer) end
---@param bSet boolean
function UMotionSentinelComponent:DoServerSetRevealAuraActive(bSet) end
---@param bSet boolean
function UMotionSentinelComponent:DoServerSetDrawDebug(bSet) end
---@param Duration float
function UMotionSentinelComponent:DoServerSetAfkDuration(Duration) end
function UMotionSentinelComponent:DoServerResetRevealTimer() end
---@return boolean
function UMotionSentinelComponent:DoServerIsWhisperActive() end
---@return boolean
function UMotionSentinelComponent:DoServerIsWarningActive() end
---@return boolean
function UMotionSentinelComponent:DoServerIsDrawingDebug() end
---@return float
function UMotionSentinelComponent:DoServerGetAfkDuration() end
---@param DeltaTime float
function UMotionSentinelComponent:DoServerDrawDebugLines(DeltaTime) end


---@class UMouseTab : UBaseTab
---@field mpNavScrollBox UNavScrollBox
---@field mpTeenMouseSensitivity UOptionSliderUserButton
---@field mpEvilMouseSensitivity UOptionSliderUserButton
---@field mpFiringSensitivity UOptionSliderUserButton
---@field mpMouseInvertY UOptionToggleUserButton
---@field mpKeyboardSprintToggle UOptionToggleUserButton
---@field mpKeyboardCrouchToggle UOptionToggleUserButton
---@field mpRestoreDefaultsButton UOptionSingleUserButton
UMouseTab = {}

function UMouseTab:OnResetDefaultsPressed() end
function UMouseTab:OnResetDefaultsConfirmed() end


---@class UMovieButtonWidget : UMetaWidget
---@field mpStateSwitcher UStateSwitcher
---@field mpUserButton UBaseUserButton
---@field mpPosterIcon UImage
---@field mpEquippedIcon UImage
---@field mpFlexIcon UImage
UMovieButtonWidget = {}

---@param pTex UTexture2D
function UMovieButtonWidget:OnTextureLoaded(pTex) end
function UMovieButtonWidget:OnDoubleClicked() end
---@return UNavButton
function UMovieButtonWidget:GetNavButton() end


---@class UMovieCompletionStatusWidget : UMetaWidget
---@field mpStatusIcon UImage
---@field mpStatusText UTextBlock
UMovieCompletionStatusWidget = {}



---@class UMovieDetailsWidget : UMetaWidget
---@field mpTitleText UTextBlock
---@field mpEditionText UTextBlock
---@field mpCompletionStatusWidget UMovieCompletionStatusWidget
---@field mpActionButton UActionButton
---@field mpScenesButton UActionButton
---@field mpPurchaseButton UActionButton
---@field mpDescriptionText UTextBlock
---@field mpMovieRewardsWidget UMovieRewardWidget
---@field mpNonSelectableScrollBox UNonSelectableScrollBox
---@field mpAbandonTimerCountdownWidget UTimerCountdownWidget
---@field mpAbandonTimerBox UHorizontalBox
---@field mCurrentlyDisplayedFlexMovieStoreGUID FString
UMovieDetailsWidget = {}

function UMovieDetailsWidget:OnScenesPressed() end
function UMovieDetailsWidget:OnPurchasePressed() end
function UMovieDetailsWidget:OnActionPressed() end
function UMovieDetailsWidget:AbandonProceduralMovie() end


---@class UMovieEquipmentWidget : UMetaWidget
---@field mpButton UButton
---@field mpUserButton UMovieRentalUserButton
---@field mpHighlightImage UImage
---@field mpBgImage UImage
---@field mpBlurImage UImage
UMovieEquipmentWidget = {}

function UMovieEquipmentWidget:OnButtonPressed() end


---@class UMovieListWidget : UUserWidget
---@field mpMoviesHeader UTextBlock
---@field mpSpecialHeader UTextBlock
---@field mpMoviesGrid UUniformGridPanel
---@field mpSpecialGrid UUniformGridPanel
---@field mpSpecialIcon UImage
UMovieListWidget = {}

---@param Data FString
function UMovieListWidget:OnMovieSelected(Data) end


---@class UMovieManager : UObject
---@field mpMovieThumbnailRenderTarget UTextureRenderTarget2D
---@field mpMovieThumbnailMaterial UMaterialInstance
UMovieManager = {}



---@class UMovieRentalUserButton : UBaseUserButton
---@field mpLimitedHighlightImage UImage
---@field mpRegularMovieBorder UImage
---@field mpLimitedMovieBorder UImage
---@field mpRegularMovieIcon UImage
---@field mpLimitedMovieIcon UImage
UMovieRentalUserButton = {}

---@param pTex UTexture2D
function UMovieRentalUserButton:OnLimitedTextureLoaded(pTex) end
---@param pTex UTexture2D
function UMovieRentalUserButton:OnCharTextureLoaded(pTex) end


---@class UMovieRewardGroupWidget : UBaseRewardGroupWidget
UMovieRewardGroupWidget = {}


---@class UMovieRewardWidget : UMetaWidget
---@field ShowMovieRewards boolean
---@field ShowMiscRewards boolean
---@field mRewardWidgets TArray<UBasicRewardWidget>
---@field mpEditionText UTextBlock
---@field mpPreviewButton UButton
---@field mPreviewableRewards TArray<FGrantable>
UMovieRewardWidget = {}

function UMovieRewardWidget:OnPreviewPressed() end
---@param Grantable FGrantable
---@return boolean
function UMovieRewardWidget:AllowedToShowGrantable(Grantable) end
---@param Grantable FGrantable
---@return boolean
function UMovieRewardWidget:AllowedToPreviewGrantable(Grantable) end


---@class UMovieRewardsOverlayWidget : UUserWidget
---@field mpScenePanelIn UWidgetAnimation
---@field mpScenePanelOut UWidgetAnimation
---@field mpRewardPanelIn UWidgetAnimation
---@field mpRewardPanelOut UWidgetAnimation
---@field mpTitlesPanelIn UWidgetAnimation
---@field mpTitlesPanelOut UWidgetAnimation
---@field mpMovieAndScenesPanel UCanvasPanel
---@field mpRewardsPanel UCanvasPanel
---@field mpMovieImage UImage
---@field mpSceneRewardsTitle UTextBlock
---@field mpMovieRewardsTitle UTextBlock
---@field mpNumberOfScenesCompleted UTextBlock
---@field mpRewardsGridPanel UGridPanel
---@field mpTitlesWidgetSwitcher UWidgetSwitcher
---@field mpMesChallengeItemWidget UMESChallengeItemWidget
---@field mRewardCards TArray<UEORMovieRewardCard>
---@field mSceneTitleWidgets TArray<UEORSceneTitleWidget>
---@field mpSceneTitleWidgetClass TSubclassOf<UEORSceneTitleWidget>
---@field mTimeToShowRewards float
UMovieRewardsOverlayWidget = {}

function UMovieRewardsOverlayWidget:ShowRewards() end
function UMovieRewardsOverlayWidget:ShowNextScene() end
function UMovieRewardsOverlayWidget:ShowNextMovieScene() end
---@param newlyCompletedScenesList TArray<FSceneState>
function UMovieRewardsOverlayWidget:SetNewlyCompletedScenesList(newlyCompletedScenesList) end
---@param SceneState FSceneState
function UMovieRewardsOverlayWidget:SetCurrentScene(SceneState) end
---@param movieKey FString
function UMovieRewardsOverlayWidget:SetCurrentMovieState(movieKey) end
function UMovieRewardsOverlayWidget:OnSceneTitleOutFinished() end
function UMovieRewardsOverlayWidget:OnSceneTitleInFinished() end
function UMovieRewardsOverlayWidget:OnSceneTitleDestroyed() end
function UMovieRewardsOverlayWidget:OnScenePanelInFinished() end
function UMovieRewardsOverlayWidget:OnRewardShowCompleted() end
function UMovieRewardsOverlayWidget:OnMovieRewardsShowCompleted() end
---@return boolean
function UMovieRewardsOverlayWidget:HasShownAllProgress() end
function UMovieRewardsOverlayWidget:FinishShowingRewards() end
---@return boolean
function UMovieRewardsOverlayWidget:AttemptSetMovieRewards() end


---@class UMoviesScreen : UBaseScreen
---@field mpCategorySwitcher UCategorySwitcher
---@field mpInfoPanel UCanvasPanel
---@field mpInfoText UTextBlock
---@field mpMovieList UMovieListWidget
---@field mpMovieDetails UMovieDetailsWidget
---@field mpTimerBorder UBorder
---@field mpTimerCountdownWidget UTimerCountdownWidget
UMoviesScreen = {}

---@param Data FString
function UMoviesScreen:TransitionToSceneDetials(Data) end
---@param Data FString
function UMoviesScreen:PopulateSceneData(Data) end
---@param pTex UTexture2D
function UMoviesScreen:OnTextureLoaded(pTex) end
---@param Index int32
function UMoviesScreen:OnCategoryChanged(Index) end


---@class UMutationUserButton : UBaseUserButton
---@field IsDefaultPower boolean
---@field BackgroundTexture UTexture2D
---@field mpAbilityMaterialInterface UMaterialInterface
---@field mpBackgroundImage UImage
---@field mpMutationIcon UImage
---@field mpNewFlag UNewFlagWidget
---@field mpStateSwitcher UStateSwitcher
---@field mpAbilityMaterialInstance UMaterialInstanceDynamic
UMutationUserButton = {}

---@param pTex UTexture2D
function UMutationUserButton:OnTextureLoaded(pTex) end
function UMutationUserButton:OnButtonSelected() end
function UMutationUserButton:OnButtonDoubleClick() end


---@class UMutationsGroupWidget : UMetaWidget
---@field mpSelectionBorder UBorder
---@field mpTitleText UTextBlock
---@field mpDefaultButton UMutationUserButton
---@field mpPowerButton1 UMutationUserButton
---@field mpPowerButton2 UMutationUserButton
---@field mpPowerButton3 UMutationUserButton
UMutationsGroupWidget = {}



---@class UMutationsScreen : UBaseScreen
---@field PowerColor FLinearColor
---@field MutationColor FLinearColor
---@field mpMutationGroup1 UMutationsGroupWidget
---@field mpMutationGroup2 UMutationsGroupWidget
---@field mpMutationGroup3 UMutationsGroupWidget
---@field mpTitleText UTextBlock
---@field mpActionButton UActionButton
---@field mpStatusText UTextBlock
---@field mpNonSelectableScrollBox UNonSelectableScrollBox
---@field mpDescriptionText URichTextBlock
UMutationsScreen = {}

---@param abilityType EEvilAbilityType
---@param ItemId FDbItemId
function UMutationsScreen:PreviewPower(abilityType, ItemId) end
function UMutationsScreen:OnActionPressed() end
---@param abilityType EEvilAbilityType
---@param ItemId FDbItemId
function UMutationsScreen:EquipPower(abilityType, ItemId) end


---@class UNamedRewardWidget : UBaseRewardWidget
---@field mpNameText UTextBlock
UNamedRewardWidget = {}



---@class UNavButton : UButton
---@field BarButtons TArray<EButtonBarType>
---@field OnDoubleClick FNavButtonOnDoubleClick
---@field OnClickedReferenced FNavButtonOnClickedReferenced
---@field OnLongPressReferenced FNavButtonOnLongPressReferenced
---@field OnSelected FNavButtonOnSelected
---@field OnUnselected FNavButtonOnUnselected
---@field ButtonKeyAction EGameActionType
---@field RemoveAllButtonBehaviors boolean
---@field HandlesSimulatePress boolean
---@field HandlesSimulateRelease boolean
---@field UseSecondaryColors boolean
---@field DisablesOnLockdown boolean
---@field SelectOnHover boolean
---@field OffsetOnSelected boolean
---@field OffsetAmount FVector2D
---@field OffsetDuration float
---@field ScaleOnSelected boolean
---@field ScaleOnHovered boolean
---@field ScaleAmount FVector2D
---@field ScaleDuration float
---@field AllowInteractionWhenHidden boolean
---@field IsPreciseClick boolean
---@field HScrollSpeedMultiplier float
---@field VScrollSpeedMultiplier float
---@field NavDirectionOverrides TMap<ESelectionNavigation, UUserWidget>
---@field LongPress boolean
---@field IgnoreLongPressDuringJourneyClaim boolean
---@field LongPressLength float
---@field LongPressMinimumDisplayAmount float
---@field LongPressProgressTexture UTexture2D
---@field mOverrideDirections TArray<ESelectionNavigation>
---@field OnPressSound EWise_UI_Sounds
---@field OnReleaseSound EWise_UI_Sounds
---@field OnHoverSound EWise_UI_Sounds
---@field OnUnhoverSound EWise_UI_Sounds
---@field mpProgressMaterialInstance UMaterialInstance
---@field mpDynProgressMaterialInstance UMaterialInstanceDynamic
---@field mSelectedOffset FVector2D
---@field mSelectedScale FVector2D
---@field mOffsetTimer float
---@field mScaleTimer float
---@field mLongPressTime float
---@field mbLongPressHandled boolean
---@field mDoubleClickTimer float
---@field mButtonData FString
---@field mpScaleTarget UWidget
UNavButton = {}

---@param pNewWidget UWidget
function UNavButton:SetScaleTarget(pNewWidget) end
---@param bSet boolean
function UNavButton:SetIconVisibility(bSet) end
---@param str FString
function UNavButton:SetButtonData(str) end
function UNavButton:ResetScale() end
function UNavButton:RefreshWidget() end
---@param Overrides TMap<ESelectionNavigation, UUserWidget>
function UNavButton:InitializeNavDirectionOverrides(Overrides) end
---@return FString
function UNavButton:GetButtonData() end
---@param DeltaTime float
---@return boolean
function UNavButton:DoTick(DeltaTime) end
function UNavButton:DoOnUnhovered() end
function UNavButton:DoOnReleased() end
function UNavButton:DoOnPressed() end
function UNavButton:DoOnHovered() end


---@class UNavCheckbox : UCheckBox
UNavCheckbox = {}

---@param bChecked boolean
function UNavCheckbox:UpdateChekboxState(bChecked) end
function UNavCheckbox:RefreshWidget() end


---@class UNavDropDownMenu : UUserWidget
---@field mbIsOpen boolean
---@field mTileClass TSubclassOf<UNavDropDownMenuTile>
---@field mGeneratedTiles TArray<UNavDropDownMenuTile>
---@field mOptionsList TArray<FText>
---@field mpGeneratedTileTargetBox UVerticalBox
---@field mCurrentlySelectedIndex int32
---@field mpSelectedTileInfoPanel UCanvasPanel
---@field mpSelectedTileTitleText UTextBlock
---@field mpDropDownButton UNavButton
---@field OnDropDownMenuIndexChanged FNavDropDownMenuOnDropDownMenuIndexChanged
UNavDropDownMenu = {}

function UNavDropDownMenu:ToggleMenuIsOpen() end
function UNavDropDownMenu:SetReportOptionsList() end
---@param optionsArray TArray<FText>
function UNavDropDownMenu:SetOptionsList(optionsArray) end
---@param bNewValue boolean
function UNavDropDownMenu:SetMenuIsOpen(bNewValue) end
function UNavDropDownMenu:OnDropDownButtonPressed() end
---@param Index int32
function UNavDropDownMenu:OnChildTilePressed(Index) end
---@return int32
function UNavDropDownMenu:GetSelectedIndex() end


---@class UNavDropDownMenuTile : UUserWidget
---@field mTileIndex int32
---@field mpUserButton UDropdownUserButton
---@field mpOwnerDropDownMenu UNavDropDownMenu
UNavDropDownMenuTile = {}

---@param newText FText
function UNavDropDownMenuTile:SetTitleText(newText) end
---@param pOwnerMenu UNavDropDownMenu
---@param Index int32
function UNavDropDownMenuTile:SetOwner(pOwnerMenu, Index) end
function UNavDropDownMenuTile:OnButtonPressed() end
---@return UNavButton
function UNavDropDownMenuTile:GetNavButton() end


---@class UNavScrollBox : UScrollBox
---@field AlwaysFocus boolean
---@field IgnoreTick boolean
---@field ScrollPadding float
---@field mpPreviousWidget UWidget
UNavScrollBox = {}



---@class UNavSelector : UUserWidget
---@field SettingType ESettingType
---@field UseColorOverride boolean
---@field OverrideNormalColor FLinearColor
---@field OverrideHoverColor FLinearColor
---@field OverrideSelectedColor FLinearColor
---@field OverridePressedColor FLinearColor
---@field OverrideDisabledColor FLinearColor
---@field ColorTextOverride boolean
---@field mpLeftButton UButton
---@field mpRightButton UButton
---@field mpText UTextBlock
---@field mpBarBox UHorizontalBox
---@field mbAllowCallback boolean
---@field mItems TArray<FNavSelectorItem>
---@field mSelectedItem FNavSelectorItem
UNavSelector = {}

function UNavSelector:OnRightPressed() end
function UNavSelector:OnLeftPressed() end


---@class UNavSlider : USlider
---@field ChangeAmount float
---@field SelectOnHover boolean
---@field OnSelected FNavSliderOnSelected
---@field OnUnselected FNavSliderOnUnselected
UNavSlider = {}



---@class UNavWidgetManager : UObject
---@field mpSelectedWidget UWidget
---@field mpPendingBroadcastWidget UWidget
---@field mpBroadcastedWidget UWidget
---@field mBroadcastTimer float
---@field mCurrentWidgetGroup TArray<UWidget>
---@field mPreviousWidgetGroup TArray<UWidget>
---@field mpRootNavigationWidget UUserWidget
---@field mpPreviousNavigationWidget UUserWidget
UNavWidgetManager = {}

---@param bSet boolean
function UNavWidgetManager:SetLockdown(bSet) end
function UNavWidgetManager:OnDeviceTypeChanged() end
---@return boolean
function UNavWidgetManager:IsInLockdown() end
function UNavWidgetManager:Initialize() end
---@param DeltaTime float
function UNavWidgetManager:DoTick(DeltaTime) end


---@class UNavigationHeaderWidget : UUserWidget
---@field ScreenText FText
---@field IconTexture UTexture2D
---@field weaponType EWeaponTypeEnum
---@field mpStyleWidgetSwitcher UWidgetSwitcher
---@field mpNormalStyleBox UHorizontalBox
---@field mpHeaderText UTextBlock
---@field mpIconBox UHorizontalBox
---@field mpIconImage UImage
---@field mpWeaponBox UHorizontalBox
---@field mpWeaponLevelWidget UWeaponLevelWidget
---@field mpLevelText UTextBlock
---@field mpExpText UTextBlock
---@field mpLargeIconStyleBox UHorizontalBox
---@field mpLargeIcon_HeaderText UTextBlock
---@field mpLargeIcon_Icon UImage
UNavigationHeaderWidget = {}



---@class UNewFlagSaveData : USaveGame
---@field mNewFlagData TArray<FString>
UNewFlagSaveData = {}



---@class UNewFlagTracker : UObject
UNewFlagTracker = {}


---@class UNewFlagWidget : UMetaWidget
---@field NewFlagType ENewFlagType
---@field weaponType EWeaponTypeEnum
---@field DamageType EDamageType
---@field CharType ECharacterType
---@field UseFrontEndChar boolean
---@field PlayerSlotType EPlayerSlot
---@field UISlotType EUISlot
---@field mpNewIcon UImage
UNewFlagWidget = {}



---@class UNewsOverlayWidget : UBaseOverlay
UNewsOverlayWidget = {}


---@class UNewsScreen : UBaseScreen
---@field mpCategorySwitcher UCategorySwitcher
---@field mpWidgetSwitcher UWidgetSwitcher
---@field mpPatchNotesButtonsBox UVerticalBox
---@field mpPatchNotesBox UVerticalBox
---@field mpWebsiteButton UBoxNewsUserButton
---@field mpDiscordButton UBoxNewsUserButton
---@field mpFacebookButton UBoxNewsUserButton
---@field mpInstaButton UBoxNewsUserButton
---@field mpTwitchButton UBoxNewsUserButton
---@field mpYoutubeButton UBoxNewsUserButton
---@field mpFeatureButton UNewsUserButton
---@field mpNewsButton1 UNewsUserButton
---@field mpNewsButton2 UNewsUserButton
UNewsScreen = {}

function UNewsScreen:OnYoutubePressed() end
function UNewsScreen:OnYoutubeConfirmed() end
function UNewsScreen:OnWebsitePressed() end
function UNewsScreen:OnWebsiteConfirmed() end
function UNewsScreen:OnTwitchPressed() end
function UNewsScreen:OnTwitchConfirmed() end
---@param pButton UNavButton
function UNewsScreen:OnPatchNotePressed(pButton) end
function UNewsScreen:OnInstaPressed() end
function UNewsScreen:OnInstaConfirmed() end
function UNewsScreen:OnFacebookPressed() end
function UNewsScreen:OnFacebookConfirmed() end
function UNewsScreen:OnDiscordPressed() end
function UNewsScreen:OnDiscordConfirmed() end
---@param Val int32
function UNewsScreen:OnCategoryChanged(Val) end


---@class UNewsTab : UBaseTab
---@field mpNavScrollBox UNavScrollBox
UNewsTab = {}



---@class UNewsUserButton : UBaseUserButton
---@field RegularColor FLinearColor
---@field ImageTex UTexture2D
---@field mpTitleText UTextBlock
---@field mpCategoryText UTextBlock
UNewsUserButton = {}

function UNewsUserButton:OnWebsiteConfirmed() end
function UNewsUserButton:OnButtonPressed() end


---@class UNonSelectableScrollBox : UScrollBox
---@field mGamepadScrollSensitivity float
UNonSelectableScrollBox = {}

function UNonSelectableScrollBox:DoTick() end


---@class UOptionButton : UUserWidget
---@field mpButton UButton
---@field mpBorder UBorder
---@field mpTextBlock UTextBlock
UOptionButton = {}



---@class UOptionInputBindingUserButton : UOptionUserButton
---@field ActionType EGameActionType
---@field InputCategory EInputBindingCategory
---@field IsKeyboard boolean
---@field mpButton UOptionButton
UOptionInputBindingUserButton = {}

function UOptionInputBindingUserButton:OnButtonPressed() end


---@class UOptionKeyBindingUserButton : UOptionUserButton
UOptionKeyBindingUserButton = {}


---@class UOptionResolutionUserButton : UOptionUserButton
---@field mpLeftButton UButton
---@field mpRightButton UButton
---@field mpResolutionText UTextBlock
---@field mSupportedResolutions TArray<FIntPoint>
---@field mSelectedResolution FIntPoint
---@field mResolutionIndex int32
UOptionResolutionUserButton = {}

function UOptionResolutionUserButton:OnRightPressed() end
function UOptionResolutionUserButton:OnLeftPressed() end


---@class UOptionSelectorUserButton : UOptionUserButton
---@field SettingType ESettingType
---@field mpLeftButton UButton
---@field mpRightButton UButton
---@field mpSelectorText UTextBlock
---@field mpIndicatorBox UHorizontalBox
---@field mItems TArray<FOptionItem>
---@field mSelectedItem FOptionItem
UOptionSelectorUserButton = {}

function UOptionSelectorUserButton:OnRightPressed() end
function UOptionSelectorUserButton:OnLeftPressed() end


---@class UOptionSingleUserButton : UOptionUserButton
---@field ButtonText FText
---@field mpButton UOptionButton
UOptionSingleUserButton = {}



---@class UOptionSliderUserButton : UOptionUserButton
---@field MinDisplayValue int32
---@field MaxDisplayValue int32
---@field MinSliderValue float
---@field MaxSliderValue float
---@field ChangeAmount float
---@field mpSlider USlider
---@field mpProgressBar UProgressBar
---@field mpSliderText UTextBlock
UOptionSliderUserButton = {}

---@param Val float
function UOptionSliderUserButton:OnSliderChanged(Val) end
---@return USlider
function UOptionSliderUserButton:GetSlider() end


---@class UOptionToggleUserButton : UOptionUserButton
---@field OnText FText
---@field OffText FText
---@field mpToggleButtonOn UOptionButton
---@field mpToggleButtonOff UOptionButton
UOptionToggleUserButton = {}

function UOptionToggleUserButton:OnOnPressed() end
function UOptionToggleUserButton:OnOffPressed() end


---@class UOptionUserButton : UBaseUserButton
---@field TitleText FText
---@field mpTitleText UTextBlock
UOptionUserButton = {}

---@param dir ESelectionNavigation
function UOptionUserButton:OnNavDirection(dir) end


---@class UOptionsFlagSelectorUserButton : UOptionUserButton
---@field mPlayerTipViewFlags uint8
---@field mOptionsFlagWidgetClass TSubclassOf<UOptionsFlagWidget>
---@field mpFlagsBox UHorizontalBox
UOptionsFlagSelectorUserButton = {}

---@param enumValue uint8
---@param bVal boolean
function UOptionsFlagSelectorUserButton:UpdateOption(enumValue, bVal) end
---@param playerTipViewFlags uint8
function UOptionsFlagSelectorUserButton:SetPlayerTipViewFlags(playerTipViewFlags) end
function UOptionsFlagSelectorUserButton:PopulateFlags() end
---@return uint8
function UOptionsFlagSelectorUserButton:GetPlayerTipViewFlags() end


---@class UOptionsFlagWidget : UUserWidget
---@field mBackgroundBrushColorSelected FLinearColor
---@field mBackgroundBrushColorUnselected FLinearColor
---@field mBorderBrushColorSelected FLinearColor
---@field mBorderBrushColorUnselected FLinearColor
---@field mTextBrushColorSelected FLinearColor
---@field mTextBrushColorUnselected FLinearColor
---@field mpOptionText UTextBlock
---@field mpButton UButton
---@field mpCheckBox UCheckBox
---@field mpBorder UBorder
---@field mEnumValue uint8
---@field bSelected boolean
---@field mpOwnerSelecterButton UOptionsFlagSelectorUserButton
UOptionsFlagWidget = {}

---@param bVal boolean
---@param bDisableButton boolean
function UOptionsFlagWidget:SetSelected(bVal, bDisableButton) end
---@param pOwnerSelecterButton UOptionsFlagSelectorUserButton
function UOptionsFlagWidget:SetOwnerSelector(pOwnerSelecterButton) end
---@param tipFlag ETipsVisibilityFlags
function UOptionsFlagWidget:SetOption(tipFlag) end
function UOptionsFlagWidget:OnButtonPressed() end


---@class UOptionsScreen : UBaseScreen
---@field mpCategorySwitcher UCategorySwitcher
---@field mpWidgetSwitcher UWidgetSwitcher
---@field mpOverlaySwitcher UWidgetSwitcher
---@field mpGameTab UGameTab
---@field mpVideoTab UVideoTab
---@field mpAudioTab UAudioTab
---@field mpMouseTab UMouseTab
---@field mpControllerTab UControllerTab
---@field mpPrivacyTab UPrivacyTab
---@field mpDangerSenseTab UDangerSenseTab
UOptionsScreen = {}

function UOptionsScreen:SwitchToDangerSenseOverlay() end
---@param newIndex int32
function UOptionsScreen:SwitchOverlaySwitcherToIndex(newIndex) end
function UOptionsScreen:ShowControls() end
function UOptionsScreen:OnPauseMenuBack() end
function UOptionsScreen:OnMainMenuBack() end
function UOptionsScreen:OnDiscardChanges() end
---@param cat int32
function UOptionsScreen:OnCategoryChanged(cat) end
function UOptionsScreen:OnApply() end
function UOptionsScreen:HideAllOverlays() end


---@class UParchmentSkinDataAsset : UTeenWeaponSkinDataAsset
---@field mSummoningParticleSystem FSkinParticleSystem
---@field mTargetingParticleSystem FSkinParticleSystem
---@field mMagicSphereMesh FSkinSkeletalMesh
---@field mExplosionParticleSystem FSkinParticleSystem
---@field mTrailParticleSystem FSkinParticleSystem
---@field mMagicSphereLight FSkinLight
---@field mTargetingDecalMaterial FSkinDecal
---@field mWiseParchmentSwitch EWise_WEP_Parchment
UParchmentSkinDataAsset = {}



---@class UParticleModuleHBCustomBase : UParticleModule
UParticleModuleHBCustomBase = {}


---@class UPatchNoteWidget : UUserWidget
---@field mpText UTextBlock
UPatchNoteWidget = {}



---@class UPatchNotesManager : UObject
UPatchNotesManager = {}


---@class UPatchNotesTab : UBaseTab
---@field mpNavScrollBox UNavScrollBox
UPatchNotesTab = {}



---@class UPathPredictionComponent : UActorComponent
---@field mPathMemorySearchingDepth int32
---@field mMinSearchingInterval float
---@field mNavPathInstances TArray<FNavPathInstance>
---@field pSplineComponent USplineComponent
UPathPredictionComponent = {}

---@param pTargetChar ATPChar
function UPathPredictionComponent:UpdateNavPathInstance(pTargetChar) end
---@param pTargetChar ATPChar
---@param bExposedLocation boolean
---@return TArray<FVector>
function UPathPredictionComponent:GetTargetPathPredictedLocations(pTargetChar, bExposedLocation) end
---@param bEnable boolean
function UPathPredictionComponent:DrawDebug(bEnable) end


---@class UPauseMenuScreen : UBaseScreen
---@field mpResumeButton UTextHighlightUserButton
---@field mpOptionsButton UTextHighlightUserButton
---@field mpVoiceChatButton UTextHighlightUserButton
---@field mpLeaveMatchButton UTextHighlightUserButton
---@field mpEndMatchButton UTextHighlightUserButton
---@field mpDebugMenuButton UTextHighlightUserButton
UPauseMenuScreen = {}

function UPauseMenuScreen:UpdateButtons() end
function UPauseMenuScreen:OnVoiceChatPressed() end
function UPauseMenuScreen:OnResumePressed() end
function UPauseMenuScreen:OnOptionsPressed() end
function UPauseMenuScreen:OnLeaveMatchPressed() end
function UPauseMenuScreen:OnEndMatchPressed() end
function UPauseMenuScreen:OnDebugMenu() end
---@return AGameplayHUD
function UPauseMenuScreen:GetGameplayHUD() end


---@class UPerkEquipmentOverlayWidget : UBaseOverlay
---@field mpPerkEquipmentWidget UPerkEquipmentWidget
---@field mpNameText UTextBlock
---@field mpAffinityText UTextBlock
---@field mpDescriptionText UTextBlock
UPerkEquipmentOverlayWidget = {}

---@param ItemId FDbItemId
---@param Grantable FGrantable
function UPerkEquipmentOverlayWidget:OnEquipmentSlotSelected(ItemId, Grantable) end
function UPerkEquipmentOverlayWidget:OnEquipmentSlotDoubleClick() end


---@class UPerkEquipmentSlotWidget : UMetaWidget
---@field TierActiveColor FLinearColor
---@field TierInactiveColor FLinearColor
---@field mpPerkSlotButton UButton
---@field mpImageIcon UImage
---@field mpAffinityIcon UImage
---@field mpAffinityBackground UImage
---@field mpCostPanel UCanvasPanel
---@field mpCostText UTextBlock
---@field mpTierWidget UPerkTierWidget
---@field mpLockPanel UCanvasPanel
---@field EquipAnim UWidgetAnimation
UPerkEquipmentSlotWidget = {}

---@param pTex UTexture2D
function UPerkEquipmentSlotWidget:OnTextureLoaded(pTex) end


---@class UPerkEquipmentWidget : UMetaWidget
---@field RemoveAllButtonBehaviors boolean
---@field mpCurrentPointsText UTextBlock
---@field mpMaximumPointsText UTextBlock
---@field mpInvalidPointsIcon UImage
UPerkEquipmentWidget = {}



---@class UPerkLoadoutWidget : UBaseLoadoutWidget
---@field mpPerkEquipmentWidget UPerkEquipmentWidget
---@field mpPerkPointBarWidget UPerkPointBarWidget
---@field mpWarningPanel UCanvasPanel
---@field mpWarningText UTextBlock
---@field mpDiscountsPanel UCanvasPanel
---@field mpItemTitleText UTextBlock
---@field mpItemDescriptionText URichTextBlock
---@field mpItemIcon UImage
---@field mpAffinityIcon UImage
---@field mpAffinityTypeBox UHorizontalBox
---@field mpAffinityText UTextBlock
---@field mpCostAmountText UTextBlock
---@field mpTierWidget UPerkTierWidget
---@field mpActionButton UActionButton
---@field mpNonSelectableScrollBox UNonSelectableScrollBox
UPerkLoadoutWidget = {}

---@param ItemId FDbItemId
---@param Grantable FGrantable
function UPerkLoadoutWidget:OnPerkTileSelected(ItemId, Grantable) end
---@param ItemId FDbItemId
---@param Grantable FGrantable
function UPerkLoadoutWidget:OnPerkTilePressed(ItemId, Grantable) end
---@param ItemId FDbItemId
---@param Grantable FGrantable
function UPerkLoadoutWidget:OnEquipmentSlotSelected(ItemId, Grantable) end
function UPerkLoadoutWidget:OnEquipmentSlotDoubleClick() end
function UPerkLoadoutWidget:OnActionPressed() end
function UPerkLoadoutWidget:DoSelectedItemAction() end


---@class UPerkPointBarWidget : UMetaWidget
---@field mpGridPanel UUniformGridPanel
UPerkPointBarWidget = {}



---@class UPerkPointWidget : UUserWidget
---@field ActivatedColor FLinearColor
---@field DeactivatedColor FLinearColor
---@field InvalidColor FLinearColor
---@field mpBackgroundImage UImage
UPerkPointWidget = {}



---@class UPerkTierWidget : UMetaWidget
---@field mpTierImage UImage
UPerkTierWidget = {}



---@class UPickupSkinDataAsset : UItemDataAsset
---@field mPickupText FText
---@field mSkeletalMesh FSkinSkeletalMesh
---@field mUsedMesh FSkinStaticMesh
---@field mOnUseFXSystem FSkinFXSystem
---@field mAdrenalineWiseSwitch EWise_PICKUP_Adrenaline
---@field mPillsWiseSwitch EWise_PICKUP_Pills
---@field mNoisemakerWiseSwitch EWise_PICKUP_Noisemaker
UPickupSkinDataAsset = {}



---@class UPingSystemComponent : UActorComponent
---@field mPingList TArray<APing>
---@field mpPingBPClass UClass
---@field mpEvilPingBPClass UClass
---@field mWasHeldDownPing boolean
---@field mpPingToSpawn APing
---@field mpPingToRemove APing
UPingSystemComponent = {}

function UPingSystemComponent:UpdatePings() end
---@param pOwner AGameplayPC
---@param WorldLocation FVector
---@param WorldDirection FVector
---@param pingColor FColor
---@param pingType EPingType
function UPingSystemComponent:ServerDoPing(pOwner, WorldLocation, WorldDirection, pingColor, pingType) end
---@param pPC AGameplayPC
---@return boolean
function UPingSystemComponent:OwnsActivePing(pPC) end
function UPingSystemComponent:OnRep_SetPingToSpawn() end
function UPingSystemComponent:OnRep_SetPingToRemove() end
---@param pActor AActor
---@return boolean
function UPingSystemComponent:IsActorBeingPinged(pActor) end
---@return APing
function UPingSystemComponent:GetPingToSpawn() end
---@return TArray<APing>
function UPingSystemComponent:GetAllPings() end
---@param pingToSpawn FPingData
function UPingSystemComponent:DoServerSpawnPing(pingToSpawn) end
---@param pPingToSpawn APing
function UPingSystemComponent:DoServerSetPingToSpawn(pPingToSpawn) end
---@param pPingToRemove APing
function UPingSystemComponent:DoServerSetPingToRemove(pPingToRemove) end
---@param pOwner AGameplayPC
---@param WorldLocation FVector
---@param WorldDirection FVector
---@param pingColor FColor
---@param pingType EPingType
function UPingSystemComponent:DoServerDoPing(pOwner, WorldLocation, WorldDirection, pingColor, pingType) end
---@param pPing APing
function UPingSystemComponent:DoServerDecoratePing(pPing) end
---@param pingToClear APing
function UPingSystemComponent:DoServerClearPing(pingToClear) end
---@param pNewPing APing
function UPingSystemComponent:DoServerCheckDuplicateAndAddToList(pNewPing) end
---@param pNewPing APing
function UPingSystemComponent:DoServerAddPingToListRaw(pNewPing) end
---@param givenActor AActor
function UPingSystemComponent:ClearPingOfActor(givenActor) end


---@class UPlatformImage : UImage
---@field ActionType EGameActionType
---@field ControllerVisibility ESlateVisibility
---@field KeyboardVisibility ESlateVisibility
UPlatformImage = {}

function UPlatformImage:OnDeviceTypeChanged() end


---@class UPlayAsUserButton : UBaseUserButton
---@field TeenBackground UMaterialInstance
---@field EvilBackground UMaterialInstance
---@field EventBackgrounds TMap<ESeasonalEventType, UMaterialInstance>
---@field TeenHighlight UMaterialInstance
---@field EvilHighlight UMaterialInstance
---@field EventHighlights TMap<ESeasonalEventType, UMaterialInstance>
---@field mpBackgroundImage UImage
---@field mpPulseImage UImage
---@field mpButtonText UTextBlock
UPlayAsUserButton = {}



---@class UPlayReadyPanel : UMetaWidget
---@field mpPlayReadyButton UPlayAsUserButton
---@field mpModeSelectButton UGameModeSelectUserButton
---@field mpCustomFactionWidget UCustomFactionWidget
UPlayReadyPanel = {}



---@class UPlayerAccountAllFilterWidget : UBaseAccountFilterWidget
UPlayerAccountAllFilterWidget = {}


---@class UPlayerAccountCharacterFilterWidget : UBaseAccountFilterWidget
---@field OnlyShowGood boolean
---@field OnlyShowEvil boolean
UPlayerAccountCharacterFilterWidget = {}



---@class UPlayerAccountCharacterProgressWidget : UUserWidget
---@field mpCharacterImage UImage
---@field mLastCharacterTypeShown ECharacterType
---@field mpCharacterInfoBox UVerticalBox
---@field mStarPowerIcons TArray<UImage>
---@field mpStarPowerText UTextBlock
---@field mpCurrentLevelText UTextBlock
---@field mpCircularProgressMaterialInstance UMaterialInstance
---@field mpDynamicCircularMaterialInstance UMaterialInstanceDynamic
---@field mpCircleTexture UTexture2D
---@field mpLevelProgressImage UImage
---@field mStarPowerFilledColor FLinearColor
---@field mStarPowerUnFilledColor FLinearColor
UPlayerAccountCharacterProgressWidget = {}

---@param Amount int32
function UPlayerAccountCharacterProgressWidget:SetCharacterStarPower(Amount) end
---@param Level int32
---@param currentExperience int32
---@param experienceNeeded int32
function UPlayerAccountCharacterProgressWidget:SetCharacterLevel(Level, currentExperience, experienceNeeded) end


---@class UPlayerAccountCharacterTileWidget : UBaseAccountTileWidget
---@field mpCharacterIcon UImage
---@field mpCharacterNameText UTextBlock
UPlayerAccountCharacterTileWidget = {}



---@class UPlayerAccountCustomizeWidget : UUserWidget
---@field mpAvatarListWidget UBaseItemList
---@field mpActionButton UActionButton
UPlayerAccountCustomizeWidget = {}

---@param ItemId FDbItemId
---@param Grantable FGrantable
function UPlayerAccountCustomizeWidget:OnAvatarSelected(ItemId, Grantable) end
function UPlayerAccountCustomizeWidget:OnAvatarDoubleClick() end
function UPlayerAccountCustomizeWidget:OnActionPressed() end


---@class UPlayerAccountDailyRetentionWidget : UUserWidget
UPlayerAccountDailyRetentionWidget = {}


---@class UPlayerAccountFilterTileWidget : UMetaWidget
UPlayerAccountFilterTileWidget = {}


---@class UPlayerAccountLevelFilterWidget : UBaseAccountFilterWidget
UPlayerAccountLevelFilterWidget = {}


---@class UPlayerAccountLinkAccountsWidget : UUserWidget
UPlayerAccountLinkAccountsWidget = {}


---@class UPlayerAccountManager : UObject
---@field mOwningClientStateManager TWeakObjectPtr<UClientStateManager>
---@field mPlayerPoints TMap<EPointType, FPointValue>
---@field mInventoryItems TMap<FGrantable, FInventoryItemData>
---@field mPlayerSlots TMap<EPlayerSlot, FGrantable>
---@field mInventoryPrerequisitesToCheck TArray<FGrantable>
---@field mPlayerPointPrerequisitesToCheck TArray<FGrantable>
---@field mAccountStats FAccountStatCollectionData
---@field mCharacterStats TMap<ECharacterType, FAccountStatCollectionData>
---@field mWeaponStats TMap<EWeaponTypeEnum, FAccountStatCollectionData>
---@field mLevelStats TMap<ELevelType, FAccountStatCollectionData>
---@field mDisplayName FString
---@field mbPendingClaimPrizes boolean
---@field mbWaitingOnClaimPrizes boolean
---@field mbFinishedClaimingPrizes boolean
---@field mPrizesWaitingForPickup TArray<FGrantable>
---@field mbPendingInventoryRefresh boolean
---@field mbWaitingOnInventoryRefresh boolean
---@field mbPendingInventoryPointRefresh boolean
---@field mbPendingInventoryItemAndPointRefresh boolean
---@field mbPendingPlayerSlotsRefresh boolean
---@field mbCurrencyAmountDirty boolean
---@field mbPendingTeenTutorialComplete boolean
---@field mbWaitingOnTeenTutorialComplete boolean
---@field mbPendingEvilTutorialComplete boolean
---@field mbWaitingOnEvilTutorialComplete boolean
UPlayerAccountManager = {}

---@param prizeList TArray<FGrantable>
function UPlayerAccountManager:RecieveGeneratedPrizes(prizeList) end
function UPlayerAccountManager:QueueTeenTutorialComplete() end
function UPlayerAccountManager:QueuePlayerSlotsRefresh() end
function UPlayerAccountManager:QueueInventoryRefresh() end
function UPlayerAccountManager:QueueInventoryPointRefresh() end
function UPlayerAccountManager:QueueInventoryItemsAndPointsRefresh() end
function UPlayerAccountManager:QueueEvilTutorialComplete() end
function UPlayerAccountManager:QueueClaimPrizes() end
---@return boolean
function UPlayerAccountManager:IsCurrencyAmountDirty() end
---@return TArray<FGrantable>
function UPlayerAccountManager:GetGeneratedPrizes() end


---@class UPlayerAccountMasteryWidget : UUserWidget
---@field mpAccountLevelText UTextBlock
---@field mpAccountCreationDateText UTextBlock
---@field mpMasteryProgressBar UProgressBar
---@field mpMasteryProgressText UTextBlock
UPlayerAccountMasteryWidget = {}

function UPlayerAccountMasteryWidget:Rebuild() end


---@class UPlayerAccountMatchDetailsOverlayWidget : UBaseOverlay
UPlayerAccountMatchDetailsOverlayWidget = {}


---@class UPlayerAccountMatchHistoryTileWidget : UUserWidget
UPlayerAccountMatchHistoryTileWidget = {}


---@class UPlayerAccountMatchHistoryWidget : UUserWidget
UPlayerAccountMatchHistoryWidget = {}


---@class UPlayerAccountOverviewStatWidget : UMetaWidget
---@field TitleText FText
---@field mpTitleText UTextBlock
---@field mpStatText UTextBlock
---@field mpSubText UTextBlock
---@field mpCharacterIcon UImage
UPlayerAccountOverviewStatWidget = {}

---@param Val uint32
function UPlayerAccountOverviewStatWidget:SetTimeValue(Val) end
---@param Val uint32
---@param Total uint32
function UPlayerAccountOverviewStatWidget:SetTallyValue(Val, Total) end
---@param Val uint32
function UPlayerAccountOverviewStatWidget:SetCountValue(Val) end
---@param CharType ECharacterType
---@param subText FText
function UPlayerAccountOverviewStatWidget:SetCharacterValue(CharType, subText) end


---@class UPlayerAccountOverviewWidget : UUserWidget
---@field mpTotalTimePlayedStat UPlayerAccountOverviewStatWidget
---@field mpMatchesWonAsTeenStat UPlayerAccountOverviewStatWidget
---@field mpMatchesWonAsEvilStat UPlayerAccountOverviewStatWidget
---@field mpMoviesCompletedStat UPlayerAccountOverviewStatWidget
---@field mpMostPlayedTeenStat UPlayerAccountOverviewStatWidget
---@field mpMostPlayedEvilStat UPlayerAccountOverviewStatWidget
---@field mpMostWeaponStrikesStat UPlayerAccountOverviewStatWidget
---@field mpMostTeensHitStat UPlayerAccountOverviewStatWidget
UPlayerAccountOverviewWidget = {}

function UPlayerAccountOverviewWidget:CalculateTotalTime() end
function UPlayerAccountOverviewWidget:CalculateTeenMatchesWon() end
function UPlayerAccountOverviewWidget:CalculateMoviesCompleted() end
function UPlayerAccountOverviewWidget:CalculateMostWeaponStrikes() end
function UPlayerAccountOverviewWidget:CalculateMostTeensHitStat() end
function UPlayerAccountOverviewWidget:CalculateMostPlayedTeen() end
function UPlayerAccountOverviewWidget:CalculateMostPlayedEvil() end
function UPlayerAccountOverviewWidget:CalculateEvilMatchesWon() end


---@class UPlayerAccountPlayerInfoWidget : UMetaWidget
---@field mpSocialPortraitWidget USocialPortraitWidget
---@field mpPlayerNameText UTextBlock
---@field mpMasteryLevelText UTextBlock
---@field mpMasteryExpText UTextBlock
---@field mpMasteryProgressBar UProgressBar
UPlayerAccountPlayerInfoWidget = {}



---@class UPlayerAccountScreen : UBaseScreen
---@field mpPlayerInfoWidget UPlayerAccountPlayerInfoWidget
---@field mpPreviewWidgetSwitcher UWidgetSwitcher
---@field mpTrophiesWidget UPlayerAccountTrophiesWidget
---@field mpStatsWidget UPlayerAccountStatsWidget
---@field mpPortraitCustomizeWidget UPlayerAccountCustomizeWidget
---@field mpMasteryWidget UPlayerAccountMasteryWidget
---@field mpPortraitCustomizePanel UCanvasPanel
---@field mpStatsPanel UCanvasPanel
---@field mpMasteryPanel UCanvasPanel
---@field mpTrophiesPanel UCanvasPanel
---@field mpPortraitsButton UMainMenuButton
---@field mpMasteryButton UMainMenuButton
---@field mpStatsButton UMainMenuButton
---@field mpTrophiesButton UMainMenuButton
---@field mMenuButtons TArray<UMainMenuButton>
---@field mCurrentlySelectedTabIndex int32
UPlayerAccountScreen = {}

---@param Index int32
function UPlayerAccountScreen:SelectIndex(Index) end
---@param pWidget UUserWidget
function UPlayerAccountScreen:RefreshChildrenStatInformation(pWidget) end
function UPlayerAccountScreen:OnTrophiesPressed() end
function UPlayerAccountScreen:OnStatsPressed() end
function UPlayerAccountScreen:OnPortraitsPressed() end
function UPlayerAccountScreen:OnMasteryPressed() end
---@param pButton UMainMenuButton
function UPlayerAccountScreen:OnButtonPressed(pButton) end
---@return boolean
function UPlayerAccountScreen:IsShowingTrophies() end
---@return boolean
function UPlayerAccountScreen:IsShowingStats() end
---@return boolean
function UPlayerAccountScreen:IsShowingPortraits() end
---@return boolean
function UPlayerAccountScreen:IsShowingMastery() end


---@class UPlayerAccountSeasonPassWidget : UUserWidget
UPlayerAccountSeasonPassWidget = {}


---@class UPlayerAccountStatGroupWidget : UMetaWidget
---@field FactionFilter EFaction
---@field CharacterType ECharacterType
---@field WeaponTypeFilter EWeaponTypeEnum
---@field LevelTypeFilter ELevelType
---@field Stats TArray<FStatWidgetData>
---@field NumColumns int32
---@field WidgetType EStatWidgetType
---@field mpTitleText UTextBlock
---@field mpGridPanel UUniformGridPanel
UPlayerAccountStatGroupWidget = {}



---@class UPlayerAccountStatTileWidget : UBaseAccountTileWidget
---@field mpStatText UTextBlock
UPlayerAccountStatTileWidget = {}



---@class UPlayerAccountStatsWidget : UBaseAccountStatPageWidget
---@field mpLevelSwitcherWidget UPlayerAccountLevelFilterWidget
---@field mpPlayerAccountOverviewWidget UPlayerAccountOverviewWidget
---@field mpContentSwitcher UWidgetSwitcher
UPlayerAccountStatsWidget = {}



---@class UPlayerAccountTrophiesWidget : UBaseAccountStatPageWidget
UPlayerAccountTrophiesWidget = {}


---@class UPlayerAccountTrophyTileWidget : UBaseAccountTileWidget
---@field mpTrophyIcon UImage
---@field mpCompletedText UTextBlock
---@field mpLockedPanel UCanvasPanel
UPlayerAccountTrophyTileWidget = {}

---@param pTex UTexture2D
function UPlayerAccountTrophyTileWidget:OnTextureLoaded(pTex) end


---@class UPlayerAccountWeaponFilterWidget : UBaseAccountFilterWidget
UPlayerAccountWeaponFilterWidget = {}


---@class UPlayerDetailsMenuScreen : UBaseOverlay
---@field mpPlayerDetailsWidget UEndOfRoundPlayerDetailsWidget
UPlayerDetailsMenuScreen = {}



---@class UPlayerJourneyDataSave : USaveGame
---@field mJourneyDataAsString FString
UPlayerJourneyDataSave = {}



---@class UPlayerLoadStep : UObject
UPlayerLoadStep = {}


---@class UPlayerLoadout : ULoadoutBase
---@field mCharacterLoadoutByCharacterType TMap<ECharacterType, UCharacterLoadout>
---@field mbAreRequiredItemsFullyLoaded boolean
UPlayerLoadout = {}

function UPlayerLoadout:OnItemDataAssetsLoaded() end


---@class UPlayerSaveGame : USaveGame
---@field mPlayerSettings FPlayerSettingsStruct
UPlayerSaveGame = {}

---@return ECharacterType
function UPlayerSaveGame:GetLastSelectedTeenCharacter() end
---@return ECharacterType
function UPlayerSaveGame:GetLastSelectedEvilCharacter() end
---@return ECharacterType
function UPlayerSaveGame:GetLastSelectedCharacter() end


---@class UPlayerSlotItemListWidget : UBaseItemList
UPlayerSlotItemListWidget = {}


---@class UPlayerTipsComponent : UActorComponent
---@field mpTPChar ATPChar
---@field mTipRequests TArray<FTipRequest>
UPlayerTipsComponent = {}

---@param I int32
function UPlayerTipsComponent:MulticastAllShowAbilityTip(I) end
function UPlayerTipsComponent:MulticastAllOnWalkieUsed() end
---@param pTPChar ATPChar
function UPlayerTipsComponent:MulticastAllOnTeenEnteredRange(pTPChar) end
function UPlayerTipsComponent:MulticastAllOnSpawnedSpectral() end
function UPlayerTipsComponent:MulticastAllOnSeenEvilEnergy() end
---@param proximityAlpha float
function UPlayerTipsComponent:MulticastAllOnRepTrapProximity(proximityAlpha) end
---@param shardState EShardState
function UPlayerTipsComponent:MulticastAllOnRepShardState(shardState) end
---@param bIsDead boolean
function UPlayerTipsComponent:MulticastAllOnRepPlayerDead(bIsDead) end
---@param bSensing boolean
function UPlayerTipsComponent:MulticastAllOnRepIsSensing(bSensing) end
---@param bIsProne boolean
function UPlayerTipsComponent:MulticastAllOnRepIsProne(bIsProne) end
---@param bIsInjured boolean
function UPlayerTipsComponent:MulticastAllOnRepIsInjured(bIsInjured) end
---@param bIsEnraged boolean
function UPlayerTipsComponent:MulticastAllOnRepIsEnraged(bIsEnraged) end
---@param bIsEcholocating boolean
function UPlayerTipsComponent:MulticastAllOnRepIsEcholocating(bIsEcholocating) end
---@param bHearingTensionTrackClearly boolean
function UPlayerTipsComponent:MulticastAllOnRepHearingTensionTrackClearly(bHearingTensionTrackClearly) end
---@param bCanHearCrafting boolean
function UPlayerTipsComponent:MulticastAllOnRepCanHearCrafting(bCanHearCrafting) end
---@param activeActionType EActiveActionType
function UPlayerTipsComponent:MulticastAllOnRepActiveAction(activeActionType) end
function UPlayerTipsComponent:MulticastAllOnFeastStarted() end
function UPlayerTipsComponent:MulticastAllOnFailedStation() end
function UPlayerTipsComponent:MulticastAllOnEvilChosen() end
function UPlayerTipsComponent:MulticastAllOnEvilAttackMissed() end
function UPlayerTipsComponent:MulticastAllOnDollmasterTrapTriggered() end
function UPlayerTipsComponent:MulticastAllOnDangerSenseDollminion() end
---@param weaponType EWeaponTypeEnum
function UPlayerTipsComponent:MulticastAllOnCraftedWeapon(weaponType) end
function UPlayerTipsComponent:MulticastAllOnBeginTransformation() end


---@class UPlotTwistManager : UObject
UPlotTwistManager = {}


---@class UPortraitItemTileWidget : UBaseItemTile
---@field mLockedOpacity float
UPortraitItemTileWidget = {}



---@class UPrerequisiteValidator : UObject
---@field mpOwningClientStateManager UClientStateManager
---@field mCheckers TArray<TScriptInterface<IPrerequisiteChecker>>
UPrerequisiteValidator = {}



---@class UPrivacyTab : UBaseTab
---@field mpShowSocialNotifications UOptionToggleUserButton
---@field mpNotifyFriendsWhenPlaying UOptionToggleUserButton
---@field mpAutoMutePrevMutedPlayers UOptionToggleUserButton
---@field mpHideDisplayName UOptionToggleUserButton
---@field mpHideOtherPlayerNames UOptionToggleUserButton
---@field mpMatchmakingDelay UOptionToggleUserButton
---@field mpAutoMuteNonPartyPlayers UOptionToggleUserButton
---@field mpResetScreenInfoPopups UOptionSingleUserButton
---@field mpResetLoadingScreenTips UOptionSingleUserButton
---@field mpPrivacyWarningBorder UBorder
---@field mpNavScrollBox UNavScrollBox
UPrivacyTab = {}

function UPrivacyTab:OnResetScreenInfoPopupsConfirm() end
function UPrivacyTab:OnResetScreenInfoPopups() end
function UPrivacyTab:OnResetLoadingScreenTipsConfirm() end
function UPrivacyTab:OnResetLoadingScreenTips() end


---@class UPrizeBoxUserButton : UBaseUserButton
---@field mpPrizeBoxCounterText UTextBlock
---@field mpPrizeBoxIcon UImage
---@field mpBlurImage UImage
---@field mpBgImage UImage
UPrizeBoxUserButton = {}

function UPrizeBoxUserButton:OnPrizeBoxesButton() end


---@class UPrizeEquipmentWidget : UBaseUserButton
---@field mpStateSwitcher UStateSwitcher
---@field mpPrizeRarity UImage
---@field mpPrizeIcon UImage
---@field mpHighlightBorder UBorder
UPrizeEquipmentWidget = {}

---@param pTex UTexture2D
function UPrizeEquipmentWidget:OnTextureLoaded(pTex) end
function UPrizeEquipmentWidget:OnButtonPressed() end


---@class UPrizeItemListWidget : UBaseItemList
UPrizeItemListWidget = {}


---@class UPrizeItemTileWidget : UBaseItemTile
---@field mpCountText UTextBlock
UPrizeItemTileWidget = {}



---@class UPrizeMenuItemWidget : UUserWidget
UPrizeMenuItemWidget = {}


---@class UPrizeMenuOverlayWidget : UBaseOverlay
---@field mpItemListWidget UPrizeItemListWidget
---@field mpActionButton UActionButton
---@field mpPrizePackButton UActionButton
---@field mpPrizeIcon UImage
---@field mpPrizeNameText UTextBlock
---@field mpRarityBorder UBorder
---@field mpPrizeRarityText UTextBlock
---@field mpPrizeDescText URichTextBlock
---@field mpPrizeCountText UTextBlock
---@field mpPrizeFlavorText UTextBlock
---@field mpNonSelectableScrollBox UNonSelectableScrollBox
---@field mpEscapeButton UButton
---@field mpPrizePacksCountImage UImage
---@field mpPrizePacksCountText UTextBlock
---@field mpBusyModal UBusyModalWidget
UPrizeMenuOverlayWidget = {}

---@param pTex UTexture2D
function UPrizeMenuOverlayWidget:OnTextureLoaded(pTex) end
---@param ItemId FDbItemId
---@param Grantable FGrantable
function UPrizeMenuOverlayWidget:OnPrizeSelected(ItemId, Grantable) end
function UPrizeMenuOverlayWidget:OnPrizePacksPressed() end
function UPrizeMenuOverlayWidget:OnPrizeDoubleClick() end
function UPrizeMenuOverlayWidget:OnEscapePressed() end
function UPrizeMenuOverlayWidget:OnActionPressed() end


---@class UPrizePackItemWidget : UMetaWidget
---@field mpPrizePackButton UNavButton
---@field mpPrizePackIcon UImage
---@field mpNameText UTextBlock
---@field mpPrizePackCountText UTextBlock
---@field mpEvilBoxTexture UTexture2D
---@field mpTeenBoxTexture UTexture2D
UPrizePackItemWidget = {}

function UPrizePackItemWidget:OnButtonSelected() end
function UPrizePackItemWidget:OnButtonDoubleClicked() end
---@return UNavButton
function UPrizePackItemWidget:GetPrizePackButton() end
---@param chestType FString
---@return FText
function UPrizePackItemWidget:GetFormattedNameForPrizePack(chestType) end


---@class UPrizePackOverlayWidget : UBaseOverlay
---@field mpAnimatedSnapNavScrollBox UAnimatedSnapNavScrollBox
---@field mpNavScrollBox UNavScrollBox
---@field mpOpenButton UActionButton
---@field mpBuyMoreButton UActionButton
---@field mpOpenPackPromptWidget UButtonPromptWidget
---@field mpBuyPacksPromptWidget UButtonPromptWidget
---@field mPrizeList TArray<FPrizePackData>
---@field mpTotalPacksText UTextBlock
---@field mpScrollLeftButton UButton
---@field mpScrollRightButton UButton
---@field mpIndexIndicatorWidget UIndexIndicatorBoxWidget
UPrizePackOverlayWidget = {}

function UPrizePackOverlayWidget:OnScrollRightButtonPressed() end
function UPrizePackOverlayWidget:OnScrollLeftButtonPressed() end
function UPrizePackOverlayWidget:OnBuyMorePacksButtonPressed() end
---@param Data FString
function UPrizePackOverlayWidget:OnButtonSelected(Data) end
function UPrizePackOverlayWidget:OnButtonDoubleClicked() end
function UPrizePackOverlayWidget:OnActionPressed() end


---@class UPrizeRevealOverlayWidget : UBaseOverlay
UPrizeRevealOverlayWidget = {}


---@class UPrizeRevealWidget : UMetaWidget
---@field HoverAnim UWidgetAnimation
---@field UnHoverAnim UWidgetAnimation
---@field RevealAnim UWidgetAnimation
---@field mpNavButton UNavButton
---@field mpRarityImage UImage
---@field mpPrizeIcon UImage
---@field mpPrizeNameText UTextBlock
---@field mbAllowedToBeHovered boolean
---@field mpPrizeDescriptionText URichTextBlock
---@field mpSelectionFrame UImage
---@field mpBackgroundLayer1 UImage
---@field mpBackgroundLayer2 UImage
---@field mpBackgroundLayer3 UImage
---@field mpBackgroundGlow UImage
---@field mpDescTextWrapper USizeBox
---@field mTeenStyleGuide FPrizeRevealStyleGuide
---@field mEvilStyleGuide FPrizeRevealStyleGuide
---@field mCurrentlySelectedStyleGuide FPrizeRevealStyleGuide
---@field mbIsOwningCharacterEvil boolean
UPrizeRevealWidget = {}

function UPrizeRevealWidget:StartRevealAnim() end
---@param bNewValue boolean
function UPrizeRevealWidget:SetOwningCharacterEvil(bNewValue) end
---@param bSet boolean
function UPrizeRevealWidget:SetHidden(bSet) end
---@param pTex UTexture2D
function UPrizeRevealWidget:OnTextureLoaded(pTex) end
function UPrizeRevealWidget:OnRevealPrizeCompleted() end
function UPrizeRevealWidget:OnButtonUnHovered() end
function UPrizeRevealWidget:OnButtonHovered() end
---@return UNavButton
function UPrizeRevealWidget:GetNavButton() end


---@class UPrizeSelectionWidget : UMetaWidget
---@field mpTeenPrizeEquipmentWidget UPrizeEquipmentWidget
---@field mpEvilPrizeEquipmentWidget UPrizeEquipmentWidget
---@field mpButton UButton
---@field mpBlurImage UImage
---@field mpHighlightImage UImage
---@field mbSelectedCharacterPrizesOnly boolean
UPrizeSelectionWidget = {}

function UPrizeSelectionWidget:OnButtonPressed() end


---@class UPrizeSummaryWidget : UUserWidget
---@field mpPrizeText UTextBlock
---@field mbHasBeenPopulated boolean
---@field mpOwnerBaseWidget UEndOfRoundBaseWidget
UPrizeSummaryWidget = {}

---@param prizesGenerated TArray<FGrantable>
function UPrizeSummaryWidget:OnFinishedDiscoveringPrizes(prizesGenerated) end
---@param pOwnerWidget UEndOfRoundBaseWidget
function UPrizeSummaryWidget:OnActivate(pOwnerWidget) end


---@class UPrizesUserButton : UBaseUserButton
---@field TeenBackground UTexture2D
---@field EvilBackground UTexture2D
---@field TeenHighlight UTexture2D
---@field EvilHighlight UTexture2D
---@field mpBackgroundImage UImage
---@field mpPlayingAsText UTextBlock
---@field mpFactionText UTextBlock
UPrizesUserButton = {}



---@class UPurchasableJourneyMapNode : UBaseJourneyMapNode
---@field mpAuraCostText UTextBlock
UPurchasableJourneyMapNode = {}



---@class URCCopterSkinDataAsset : UTeenWeaponSkinDataAsset
---@field mRCCopterMesh FSkinSkeletalMesh
---@field mRCCopterParticleSystem FSkinParticleSystem
---@field mExplosionParticleSystem FSkinParticleSystem
---@field mEmissionParticleSystem FSkinParticleSystem
---@field mSplineMesh FSkinStaticMesh
---@field mRCCopterLightBeamOn FSkinLight
---@field mRCCopterLightBeamOff FSkinLight
---@field mRCCopterRocketSpawnInfo TArray<FSplineInterpSpawnInfo>
---@field mWiseRCCopterSwitch EWise_WEP_RCCopter
URCCopterSkinDataAsset = {}



---@class URayGunSkinDataAsset : UTeenWeaponSkinDataAsset
---@field mProjectileMesh FSkinStaticMesh
---@field mTrailParticles FSkinParticleSystem
---@field mExplosionParticles FSkinParticleSystem
---@field mProjectileDecal FSkinDecal
---@field mWiseRayGunSwitch EWise_WEP_RayGun
URayGunSkinDataAsset = {}



---@class URemoteCharMovementComponent : UBaseCharMovementComponent
---@field mCurrentFloorWorldPosition FVector
---@field mGravityMultiplier float
---@field mbRemoteCharFalling boolean
---@field mTargetHeightOffset float
URemoteCharMovementComponent = {}

---@param Offset float
function URemoteCharMovementComponent:SetTargetHeightOffset(Offset) end
---@param Multiplier float
function URemoteCharMovementComponent:SetGravityMultiplier(Multiplier) end
---@return boolean
function URemoteCharMovementComponent:IsRemoteCharFalling() end
---@return float
function URemoteCharMovementComponent:GetTargetHeightOffset() end
---@return float
function URemoteCharMovementComponent:GetGravityMultiplier() end
---@return FVector
function URemoteCharMovementComponent:GetCurrentFloorWorldPosition() end


---@class UReplayItemWidget : UUserWidget
---@field mpNameText UTextBlock
---@field mpTimestampText UTextBlock
---@field mpViewButton UNavButton
---@field mpDeleteButton UNavButton
---@field mpOwner UReplayModalWidget
---@field mReplayInfo FReplayInfo
UReplayItemWidget = {}

function UReplayItemWidget:OnViewPressed() end
function UReplayItemWidget:OnDeletePressed() end


---@class UReplayModalWidget : UBaseModal
---@field mpConfirmButton UBoxUserButton
---@field mpReplayBox UVerticalBox
UReplayModalWidget = {}

function UReplayModalWidget:OnConfirmPressed() end


---@class UReportModalWidget : UBaseModal
---@field mpTextBox UMultiLineEditableTextBox
---@field mpDropDownMenu UNavDropDownMenu
---@field mpMessageText UTextBlock
---@field mpSubmitButton UBoxUserButton
---@field mpCancelButton UBoxUserButton
UReportModalWidget = {}

---@param ButtonText FText
function UReportModalWidget:SetSubmitButtonText(ButtonText) end
---@param messageText FText
function UReportModalWidget:SetMessageText(messageText) end
---@param HintText FText
function UReportModalWidget:SetHintText(HintText) end
---@param FriendlyName FString
---@param PlayerAccountId FString
---@param MatchID FString
function UReportModalWidget:SetData(FriendlyName, PlayerAccountId, MatchID) end
---@param Text FText
---@param CommitType ETextCommit::Type
function UReportModalWidget:OnTextCommit(Text, CommitType) end
function UReportModalWidget:OnSubmitPressed() end
function UReportModalWidget:OnCancelPressed() end


---@class URewardClaimScreen : UBaseScreen
---@field mpRewardIn UWidgetAnimation
---@field mpRewardOut UWidgetAnimation
---@field mpScreenOn UWidgetAnimation
---@field mTimeToShowRewards float
---@field mpBusyModal UBusyModalWidget
---@field mpRewardCard UBaseRewardWidget
URewardClaimScreen = {}

function URewardClaimScreen:ShowRewards() end
---@param bFoundEntitlements boolean
function URewardClaimScreen:OnStoreEntitlementsCheckComplete(bFoundEntitlements) end
function URewardClaimScreen:OnShowRewardCompleted() end
function URewardClaimScreen:OnRewardOutFinished() end
function URewardClaimScreen:OnRewardInFinished() end


---@class URewardItemWidget : UMetaWidget
---@field mpNameText UTextBlock
---@field mpTexture UImage
---@field mpRarityImage UImage
---@field mpOwner URewardModalWidget
URewardItemWidget = {}

---@param pTex UTexture2D
function URewardItemWidget:OnTextureLoaded(pTex) end


---@class URewardManager : UObject
---@field mUnclaimedChests TMap<FString, FRewardChest>
---@field mClaimedChests TMap<FString, FClaimedRewardChest>
URewardManager = {}



---@class URewardModalWidget : UBaseModal
---@field mpConfirmButton UBoxUserButton
---@field mpInnerCanvas UCanvasPanel
---@field mpCloseAllButton UBoxUserButton
---@field mpRewardsGrid UUniformGridPanel
URewardModalWidget = {}

function URewardModalWidget:OnConfirmPressed() end
function URewardModalWidget:OnCloseAllPressed() end


---@class URingAligningMinigame : USkillTestMinigameBase
---@field mClientTimer float
---@field mPressedTimer float
---@field mSpeed float
---@field mMaxRadius float
---@field mMinRadius float
---@field mTargetRingInnerRadius float
---@field mTargetRingOuterRadius float
---@field mAdjustmentMultiplier float
---@field mFailureTimer float
---@field mCurrentRadius float
---@field mAdjustmentDistance float
---@field mbIsActionPressed boolean
URingAligningMinigame = {}

---@return float
function URingAligningMinigame:GetTargetOuterRadius() end
---@return float
function URingAligningMinigame:GetTargetInnerRadius() end
---@return FLinearColor
function URingAligningMinigame:GetProgressColor() end
---@return float
function URingAligningMinigame:GetCurrentRadius() end
---@return FLinearColor
function URingAligningMinigame:GetCircleColor() end


---@class URoomVolumeManager : UWorldSubsystem
---@field mRoomVolumes TArray<ARoomVolume>
URoomVolumeManager = {}

---@param pWorld UWorld
---@return URoomVolumeManager
function URoomVolumeManager:GetInstance(pWorld) end


---@class URotatorMinigame : USkillTestMinigameBase
---@field mNodeAngleWidth float
---@field mMinAngleToRotate float
---@field mNodesToGenerate int32
---@field mWinningAngleTolerance float
---@field mBaseSpinSpeed float
---@field mbSubmissionLockout boolean
---@field mCurrentPuzzle TArray<int32>
---@field mCurrentAngle float
---@field mBaseTimeToLockOut float
---@field mLockoutTimer float
---@field mbPuzzleNeedsRegeneration boolean
---@field mpNodeRotatorPanel UCanvasPanel
---@field mpNodeIcon UTexture2D
---@field mpTargetIcon UTexture2D
---@field mpCurrentRotatorMinigame UHUDMinigame_Rotator
---@field mbSnapped boolean
---@field mbServerWaitingOnPuzzleCompletedDelay boolean
---@field mbGameHiddenOnClient boolean
---@field mDirectionInputs TArray<int32>
---@field mServerSubmissionDelayTimer float
URotatorMinigame = {}

function URotatorMinigame:TryToSnapPuzzle() end
---@param puzzle TArray<int32>
---@return boolean
function URotatorMinigame:TestSymmetry(puzzle) end
---@return boolean
function URotatorMinigame:ShouldDisplayFailState() end
---@param bNewValue boolean
function URotatorMinigame:SetSubmissionLockout(bNewValue) end
---@param NewValue int32
function URotatorMinigame:SetNodesToGenerate(NewValue) end
---@param bNewValue boolean
function URotatorMinigame:SetIsSnapped(bNewValue) end
---@param bNewValue boolean
function URotatorMinigame:SetGameHiddenOnClient(bNewValue) end
---@param pBar UHUDMinigame_Rotator
function URotatorMinigame:SetCurrentRotatorMinigame(pBar) end
---@param NewValue TArray<int32>
function URotatorMinigame:SetCurrentPuzzle(NewValue) end
---@param NewValue float
function URotatorMinigame:SetCurrentAngle(NewValue) end
---@return boolean
function URotatorMinigame:IsSnapped() end
---@return boolean
function URotatorMinigame:IsLockedOut() end
---@return boolean
function URotatorMinigame:IsGameHiddenOnClient() end
---@return boolean
function URotatorMinigame:HasCorrectRotation() end
---@return float
function URotatorMinigame:GetWinningAngleTolerance() end
---@return boolean
function URotatorMinigame:GetSubmissionLockout() end
---@return float
function URotatorMinigame:GetSpinSpeed() end
---@return int32
function URotatorMinigame:GetNodesToGenerate() end
---@return float
function URotatorMinigame:GetNodeAngleWidth() end
---@return boolean
function URotatorMinigame:GetNeedsRegeneration() end
---@return float
function URotatorMinigame:GetMinAngleToRotate() end
---@return float
function URotatorMinigame:GetLockoutTimer() end
---@return UHUDMinigame_Rotator
function URotatorMinigame:GetCurrentRotatorMinigame() end
---@return TArray<int32>
function URotatorMinigame:GetCurrentPuzzle() end
---@return float
function URotatorMinigame:GetCurrentAngle() end
---@return float
function URotatorMinigame:GetBaseSpinSpeed() end
function URotatorMinigame:GeneratePuzzleRotation() end
function URotatorMinigame:GenerateNewPuzzle() end
---@param DeltaTime float
function URotatorMinigame:DoServerUpdateSubmissionDelay(DeltaTime) end
---@param NewValue float
function URotatorMinigame:DoServerSetLockoutTimer(NewValue) end
---@param bNewValue boolean
function URotatorMinigame:DoServerSetIsWaitingOnPuzzleCompletionDelay(bNewValue) end
function URotatorMinigame:DoServerPuzzleCompletedAfterDelay() end
---@return boolean
function URotatorMinigame:DoServerIsWaitingOnPuzzleCompletedDelay() end
---@param bSet boolean
function URotatorMinigame:ClientSetNeedsRegeneration(bSet) end
---@param bDidPass boolean
---@param puzzlesCompleted int32
function URotatorMinigame:ClientReceiveResponseForSubmission(bDidPass, puzzlesCompleted) end


---@class UScenarioDataAsset : UMapDataAsset
---@field mScenarioLevels TArray<FSoftObjectPath>
UScenarioDataAsset = {}



---@class UScenarioLoaderWidget : UBaseScreen
---@field mMDAIds TArray<FPrimaryAssetId>
---@field mCurrentScenario FPrimaryAssetId
---@field mpButtonLoadScenarioList UButton
---@field mpButtonLoadScenario UButton
---@field mpButtonUnload UButton
---@field mpScenarioList UComboBoxString
UScenarioLoaderWidget = {}

function UScenarioLoaderWidget:UpdateScenarioList() end
---@return boolean
function UScenarioLoaderWidget:UnLoadScenario() end
function UScenarioLoaderWidget:OnClickedTryUnloadScenario() end
function UScenarioLoaderWidget:OnClickedTryLoadScenario() end


---@class USceneDetailsWidget : UMetaWidget
---@field mpSceneRewardsWidget UMovieRewardWidget
---@field mpFlavorText URichTextBlock
---@field mpCodeBlockFlavorText URichTextBlock
---@field mpLockedBox UHorizontalBox
---@field mpNonSelectableScrollBox UNonSelectableScrollBox
---@field mpRewardBorder UBorder
USceneDetailsWidget = {}



---@class USceneListWidget : UMetaWidget
---@field mpNavScrollBox UNavScrollBox
---@field mpSceneListBox UVerticalBox
USceneListWidget = {}

---@param Data FString
function USceneListWidget:OnSceneSelected(Data) end


---@class USceneProgressionWidget : UMetaWidget
---@field mpTitleText URichTextBlock
---@field mpCountText UTextBlock
---@field mpProgressBar UProgressBar
USceneProgressionWidget = {}



---@class USceneRequirementWidget : UMetaWidget
---@field mpStateSwitcher UWidgetSwitcher
---@field mpStatusBorder UBorder
---@field mpStatusOverlay UOverlay
---@field mpCompletedOverlay UOverlay
---@field mpStatusIconOuter UImage
---@field mpStatusIconInner UImage
---@field mpRequirementText URichTextBlock
USceneRequirementWidget = {}



---@class USceneRewardIconGroupWidget : UMetaWidget
---@field mpRewardBox UHorizontalBox
USceneRewardIconGroupWidget = {}



---@class USceneRewardIconWidget : UMetaWidget
---@field mpRewardIcon UImage
---@field mpRewardText UTextBlock
USceneRewardIconWidget = {}



---@class USceneSummaryMovieHeaderWidget : UMetaWidget
---@field mpMovieTitleText UTextBlock
USceneSummaryMovieHeaderWidget = {}



---@class USceneSummaryOverlayWidget : UBaseOverlay
---@field mpSceneSummaryWidget USceneSummaryWidget
USceneSummaryOverlayWidget = {}



---@class USceneSummarySceneWidget : UMetaWidget
---@field mpTitleText UTextBlock
---@field mpRewardIconGroupWidget USceneRewardIconGroupWidget
---@field mpWidgetSwitcher UWidgetSwitcher
---@field mpContentBox UVerticalBox
---@field mpCompletedBox UHorizontalBox
---@field mpRequirementsBox UVerticalBox
---@field mRequirementWidgets TArray<USceneRequirementWidget>
---@field mProgressionWidgets TArray<USceneProgressionWidget>
USceneSummarySceneWidget = {}



---@class USceneSummaryWidget : UUserWidget
---@field ShowCompleted boolean
---@field HighlightedTitleColor FLinearColor
---@field DimmedTitleColor FLinearColor
---@field mpClassicBox UHorizontalBox
---@field mpClassicIcon UImage
---@field mpLimitedBox UHorizontalBox
---@field mpLimitedIcon UImage
---@field mpNoRequirementsMetBox UOverlay
---@field mpClassicsHeaderWidget USceneSummaryMovieHeaderWidget
---@field mpLimitedHeaderWidget USceneSummaryMovieHeaderWidget
---@field mpNonSelectableScrollBox UNonSelectableScrollBox
---@field mpSceneListBox UVerticalBox
USceneSummaryWidget = {}

function USceneSummaryWidget:FindClosestSelectedMovieTitle() end
---@param setId FString
function USceneSummaryWidget:AddMovieToList(setId) end


---@class USceneWidget : UMetaWidget
---@field RequirementsMetColor FLinearColor
---@field UnavailableColor FLinearColor
---@field CompletedColor FLinearColor
---@field mpUserButton UBaseUserButton
---@field mpStatusBorder UBorder
---@field mpStatusIcon UImage
---@field mpTitleText UTextBlock
---@field mpRewardIconGroupWidget USceneRewardIconGroupWidget
---@field mpWidgetSwitcher UWidgetSwitcher
---@field mpContentBox UVerticalBox
---@field mpCompletedBox UHorizontalBox
---@field mRequirementWidgets TArray<USceneRequirementWidget>
---@field mProgressionWidgets TArray<USceneProgressionWidget>
USceneWidget = {}

function USceneWidget:OnClicked() end


---@class UScenesScreen : UBaseScreen
---@field mpSceneListWidget USceneListWidget
---@field mpSceneDetailsWidget USceneDetailsWidget
---@field mpCategorySwitcher UCategorySwitcher
---@field mpInfoPanel UCanvasPanel
---@field mpInfoText UTextBlock
---@field mpTimerBorder UBorder
---@field mpTimerCountdownWidget UTimerCountdownWidget
UScenesScreen = {}

---@param Data FString
function UScenesScreen:SetMovieSetId(Data) end
function UScenesScreen:ResetMovieSetIndex() end
---@param pTex UTexture2D
function UScenesScreen:OnTextureLoaded(pTex) end
---@param Data FString
function UScenesScreen:OnSceneSelected(Data) end
---@param Index int32
function UScenesScreen:OnCategoryChanged(Index) end


---@class UScienceFetusmanAnimInstance : UAnimInstance
---@field mLookRotation FRotator
---@field mMinLookDist float
---@field mpGameplayGS AGameplayGS
UScienceFetusmanAnimInstance = {}

---@param DeltaTime float
function UScienceFetusmanAnimInstance:UpdateAnimationInstance(DeltaTime) end
function UScienceFetusmanAnimInstance:InitAnimInstance() end


---@class UScreenHeaderWidget : UMetaWidget
---@field mpNavigationHeaderWidget UNavigationHeaderWidget
---@field mpCharacterInfoHeaderWidget UCharacterInfoHeaderWidget
---@field mpCurrencyInfoHeaderWidget UCurrencyInfoHeaderWidget
---@field mbUseLargeIconNavigationStyle boolean
UScreenHeaderWidget = {}



---@class UScrollingSelectionTileWidget : UUserWidget
---@field mpButton UNavButton
---@field mIndex int32
---@field mpOwningScrollingSelectionWidget UScrollingSelectionTileWidget
UScrollingSelectionTileWidget = {}

---@param Index int32
function UScrollingSelectionTileWidget:SetTileIndex(Index) end
function UScrollingSelectionTileWidget:OnButtonPressed() end
function UScrollingSelectionTileWidget:NativeConstruct() end


---@class UScrollingSelectionWidget : UMetaWidget
---@field mTilesPerSection int32
---@field mUnselectableButtonOpacity float
---@field mCurrentIndex int32
---@field mCurrentSection int32
---@field mpLeftButton UButton
---@field mpRightButton UButton
---@field mpIndexIndicator UIndexIndicatorBoxWidget
---@field mpItemList UBaseItemList
---@field mpLastSelectedItemTile UBaseItemTile
---@field mEmptyItemClass TSubclassOf<UUserWidget>
UScrollingSelectionWidget = {}

function UScrollingSelectionWidget:SetupNavigation() end
---@param Direction int32
---@param bForceNextSection boolean
function UScrollingSelectionWidget:ScrollInDirection(Direction, bForceNextSection) end
function UScrollingSelectionWidget:RefreshScrollButtons() end
function UScrollingSelectionWidget:PadListToMinLength() end
function UScrollingSelectionWidget:OnRightPressed() end
function UScrollingSelectionWidget:OnLeftPressed() end
---@return int32
function UScrollingSelectionWidget:GetMaxSectionIndex() end


---@class USearchablePointManagerComponent : UActorComponent
---@field mAvailablePickupsByType TArray<int32>
---@field mMaxPickupsAllowedOutsideSearchables TMap<EPickupType, int32>
---@field mNumPickupOverridesBySeasonalEvent TMap<ESeasonalEventType, FSeasonalEventPickupInfo>
---@field mPickupsInSpawnGroupsByType TArray<int32>
---@field mSearchablePointsByType TArray<FSearchablePointArray>
---@field mDebugKeepAllItemsAtPointByType TArray<boolean>
---@field mLockedPickupsTime TArray<float>
---@field mLockedPickupsType TArray<EPickupType>
---@field mAssignableGoodPlayers TArray<AGameplayPS>
---@field mEventPickupClassesByEventPickup TArray<UClass>
---@field mEventSearchableObjectClassesByEvent TArray<UClass>
---@field mEvilEventPropClassesByEvent TArray<UClass>
---@field mEventPickup_Holiday_OrnamentClasses TArray<UClass>
---@field mHoliday_EvilOrnamentClasses TArray<UClass>
---@field mpHolidayDataAsset UEvent_Holiday_DataAsset
---@field mEventCenterpieceClassesByEvent TArray<UClass>
---@field mCurrentHolidayOrnamentIndex int32
---@field mServerCurrentEvilPropIndex int32
USearchablePointManagerComponent = {}

---@param pickupType EPickupType
---@return boolean
function USearchablePointManagerComponent:RequestPickup(pickupType) end
---@param seasonalEvent ESeasonalEventType
---@param pickupType EPickupType
function USearchablePointManagerComponent:RemoveSeasonalEventPickupOverride(seasonalEvent, pickupType) end
---@param Min float
---@param Max float
---@param searchType ESearchableType
function USearchablePointManagerComponent:OverrideSearchableMinAndMaxRechargeTime(Min, Max, searchType) end
---@param pickupType EPickupType
---@param outSeasonalEventType ESeasonalEventType
---@return boolean
function USearchablePointManagerComponent:HasSeasonalEventPickupOverride(pickupType, outSeasonalEventType) end
---@param EventType ESeasonalEventType
---@return UClass
function USearchablePointManagerComponent:GetSeasonalEventCenterpieceClassForType(EventType) end
---@param EventType ESeasonalEventType
---@return UClass
function USearchablePointManagerComponent:GetSearchableObjectClassFromEventType(EventType) end
---@return AGameplayPS
function USearchablePointManagerComponent:GetRandomGoodPlayerForEvents() end
---@return int32
function USearchablePointManagerComponent:GetNumTeenEventObjectsToSpawn() end
---@param pWorld UWorld
---@return USearchablePointManagerComponent
function USearchablePointManagerComponent:GetInstance(pWorld) end
---@param Index int32
---@return UClass
function USearchablePointManagerComponent:GetEvilOrnamentClassForIndex(Index) end
---@param EventType ESeasonalEventType
---@return UClass
function USearchablePointManagerComponent:GetEvilEventPropBaseClassFromEventType(EventType) end
---@param PickupInfoStruct FPickupInfoStruct
---@return UClass
function USearchablePointManagerComponent:GetClassFromPickupInfoStruct(PickupInfoStruct) end
---@param eventPickupType EEventPickupType
---@param outSubtype int32
---@return UClass
function USearchablePointManagerComponent:GetClassFromEventPickupType(eventPickupType, outSubtype) end
---@param DeltaTime float
function USearchablePointManagerComponent:DoTick(DeltaTime) end
function USearchablePointManagerComponent:DoServerSpawnLockboxOnTeenDead() end
---@return int32
function USearchablePointManagerComponent:DoServerGetNextEvilPropIndex() end
---@param pickup EPickupType
---@param Time float
function USearchablePointManagerComponent:DoServerAddLockedPickup(pickup, Time) end
function USearchablePointManagerComponent:DetermineItemBaseAmounts() end
function USearchablePointManagerComponent:AssignItems() end
function USearchablePointManagerComponent:ApplyMatchModEffects() end
---@param seasonalEvent ESeasonalEventType
---@param pickupType EPickupType
function USearchablePointManagerComponent:AddSeasonalEventPickupOverride(seasonalEvent, pickupType) end


---@class USeasonPassManager : UObject
---@field mPlayerPoints TMap<EPointType, FPointValue>
USeasonPassManager = {}



---@class USeasonPassPreviewMovieWidget : UMetaWidget
---@field mpMovieIcon UImage
---@field mpTitleText UTextBlock
USeasonPassPreviewMovieWidget = {}

---@param pTex UTexture2D
function USeasonPassPreviewMovieWidget:OnTextureLoaded(pTex) end


---@class USeasonPassPreviewScreen : UBaseScreen
---@field mpIdentifierText UTextBlock
---@field mpTitleText UTextBlock
---@field mpLimitedMoviesText UTextBlock
---@field mpMoviesBox UHorizontalBox
---@field mpBuyUserButton UIssueBoxCostUserButton
---@field mpBuyPlusUserButton UIssueBoxCostUserButton
USeasonPassPreviewScreen = {}

function USeasonPassPreviewScreen:OnConfirmBuyPlus() end
function USeasonPassPreviewScreen:OnConfirmBuy() end
function USeasonPassPreviewScreen:OnBuyIssuePressed() end
function USeasonPassPreviewScreen:OnBuyIssuePlusPressed() end


---@class USeasonPassScreen : UBaseScreen
---@field mpDebugPanel UCanvasPanel
---@field mpTurnLeftButton UButton
---@field mpTurnRightButton UButton
---@field mpReloadButton UButton
USeasonPassScreen = {}

function USeasonPassScreen:OnTurnRightPressed() end
function USeasonPassScreen:OnTurnLeftPressed() end
function USeasonPassScreen:OnReloadPressed() end
function USeasonPassScreen:OnBuySkipPressed() end
function USeasonPassScreen:OnBuySkipConfirmed() end
function USeasonPassScreen:OnBuyPremiumPressed() end
function USeasonPassScreen:OnBuyPremiumConfirmed() end


---@class USeasonPassSummaryUserButton : UBaseUserButton
---@field mpMovieImage UImage
USeasonPassSummaryUserButton = {}



---@class USeasonPassSummaryWidget : UMetaWidget
---@field mpIssueText UTextBlock
---@field mpTitleText UTextBlock
---@field mpWidgetSwitcher UWidgetSwitcher
---@field mpAvailableNowOverlay UOverlay
---@field mpProgressOverlay UOverlay
---@field mpTierText UTextBlock
---@field mpStarsWidget USeasonPassTierStarsWidget
---@field mpUserButton USeasonPassSummaryUserButton
---@field mpBuyUserButton UBaseUserButton
USeasonPassSummaryWidget = {}

function USeasonPassSummaryWidget:OnConfirmBuy() end
function USeasonPassSummaryWidget:OnBuyButtonPressed() end
function USeasonPassSummaryWidget:OnButtonPressed() end


---@class USeasonPassTierStarsWidget : UUserWidget
---@field StarSize int32
---@field StarColor FLinearColor
---@field mpStarsBox UHorizontalBox
USeasonPassTierStarsWidget = {}



---@class USeasonalEventManager : UObject
USeasonalEventManager = {}

---@param pWorldContextObject UObject
---@return USeasonalEventManager
function USeasonalEventManager:GetInstance(pWorldContextObject) end
---@return TArray<ESeasonalEventType>
function USeasonalEventManager:GetHostActiveSeasonalEvents() end


---@class USeasonalEventWidget : UUserWidget
---@field mShownEvents TArray<ESeasonalEventType>
USeasonalEventWidget = {}

function USeasonalEventWidget:OnSeasonalEventTypeChanged() end


---@class UServerBrowserOverlayWidget : UBaseOverlay
---@field mpHostButton UBoxUserButton
---@field mpRefreshButton UBoxUserButton
---@field mpAutoMatchmakingButton UBoxUserButton
---@field mpSPStartDebugButton UBoxUserButton
---@field mpLeftSPDebugButton UBoxUserButton
---@field mpRightSPDebugButton UBoxUserButton
---@field mpServerListBox UVerticalBox
---@field mServerResultClass TSubclassOf<ULobbyServerResultWidget>
---@field mResultCounter int32
---@field mbIsSearching boolean
UServerBrowserOverlayWidget = {}

function UServerBrowserOverlayWidget:OnSPStartDebug() end
function UServerBrowserOverlayWidget:OnSPRightButton() end
function UServerBrowserOverlayWidget:OnSPLeftButton() end
function UServerBrowserOverlayWidget:OnRefreshPressed() end
function UServerBrowserOverlayWidget:OnHostPressed() end


---@class UServerNotificationManager : UObject
---@field mPatchNotes TMap<FString, FPatchNotesCollection>
UServerNotificationManager = {}



---@class USimpleProfilerManager : UObject
USimpleProfilerManager = {}

---@param pWorldContextObject UObject
---@return USimpleProfilerManager
function USimpleProfilerManager:GetSimpleProfilerManagerInstance(pWorldContextObject) end


---@class USkillTestMinigameBase : UActorComponent
---@field mpOwningTPChar ATPChar
---@field mState ESkillTestState
---@field mSubmittedValue float
---@field mTimer float
---@field mInitialTimer float
---@field mCooldownTimer float
---@field mbWarningActive boolean
---@field mTimerMultiplier float
---@field mbIsContributing boolean
---@field mBaseTestDuration float
USkillTestMinigameBase = {}

---@param Value float
function USkillTestMinigameBase:ServerSubmitValue(Value) end
---@param bSet boolean
function USkillTestMinigameBase:ServerSetContributing(bSet) end
---@return ATPChar
function USkillTestMinigameBase:GetOwningTPChar() end


---@class USkinComponentVisibilityManager : USceneComponent
---@field mManagedComponents TMap<UPrimitiveComponent, FEffectVisibility>
USkinComponentVisibilityManager = {}



---@class USliderUserButton : UBaseUserButton
---@field ColorOnSelect boolean
---@field MinDisplayValue int32
---@field MaxDisplayValue int32
---@field mpSlider UNavSlider
---@field mpTextBlock UTextBlock
---@field mpProgressBar UProgressBar
USliderUserButton = {}

---@param Val float
function USliderUserButton:OnValueChanged(Val) end


---@class USmokeTestEngine : UObject
---@field mSmokeTestToRun FString
---@field mNameOfMapToLoad FString
---@field mPathOfMapToLoad FString
---@field mNameOfHostToJoin FString
---@field mAllSmokeTestCameras TArray<AActor>
---@field mScreenShotQueue TArray<FScreenShotRequest>
USmokeTestEngine = {}



---@class USocialBlacklistButton : UBaseSocialButton
---@field mpSocialPortraitWidget USocialPortraitWidget
---@field mpDisplayNameText UTextBlock
USocialBlacklistButton = {}



---@class USocialBlacklistWidget : UBaseSocialContentWidget
USocialBlacklistWidget = {}

function USocialBlacklistWidget:OnUnblockPressed() end


---@class USocialCategoryButton : UUserWidget
---@field mCategoryName FText
---@field SelectedColor FLinearColor
---@field UnselectedColor FLinearColor
---@field mpCategoryButton UButton
---@field mpCategoryText UTextBlock
USocialCategoryButton = {}

function USocialCategoryButton:OnButtonPressed() end


---@class USocialCategorySwitcher : UUserWidget
---@field mpLobbyButton USocialCategoryButton
---@field mpFriendsButton USocialCategoryButton
---@field mpRecentPlayersButton USocialCategoryButton
---@field mpPartyButton USocialCategoryButton
USocialCategorySwitcher = {}

function USocialCategorySwitcher:OnRightCategoryPressed() end
function USocialCategorySwitcher:OnRecentPlayersCallback() end
function USocialCategorySwitcher:OnPartyCallback() end
function USocialCategorySwitcher:OnLobbyCallback() end
function USocialCategorySwitcher:OnLeftCategoryPressed() end
function USocialCategorySwitcher:OnFriendsCallback() end


---@class USocialFriendButton : UBaseSocialButton
---@field mpSocialPortraitWidget USocialPortraitWidget
---@field mpSocialPlatformWidget USocialPlatformWidget
---@field mpSocialStatusWidget USocialStatusWidget
---@field mpDisplayNameText UTextBlock
---@field mpOnlineUser UCrossPlatformOnlineUser
USocialFriendButton = {}



---@class USocialFriendsGroupWidget : UMetaWidget
---@field TitleText FText
---@field mpGroupButton UNavButton
---@field mpGroupTitle UTextBlock
---@field mpExpandIcon UImage
---@field mpFriendsBox UVerticalBox
---@field mpOwnerSocialContentWidget UBaseSocialContentWidget
---@field mSocialPlatformButtonClass TSubclassOf<USocialPlatformFriendButton>
---@field mSocialButtonClass TSubclassOf<USocialFriendButton>
USocialFriendsGroupWidget = {}

function USocialFriendsGroupWidget:StartReadFriends() end
---@param pOwnerSocialContentWidget UBaseSocialContentWidget
function USocialFriendsGroupWidget:SetOwnerSocialFriendsWidget(pOwnerSocialContentWidget) end
function USocialFriendsGroupWidget:OnReadFriendComplete() end
function USocialFriendsGroupWidget:OnGroupButtonSelected() end
function USocialFriendsGroupWidget:OnGroupButtonPressed() end
---@return UWidget
function USocialFriendsGroupWidget:GetGroupButton() end
---@param bOnlyOnline boolean
---@param bOnlyInGame boolean
---@return TArray<UCrossPlatformFriend>
function USocialFriendsGroupWidget:GetFriends(bOnlyOnline, bOnlyInGame) end
---@return int32
function USocialFriendsGroupWidget:GetFriendCount() end
---@return UWidget
function USocialFriendsGroupWidget:GetFirstFriendButton() end
---@param Name FString
---@return UWidget
function USocialFriendsGroupWidget:FindWidgetByName(Name) end


---@class USocialFriendsWidget : UBaseSocialContentWidget
---@field mpPlatformOnlineFriendsGroupWidget USocialPlatformFriendsGroupWidget
---@field mpLinkEpicButton UNavButton
USocialFriendsWidget = {}

function USocialFriendsWidget:OnLinkEpic() end
---@param State EActionButtonState
function USocialFriendsWidget:OnActionCallback(State) end
---@return UWidget
function USocialFriendsWidget:GetFirstSelectedButton() end


---@class USocialHeaderWidget : UUserWidget
---@field mpSocialPortraitWidget USocialPortraitWidget
---@field mpSocialPlatformWidget USocialPlatformWidget
---@field mpAccountNameText UTextBlock
---@field mpAccountIdText UTextBlock
---@field mpSocialStatusSelectWidget USocialStatusSelectWidget
USocialHeaderWidget = {}



---@class USocialManager : UObject
---@field mPartyAvailabilityUpdateTimer float
USocialManager = {}

function USocialManager:UpdatePartyAvailability() end
---@param bIsAcceptingMembers boolean
function USocialManager:SetPartyAvailabilityRL(bIsAcceptingMembers) end
---@param notificationId FString
function USocialManager:OnNotificationDecline(notificationId) end
---@param notificationId FString
function USocialManager:OnNotificationConfirm(notificationId) end


---@class USocialNotificationActionButton : UUserWidget
---@field ActionType ESocialNotificationAction
---@field IconTex UTexture2D
---@field mpButton UButton
---@field mpBackgroundBorder UBorder
---@field mpActionIcon UImage
---@field mpSelectionBorder UBorder
USocialNotificationActionButton = {}

---@param bSet boolean
function USocialNotificationActionButton:SetIsSelected(bSet) end
function USocialNotificationActionButton:OnButtonPressed() end
---@return boolean
function USocialNotificationActionButton:IsSelected() end


---@class USocialNotificationButton : UBaseSocialButton
---@field mpSocialPortraitWidget USocialPortraitWidget
---@field mpNotificationText UTextBlock
---@field mpAcceptButton USocialNotificationActionButton
---@field mpDeclineButton USocialNotificationActionButton
---@field mpActionText UTextBlock
USocialNotificationButton = {}

---@param dir ESelectionNavigation
function USocialNotificationButton:OnNavOverride(dir) end
function USocialNotificationButton:OnDeclinePressed() end
---@param Action ESocialNotificationAction
function USocialNotificationButton:OnActionSelected(Action) end
---@param Action ESocialNotificationAction
function USocialNotificationButton:OnActionPressed(Action) end
function USocialNotificationButton:OnAcceptPressed() end
function USocialNotificationButton:DoAction() end


---@class USocialNotificationsWidget : UBaseSocialContentWidget
USocialNotificationsWidget = {}

function USocialNotificationsWidget:OnDeclinePressed() end
function USocialNotificationsWidget:OnAction() end
function USocialNotificationsWidget:OnAcceptPressed() end


---@class USocialOverlayWidget : UBaseOverlay
---@field mpHeaderWidget USocialHeaderWidget
---@field mpCategorySwitcher USocialCategorySwitcher
---@field mpWidgetSwitcher UWidgetSwitcher
---@field mpLobbyWidget USocialVoiceMasterWidget
---@field mpPartyWidget USocialPartyWidget
---@field mpFriendsWidget USocialFriendsWidget
---@field mpRecentPlayersWidget USocialRecentPlayersWidget
---@field mpEscapeButton UButton
USocialOverlayWidget = {}

function USocialOverlayWidget:OnEscapePressed() end
---@param Category ESocialCategoryType
function USocialOverlayWidget:OnCategorySelected(Category) end


---@class USocialPartyGroupWidget : USocialFriendsGroupWidget
---@field mSocialPartyMemberButtonClass TSubclassOf<USocialPartyMemberButton>
USocialPartyGroupWidget = {}



---@class USocialPartyMemberButton : USocialFriendButton
---@field mpPartyOptionsSwitcher UWidgetSwitcher
---@field mpKickButtonSizeBox USizeBox
---@field mpPromoteButtonSizeBox USizeBox
---@field mpLeaveButtonSizeBox USizeBox
---@field mpVoiceIndicatorSizeBox USizeBox
---@field mpSocialVoiceIndicatorWidget USocialVoiceIndicatorWidget
---@field mpKickButton UButton
---@field mpPromoteButton UButton
---@field mpLeaveButton UButton
---@field mpSocialPartyVoiceSlider USocialPartyVoiceSlider
---@field mpCrossPlatformPartyMember UCrossPlatformPartyMember
USocialPartyMemberButton = {}

function USocialPartyMemberButton:OnToggleMute() end
function USocialPartyMemberButton:OnPromotePartyConfirmed() end
function USocialPartyMemberButton:OnPromoteMemberPressed() end
function USocialPartyMemberButton:OnLeavePartyPressed() end
function USocialPartyMemberButton:OnLeavePartyConfirmed() end
function USocialPartyMemberButton:OnKickPartyConfirmed() end
function USocialPartyMemberButton:OnKickMemberPressed() end


---@class USocialPartyMemberWidget : UMetaWidget
---@field mpSocialPortraitWidget USocialPortraitWidget
---@field mpButton UButton
USocialPartyMemberWidget = {}



---@class USocialPartyVoiceSlider : UUserWidget
---@field mpSlider USlider
---@field mpProgressBar UProgressBar
---@field percent float
USocialPartyVoiceSlider = {}

---@param Val float
function USocialPartyVoiceSlider:OnSliderChanged(Val) end


---@class USocialPartyWidget : UBaseSocialContentWidget
---@field mpPartyGroupWidget USocialPartyGroupWidget
---@field mpSocialOptionsWidget USocialVoiceOptionsWidget
USocialPartyWidget = {}

function USocialPartyWidget:UpdatePartyMembers() end


---@class USocialPlatformFriendButton : USocialFriendButton
---@field mpInviteButton UButton
---@field mpBorder UBorder
---@field mDefaultColor FLinearColor
---@field mInGameColor FLinearColor
---@field mInviteDelay float
---@field mpOnlineFriend UCrossPlatformFriend
USocialPlatformFriendButton = {}

function USocialPlatformFriendButton:UpdateSocialStatus() end
function USocialPlatformFriendButton:UpdatePlatformAvatarAsync() end
---@param pOnlineFriend UCrossPlatformFriend
function USocialPlatformFriendButton:SetOnlineFriend(pOnlineFriend) end
function USocialPlatformFriendButton:OnViewProfilePressed() end
function USocialPlatformFriendButton:OnJoinFriendPressed() end
function USocialPlatformFriendButton:OnInviteMemberButton() end
---@return UCrossPlatformFriend
function USocialPlatformFriendButton:GetOnlineFriend() end


---@class USocialPlatformFriendsGroupWidget : USocialFriendsGroupWidget
---@field bShowOnline boolean
---@field bShowInGame boolean
---@field TimeToRefreshFriendList float
USocialPlatformFriendsGroupWidget = {}



---@class USocialPlatformWidget : UMetaWidget
---@field mpPlatformIcon UImage
---@field mpPlatformImages TArray<UTexture2D>
USocialPlatformWidget = {}



---@class USocialPortraitWidget : UMetaWidget
---@field mpPortraitIcon UImage
---@field mpMasteryBorder UImage
---@field mpLeaderBorder UBorder
USocialPortraitWidget = {}

---@param pTex UTexture2D
function USocialPortraitWidget:SetPortrait(pTex) end
---@param pTex UTexture2D
function USocialPortraitWidget:OnPortraitLoaded(pTex) end
---@param pTex UTexture2D
function USocialPortraitWidget:OnBorderLoaded(pTex) end


---@class USocialRecentPlayerButton : UBaseSocialButton
---@field mpSocialPortraitWidget USocialPortraitWidget
---@field mpDisplayNameText UTextBlock
---@field mpLastPlayedText UTextBlock
---@field mpShowProfileButton UButton
---@field mpReportButton UButton
---@field mpInviteButton UButton
---@field mInviteDelay float
USocialRecentPlayerButton = {}

function USocialRecentPlayerButton:OnShowProfileButton() end
function USocialRecentPlayerButton:OnReportButton() end
function USocialRecentPlayerButton:OnInviteMemberButton() end


---@class USocialRecentPlayersWidget : UBaseSocialContentWidget
USocialRecentPlayersWidget = {}


---@class USocialStatusButtonWidget : UUserWidget
---@field SocialStatusType ESocialStatusType
---@field mpNavButton UNavButton
---@field mpSocialStatusWidget USocialStatusWidget
USocialStatusButtonWidget = {}

function USocialStatusButtonWidget:OnButtonPressed() end


---@class USocialStatusDropdownWidget : UUserWidget
---@field mpOnlineButton USocialStatusButtonWidget
---@field mpAwayButton USocialStatusButtonWidget
---@field mpOfflineButton USocialStatusButtonWidget
USocialStatusDropdownWidget = {}



---@class USocialStatusSelectWidget : UUserWidget
---@field mpButton UButton
---@field mpSocialStatusWidget USocialStatusWidget
USocialStatusSelectWidget = {}

function USocialStatusSelectWidget:OnButtonPressed() end


---@class USocialStatusWidget : UMetaWidget
---@field ForceStatus boolean
---@field ForcedStatusType ESocialStatusType
---@field mpStatusIcon UImage
---@field mpStatusText UTextBlock
USocialStatusWidget = {}



---@class USocialTooltipWidget : UUserWidget
---@field mpTooltipText UTextBlock
USocialTooltipWidget = {}



---@class USocialVoiceCharMemberButton : USocialPartyMemberButton
---@field mpLobbyKickButtonSizeBox USizeBox
---@field mpLobbyKickButton UButton
USocialVoiceCharMemberButton = {}

function USocialVoiceCharMemberButton:OnLobbyKickPressed() end
function USocialVoiceCharMemberButton:OnLobbyKickConfirmed() end


---@class USocialVoiceChatGroupWidget : USocialFriendsGroupWidget
---@field mSocialVoiceChatMemberButton TSubclassOf<USocialVoiceCharMemberButton>
---@field mpSpectatorDividerClass TSubclassOf<UUserWidget>
USocialVoiceChatGroupWidget = {}



---@class USocialVoiceControlWidget : UMetaWidget
---@field ShowEditKeybindings boolean
---@field mpMicrophoneSliderWidget USocialVoiceSliderWidget
---@field mpSpeakerSliderWidget USocialVoiceSliderWidget
---@field mpChannelNameText UTextBlock
---@field mpVoiceDetectionCheckbox UNavCheckbox
---@field mpPushToTalkCheckbox UNavCheckbox
---@field mpDisabledCheckbox UNavCheckbox
---@field mpPushToTalkText UTextBlock
---@field mpEditBindingsButton UNavButton
---@field mpChannelSwitcher UWidgetSwitcher
---@field mpChannelBox UVerticalBox
---@field mpEmptyPanel UCanvasPanel
---@field mpEmptyText UTextBlock
USocialVoiceControlWidget = {}

function USocialVoiceControlWidget:UpdateInputBindingText() end
---@param bSet boolean
function USocialVoiceControlWidget:SwitchToChannel(bSet) end
---@param Mode EVoiceChatMode
function USocialVoiceControlWidget:SetVoiceChatMode(Mode) end
---@param Val float
function USocialVoiceControlWidget:SetSpeakerGain(Val) end
---@param Val float
function USocialVoiceControlWidget:SetMicrophoneGain(Val) end
---@param bIsChecked boolean
function USocialVoiceControlWidget:OnVoiceDetectionChanged(bIsChecked) end
---@param bIsChecked boolean
function USocialVoiceControlWidget:OnPushToTalkChanged(bIsChecked) end
function USocialVoiceControlWidget:OnParticipantListChanged() end
function USocialVoiceControlWidget:OnEditBindingsPressed() end
---@param bIsChecked boolean
function USocialVoiceControlWidget:OnDisabledChanged(bIsChecked) end
function USocialVoiceControlWidget:OnDeviceTypeChanged() end
function USocialVoiceControlWidget:BuildParticipantList() end


---@class USocialVoiceIndicatorWidget : UUserWidget
---@field mpWidgetSwitcher UWidgetSwitcher
---@field mpToggleMuteButton UButton
USocialVoiceIndicatorWidget = {}

---@param bIsSpeaking boolean
---@param bIsMuted boolean
function USocialVoiceIndicatorWidget:SetVoiceChatState(bIsSpeaking, bIsMuted) end
---@return UButton
function USocialVoiceIndicatorWidget:GetMuteButton() end


---@class USocialVoiceMasterWidget : UBaseSocialContentWidget
---@field mpSocialOptionsWidget USocialVoiceOptionsWidget
---@field mpSocialVoiceChatGroupWidget USocialVoiceChatGroupWidget
---@field mpChannelType UTextBlock
USocialVoiceMasterWidget = {}



---@class USocialVoiceOptionsWidget : UUserWidget
---@field mpOptionVoiceMode UOptionSelectorUserButton
---@field mpOptionVoiceChannel UOptionSelectorUserButton
USocialVoiceOptionsWidget = {}

function USocialVoiceOptionsWidget:UpdateSelections() end
function USocialVoiceOptionsWidget:OnVoiceModeChanged() end


---@class USocialVoiceSliderWidget : UMetaWidget
---@field SliderType ESocialVoiceSliderType
---@field ShowMuteButton boolean
---@field mpMutedIcon UTexture2D
---@field mpUnMutedIcon UTexture2D
---@field mpTitleText UTextBlock
---@field mpNavSlider UNavSlider
---@field mpValueText UTextBlock
---@field mpMuteButton UButton
---@field mpMuteIcon UImage
---@field mpButtonCanvas UCanvasPanel
USocialVoiceSliderWidget = {}

---@param Val float
function USocialVoiceSliderWidget:OnValueChanged(Val) end
function USocialVoiceSliderWidget:OnMutePressed() end
---@return UNavSlider
function USocialVoiceSliderWidget:GetNavSliderWidget() end


---@class USocialVoiceWidget : UBaseSocialContentWidget
---@field mpSocialVoiceControlWidget USocialVoiceControlWidget
USocialVoiceWidget = {}



---@class USocialWidget : UMetaWidget
---@field HighAlertCount int32
---@field MediumAlertColor FLinearColor
---@field HighAlertColor FLinearColor
---@field mpSocialBox UHorizontalBox
---@field mpSocialButton UThemeButton
---@field mpSocialCountText UTextBlock
---@field mpPartyMemberWidgetClass TSubclassOf<USocialPartyMemberWidget>
---@field mpSystemButton UThemeButton
---@field mpSelfNameText UTextBlock
---@field mpFPText UTextBlock
---@field mpHCText UTextBlock
---@field mpDebugSocialPartyPanel UHorizontalBox
---@field mpSelfButton UThemeButton
---@field mpSelfSocialPortraitWidget USocialPortraitWidget
---@field mPartySocialPortraitWidgets TArray<USocialPartyMemberWidget>
---@field mpNewFlagWidget UNewFlagWidget
---@field mpPartyMembersBox UHorizontalBox
---@field mpSelfPanel UCanvasPanel
---@field mpCommunicationWarningIcon UImage
USocialWidget = {}

function USocialWidget:ShowSocialOverlay() end
function USocialWidget:OnSystemPressed() end
function USocialWidget:OnSocialPressed() end
function USocialWidget:OnSelfPressed() end
function USocialWidget:OnMemberPressed() end


---@class USoundImpactComponent : USceneComponent
---@field mSoundCooldown float
---@field mLastSoundTime float
---@field mLastSoundPosition FVector
---@field mImpactObjectType EImpactObjectType
---@field mbUseOwnerRoot boolean
---@field mpCollisionComponent UPrimitiveComponent
---@field mpAkEmitter UExtAkComponent
---@field mbMuted boolean
USoundImpactComponent = {}

---@param bUseOwnerRoot boolean
function USoundImpactComponent:SetUseOwnerRoot(bUseOwnerRoot) end
---@param bMuted boolean
function USoundImpactComponent:SetMuted(bMuted) end
---@param pCollisionComponent UPrimitiveComponent
function USoundImpactComponent:SetCollisionComponent(pCollisionComponent) end
---@return boolean
function USoundImpactComponent:IsMuted() end


---@class USpectralComponent : UBaseCustomizationComponent
---@field mpTeenSpectral UTeenSpectralDataAsset
---@field mpEvilSpectral UEvilSpectralDataAsset
---@field mpSpectralDecalMaterial UMaterialInterface
---@field mSeasonalMaterialConfigs TMap<ESeasonalEventType, UMaterialTransferConfig>
USpectralComponent = {}

---@return UTeenSpectralDataAsset
function USpectralComponent:GetTeenSpectralDataAsset() end
---@return UEvilSpectralDataAsset
function USpectralComponent:GetEvilSpectralDataAsset() end
---@param pAsset UTeenSpectralDataAsset
function USpectralComponent:EquipTeenSpectral(pAsset) end
---@param pAsset UEvilSpectralDataAsset
function USpectralComponent:EquipEvilSpectral(pAsset) end
---@param pSkeletalMeshComponent USkeletalMeshComponent
function USpectralComponent:ApplyEvilSpectralSkin(pSkeletalMeshComponent) end


---@class USpectralDataAsset : UItemDataAsset
---@field mSpectralMesh FSkinSkeletalMesh
USpectralDataAsset = {}



---@class USplashScreen : UUserWidget
---@field AnimIn UWidgetAnimation
---@field AnimOut UWidgetAnimation
---@field mpWarningBox UVerticalBox
---@field mpSpinnerPanel UCanvasPanel
USplashScreen = {}

function USplashScreen:OnAnimOutFinished() end
function USplashScreen:OnAnimInFinished() end


---@class USplineInterpComponent : USceneComponent
---@field mSpawnInfo TArray<FSplineInterpSpawnInfo>
---@field mInterpolatedInstanceComponentData TArray<FSplineInterpInstanceComponentData>
---@field mbShouldTrackStartComponent boolean
---@field mbShouldTrackEndComponent boolean
---@field mStartTransform FTransform
---@field mEndTransform FTransform
---@field mpTrackedStartComponent USceneComponent
---@field mpTrackedEndComponent USceneComponent
---@field mTrackedStartSocket FName
---@field mTrackedEndSocket FName
---@field OnMeshExpired FSplineInterpComponentOnMeshExpired
---@field OnMeshArrived FSplineInterpComponentOnMeshArrived
---@field mbIsSpawningEnabled boolean
USplineInterpComponent = {}

---@param Transform FTransform
function USplineInterpComponent:SetStartTransform(Transform) end
---@param pComponent USceneComponent
function USplineInterpComponent:SetStartComponent(pComponent) end
---@param bSet boolean
function USplineInterpComponent:SetSpawningEnabled(bSet) end
---@param Transform FTransform
function USplineInterpComponent:SetEndTransform(Transform) end
---@param pComponent USceneComponent
function USplineInterpComponent:SetEndComponent(pComponent) end
---@return boolean
function USplineInterpComponent:IsSpawningEnabled() end
function USplineInterpComponent:DestroyInstances() end
---@param spawnInfo FSplineInterpSpawnInfo
function USplineInterpComponent:AddInterpolatedMesh(spawnInfo) end


---@class UStartJourneyMapNode : UBaseJourneyMapNode
UStartJourneyMapNode = {}


---@class UStateMachineComponent : UActorComponent
---@field mPrevState int32
---@field mCurrentState int32
---@field mCurrentTimeStateTime float
---@field mPrevStateExitTime float
---@field defaultState int32
---@field OnStateChange FStateMachineComponentOnStateChange
---@field OnStateUpdate FStateMachineComponentOnStateUpdate
UStateMachineComponent = {}

---@param newState int32
function UStateMachineComponent:SwitchState(newState) end
---@param fromState int32
---@param toState int32
---@param bForceOverride boolean
function UStateMachineComponent:OverrideStates(fromState, toState, bForceOverride) end
---@param newState int32
function UStateMachineComponent:MulticastAllSwitchState(newState) end
---@param fromState int32
---@param toState int32
function UStateMachineComponent:MulticastAllOverrideStates(fromState, toState) end
---@return float
function UStateMachineComponent:GetPrevStateExitTime() end
---@return int32
function UStateMachineComponent:GetPreviousState() end
---@return float
function UStateMachineComponent:GetCurrentStateTime() end
---@return int32
function UStateMachineComponent:GetCurrentState() end
---@param prevState int32
---@param newState int32
---@param Time float
function UStateMachineComponent:ForceSetState_Unsafe(prevState, newState, Time) end


---@class UStatePanel : UCanvasPanel
---@field ShowVisibility ESlateVisibility
---@field HideVisibility ESlateVisibility
UStatePanel = {}



---@class UStateSwitcher : UWidgetSwitcher
UStateSwitcher = {}


---@class UStaticShieldSkinDataAsset : UTeenWeaponSkinDataAsset
---@field mShieldChargeLevelParticleSystem FSkinParticleSystem
---@field mShieldParticleSystem FSkinParticleSystem
---@field mRimParticleSystem FSkinParticleSystem
---@field mShieldMesh FSkinStaticMesh
---@field mLightningBoltTemplates TArray<FSkinStaticMesh>
---@field mWiseStaticShieldSwitch EWise_WEP_StaticShield
UStaticShieldSkinDataAsset = {}



---@class UStatusEffectsComponent : USceneComponent
---@field mpEffectNiagaraComponent UNiagaraComponent
---@field mpHealingNiagaraComponent UNiagaraComponent
---@field mpDrainingNiagaraComponent UNiagaraComponent
---@field mpSpeedBoostNiagaraComponent UNiagaraComponent
---@field mNiagaraSystemPath TSoftObjectPtr<UNiagaraSystem>
---@field mNiagaraPathHealthHealingConst TSoftObjectPtr<UNiagaraSystem>
---@field mNiagaraPathHealthDrainingConst TSoftObjectPtr<UNiagaraSystem>
---@field mNiagaraPathHealthHealingBurst TSoftObjectPtr<UNiagaraSystem>
---@field mNiagaraPathHealthDrainingBurst TSoftObjectPtr<UNiagaraSystem>
---@field mNiagaraSpeedBoost TSoftObjectPtr<UNiagaraSystem>
---@field mbIsEffectActive boolean
---@field mTimeSinceSubdueActionFailed float
UStatusEffectsComponent = {}

---@param pOwnerChar ATPChar
---@param niagaraSystemPath TSoftObjectPtr<UNiagaraSystem>
---@param pNiagaraComponent UNiagaraComponent
---@param bEnable boolean
---@param AttachPointName FName
---@param EffectVisibility FEffectVisibility
function UStatusEffectsComponent:UpdateConstEffect(pOwnerChar, niagaraSystemPath, pNiagaraComponent, bEnable, AttachPointName, EffectVisibility) end
---@param EffectVisibility FEffectVisibility
function UStatusEffectsComponent:SpawnHealingBurstNiagaraAttachedToOwner(EffectVisibility) end
---@param Location FVector
---@param EffectVisibility FEffectVisibility
function UStatusEffectsComponent:SpawnHealingBurstNiagaraAtLocation(Location, EffectVisibility) end
---@param EffectVisibility FEffectVisibility
function UStatusEffectsComponent:SpawnDrainingBurstNiagaraAttachedToOwner(EffectVisibility) end
---@param Location FVector
---@param EffectVisibility FEffectVisibility
function UStatusEffectsComponent:SpawnDrainingBurstNiagaraAtLocation(Location, EffectVisibility) end
function UStatusEffectsComponent:PlaySubduedActionFailed() end
---@param pSpeedBoostSystem UNiagaraSystem
function UStatusEffectsComponent:MulticastAllSetSpeedBoostSystem(pSpeedBoostSystem) end
---@param pHealingSystem UNiagaraSystem
function UStatusEffectsComponent:MulticastAllSetHealingSystem(pHealingSystem) end


---@class UStatusMappingConfig : UCustomizationConfigBase
---@field mCharacterStatusMappings TArray<FCharacterStatusToMaterialParameter>
UStatusMappingConfig = {}



---@class UStencilPropertySettings : UDeveloperSettings
---@field STENCIL_PROPERTIES_FEATURE_TEST FStencilProperties
---@field STENCIL_PROPERTIES_PRONE_AURA FStencilProperties
---@field STENCIL_PROPERTIES_EVIL_FEASTING_AURA FStencilProperties
---@field STENCIL_PROPERTIES_DEAD_AURA FStencilProperties
---@field STENCIL_PROPERTIES_INJURYVISION_AURA FStencilProperties
---@field STENCIL_PROPERTIES_SEARCHABLES_AURA FStencilProperties
---@field STENCIL_PROPERTIES_DOLLMASTERTRAP_AURA FStencilProperties
---@field STENCIL_PROPERTIES_USED_DAMAGETYPE_AURA FStencilProperties
---@field STENCIL_PROPERTIES_UNUSED_DAMAGETYPE_AURA FStencilProperties
---@field STENCIL_PROPERTIES_STATION_UNUSED_AURA FStencilProperties
---@field STENCIL_PROPERTIES_STATION_USED_AURA FStencilProperties
---@field STENCIL_PROPERTIES_STATION_FAILED_AURA FStencilProperties
---@field STENCIL_PROPERTIES_TEENVISION_AURA FStencilProperties
---@field STENCIL_PROPERTIES_HOLYSTAFF_CHARGEREVEAL_AURA FStencilProperties
---@field STENCIL_PROPERTIES_TEENSPECTRAL_AURA FStencilProperties
---@field STENCIL_PROPERTIES_TEENSPECTRAL_SELF_AURA FStencilProperties
---@field STENCIL_PROPERTIES_ENERGYPOINT_AURA FStencilProperties
---@field STENCIL_PROPERTIES_ENERGYPOINT_FAILED_AURA FStencilProperties
---@field STENCIL_PROPERTIES_STATION_FAIL_AURA FStencilProperties
---@field STENCIL_PROPERTIES_EXPOSED_CHAR_ALERT_AURA FStencilProperties
---@field STENCIL_PROPERTIES_EVIL_AUGUR_AURA FStencilProperties
---@field STENCIL_PROPERTIES_DARKSHARD_AURA FStencilProperties
---@field STENCIL_PROPERTIES_DARKSHARD_AURA_FLASHING FStencilProperties
---@field STENCIL_PROPERTIES_EXPOSED_CHAR_AURA FStencilProperties
---@field STENCIL_PROPERTIES_DOLLMASTER_TRAP_PROXIMITY_AURA FStencilProperties
---@field STENCIL_PROPERTIES_LIFEESSENCE_ESSENCEVISION FStencilProperties
---@field STENCIL_PROPERTIES_EVILENERGY_ESSENCEVISION FStencilProperties
---@field STENCIL_PROPERTIES_DOLLMASTER_TRAP_TRIGGERED_AURA FStencilProperties
---@field STENCIL_PROPERTIES_DOLLMASTER_IMPROVED_DETECT_PROXIMITY_AURA FStencilProperties
---@field STENCIL_PROPERTIES_DOLLMASTER_INCORPOREAL_PROXIMITY_AURA FStencilProperties
---@field STENCIL_PROPERTIES_DOLLMASTER_INACTIVE_PROXIMITY_AURA FStencilProperties
---@field STENCIL_PROPERTIES_DOLLMASTER_TRAP_SELECTION_AURA FStencilProperties
---@field STENCIL_PROPERTIES_DOLLMASTER_TRAP_DISARMED_AURA FStencilProperties
---@field STENCIL_PROPERTIES_DOLLMASTER_SELF_AURA FStencilProperties
---@field STENCIL_PROPERTIES_TALISMAN_HIGHLIGHT FStencilProperties
---@field STENCIL_PROPERTIES_DAMAGING_HIGHLIGHT FStencilProperties
---@field STENCIL_PROPERTIES_DAMAGING_BURN_HIGHLIGHT FStencilProperties
---@field STENCIL_PROPERTIES_PICKUP_HIGHLIGHT FStencilProperties
---@field STENCIL_PROPERTIES_HIDEPOINT_HIGHLIGHT FStencilProperties
---@field STENCIL_PROPERTIES_DOLLMASTERTRAP_HIGHLIGHT FStencilProperties
---@field STENCIL_PROPERTIES_TOAD_ECHOLOCATION_REVEAL FStencilProperties
---@field STENCIL_PROPERTIES_ERADICATOR_TARGETED_SURGE_STUN_REVEAL FStencilProperties
---@field STENCIL_PROPERTIES_RAYGUN_AUGMENT_REVEAL FStencilProperties
---@field STENCIL_PROPERTIES_ERADICATOR_SCANNER_REVEAL FStencilProperties
---@field STENCIL_PROPERTIES_ERADICATOR_SCANNER_ARMED_REVEAL FStencilProperties
---@field STENCIL_PROPERTIES_ERADICATOR_TARGETED_SURGE_OVERCHARGE_REVEAL FStencilProperties
---@field STENCIL_PROPERTIES_EVENTCENTERPIECE_HOLIDAY_AURA_BORDER FStencilProperties
---@field STENCIL_PROPERTIES_EVENTCENTERPIECE_HOLIDAY_AURA_ICON FStencilProperties
---@field STENCIL_PROPERTIES_GOOPED_OUTLINE FStencilProperties
---@field STENCIL_PROPERTIES_SCOUR_OUTLINE FStencilProperties
---@field STENCIL_PROPERTIES_WEAPON_BURN FStencilProperties
---@field STENCIL_PROPERTIES_WEAPON_HOLY FStencilProperties
---@field STENCIL_PROPERTIES_WEAPON_OCCULT FStencilProperties
---@field STENCIL_PROPERTIES_WEAPON_SHOCK FStencilProperties
---@field STENCIL_PROPERTIES_WALKIE_TALKIE FStencilProperties
---@field STENCIL_PROPERTIES_DAMAGETYPE_SHOCK_REVEAL FStencilProperties
---@field STENCIL_PROPERTIES_DAMAGETYPE_BURN_REVEAL FStencilProperties
---@field STENCIL_PROPERTIES_DAMAGETYPE_CURSE_REVEAL FStencilProperties
---@field STENCIL_PROPERTIES_DAMAGETYPE_HOLY_REVEAL FStencilProperties
---@field STENCIL_PROPERTIES_FLAMEMINE_EVIL_EXPOSE FStencilProperties
UStencilPropertySettings = {}



---@class UStickerComponent : UBaseCustomizationComponent
---@field mStickers TMap<uint32, UStickerDataAsset>
UStickerComponent = {}

---@param WorldLocation FVector
---@param WorldDirection FVector
---@param stickerIndex int32
function UStickerComponent:ServerRequestSticker(WorldLocation, WorldDirection, stickerIndex) end


---@class UStickerDataAsset : UItemDataAsset
---@field mStickerType EStickerType
---@field mStickerTexture UTexture2D
UStickerDataAsset = {}



---@class UStickerSystemComponent : UActorComponent
---@field mStickerList TArray<ASticker>
---@field mServerMaxSortOrder int32
UStickerSystemComponent = {}

---@param outSlots TArray<uint32>
function UStickerSystemComponent:GetStickerUISlots(outSlots) end
---@param Owner ABaseChar
---@param WorldLocation FVector
---@param WorldDirection FVector
---@param stickerIndex int32
function UStickerSystemComponent:DoServerPlaceSticker(Owner, WorldLocation, WorldDirection, stickerIndex) end
---@param pChar ABaseChar
---@return ASticker
function UStickerSystemComponent:CreateSticker(pChar) end


---@class UStigmaRewardProgressCardWidget : UUserWidget
---@field mpRewardProgressWidget UEORRewardProgressWidget
---@field mpStigmaImage UImage
---@field mpStigmaName UTextBlock
---@field mpBurnStigmaTexture UTexture2D
---@field mpHolyStigmaTexture UTexture2D
---@field mpOccultStigmaTexture UTexture2D
---@field mpShockStigmaTexture UTexture2D
UStigmaRewardProgressCardWidget = {}



---@class UStoreBundleButton : UBaseUserButton
---@field mpItemImage UImage
---@field mpItemNameText UTextBlock
---@field mpStoreItemTag UStoreItemTileTag
---@field mpStoreItemSlotIcon UImage
---@field mpStoreItemSlotIcon_Highlighted UImage
UStoreBundleButton = {}

---@param TextValue FText
function UStoreBundleButton:SetItemNameText(TextValue) end
---@param pTex UTexture2D
function UStoreBundleButton:SetImage(pTex) end
---@param Grantable FGrantable
function UStoreBundleButton:PopulateTag(Grantable) end
---@param pTemplate UDbItemTemplate
function UStoreBundleButton:PopulateSlotIcon(pTemplate) end


---@class UStoreCatalogPanel : UUserWidget
---@field mpGeneratedContentBox UVerticalBox
---@field mpNextRowButton UButton
---@field mpPreviousRowButton UButton
---@field mCatalogTileClass TSubclassOf<UStoreCatalogTile>
---@field mGeneratedTiles TArray<UStoreCatalogTile>
---@field mpCatalogScrollBox UNavScrollBox
---@field mpOwningStoreScreen UStoreScreen
UStoreCatalogPanel = {}

---@param pOwningScreen UStoreScreen
function UStoreCatalogPanel:SetOwningStoreScreen(pOwningScreen) end
---@param Count int32
function UStoreCatalogPanel:SetNumberOfSubPages(Count) end
function UStoreCatalogPanel:OnPreviousRowPressed() end
function UStoreCatalogPanel:OnNextRowPressed() end
function UStoreCatalogPanel:OnActivate() end
---@param Index int32
---@return UStoreCatalogTile
function UStoreCatalogPanel:GetSubPageTileForIndex(Index) end
---@return int32
function UStoreCatalogPanel:GetNumberOfSubPages() end
---@return UNavScrollBox
function UStoreCatalogPanel:GetNavScrollBox() end
---@param pWidget UWidget
function UStoreCatalogPanel:ForceScrollWidgetToTop(pWidget) end
---@param DeltaTime float
function UStoreCatalogPanel:DoTick(DeltaTime) end


---@class UStoreCatalogTile : UUserWidget
---@field mpCollectionNameText UTextBlock
---@field mpGeneratedContentBox UVerticalBox
---@field mpStoreTileBannerWidget UStoreTileBannerWidget
---@field mpPurchaseCollectionHCButton UBoxCostUserButton
---@field mpPurchaseCollectionSCButton UBoxCostUserButton
---@field mPageID FString
---@field mpOwningStoreScreen UStoreScreen
---@field mContainedRowRange TArray<int32>
UStoreCatalogTile = {}

function UStoreCatalogTile:SetupPurchaseCollectionNavigation() end
---@param Title FText
function UStoreCatalogTile:SetTileTitle(Title) end
---@param pageID FString
function UStoreCatalogTile:SetPageID(pageID) end
---@param pStoreScreen UStoreScreen
function UStoreCatalogTile:SetOwningStoreScreen(pStoreScreen) end
---@param NewValue TArray<int32>
function UStoreCatalogTile:SetContainedRowRange(NewValue) end
---@param NewTime FUtcDateTime
function UStoreCatalogTile:SetCollectionExpiry(NewTime) end
function UStoreCatalogTile:RefreshPurchaseCollectionCost() end
function UStoreCatalogTile:RefreshPurchaseCollectionButton() end
function UStoreCatalogTile:OnPurchaseCollectionSCPressed() end
function UStoreCatalogTile:OnPurchaseCollectionHCPressed() end
---@return int32
function UStoreCatalogTile:GetContainedRowCount() end
---@return TArray<UNavButton>
function UStoreCatalogTile:GetAllNavButtons() end


---@class UStoreDebugWidget : UUserWidget
---@field mpPreviousWeekButton UButton
---@field mpNextWeekButton UButton
---@field mpPreviousDayButton UButton
---@field mpNextDayButton UButton
---@field mpPreviewStoreButton UButton
---@field mpDateText UTextBlock
---@field mCurrentDateTime FDateTime
UStoreDebugWidget = {}

function UStoreDebugWidget:RefreshDateText() end
function UStoreDebugWidget:OnPreviousWeekPressed() end
function UStoreDebugWidget:OnPreviousDayPressed() end
function UStoreDebugWidget:OnPreviewStorePressed() end
function UStoreDebugWidget:OnNextWeekPressed() end
function UStoreDebugWidget:OnNextDayPressed() end
---@param days int32
function UStoreDebugWidget:ChangeDate(days) end


---@class UStoreItemContentsLargeTile : UUserWidget
---@field mpItemImage UImage
---@field mpItemRarityBorder UBorder
---@field mpRarityText UTextBlock
---@field mpItemNameText UTextBlock
---@field mpItemTypeText UTextBlock
---@field mpNavButton UNavButton
UStoreItemContentsLargeTile = {}

---@param Grantable FGrantable
function UStoreItemContentsLargeTile:PopulateData(Grantable) end
function UStoreItemContentsLargeTile:DoTick() end


---@class UStoreItemContentsPreviewMenuScreen : UBaseScreen
---@field mPrizeStyleTileSize FVector2D
---@field mDioramaStyleTileSize FVector2D
---@field mStickerTileSizeMultiplier float
---@field mpTitleText UTextBlock
---@field mpDescriptionText UTextBlock
---@field mCurrentlyDisplayHeaderTitle FText
---@field mpCurrentlyDisplayedHeaderTexture UTexture2D
---@field mpGeneratedItemButtons TArray<UNavButton>
---@field mpItemRarityBorder UBorder
---@field mpItemRarityText UTextBlock
---@field mpItemNameText UTextBlock
---@field mpItemImage UImage
---@field mpItemDescriptionText URichTextBlock
---@field mpPrizeStyleGeneratedContentScrollBox UScrollBox
---@field mpDioramaStyleGeneratedContentScrollBox UScrollBox
---@field mpListStyleGeneratedContentScrollBox UAnimatedSnapNavScrollBox
---@field mCurrentlyGeneratedListTiles TArray<UStoreItemContentsLargeTile>
---@field mpListStyleGeneratedContentBox UHorizontalBox
---@field mpListStyleLeftButton UButton
---@field mpListStyleRightButton UButton
---@field mItemTileClass TSubclassOf<UStoreItemContentsTile>
---@field mScrollTileClass TSubclassOf<UStoreItemContentsScrollTile>
---@field mListStyleTileClass TSubclassOf<UStoreItemContentsLargeTile>
---@field mpStyleSwitcher UWidgetSwitcher
---@field mpPrizeBoxStyleCanvas UCanvasPanel
---@field mpDioramaStyleCanvas UCanvasPanel
---@field mpListStyleCanvas UCanvasPanel
---@field mpSKUPostPurchaseIntro UWidgetAnimation
---@field mMaxNumItemColumns int32
---@field mCurrentlyDisplayedGrantables TArray<FGrantable>
---@field mAllItemButtons TArray<UNavButton>
UStoreItemContentsPreviewMenuScreen = {}

---@param newText FText
---@param pNewTexture UTexture2D
function UStoreItemContentsPreviewMenuScreen:SetNavigationHeaderAndImage(newText, pNewTexture) end
---@param characterGrantable FGrantable
function UStoreItemContentsPreviewMenuScreen:PopulateMovieContentsForCharacter(characterGrantable) end
---@param Grantables TArray<FGrantable>
function UStoreItemContentsPreviewMenuScreen:PopulateListStyleData(Grantables) end
---@param Grantables TArray<FGrantable>
---@param sku FString
function UStoreItemContentsPreviewMenuScreen:PopulateDioramaStyleData(Grantables, sku) end
function UStoreItemContentsPreviewMenuScreen:PlaySKUPostPurchaseIntroAnimation() end
function UStoreItemContentsPreviewMenuScreen:OnListStyleRightButtonPressed() end
function UStoreItemContentsPreviewMenuScreen:OnListStyleLeftButtonPressed() end
---@param tileGUID FString
function UStoreItemContentsPreviewMenuScreen:OnItemTileSelected(tileGUID) end
---@return boolean
function UStoreItemContentsPreviewMenuScreen:IsCurrentlyListStyle() end
---@param movie FMovieState
---@return int32
function UStoreItemContentsPreviewMenuScreen:GetTotalHCInMovieState(movie) end
---@param Grantables TArray<FGrantable>
---@return int32
function UStoreItemContentsPreviewMenuScreen:GetTotalHCInGrantables(Grantables) end
---@param grantableList TArray<FGrantable>
---@param outTags TArray<FText>
---@param outTypes TArray<EStoreTagType>
---@return TArray<FGrantable>
function UStoreItemContentsPreviewMenuScreen:GetTagMapForGrantableList(grantableList, outTags, outTypes) end
---@param movie FMovieState
---@return FText
function UStoreItemContentsPreviewMenuScreen:GetRewardHeaderForMovie(movie) end
---@param movie FMovieState
---@return EFaction
function UStoreItemContentsPreviewMenuScreen:GetMainFactionFromMovie(movie) end
---@param rewards TArray<FGrantable>
---@param skuDataName FString
---@return FText
function UStoreItemContentsPreviewMenuScreen:GetFormattedRewardsTitle(rewards, skuDataName) end
---@param pTargetScrollTile UStoreItemContentsScrollTile
---@param TileIndex int32
---@return UStoreItemContentsTile
function UStoreItemContentsPreviewMenuScreen:CreateTile(pTargetScrollTile, TileIndex) end
---@return UStoreItemContentsLargeTile
function UStoreItemContentsPreviewMenuScreen:CreateNewListStyleTile() end


---@class UStoreItemContentsScrollTile : UUserWidget
---@field mpGeneratedItemsPanel UUniformGridPanel
---@field mpHeaderText UTextBlock
UStoreItemContentsScrollTile = {}



---@class UStoreItemContentsTile : UBaseUserButton
---@field mpItemImage UImage
---@field mpItemNameText UTextBlock
---@field mpTileTag UStoreItemTileTag
---@field mTeenTagColor FColor
---@field mEvilTagColor FColor
---@field mAllCharactersTagColor FColor
UStoreItemContentsTile = {}

---@param ImageSize FVector2D
function UStoreItemContentsTile:SetImageBrushSize(ImageSize) end
---@param pTex UTexture2D
function UStoreItemContentsTile:SetImage(pTex) end
---@param ItemName FText
---@param itemTag FText
---@param tagType EStoreTagType
function UStoreItemContentsTile:PopulateData(ItemName, itemTag, tagType) end


---@class UStoreItemListWidget : UBaseItemList
UStoreItemListWidget = {}


---@class UStoreItemTile : UStoreItemTile_Base
---@field mpItemNameText UTextBlock
---@field mpItemNameIcon UImage
---@field mpStandardPurchasePrice_HC_Text UTextBlock
---@field mpStandardPurchasePrice_RC_Text UTextBlock
---@field mpStandardPurchasePrice_SC_Text UTextBlock
---@field mpTileBackgroundImage UImage
---@field mpTileForegroundImage UImage
---@field mpForegroundScaleBox UScaleBox
---@field mpCurrencyImage UImage
---@field mpItemInfoBox UVerticalBox
---@field mpBundleQuantityBorder UBorder
---@field mpBundleQuantityText UTextBlock
---@field mpPurchasedOverlay UBorder
---@field mpItemRarityBorder UBorder
---@field mpItemCategoryText UTextBlock
---@field mpBackgroundOverlayImage UImage
---@field mpBackgroundOverlayScaleBox UScaleBox
---@field mpForegroundScaleSpacer_0 USpacer
---@field mpForegroundScaleSpacer_1 USpacer
---@field mpPriceWidgetSwitcher UWidgetSwitcher
---@field mpStandardPurchasePriceHCSwitcher UWidgetSwitcher
---@field mpStandardPurchasePrice_SCBorder UBorder
---@field mpStandardPurchasePrice_HCBorder UBorder
---@field mpStandardPurchasePrice_RCBorder UBorder
---@field mpOwnedBorder UBorder
---@field mpBlipBox UHorizontalBox
---@field mpNonFocusedBorder UBorder
---@field mRowIndex int32
---@field mTileSize EStoreItemTileSize
---@field mpBannerWidget UStoreTileBannerWidget
---@field mpRadialLightImage UImage
---@field mpItemTitleWidgetSwitcher UWidgetSwitcher
---@field mpStandardItemTitleBox UVerticalBox
---@field mpOwnedPurchasePriceWidget UBorder
---@field mpStandardPurchasePriceWidget UOverlay
---@field mpItemMissingBox UScaleBox
---@field mpHCItemTitleBox USizeBox
---@field mpHCItemTitleText UTextBlock
---@field mpHCPurchasingPriceWidget UOverlay
---@field mpHCRealCurrencyText UTextBlock
---@field mpHCPriceBadgeImage UImage
---@field mpPrizePackPriceWidget UOverlay
---@field mpPrizePackTitleBox USizeBox
---@field mpPrizePackPriceText UTextBlock
---@field mpPrizePackTitleText UTextBlock
---@field mpPrizePackRarityBorder UBorder
---@field mpOverrideForegroundImage UTexture2D
---@field mpOverrideBackgroundImage UTexture2D
---@field mOverrideBackgroundTint FColor
---@field mpBackgroundOverlayOverride UTexture2D
---@field mBackgroundOverlayOverrideOpacity float
---@field mbBackgroundOverlayScaleToFill boolean
---@field mbHideRadialLight boolean
---@field mItemNameOverride FText
---@field mbShowItemNameIcon boolean
---@field mItemCategoryOverride FText
---@field mItemRarityOverride EItemRarity
---@field mbUseItemRarityOverride boolean
---@field mbGoToStaticImageScreen boolean
---@field mForegroundSpacerSizeOverride float
---@field mForegroundSpacerSizeRatio float
---@field mbUseForegroundSpacerSizeOverride boolean
---@field mbDisplayItemNameInHCPurchasingFormat boolean
---@field mbDisplayItemNameInFoundersPackFormat boolean
---@field mbDisplayItemNameInPrizePackFormat boolean
---@field mTileSizeOverride EStoreItemTileSize
---@field mBannerMessageOverride FText
---@field mBannerColorOverride FColor
---@field mbUseBannerColorOverride boolean
---@field mBannerTextColorOverride FSlateColor
---@field mbUseBannerTextColorOverride boolean
---@field mFoundersPackTextColor FSlateColor
---@field mpHCPriceBadgeTexture UTexture2D
UStoreItemTile = {}

---@param Size EStoreItemTileSize
function UStoreItemTile:SetTileSizeType(Size) end
---@param newText FText
function UStoreItemTile:SetNameText(newText) end
---@param NewTime FUtcDateTime
function UStoreItemTile:SetExpiryTime(NewTime) end
---@param bNewValue boolean
function UStoreItemTile:SetBannerVisibility(bNewValue) end
---@param Color FColor
function UStoreItemTile:SetBackgroundTint(Color) end
---@param pObj UObject
function UStoreItemTile:SetBackgroundImageResource(pObj) end
function UStoreItemTile:RefreshTileOverrides() end
function UStoreItemTile:RefreshFormattingSwitcher() end
---@param Data FStoreItemDataExtras_PrizePack
function UStoreItemTile:PopulatePrizePackData(Data) end
---@param pTex UTexture2D
function UStoreItemTile:OnTextureLoaded(pTex) end
---@return int32
function UStoreItemTile:GetRowIndex() end
---@return UStoreTileBannerWidget
function UStoreItemTile:GetBannerWidget() end
function UStoreItemTile:FindSyncWidgets() end


---@class UStoreItemTileSlideShow : UStoreItemTile_Base
---@field mpWidgetSwitcher UWidgetSwitcher
---@field mpOwnerStoreScreen UStoreScreen
---@field mSlideTimer float
---@field mAllSlideTextures TArray<UTexture2D>
---@field mTitlesBySlide TArray<FText>
---@field mCommandsBySlide TArray<FString>
---@field mpTitleText UTextBlock
---@field mpTileSizeBox USizeBox
---@field mTileSize FVector2D
---@field mSectionSpacerSize float
---@field mSectionClass TSubclassOf<UStoreItemTileSlideShowSection>
---@field mGeneratedSectionList TArray<UStoreItemTileSlideShowSection>
---@field mpGeneratedSectionsBox UHorizontalBox
UStoreItemTileSlideShow = {}

function UStoreItemTileSlideShow:SynchronizeProperties() end
---@param newSize FVector2D
function UStoreItemTileSlideShow:SetSlideshowTileSize(newSize) end
---@param mpScreen UStoreScreen
function UStoreItemTileSlideShow:SetOwnerStoreScreen(mpScreen) end
function UStoreItemTileSlideShow:ResetWidgetStates() end
---@param Data FStoreItemDataExtras_Fake_Slideshow
function UStoreItemTileSlideShow:PopulateSlideshowData(Data) end
---@param Index int32
function UStoreItemTileSlideShow:PopulateIndex(Index) end
---@param Index int32
function UStoreItemTileSlideShow:OnSectionIndexPressed(Index) end
---@param Index int32
function UStoreItemTileSlideShow:OnBlipPressed(Index) end
function UStoreItemTileSlideShow:FindSyncWidgets() end
---@param newTile UStoreItemTile
function UStoreItemTileSlideShow:AddNewStoreTile(newTile) end


---@class UStoreItemTileSlideShowBlip : UUserWidget
---@field mpButton UNavButton
---@field mpWidgetSwitcher UWidgetSwitcher
---@field mpOwnerStoreTile UStoreItemTile
---@field mBlipIndex int32
UStoreItemTileSlideShowBlip = {}

---@param Tile UStoreItemTile
---@param Index int32
function UStoreItemTileSlideShowBlip:SetOwnerStoreTile(Tile, Index) end
---@param bOn boolean
function UStoreItemTileSlideShowBlip:SetBlipState(bOn) end
function UStoreItemTileSlideShowBlip:OnPressed() end
function UStoreItemTileSlideShowBlip:NativeConstruct() end


---@class UStoreItemTileSlideShowSection : UUserWidget
---@field mCurrentSectionWidth float
---@field mpProgressBarImage UImage
---@field mpSectionHoveredText UTextBlock
---@field mpSectionUnHoveredText UTextBlock
---@field mpSectionButton UButton
---@field mpOwningSlideshow UStoreItemTileSlideShow
---@field mSectionIndex int32
---@field mbIsActiveSection boolean
---@field mpWidgetSwitcher UWidgetSwitcher
UStoreItemTileSlideShowSection = {}

---@param Title FText
function UStoreItemTileSlideShowSection:SetSectionTitle(Title) end
---@param percent float
function UStoreItemTileSlideShowSection:SetPercentage(percent) end
---@param pValue UStoreItemTileSlideShow
---@param Index int32
function UStoreItemTileSlideShowSection:SetOwningSlideshow(pValue, Index) end
---@param bNewValue boolean
function UStoreItemTileSlideShowSection:SetIsActiveSection(bNewValue) end
function UStoreItemTileSlideShowSection:OnPressed() end
function UStoreItemTileSlideShowSection:DoTick() end


---@class UStoreItemTileTag : UUserWidget
---@field mpItemTagText UTextBlock
---@field mpItemTagImage UImage
---@field mTeenTagColor FColor
---@field mEvilTagColor FColor
---@field mAllCharactersTagColor FColor
UStoreItemTileTag = {}

---@param Title FText
---@param tagType EStoreTagType
function UStoreItemTileTag:PopulateData(Title, tagType) end


---@class UStoreItemTileWidget : UBaseItemTile
---@field mpTitleText UTextBlock
---@field mpCostPanel UCanvasPanel
---@field mpCostText UTextBlock
UStoreItemTileWidget = {}



---@class UStoreItemTile_Base : UBaseUserButton
---@field mpStoreScreenOwner UStoreScreen
---@field mCurrentStoreItemTileData FStoreItemTileData
---@field mGUIDOverride FText
---@field mCurrentSubColumn int32
---@field mCurrentSubRow int32
UStoreItemTile_Base = {}

function UStoreItemTile_Base:ShowAsPurchased() end
---@param subRow int32
---@param subCol int32
function UStoreItemTile_Base:SetSubRowAndColumn(subRow, subCol) end
---@param pOwner UStoreScreen
function UStoreItemTile_Base:SetStoreScreenOwner(pOwner) end
---@param newData FStoreItemTileData
function UStoreItemTile_Base:PopulateData(newData) end
function UStoreItemTile_Base:OnOwningPageOpened() end
---@return EStoreItemTileSize
function UStoreItemTile_Base:GetTileSizeType() end
---@return int32
function UStoreItemTile_Base:GetSubRow() end
---@return int32
function UStoreItemTile_Base:GetSubColumn() end
---@return FStoreItemTileData
function UStoreItemTile_Base:GetStoreItemTileData() end


---@class UStoreItemTile_FoundersPack : UStoreItemTile_Base
---@field mFoundersPackDataIndex int32
---@field mpItemTexture UTexture2D
---@field mpGlowTexture UTexture2D
---@field mTextColor FSlateColor
---@field mpFoundersPackHoverAnimation UWidgetAnimation
---@field mpTitleText UTextBlock
---@field mpItemImage UImage
---@field mpPriceText UTextBlock
---@field mpPriceBackground UImage
---@field mbIsItemTileHovered boolean
---@field mpPurchasedStateSwitcher UWidgetSwitcher
UStoreItemTile_FoundersPack = {}

function UStoreItemTile_FoundersPack:PopulateFoundersPackData() end
---@param bReverse boolean
function UStoreItemTile_FoundersPack:PlayHoverAnimation(bReverse) end
function UStoreItemTile_FoundersPack:NativeConstruct() end
function UStoreItemTile_FoundersPack:FindSyncWidgets() end


---@class UStoreItemTile_StreakReward : UStoreItemTile
---@field mpStreakDayText UTextBlock
---@field mpRewardAmountText UTextBlock
---@field mpClaimText UTextBlock
---@field mpClaimedBorder UBorder
---@field mpClaimRewardBorder UBorder
---@field mCurrentlyHeldStreakData FStoreItemDataExtras_Streak
---@field mpStreakBonusText UTextBlock
---@field mpClaimedButtonBorderImage UTexture2D
UStoreItemTile_StreakReward = {}

---@param Data FStoreItemDataExtras_Streak
function UStoreItemTile_StreakReward:PopulateStreakData(Data) end


---@class UStoreManager : UObject
---@field mbWaitingOnStoreDiscovery boolean
---@field mbPendingStoreDiscovery boolean
---@field mbWaitingOnSpecificStoreDiscovery boolean
---@field mbPendingSpecificStoreDiscovery boolean
---@field mSpecificStoreDiscoveryDate FString
---@field mStoreItems TArray<FStoreItemData>
---@field mSKUData TArray<FStoreSKUData>
---@field mPageData TArray<FStorePageStruct>
---@field mLastParsedStreakData TArray<FStoreItemDataExtras_Streak>
---@field mCurrentStoreTimeOffset int32
---@field mbPendingItemPurchase boolean
---@field mbWaitingOnItemPurchase boolean
---@field mbPurchaseSuccess boolean
---@field mSlotIDsToPurchase TArray<FString>
---@field mPurchaseOptionIndices TArray<int32>
---@field mpPurchasingModal UBusyModalWidget
---@field mpRefreshModal UBusyModalWidget
---@field mbWaitingOnPurchaseConfirmation boolean
---@field mbConfirmingPurchaseWithHC boolean
---@field mConfirmingSlotIDs TArray<FString>
---@field mConfirmingOptionIndices TArray<int32>
---@field mConfirmingExpectedCosts TArray<int32>
---@field mbBuyPPInstead boolean
---@field mbPendingChestDiscovery boolean
---@field mbWaitingOnChestDiscovery boolean
---@field mbPendingEntitlementChestClaim boolean
---@field mbWaitingOnEntitlementChestClaim boolean
---@field mbWaitingOnSteamBeginMicroTxn boolean
---@field mbPendingSteamBeginMicroTxn boolean
---@field mbWaitingOnSteamFinishMicroTxn boolean
---@field mbPendingSteamFinishMicroTxn boolean
---@field mPendingMicroTxnItems TArray<FSteamMicroTxnItemStruct>
---@field mbSteamPostMicroTxnDataValid boolean
---@field mbSteamPostMicroTxnSuccess boolean
---@field mSteamPostMicroTxnOrderId FString
---@field mbWaitingOnSteamDLCOverlayClosed boolean
---@field mbWaitingOnPostOverlayDLCSync boolean
---@field mbWaitingOnSteamSyncDLC boolean
---@field mbPendingSteamSyncDLC boolean
---@field mCurrentSteamAuthSessionTicket FString
---@field mCurrentHAuthTicket uint32
---@field mpSteamOverlayBusyModal UBusyModalWidget
---@field mpEpicOverlayBusyModal UBusyModalWidget
---@field mCurrentStoreDataGUID FString
---@field mbHasStoreDataBeenRetrieved boolean
---@field mExpectedCostByPointType TMap<FString, int32>
---@field mStoreBundleDataTable UDataTable
---@field mStoreCatalogDataTable UDataTable
---@field mbHasEpicOffersPendingForRedemption boolean
---@field mEpicPendingOfferUserID FString
---@field mPendingEpicOffersToRedeem_ValidationInfo TArray<FString>
---@field mPendingEpicOffersToRedeem_UniqueIds TArray<FString>
---@field mbLookForNewEpicRecipts boolean
---@field mbReceiptQueryInProgress boolean
---@field mbWaitingOnEpicRedeemEntitlement boolean
---@field mbPointRefreshCompleted boolean
---@field mbInventoryRefreshCompleted boolean
---@field mbChestRefreshCompleted boolean
---@field mbWaitingOnPostPurchaseRefreshes boolean
---@field mbPerformingOnLoginEntitlementCheck boolean
---@field mbHasCompletedLoginEntitlementCheck boolean
---@field mLoginGrantablesToParse TArray<FGrantable>
---@field mTimeDataValidUntil FUtcDateTime
---@field mNextDayStoreGUID FString
UStoreManager = {}

function UStoreManager:UseNextDayStoreData() end
function UStoreManager:UpdateSteamOverlayCallbacks() end
function UStoreManager:UpdatePostPurchaseRefreshes() end
function UStoreManager:UpdateEpicCallbacks() end
---@return boolean
function UStoreManager:ShouldBuyPPInstead() end
---@param itemGUID FString
---@param Data FStoreItemData
function UStoreManager:SetStoreDataByGUID(itemGUID, Data) end
---@param newData FStoreSKUData
function UStoreManager:SetSKUDataBySKU(newData) end
---@param boughtItem FStoreItemData
function UStoreManager:RecordAnalytics(boughtItem) end
function UStoreManager:QueueStoreRefresh() end
function UStoreManager:QueueSteamSyncDLC() end
function UStoreManager:QueueLoginEntitlementCheck() end
function UStoreManager:QueueClaimEntitlementChests() end
function UStoreManager:QueueChestRefresh() end
---@param Items TArray<FSteamMicroTxnItemStruct>
function UStoreManager:QueueBeginSteamMicroTxn(Items) end
---@param Data FStoreSKUData
function UStoreManager:QueueBeginSteamDLCPurchase(Data) end
function UStoreManager:PopulateEpicStoreOffers() end
function UStoreManager:ParseCachedLoginGrantables() end
---@param bFoundNewDLC boolean
function UStoreManager:OnSteamSyncDLCComplete(bFoundNewDLC) end
function UStoreManager:OnPurchaseSuccessPressed() end
function UStoreManager:OnPurchaseInventoryRefreshFinished() end
function UStoreManager:OnPurchaseInventoryChestRefreshFinished() end
---@param bSuccess boolean
---@param ErrorCode EBackendErrorCode
function UStoreManager:OnPurchaseFinished(bSuccess, ErrorCode) end
function UStoreManager:OnPurchaseConfirmed() end
function UStoreManager:OnPurchaseCancelled() end
function UStoreManager:OnLogout() end
---@param bFoundEntitlements boolean
function UStoreManager:OnLoginEntitlementCheckComplete(bFoundEntitlements) end
function UStoreManager:OnInventoryPointRefreshFinished() end
function UStoreManager:OnAllPostPurchaseRefreshesComplete() end
---@param storeData FStoreItemData
---@return boolean
function UStoreManager:IsStoreItemDataOwned(storeData) end
---@return boolean
function UStoreManager:IsStoreDataOutOfDate() end
---@param ItemId FDbItemId
---@return boolean
function UStoreManager:IsItemIDInStore(ItemId) end
---@param newData FStorePageStruct
---@param pageArray TArray<FStorePageStruct>
---@return int32
function UStoreManager:InsertPageDataIntoArray(newData, pageArray) end
---@return boolean
function UStoreManager:HasValidNextDayStoreData() end
---@return boolean
function UStoreManager:HasStoreInfoBeenRetrieved() end
---@return boolean
function UStoreManager:HasLoginGrantablesReadyForParse() end
---@return boolean
function UStoreManager:HasCompletedLoginEntitlementCheck() end
function UStoreManager:HandleBackendRequests() end
---@return FUtcDateTime
function UStoreManager:GetTimeValidUntil() end
---@param storeType EStoreRealMoneyStoreType
---@return FString
function UStoreManager:GetStringForRealMoneyStoreType(storeType) end
---@param str FString
---@return EStreakRewardTimeFrame
function UStoreManager:GetStreakRewardTimeframeFromString(str) end
---@param itemGUID FString
---@return FStoreItemData
function UStoreManager:GetStoreItemInfoByGUID(itemGUID) end
---@param Name FString
---@return FString
function UStoreManager:GetStoreItemGUIDFromName(Name) end
---@param Title FText
---@return FString
function UStoreManager:GetStoreDioramaLevelFromTitle(Title) end
---@param uiSlot EUISlot
---@param playerSlot EPlayerSlot
---@param dbItemType EDbItemType
---@return FText
function UStoreManager:GetStoreCategoryTitleForItem(uiSlot, playerSlot, dbItemType) end
---@param pWorld UWorld
---@param Data FStoreSKUData
---@return FSteamMicroTxnItemStruct
function UStoreManager:GetSteamMicroTxnDataFromSKUData(pWorld, Data) end
---@param skuName FString
---@return FStoreSKUData
function UStoreManager:GetSKUDataBySKU(skuName) end
---@param Token FGrantable
---@return FString
function UStoreManager:GetSKUByContainedGrantable(Token) end
---@param ItemId FDbItemId
---@return FString
function UStoreManager:GetSingleItemGUID(ItemId) end
---@param str FString
---@return EStoreRealMoneyStoreType
function UStoreManager:GetRealMoneyStoreTypeForString(str) end
---@param inString FString
---@param originalPrice int32
---@param modifiedPrice int32
function UStoreManager:GetPriceInfoFromString(inString, originalPrice, modifiedPrice) end
---@param pageName FString
---@param pageData TArray<FStorePageStruct>
---@return FStorePageStruct
function UStoreManager:GetPageStructByName(pageName, pageData) end
---@return TArray<FStorePageStruct>
function UStoreManager:GetPageData() end
---@return FUtcDateTime
function UStoreManager:GetNextUTCMidnight() end
---@return FString
function UStoreManager:GetNewestParsedStoreGUID() end
---@param PrizePackData TMap<EFaction, int32>
---@param seasonalEventType ESeasonalEventType
---@return FText
function UStoreManager:GetGenericPrizePackTitle(PrizePackData, seasonalEventType) end
---@param PrizePackData TMap<EFaction, int32>
---@param seasonalEventType ESeasonalEventType
---@return FText
function UStoreManager:GetFormattedPrizePackTitle(PrizePackData, seasonalEventType) end
---@param ItemId FDbItemId
---@return FString
function UStoreManager:GetFirstGUIDContainingItem(ItemId) end
---@return FUtcDateTime
function UStoreManager:GetCurrentStoreTime() end
---@return EStoreRealMoneyStoreType
function UStoreManager:GetCurrentRealMoneyStoreType() end
---@param str FString
---@return ECurrencyType
function UStoreManager:GetCurrencyTypeFromString(str) end
---@param bInHC boolean
---@param Data FStoreItemData
---@param finalPrice int32
---@param originalPrice int32
---@param bCostValid boolean
function UStoreManager:GetComputedPriceOfStoreItemData(bInHC, Data, finalPrice, originalPrice, bCostValid) end
---@param str FString
---@return EStoreCommandGrantableType
function UStoreManager:GetCommandGrantableTypeFromString(str) end
---@return TArray<FStoreItemData>
function UStoreManager:GetAllStoreItems() end
---@param pageName FString
---@return TArray<FStoreItemData>
function UStoreManager:GetAllStoreDataForPage(pageName) end
---@param skuType EStoreSKUDataType
---@return TArray<FStoreSKUData>
function UStoreManager:GetAllSKUDataOfType(skuType) end
---@return TArray<FStoreSKUData>
function UStoreManager:GetAllSKUData() end
---@param ItemId FDbItemId
---@return TArray<FString>
function UStoreManager:GetAllGUIDsContainingItem(ItemId) end
---@param skuData FStoreSKUData
---@param bIncludeContainedSKUs boolean
---@param bFilterOutOwnedSKUS boolean
---@return TArray<FGrantable>
function UStoreManager:GetAllContainedGrantablesForSKUData(skuData, bIncludeContainedSKUs, bFilterOutOwnedSKUS) end
---@param serverTime int32
function UStoreManager:FindNextRequiredRefreshTime(serverTime) end
---@param Grantables TArray<FGrantable>
---@param typesToRemove TArray<EPointType>
---@return TArray<FGrantable>
function UStoreManager:FilterPointsInGrantableArray(Grantables, typesToRemove) end
---@param DeltaTime float
function UStoreManager:DoTick(DeltaTime) end
---@param DateTime FDateTime
function UStoreManager:DiscoverDataForSpecificDate(DateTime) end
---@param Grantables TArray<FGrantable>
---@return TArray<FGrantable>
function UStoreManager:CompressPointsInGrantableArray(Grantables) end
function UStoreManager:ClearStoreData() end
function UStoreManager:ClearPurchaseConfirmationData() end
---@param Data FStoreSKUData
function UStoreManager:AttemptSKUDataPurchase(Data) end


---@class UStorePreviewMenuScreen : UBaseScreen
---@field mCurrentlyDisplayedStoreGUID FString
---@field mpItemImage UImage
---@field mpItemBorderBackground UBorder
---@field mpItemNameText UTextBlock
---@field mpDescriptionText URichTextBlock
---@field mpFlavourText UTextBlock
---@field mpTagsBox UHorizontalBox
---@field mpRarityText UTextBlock
---@field mpRarityBorder UBorder
---@field mpRarityBorderTimerSpacer USpacer
---@field mpItemPreviewCharacterTag UStoreItemTileTag
---@field mpGeneratedItemsPanel UUniformGridPanel
---@field mpGeneratedItemButtons TArray<UNavButton>
---@field mpPurchaseWithSCButton UBoxCostUserButton
---@field mpPurchaseWithHCButton UBoxCostUserButton
---@field mpClaimForFreeButton UBoxCostUserButton
---@field mpViewPrizesButton UBoxUserButton
---@field mpItemPreview_MovieRewardsButton UBaseUserButton
---@field mpItemPreview_BundleDescription_Overlay UOverlay
---@field mpItemPreview_BundleDescription_Name UTextBlock
---@field mpItemPreview_BundleDescription_Description UTextBlock
---@field mpItemImageSizeBox USizeBox
---@field mpItemImageVerticalBox UVerticalBox
---@field mpBundleSection UOverlay
---@field mScreenCameFrom EMenuScreen
---@field mSpacerSize float
---@field mPreviewTileClass TSubclassOf<UStoreBundleButton>
---@field mLabelWidgetClass TSubclassOf<UStorePreviewScreenLabelWidget>
---@field mpLabelGridPanel UUniformGridPanel
---@field mCurrentLabels TArray<UStorePreviewScreenLabelWidget>
---@field mMaxNumLabelColumns int32
---@field mMaxNumBundleColumns int32
---@field mCurrentlyDisplayedItemTileType EStoreItemTileType
---@field mCurrentlyDisplayedItems TArray<FGrantable>
---@field mCurrentlyDisplayedPrizePackData FStoreItemDataExtras_PrizePack
---@field mCurrentlyDisplayedSKUData FStoreSKUData
---@field mLastPurchasedMainSKUData FStoreSKUData
---@field mLastPurchasedSubSKUsData TArray<FStoreSKUData>
---@field mpCurrentlyDisplayedHeaderTexture UTexture2D
---@field mCurrentlyDisplayHeaderTitle FText
---@field mpItemTimerWidget UStoreTileBannerWidget
---@field mbShowingIndividualTitles boolean
---@field mpGradientBacker UCanvasPanel
---@field mbClaimFreeUseHCIndex boolean
---@field mpItemPurchasedLoadoutButton UBaseUserButton
---@field mpItemPurchasedContinueButton UBaseUserButton
---@field mpItemPurchased_ItemPurchasedText UTextBlock
---@field mpPurchasedItemNameText UTextBlock
---@field mpItemPurchased_ItemImage UImage
---@field mbIsSKUPurchaseAnimationActive boolean
---@field mpSKUBundleTitleText UTextBlock
---@field mpSKUBundleDescriptionText UTextBlock
---@field mpSKUBundleBuyButton UBoxCostUserButton
---@field mpSKUBundleViewContentButton UBaseUserButton
---@field mSKUPromoImageList TArray<UImage>
---@field mpScreenStateWidgetSwitcher UWidgetSwitcher
---@field mpItemPreviewOverlay UOverlay
---@field mpItemPurchasedOverlay UOverlay
---@field mpSKUBundlePreviewOverlay UOverlay
---@field mpCharacterPreviewOverlay UOverlay
---@field mpCharacterPreview_TitleText UTextBlock
---@field mpCharacterPreview_SubtitleText UTextBlock
---@field mpCharacterPreview_DescriptionText UTextBlock
---@field mpCharacterPreview_BuyButton_SC UBoxCostUserButton
---@field mpCharacterPreview_BuyButton_HC UBoxCostUserButton
---@field mpCharacterPreview_HCSpacer USpacer
---@field mpCharacterPreview_BuyButton_RC UBoxCostUserButton
---@field mpCharacterPreview_RCSpacer USpacer
---@field mpCharacterPreview_MovieRewardsButton UBaseUserButton
---@field mpCharacterPreview_AffinityText UTextBlock
---@field mpCharacterPreview_AffinityIcon UImage
---@field mpCharacterPreview_GeneratedContentBox UHorizontalBox
---@field mPerkWidgetClass TSubclassOf<UStorePreviewScreenPerkWidget>
---@field mGeneratedPerkWidgetList TArray<UStorePreviewScreenPerkWidget>
---@field mpCharacterPreview_CharacterAffinityOverlay UOverlay
---@field mCurrentlyDisplayedCharacterGrantable FGrantable
---@field mbCurrentlyDisplayingSingleMovieAsBundle boolean
---@field mbCharacterPreviewButtonUsingHC boolean
---@field mbIgnoreNextCommitChangesReset boolean
UStorePreviewMenuScreen = {}

---@return boolean
function UStorePreviewMenuScreen:WasLastItemPurchasedCharacter() end
---@param grantableArray TArray<FGrantable>
---@return TArray<FGrantable>
function UStorePreviewMenuScreen:SortGrantablesByFaction(grantableArray) end
---@param slotDataName FString
---@return boolean
function UStorePreviewMenuScreen:ShouldDisplayBundleWithTags(slotDataName) end
---@param allGrantables TArray<FGrantable>
---@return boolean
function UStorePreviewMenuScreen:ShouldDisplayBundleImageAsPostPurchaseImage(allGrantables) end
---@param pWidg UWidget
function UStorePreviewMenuScreen:SetScreenStateWidget(pWidg) end
---@param screen EMenuScreen
function UStorePreviewMenuScreen:SetScreenCameFrom(screen) end
---@param itemList TArray<FGrantable>
function UStorePreviewMenuScreen:SetPreviewItems(itemList) end
---@param newText FText
---@param pNewTexture UTexture2D
function UStorePreviewMenuScreen:SetNavigationHeaderAndImage(newText, pNewTexture) end
---@param pNewTex UTexture2D
function UStorePreviewMenuScreen:SetItemImage(pNewTex) end
---@param newDate FUtcDateTime
function UStorePreviewMenuScreen:SetItemExpiry(newDate) end
function UStorePreviewMenuScreen:QueuePostCharacterPurchaseDiscover() end
---@param itemGUID FString
---@return boolean
function UStorePreviewMenuScreen:PopulateDataFromGUID(itemGUID) end
---@param grantableArray TArray<FGrantable>
function UStorePreviewMenuScreen:PopulateDataFromGrantableArray(grantableArray) end
---@param storeData FStoreItemData
function UStorePreviewMenuScreen:PopulateDataForCharacter(storeData) end
---@param grantableArray TArray<FGrantable>
---@param tileSizeArray TArray<EStoreItemTileSize>
function UStorePreviewMenuScreen:PopulateData(grantableArray, tileSizeArray) end
function UStorePreviewMenuScreen:OnViewSKUBundleContentsPressed() end
function UStorePreviewMenuScreen:OnViewPrizesPressed() end
---@param purchasedSKU FStoreSKUData
---@param otherPurchasedSKUs TArray<FStoreSKUData>
function UStorePreviewMenuScreen:OnSKUPurchased(purchasedSKU, otherPurchasedSKUs) end
function UStorePreviewMenuScreen:OnSKUPurchaseAnimationFinished() end
function UStorePreviewMenuScreen:OnPurchaseWithSCPressed() end
function UStorePreviewMenuScreen:OnPurchaseWithRCPressed() end
function UStorePreviewMenuScreen:OnPurchaseWithHCPressed() end
function UStorePreviewMenuScreen:OnPurchaseSKUBundlePressed() end
---@param bWithHC boolean
---@param bFree boolean
function UStorePreviewMenuScreen:OnPurchasePressed(bWithHC, bFree) end
function UStorePreviewMenuScreen:OnPurchaseLoadoutButtonPressed() end
function UStorePreviewMenuScreen:OnPurchaseContinueButtonPressed() end
function UStorePreviewMenuScreen:OnPurchaseCompleted() end
---@param tileGUID FString
function UStorePreviewMenuScreen:OnItemTileSelected(tileGUID) end
function UStorePreviewMenuScreen:OnItemPreviewMovieRewardsPressed() end
function UStorePreviewMenuScreen:OnClaimFreePressed() end
function UStorePreviewMenuScreen:OnCharacterMovieRewardsPressed() end
---@return boolean
function UStorePreviewMenuScreen:IsOnSKUPreviewScreen() end
---@return boolean
function UStorePreviewMenuScreen:IsOnPostPurchaseScreen() end
---@return boolean
function UStorePreviewMenuScreen:IsOnCharacterPreviewScreen() end
---@param NewValue FStoreItemData
---@return TArray<FString>
function UStorePreviewMenuScreen:GetTagsForStoreData(NewValue) end
---@param ItemId FString
---@return TArray<FString>
function UStorePreviewMenuScreen:GetTagsForSingleStoreItem(ItemId) end
---@return EMenuScreen
function UStorePreviewMenuScreen:GetScreenCameFrom() end
---@param itemList TArray<FString>
---@return TArray<FText>
function UStorePreviewMenuScreen:GetRequiredPrerequisitesForItems(itemList) end
---@param faction EFaction
---@param minItemRarity EItemRarity
---@param seasonalEventType ESeasonalEventType
---@return TArray<FGrantable>
function UStorePreviewMenuScreen:GetPrizePackContentsFromFaction(faction, minItemRarity, seasonalEventType) end
function UStorePreviewMenuScreen:ClearPreviewBackgroundModel() end
---@param prizeArray TArray<FGrantable>
---@param faction EFaction
---@param seasonalEventType ESeasonalEventType
---@return TArray<FGrantable>
function UStorePreviewMenuScreen:AddEventSpecificPrizesToArray(prizeArray, faction, seasonalEventType) end


---@class UStorePreviewScreenLabelWidget : UUserWidget
---@field mpNameText UTextBlock
UStorePreviewScreenLabelWidget = {}

---@param ItemName FText
function UStorePreviewScreenLabelWidget:PopulateData(ItemName) end


---@class UStorePreviewScreenPerkWidget : UUserWidget
---@field mpPerkImage UImage
---@field mpPerkNameText UTextBlock
UStorePreviewScreenPerkWidget = {}

---@param pPerkTemplate UDbItemTemplate
function UStorePreviewScreenPerkWidget:PopulateData(pPerkTemplate) end


---@class UStoreScreen : UBaseScreen
---@field mCurrentItemAddress TArray<FString>
---@field mbHasPopulatedStoreData boolean
---@field mbHasGeneratedPages boolean
---@field mCurrentPageIndex int32
---@field mbGeneratedFirstPage boolean
---@field mAllTiles TArray<UStoreItemTile_Base>
---@field mFoundersPackTiles TArray<UStoreItemTile_FoundersPack>
---@field mHCBuyTiles TArray<UStoreItemTile>
---@field mpCharacterBuyTileList TArray<UStoreItemTile>
---@field mpItemList UBaseItemList
---@field mpGeneratedContentBox UVerticalBox
---@field mpFoundersPackBox UHorizontalBox
---@field mpHCContentPanel UCanvasPanel
---@field mpCharacterContentPanel UCanvasPanel
---@field mpStoreCatalogPanel UStoreCatalogPanel
---@field mStoreTileClass TSubclassOf<UStoreItemTile>
---@field mStoreTileClass_Streak TSubclassOf<UStoreItemTile>
---@field mStoreTileClass_Prize TSubclassOf<UStoreItemTile>
---@field mStoreTileClass_Fake_Slideshow TSubclassOf<UStoreItemTileSlideShow>
---@field mStoreSideBarTileClass TSubclassOf<UStoreSideBarTile>
---@field mTileBannerClass TSubclassOf<UStoreTileBannerWidget>
---@field mTileSizesByEnum TMap<EStoreItemTileSize, FVector2D>
---@field mTileSpacerSize float
---@field mCategorySpacerSize float
---@field mRowSpacerSize float
---@field mLargeItemTilesPerRow int32
---@field mCurrentRowList TArray<UHorizontalBox>
---@field mpFrontPageText UTextBlock
---@field mpBuyCharactersText UTextBlock
---@field mpBuyHCText UTextBlock
---@field mCurrentPageList TArray<FStorePageStruct>
---@field mpTemplateSideBarButton UButton
---@field mpTemplateSideBarSpacer USpacer
---@field mpContentTitleTextBlock UTextBlock
---@field mLastSelectedItemGUID FString
---@field mTileBackgroundColorOverrides TArray<FColor>
---@field mFakeTilesToInsert TMap<UTexture2D, EStoreItemTileSize>
---@field mSlideShowTilesToInsert TArray<FStoreItemDataExtras_Fake_Slideshow>
---@field mbWaitingOnRefreshConfirmation boolean
---@field mpStorePageSwitcher UCategorySwitcher
---@field mpFeaturedTimerPanel UCanvasPanel
---@field mpLastModifiedStoreTimerWidget UStoreTileBannerWidget
---@field mLastCreatedStoreData FStoreItemData
---@field mbIsLastCreatedStoreDataValid boolean
---@field mpStoreErrorText UTextBlock
---@field mpStoreScreenCanvasPanel UCanvasPanel
---@field mpStoreMessageTextPanel UCanvasPanel
---@field mbIsInErrorMode boolean
---@field mpContentSwitcher UWidgetSwitcher
---@field mPagesToPageDataMapping TMap<int32, int32>
---@field mPageLocStringToPromoMessage TMap<FString, FText>
---@field mProductCode FString
---@field mHalloweenCategoryButtonClass TSubclassOf<UCategoryButtonWidget>
UStoreScreen = {}

function UStoreScreen:UpdateStoreTimer() end
---@param itemGUID FString
function UStoreScreen:TransitionToPreviewScreen(itemGUID) end
function UStoreScreen:SetupNavigationForTiles() end
---@param newText FText
function UStoreScreen:SetStoreErrorText(newText) end
function UStoreScreen:ScanAndRefreshOwnedItems() end
function UStoreScreen:ResetErrorScreen() end
---@param DateTime FDateTime
function UStoreScreen:RefreshWithStoreDataForSpecificDate(DateTime) end
function UStoreScreen:RefreshItemTileFocus() end
function UStoreScreen:PopulatePanels() end
function UStoreScreen:PopulateHCTiles() end
function UStoreScreen:PopulateCharacterTiles() end
---@param pageData FStorePageStruct
function UStoreScreen:PopulateCatalogPageData(pageData) end
---@param tileGUID FString
function UStoreScreen:OnStoreTilePressed(tileGUID) end
---@param Index int32
function UStoreScreen:OnStorePagePressed(Index) end
---@param tileGUID FString
function UStoreScreen:OnSpecialTilePressed(tileGUID) end
function UStoreScreen:OnRefreshConfirmed() end
function UStoreScreen:OnNonPreviewPurchaseFinished() end
---@param productCode FText
function UStoreScreen:OnEnteredProductCode(productCode) end
function UStoreScreen:LaunchStoreURL() end
---@param page FStorePageStruct
---@return boolean
function UStoreScreen:IsPagePregenerated(page) end
---@param pTargetWidget UPanelWidget
---@param spacerSize FVector2D
function UStoreScreen:InsertSpacer(pTargetWidget, spacerSize) end
---@param pageName FString
function UStoreScreen:GoToStorePageByPageName(pageName) end
function UStoreScreen:GoToPrizePackScreen() end
---@param row int32
---@param subRow int32
---@param subCol int32
---@return UStoreItemTile_Base
function UStoreScreen:GetTileForSubRowAndCol(row, subRow, subCol) end
---@param tileType EStoreItemTileType
---@return TSubclassOf<UStoreItemTile>
function UStoreScreen:GetStoreTileClassForType(tileType) end
---@param Guid FString
---@return UStoreItemTile_Base
function UStoreScreen:GetStoreItemTileFromGUID(Guid) end
---@param pageName FString
---@return int32
function UStoreScreen:GetPageIndexForPageName(pageName) end
---@param pageStruct FStorePageStruct
---@return int32
function UStoreScreen:GetNumDaysUntilPageExpires(pageStruct) end
---@param Index int32
---@param row int32
---@param Direction ESelectionNavigation
---@return UStoreItemTile_Base
function UStoreScreen:GetNavigationTargetForIndex(Index, row, Direction) end
---@param row int32
---@return int32
function UStoreScreen:GetMaxSubRowForRow(row) end
---@param row int32
---@return int32
function UStoreScreen:GetMaxColumnForRow(row) end
---@param storeData FStoreItemData
---@return FStoreItemTileData
function UStoreScreen:GetItemTileDataForStoreItem(storeData) end
---@return FText
function UStoreScreen:GetCurrentPageTitle() end
---@param pButton UNavButton
---@return int32
function UStoreScreen:GetCatalogRowForNavButton(pButton) end
---@param bUp boolean
---@return UNavButton
function UStoreScreen:GetBestButtonCandidateForMouseScroll(bUp) end
function UStoreScreen:DeSelectAllTiles() end
---@param pTargetWidget UVerticalBox
---@param TargetPage FStorePageStruct
function UStoreScreen:ConstructStorefront(pTargetWidget, TargetPage) end
function UStoreScreen:ClearDataForRefresh() end
function UStoreScreen:CheckPageDataGeneration() end
---@param pageID FString
---@param bWithHC boolean
function UStoreScreen:AttemptPurchasePage(pageID, bWithHC) end
---@param bPageAbove boolean
function UStoreScreen:AttemptJumpToNextCatalogSubPage(bPageAbove) end
---@param targetRow int32
function UStoreScreen:AttemptJumpToCatalogRow(targetRow) end
---@param numRows int32
function UStoreScreen:AttemptJumpNumCatalogRows(numRows) end


---@class UStoreSideBarTile : UUserWidget
---@field mpButton UNavButton
---@field mpTextBlock UTextBlock
---@field mIndex int32
---@field mpOwningStoreScreen UStoreScreen
UStoreSideBarTile = {}

---@param Title FText
function UStoreSideBarTile:SetTitleDirectly(Title) end
---@param Title FText
function UStoreSideBarTile:SetDisabledButton(Title) end
---@param Title FText
---@param pOwningScreen UStoreScreen
---@param Index int32
function UStoreSideBarTile:PopulateData(Title, pOwningScreen, Index) end
function UStoreSideBarTile:OnButtonClicked() end
---@return UNavButton
function UStoreSideBarTile:GetNavButton() end


---@class UStoreTileBannerWidget : UMetaWidget
---@field mExpiryTime FUtcDateTime
---@field mpIndicatorExtensionImage UImage
---@field mpTimerCountdownWidget UTimerCountdownWidget
---@field mpContentSwitcher UWidgetSwitcher
---@field mpMessageText UTextBlock
---@field mpBackgroundBorder UBorder
UStoreTileBannerWidget = {}

---@param col FColor
function UStoreTileBannerWidget:SetTintColor(col) end
---@param col FSlateColor
function UStoreTileBannerWidget:SetTextColor(col) end
---@param Message FText
function UStoreTileBannerWidget:SetMessageToDisplay(Message) end
---@param bNewValue boolean
function UStoreTileBannerWidget:SetIndicatorExtensionVisibility(bNewValue) end
---@param NewTime FUtcDateTime
function UStoreTileBannerWidget:SetExpiryTime(NewTime) end
function UStoreTileBannerWidget:FindSyncWidgets() end


---@class UStoreTimerWidget : UMetaWidget
---@field mExpiryTime FUtcDateTime
---@field mpIndicatorExtensionImage UImage
---@field mpTimerCountdownWidget UTimerCountdownWidget
UStoreTimerWidget = {}

---@param bNewValue boolean
function UStoreTimerWidget:SetIndicatorExtensionVisibility(bNewValue) end
---@param NewTime FUtcDateTime
function UStoreTimerWidget:SetExpiryTime(NewTime) end


---@class USurfaceImpactManager : UActorComponent
---@field mpOwningActor AActor
---@field mAttackDecalMaterials TMap<EAttackDecalType, UMaterialInstance>
---@field mAttackParticleTemplates TMap<EAttackDecalType, UParticleSystem>
USurfaceImpactManager = {}



---@class USwitchButton : UUserWidget
---@field DefaultSelected boolean
---@field SelectedBorderColor FLinearColor
---@field UnselectedBorderColor FLinearColor
---@field SelectedTextColor FLinearColor
---@field UnselectedTextColor FLinearColor
---@field ButtonText FText
---@field mpButton UButton
---@field mpBorder UBorder
---@field mpText UTextBlock
USwitchButton = {}



---@class USystemScreen : UBaseScreen
---@field mpReturnButton UTextHighlightUserButton
---@field mpOptionsButton UTextHighlightUserButton
---@field mpProfileButton UTextHighlightUserButton
---@field mpCreditsButton UTextHighlightUserButton
---@field mpSignOutButton UTextHighlightUserButton
---@field mpLeaveLobbyButton UTextHighlightUserButton
---@field mpExitGameButton UTextHighlightUserButton
---@field mReturnTabIndex int32
USystemScreen = {}

function USystemScreen:OnSignOut() end
function USystemScreen:OnReturn() end
function USystemScreen:OnProfile() end
function USystemScreen:OnOptions() end
function USystemScreen:OnLeaveLobby() end
function USystemScreen:OnExitGame() end
function USystemScreen:OnCredits() end


---@class UTalismanSkinDataAsset : UTeenWeaponSkinDataAsset
---@field mpMainBeamParticleSystem FSkinParticleSystem
---@field mpWeakBeamParticleSystem FSkinParticleSystem
---@field mpBeamHitParticleSystem FSkinParticleSystem
---@field mpAbsorbParticleSystem FSkinParticleSystem
---@field mWiseTalismanSwitch EWise_WEP_Talisman
UTalismanSkinDataAsset = {}



---@class UTeenClothingComponent : UBaseCustomizationComponent
---@field mpPhysicsAssets TArray<UPhysicsAsset>
---@field mpUndeadClothingDataAsset UClothingItemDataAsset
---@field mpMaleSnowmanClothingDataAsset UClothingItemDataAsset
---@field mpFemaleSnowmanClothingDataAsset UClothingItemDataAsset
---@field mRequiredItems TArray<FLoadoutItem>
---@field mpClothReplacementDataAsset UClothingItemDataAsset
---@field mbMeshSlotVisibilitySet boolean
---@field mQueueMeshUpdate int32
---@field mLoadedNamedMeshes TMap<FName, USkeletalMesh>
---@field mClothingDataAssets TArray<UClothingItemDataAsset>
---@field mRecordedMeshSlotVisibility TMap<EMeshSlot, FRecordedMeshSlotVisibility>
---@field mBodyShapePresetName FString
---@field mCurrentLeftFootSettings FFeetClothingSettings
---@field mCurrentRightFootSettings FFeetClothingSettings
---@field mpMasterPostComponent USkeletalMeshComponent
---@field mpClothingMeshComponents TArray<FMeshSlotComponent>
---@field mpPreviousClothingMeshComponents TArray<FMeshSlotComponent>
---@field mSpawnedFXComponents TArray<FStatusMappingTarget>
---@field mFeastTints TArray<FLinearColor>
---@field mFootstepDecalSize float
---@field mPreviousHeadTransform FTransform
---@field mCurrentWindLinear FVector
---@field mCurrentWindAngular float
---@field mAccumulatedWindAngular float
---@field mResetCounter int32
---@field mbUseClothingAnimInstances boolean
---@field mbEnableLoadoutTransitions boolean
---@field mpLocomotionOverride UBlendSpaceBase
UTeenClothingComponent = {}

function UTeenClothingComponent:UpdateClothReset() end
---@return boolean
function UTeenClothingComponent:ShouldUseClothingAnimInstances() end
---@param bSet boolean
function UTeenClothingComponent:SetUseClothingAnimInstances(bSet) end
function UTeenClothingComponent:SetupSkeletalMeshComponentAttachment() end
---@param bSet boolean
function UTeenClothingComponent:SetUpdateAnimationInEditor(bSet) end
---@param bRenderCustomDepth boolean
---@param CustomDepthStencilValue int32
function UTeenClothingComponent:SetRenderCustomDepth(bRenderCustomDepth, CustomDepthStencilValue) end
---@param mpHeadComponent USkeletalMeshComponent
function UTeenClothingComponent:SetOwningHeadSkeletalMeshComponent(mpHeadComponent) end
---@param bIsVisible boolean
---@param bRenderMainPass boolean
---@param bCastShadow boolean
---@param bCastCapsuleShadow boolean
function UTeenClothingComponent:SetMeshVisibility(bIsVisible, bRenderMainPass, bCastShadow, bCastCapsuleShadow) end
---@param pComponent USkeletalMeshComponent
---@param ParameterName FName
---@param Value float
function UTeenClothingComponent:SetMaterialPropertyOnComponent(pComponent, ParameterName, Value) end
---@param ParameterName FName
---@param Value float
---@param bPreviousLoadout boolean
function UTeenClothingComponent:SetMaterialPropertyForAllMeshes(ParameterName, Value, bPreviousLoadout) end
---@param pLocomotionOverride UBlendSpaceBase
function UTeenClothingComponent:SetLocomotionOverride(pLocomotionOverride) end
---@param bSet boolean
function UTeenClothingComponent:SetEnableLoadoutTransitions(bSet) end
---@param bSet boolean
function UTeenClothingComponent:SetAllOwnerNoSee(bSet) end
function UTeenClothingComponent:ResetMeshSlotVisibility() end
function UTeenClothingComponent:OnClothingItemResourcesLoaded() end
function UTeenClothingComponent:MulticastAllToggleSnowman() end
---@param pClothingItemReplacement UClothingItemDataAsset
function UTeenClothingComponent:MulticastAllSetClothReplacement(pClothingItemReplacement) end
function UTeenClothingComponent:MulticastAllBecomeUndead() end
function UTeenClothingComponent:MulticastAllBecomeAlive() end
---@return boolean
function UTeenClothingComponent:HasUnsafeClothingEquipped() end
---@return boolean
function UTeenClothingComponent:HasBulkyClothingEquipped() end
---@param meshSlot EMeshSlot
---@return uint8
function UTeenClothingComponent:GetMeshSlotHideLayerPriority(meshSlot) end
---@return TArray<USkeletalMeshComponent>
function UTeenClothingComponent:GetMeshComponents() end
---@return UBlendSpaceBase
function UTeenClothingComponent:GetLocomotionOverride() end
---@param bLeftFoot boolean
---@return FFeetClothingSettings
function UTeenClothingComponent:GetFootClothingSettings(bLeftFoot) end
---@return TArray<FLinearColor>
function UTeenClothingComponent:GetFeastTints() end
---@return UClothingItemDataAsset
function UTeenClothingComponent:GetClothReplacementDataAsset() end
---@param outSlots TArray<uint32>
function UTeenClothingComponent:GetClothingUISlots(outSlots) end
---@return TArray<UClothingItemDataAsset>
function UTeenClothingComponent:GetClothingDataAssets() end
---@param meshSlot EMeshSlot
---@return TArray<USkeletalMeshComponent>
function UTeenClothingComponent:GetClothingComponentsBySlot(meshSlot) end
---@param clothingAssets TArray<UClothingItemDataAsset>
function UTeenClothingComponent:EquipClothingItemDataAssets(clothingAssets) end
---@param pComponent USkeletalMeshComponent
function UTeenClothingComponent:ConvertMaterialsToDynamicByComponent(pComponent) end
function UTeenClothingComponent:ConvertMaterialsToDynamic() end
function UTeenClothingComponent:BecomeUndead() end
function UTeenClothingComponent:BecomeAlive() end
---@param animationConfigs TArray<UAnimationConfig>
function UTeenClothingComponent:ApplyAnimationConfigs(animationConfigs) end


---@class UTeenPerkItemListWidget : UBaseItemList
UTeenPerkItemListWidget = {}

---@param dir ESelectionNavigation
function UTeenPerkItemListWidget:OnListNavigation(dir) end


---@class UTeenPerkItemTileWidget : UBaseItemTile
---@field AffinityBackgrounds TMap<EPerkAffinityType, UTexture2D>
---@field AffinityBorders TMap<EPerkAffinityType, UTexture2D>
---@field EvilBackgrounds TMap<ECharacterType, UTexture2D>
---@field EvilBorders TMap<ECharacterType, UTexture2D>
---@field DisabledColor FLinearColor
---@field HighlightColor FLinearColor
---@field SelectionColor FLinearColor
---@field EquippedColor FLinearColor
---@field mpCostPanel UCanvasPanel
---@field mpCostText UTextBlock
---@field mpPerkTierWidget UPerkTierWidget
---@field mPerkAffinityType EPerkAffinityType
UTeenPerkItemTileWidget = {}



---@class UTeenSpectralDataAsset : USpectralDataAsset
---@field mDeadSpectralMesh FSkinSkeletalMesh
UTeenSpectralDataAsset = {}



---@class UTeenWeaponSkinDataAsset : UItemDataAsset
---@field mpWeaponBlueprint TSubclassOf<AWeaponBase>
---@field mpSpawnableActorClass TSubclassOf<AActor>
---@field bShowSpawnableInFrontEnd boolean
---@field mWeaponMeshSkin FSkinSkeletalMesh
---@field mWeaponType EWeaponTypeEnum
---@field mpFrontEndAnimation UAnimSequence
UTeenWeaponSkinDataAsset = {}

---@return UClass
function UTeenWeaponSkinDataAsset:GetSpawnableActorClass() end
---@return UAnimSequence
function UTeenWeaponSkinDataAsset:GetFrontEndOverrideAnim() end


---@class UTensionManager : USceneComponent
---@field mpOwningActor AActor
---@field mLastEvilChaseCharacterType ECharacterType
UTensionManager = {}

---@return ECharacterType
function UTensionManager:GetLastEvilChaseCharacterType() end


---@class UTestControllerBase : UGauntletTestController
UTestControllerBase = {}


---@class UTestControllerReplay : UTestControllerBase
---@field mpReplayPC AReplayPC
UTestControllerReplay = {}

function UTestControllerReplay:UpdateCaptureReplay() end
function UTestControllerReplay:UnpauseUpdate() end
function UTestControllerReplay:SetShouldResume() end
function UTestControllerReplay:SetShouldPlayNext() end
function UTestControllerReplay:FinishTest() end
function UTestControllerReplay:ExecStatStopFile() end
function UTestControllerReplay:ExecStatStartFile() end


---@class UTextCounterUserButton : UTextUserButton
---@field IconTexture UTexture2D
---@field IconTextureBG UTexture2D
---@field ShowWhenEmpty boolean
---@field mpCountBox UHorizontalBox
---@field mpCountIcon UImage
---@field mpCountIconBG UImage
---@field mpCountTextBlock URichTextBlock
UTextCounterUserButton = {}



---@class UTextEntryModalWidget : UBaseModal
---@field mpTextBox UEditableTextBox
---@field mpMessageText UTextBlock
---@field mpSubmitButton UBoxUserButton
---@field mpCancelButton UBoxUserButton
UTextEntryModalWidget = {}

---@param Text FText
function UTextEntryModalWidget:ValidateProductCode(Text) end
function UTextEntryModalWidget:SetupProductCodeValidationDelegate() end
---@param ButtonText FText
function UTextEntryModalWidget:SetSubmitButtonText(ButtonText) end
---@param messageText FText
function UTextEntryModalWidget:SetMessageText(messageText) end
---@param HintText FText
function UTextEntryModalWidget:SetHintText(HintText) end
function UTextEntryModalWidget:OnSubmitPressed() end
---@param Text FText
---@param CommitType ETextCommit::Type
function UTextEntryModalWidget:OnLoginCredentialsTextCommit(Text, CommitType) end
function UTextEntryModalWidget:OnCancelPressed() end
---@return UEditableTextBox
function UTextEntryModalWidget:GetEditTextBox() end


---@class UTextHighlightUserButton : UTextUserButton
UTextHighlightUserButton = {}


---@class UTextNavButton : UNavButton
UTextNavButton = {}


---@class UTextShadowUserButton : UTextUserButton
---@field TeenMaterial UMaterialInstance
---@field EvilMaterial UMaterialInstance
---@field EventMaterials TMap<ESeasonalEventType, UMaterialInstance>
---@field mpShadowText UTextBlock
UTextShadowUserButton = {}



---@class UTextStateSwitch : UWidgetSwitcher
UTextStateSwitch = {}

---@param stateString FString
function UTextStateSwitch:SetState(stateString) end


---@class UTextToastWidget : UBaseToast
UTextToastWidget = {}


---@class UTextUserButton : UBaseUserButton
---@field Text FText
---@field Font FSlateFontInfo
---@field ColorOnSelect boolean
---@field mpTextBlock UTextBlock
UTextUserButton = {}



---@class UThemeButton : UButton
---@field UsePrimaryThemeColor boolean
---@field UseSecondaryThemeColor boolean
---@field mpChildBorder UBorder
---@field mpChildImage UImage
UThemeButton = {}

function UThemeButton:SimulateRelease() end
function UThemeButton:SimulatePress() end
function UThemeButton:OnSeasonalEventTypeChanged() end


---@class UTimerCountdownWidget : UUserWidget
---@field mpDaysBox UHorizontalBox
---@field mpHoursBox UHorizontalBox
---@field mpMinutesBox UHorizontalBox
---@field mpSecondsBox UHorizontalBox
---@field mpDaysValueText UTextBlock
---@field mpHoursValueText UTextBlock
---@field mpMinutesValueText UTextBlock
---@field mpSecondsValueText UTextBlock
---@field mpDaysTitleText UTextBlock
---@field mpHoursTitleText UTextBlock
---@field mpMinutesTitleText UTextBlock
---@field mpSecondsTitleText UTextBlock
---@field mpLeftText UTextBlock
---@field mEndTime FUtcDateTime
---@field mbUseMovieTimeFormatting boolean
---@field mbUseStoreTimeFormatting boolean
---@field mTextColor FSlateColor
UTimerCountdownWidget = {}



---@class UTipsManager : UObject
---@field mAllTipsDataTable UDataTable
---@field mTipsHistory TArray<FTip>
---@field mAllTips TMap<FString, FTip>
UTipsManager = {}

---@param Tip FTip
---@return boolean
function UTipsManager:WillTipBeShown(Tip) end
function UTipsManager:SubmitTipsProgressToSaveFile() end
function UTipsManager:Shutdown() end
---@param Tip FTip
---@return boolean
function UTipsManager:ShouldShowTip(Tip) end
---@param tipId FString
function UTipsManager:RequestTip(tipId) end
function UTipsManager:LoadAllTips() end
---@return boolean
function UTipsManager:IsShowingTip() end
function UTipsManager:Initialize() end
---@param tipId FString
---@return FTip
function UTipsManager:GetTip(tipId) end
function UTipsManager:GetSavedTipsProgress() end
---@param DeltaSeconds float
function UTipsManager:DoTick(DeltaSeconds) end
---@param tipId FString
---@return boolean
function UTipsManager:DoesTipExist(tipId) end
---@param TipText FText
---@return boolean
function UTipsManager:DoesHistoryContainTip(TipText) end
function UTipsManager:ClearAllTipsProgress() end


---@class UTipsPanelWidget : UUserWidget
---@field mpInGametipWidget UInGameTipWidget
UTipsPanelWidget = {}

---@param Tip FTip
function UTipsPanelWidget:ShowTip(Tip) end
---@return boolean
function UTipsPanelWidget:IsShowingTip() end


---@class UToadAnimInstance : UEvilCharAnimInstance
---@field mToadAnimInstanceData FToadAnimInstanceData
UToadAnimInstance = {}



---@class UToadArmourEffectComponent : UActorComponent
---@field mArmourPieces TArray<FToadArmourPiece>
---@field mpArmourNiagaraComponent UNiagaraComponent
---@field mpArmourNiagaraSystem UNiagaraSystem
UToadArmourEffectComponent = {}

---@param EventName FName
---@param EmitterTime float
---@param ParticleTime int32
---@param Location FVector
---@param Velocity FVector
---@param Direction FVector
---@param Normal FVector
---@param BoneName FName
---@param PhysMat UPhysicalMaterial
function UToadArmourEffectComponent:OnParticleHit(EventName, EmitterTime, ParticleTime, Location, Velocity, Direction, Normal, BoneName, PhysMat) end


---@class UToadSkinDataAsset : UEvilSkinDataAsset
---@field mToadArmourPieces TArray<USkeletalMesh>
---@field mToadFPArmourPieces TArray<USkeletalMesh>
---@field mArmourParticleSystem FSkinParticleSystem
---@field mpArmourAnimInstanceClass TSubclassOf<UAnimInstance>
---@field mArmourCollisionDecal FSkinDecal
UToadSkinDataAsset = {}



---@class UToastWidget : UUserWidget
---@field mpToastOverlay UOverlay
---@field mpPersistentOverlay UOverlay
---@field mpContentBorder UBorder
---@field mpPersistentBorder UBorder
---@field mpToastText UTextBlock
---@field mpErrorCodeText UTextBlock
---@field mpCloseButton UButton
---@field mpProgressImage UImage
---@field mpMaximizeButton UButton
---@field mpAnimateInAnim UWidgetAnimation
---@field mpAnimateOutAnim UWidgetAnimation
---@field mpShowPersistentAnim UWidgetAnimation
---@field mpProgressMaterialInstance UMaterialInstance
---@field mpDynProgressMaterialInstance UMaterialInstanceDynamic
UToastWidget = {}

function UToastWidget:OnMaximizePressed() end
function UToastWidget:OnClosePressed() end
function UToastWidget:OnAnimateOutFinished() end
function UToastWidget:OnAnimateInFinished() end


---@class UToasterWidget : UUserWidget
---@field mpToastBox UVerticalBox
UToasterWidget = {}

---@param pToast UBaseToast
function UToasterWidget:RemoveToast(pToast) end
function UToasterWidget:ClearAll() end
---@param pWorld UWorld
---@return boolean
function UToasterWidget:AreSocialNotificationsAllowed(pWorld) end
---@param pToast UBaseToast
function UToasterWidget:AddToast(pToast) end


---@class UToggleUserButton : UBaseUserButton
---@field Text FText
---@field TextAlt FText
---@field Font FSlateFontInfo
---@field mpNavButtonAlt UNavButton
---@field mpNormalImageAlt UImage
---@field mpHighlightImageAlt UImage
---@field mpActiveImage UImage
---@field mpActiveImageAlt UImage
---@field mpTextBlock UTextBlock
---@field mpTextBlockAlt UTextBlock
UToggleUserButton = {}

function UToggleUserButton:OnOnPressed() end
function UToggleUserButton:OnOffPressed() end
---@param dir ESelectionNavigation
function UToggleUserButton:OnNavDirection(dir) end
function UToggleUserButton:OnAltUnselected() end
function UToggleUserButton:OnAltSelected() end


---@class UTornStatusComponent : UBaseStatusComponent
UTornStatusComponent = {}


---@class UTritonBakeAcousticsCommandletMaterialUserData : UAssetUserData
---@field Absorptivity float
---@field AssignedMaterialName FString
UTritonBakeAcousticsCommandletMaterialUserData = {}



---@class UTritonBakeCommandlet : UCommandlet
UTritonBakeCommandlet = {}

---@param NavData ANavigationData
function UTritonBakeCommandlet:NavBuildFinished(NavData) end


---@class UTutorialsTrainingOverlayWidget : UBaseOverlay
---@field mpTeenTutorialButton UImageTextUserButton
---@field mpEvilTutorialButton UImageTextUserButton
---@field mpTeenTrainingButton UImageTextUserButton
---@field mpEvilTrainingButton UImageTextUserButton
UTutorialsTrainingOverlayWidget = {}

function UTutorialsTrainingOverlayWidget:OnTeenTutorialPressed() end
function UTutorialsTrainingOverlayWidget:OnTeenTrainingPressed() end
function UTutorialsTrainingOverlayWidget:OnMonsterTrainingPressed() end
function UTutorialsTrainingOverlayWidget:OnEvilTutorialPressed() end


---@class UTypeWriterWidget : UUserWidget
---@field mpCanvasPanel UCanvasPanel
---@field mpRichTextBlock URichTextBlock
UTypeWriterWidget = {}

---@param textToSet FText
---@param timeToSet float
function UTypeWriterWidget:SetTextInSeconds(textToSet, timeToSet) end


---@class UUISlotItemListWidget : UBaseItemList
UUISlotItemListWidget = {}


---@class UUnbuiltObjectsCommandlet : UCommandlet
UUnbuiltObjectsCommandlet = {}


---@class UUnlockedItemRewardCard : UUserWidget
---@field mpUnlockedItemImage UImage
---@field mpUnlockedItemStigmaImage UImage
---@field mpUnlockedItemName UTextBlock
---@field mpUnlockedItemStigma UTextBlock
---@field mpDiamondBG UImage
UUnlockedItemRewardCard = {}

---@param weaponType EWeaponTypeEnum
---@param unlockedItemID FDbItemId
function UUnlockedItemRewardCard:PopulateUnlockableWeaponProperty(weaponType, unlockedItemID) end
---@param weaponType EWeaponTypeEnum
function UUnlockedItemRewardCard:PopulateUnlockableNewWeapon(weaponType) end
---@param pTex UTexture2D
function UUnlockedItemRewardCard:OnTextureLoaded(pTex) end


---@class UUtilityBTComponent : UBehaviorTreeComponent
---@field mTagStackContainer FGameplayTagStackContainer
UUtilityBTComponent = {}

---@param GameplayTag FGameplayTag
---@param Value float
function UUtilityBTComponent:SetTagValue(GameplayTag, Value) end
---@param GameplayTag FGameplayTag
---@return float
function UUtilityBTComponent:GetTagValue(GameplayTag) end
---@param pAIController AAIController
---@return UUtilityBTComponent
function UUtilityBTComponent:GetSmartTeenBT(pAIController) end
---@param rootTag FName
---@param LayerName FName
---@return TArray<FGameplayTagStack>
function UUtilityBTComponent:GetScores(rootTag, LayerName) end
---@param bestN int32
---@return TArray<FGameplayTag>
function UUtilityBTComponent:GetBestActions(bestN) end
---@param rootTag FName
---@return TArray<FGameplayTagStack>
function UUtilityBTComponent:GetActionScores(rootTag) end


---@class UVersionNumberTextBlock : UTextBlock
UVersionNumberTextBlock = {}

---@return FText
function UVersionNumberTextBlock:StreamString() end
---@return FText
function UVersionNumberTextBlock:RawBrandString() end
---@return boolean
function UVersionNumberTextBlock:IsNoSteam() end
---@return boolean
function UVersionNumberTextBlock:IsNoSku() end
---@return FString
function UVersionNumberTextBlock:GetBuildNumberAsFString() end
---@return FText
function UVersionNumberTextBlock:BuildNumberString() end
---@return FText
function UVersionNumberTextBlock:BrandString() end


---@class UVideoTab : UBaseTab
---@field mpNavScrollBox UNavScrollBox
---@field mpDisplayMode UOptionSelectorUserButton
---@field mpResolution UOptionResolutionUserButton
---@field mpFrameRateLimit UOptionSelectorUserButton
---@field mpMenuFrameRateLimit UOptionSelectorUserButton
---@field mpVSync UOptionToggleUserButton
---@field mpGamma UOptionSliderUserButton
---@field mpQualityPreset UOptionSelectorUserButton
---@field mpShadowQuality UOptionSelectorUserButton
---@field mpAntiAliasQuality UOptionSelectorUserButton
---@field mpTextureQuality UOptionSelectorUserButton
---@field mpEffectsQuality UOptionSelectorUserButton
---@field mpPostProcessingQuality UOptionSelectorUserButton
---@field mpDLSSMode UOptionSelectorUserButton
---@field mpColorBlindMode UOptionSelectorUserButton
---@field mpRenderingMode UOptionSelectorUserButton
---@field mpColorBlindIntensity UOptionSliderUserButton
---@field mpResolutionScale UOptionSliderUserButton
---@field mpRestoreDefaultsButton UOptionSingleUserButton
UVideoTab = {}

---@param Mode EWindowMode::Type
function UVideoTab:SetWindowMode(Mode) end
---@param bSet boolean
function UVideoTab:SetVSync(bSet) end
---@param Settings EQualitySetting
function UVideoTab:SetTextureQuality(Settings) end
---@param Settings EQualitySetting
function UVideoTab:SetShadowQuality(Settings) end
---@param Value float
function UVideoTab:SetResolutionScale(Value) end
---@param Resolution FIntPoint
function UVideoTab:SetResolution(Resolution) end
---@param setting ERendererSetting
function UVideoTab:SetRenderingMode(setting) end
---@param Settings EQualitySetting
function UVideoTab:SetPostProcessing(Settings) end
---@param setting EFrameRateSetting
function UVideoTab:SetMenuFrameRateLimit(setting) end
---@param Settings EQualitySetting
function UVideoTab:SetMasterQualitySettings(Settings) end
---@param setting EFrameRateSetting
function UVideoTab:SetFrameRateLimit(setting) end
---@param Settings EQualitySetting
function UVideoTab:SetEffectsQuality(Settings) end
---@param Mode UDLSSMode
function UVideoTab:SetDLSSMode(Mode) end
---@param newGamma float
function UVideoTab:SetDisplayGamma(newGamma) end
---@param Mode EColorVisionDeficiency
function UVideoTab:SetColorBlindMode(Mode) end
---@param Value float
function UVideoTab:SetColorBlindIntensity(Value) end
---@param Settings EQualitySetting
function UVideoTab:SetAntiAliasing(Settings) end
function UVideoTab:OnResetDefaultsPressed() end
function UVideoTab:OnResetDefaultsConfirmed() end
function UVideoTab:OnQualitySelectionChanged() end
function UVideoTab:OnMainQualityChanged() end
---@param NewValue float
function UVideoTab:OnGammaSliderValueChanged(NewValue) end


---@class UVoiceChatMenuScreen : UBaseScreen
---@field mpSocialVoiceMasterWidget USocialVoiceMasterWidget
UVoiceChatMenuScreen = {}



---@class UWalkieEffectComponent : USceneComponent
---@field mpEffectNiagaraComponent UNiagaraComponent
---@field mNiagaraSystemPath TSoftObjectPtr<UNiagaraSystem>
---@field mbIsEffectActive boolean
UWalkieEffectComponent = {}



---@class UWeaponChargeWidget : UUserWidget
UWeaponChargeWidget = {}

function UWeaponChargeWidget:StartPulseDropWeaponPrompt() end


---@class UWeaponCustomizationScreen : UBaseScreen
---@field WeaponModItemClass TSubclassOf<UWeaponPowerItemTileWidget>
---@field WeaponModPadding FMargin
---@field mpWeaponExpWidget UWeaponExpWidget
---@field mpCategorySwitcher UCategorySwitcher
---@field mpWidgetSwitcher UWidgetSwitcher
---@field mpSkinsOverlay UOverlay
---@field mpModsOverlay UOverlay
---@field mpSkinItemList UBaseItemList
---@field mpWeaponSkinName UTextBlock
---@field mpNonSelectableScrollBox UNonSelectableScrollBox
---@field mpWeaponSkinDescriptionText URichTextBlock
---@field mpWeaponSkinRarityBorder UBorder
---@field mpWeaponSkinRarityText UTextBlock
---@field mpSkinActionButton UActionButton
---@field mpModNameText UTextBlock
---@field mpPowersBox UHorizontalBox
---@field mpModsProsOverlay UOverlay
---@field mpModsProsText URichTextBlock
---@field mpModsConsOverlay UOverlay
---@field mpModsConsText URichTextBlock
---@field mpModsActionButton UActionButton
UWeaponCustomizationScreen = {}

---@param bIsUnlocked boolean
---@param bIsEquipped boolean
---@param bAllowedToUnequip boolean
function UWeaponCustomizationScreen:UpdateActionButton(bIsUnlocked, bIsEquipped, bAllowedToUnequip) end
---@param ItemId FDbItemId
function UWeaponCustomizationScreen:PopulatePowerDetails(ItemId) end
---@param DbItemId FDbItemId
---@param Grantable FGrantable
function UWeaponCustomizationScreen:OnWeaponSkinSelected(DbItemId, Grantable) end
---@param DbItemId FDbItemId
---@param Grantable FGrantable
function UWeaponCustomizationScreen:OnWeaponPowerSelected(DbItemId, Grantable) end
function UWeaponCustomizationScreen:OnSkinsActionPressed() end
function UWeaponCustomizationScreen:OnPreCharacterSelected() end
function UWeaponCustomizationScreen:OnModsActionPressed() end
---@param cat int32
function UWeaponCustomizationScreen:OnCategoryChanged(cat) end
---@param loadoutChanges TMap<FString, FDbItemId>
function UWeaponCustomizationScreen:AddAnalytics(loadoutChanges) end


---@class UWeaponDataAsset : UDataAsset
---@field mWeaponName FText
---@field mDamageType EDamageType
---@field mWeaponType EWeaponTypeEnum
UWeaponDataAsset = {}



---@class UWeaponExpWidget : UMetaWidget
---@field mpWeaponExpText UTextBlock
---@field mpLevelTitle UTextBlock
---@field mpLevelText UTextBlock
---@field mpExpBorder UBorder
UWeaponExpWidget = {}



---@class UWeaponInfoWidget : UMetaWidget
---@field mpNameText UTextBlock
---@field mpDescriptionText UTextBlock
---@field mpWeaponLevelWidget UWeaponLevelWidget
UWeaponInfoWidget = {}



---@class UWeaponLevelWidget : UMetaWidget
---@field ShowExperience boolean
---@field mpWeaponIcon UImage
---@field mpExpText UTextBlock
---@field mpExpBox UHorizontalBox
---@field mpExpProgress UImage
UWeaponLevelWidget = {}



---@class UWeaponLoadout : ULoadoutBase
UWeaponLoadout = {}


---@class UWeaponManager : UObject
---@field mOwningClientStateManager TWeakObjectPtr<UClientStateManager>
---@field mAllWeaponDataAssets TArray<UWeaponDataAsset>
---@field mInEditorWeapons TArray<EWeaponTypeEnum>
UWeaponManager = {}



---@class UWeaponPowerItemListWidget : UBaseItemList
UWeaponPowerItemListWidget = {}


---@class UWeaponPowerItemTileWidget : UBaseItemTile
---@field mpStatusLockedText UTextBlock
UWeaponPowerItemTileWidget = {}



---@class UWeaponPowerListWidget : UMetaWidget
---@field mpPowerList UBaseItemList
UWeaponPowerListWidget = {}

---@param ItemId FDbItemId
---@param Grantable FGrantable
function UWeaponPowerListWidget:OnWeaponPowerSelected(ItemId, Grantable) end
function UWeaponPowerListWidget:OnActionPressed() end
function UWeaponPowerListWidget:OnAction() end


---@class UWeaponProgressBar : UBaseActionProgressBar
UWeaponProgressBar = {}


---@class UWeaponRewardProgressCardWidget : UUserWidget
---@field mpRewardProgressWidget UEORRewardProgressWidget
---@field mpLVLNumberText UTextBlock
---@field mpWeaponCardImage UImage
---@field mpWeaponName UTextBlock
UWeaponRewardProgressCardWidget = {}



---@class UWeaponRewardsOverlayWidget : UUserWidget
---@field mpRewardCategoryOn UWidgetAnimation
---@field mpRewardCategoryOff UWidgetAnimation
---@field mpRewardOn UWidgetAnimation
---@field mpRewardOff UWidgetAnimation
---@field mpUnlockedNewWeaponOn UWidgetAnimation
---@field mpUnlockedNewWeaponOff UWidgetAnimation
---@field mTimeTakesToTransition float
---@field mTimeToFinishProgression float
---@field mpNewWeaponUnlockedPanel UCanvasPanel
---@field mpProgressSwitcher UWidgetSwitcher
---@field mpUnlockTextSwitcher UWidgetSwitcher
---@field mpRewardCategoryPanel UCanvasPanel
---@field mpRewardPanel UCanvasPanel
---@field mpStigmaRewardProgressCard UStigmaRewardProgressCardWidget
---@field mpWeaponRewardProgressCard UWeaponRewardProgressCardWidget
---@field mpUnlockedItemRewardCard UUnlockedItemRewardCard
UWeaponRewardsOverlayWidget = {}

---@param previousRewardsData FEORRewardsData
---@param currentRewardsData FEORRewardsData
function UWeaponRewardsOverlayWidget:SetRewardData(previousRewardsData, currentRewardsData) end
function UWeaponRewardsOverlayWidget:PopulateWeaponRewardsData() end
function UWeaponRewardsOverlayWidget:OnWeaponLevelUp() end
function UWeaponRewardsOverlayWidget:OnStigmaLevelUp() end
---@return boolean
function UWeaponRewardsOverlayWidget:HasShownAllProgress() end
---@param levelIndex int32
---@return FDbItemId
function UWeaponRewardsOverlayWidget:GetLevelReward(levelIndex) end


---@class UWeaponSelectButtonWidget : UMetaWidget
---@field mpButton UButton
---@field mpWeaponIcon UImage
---@field mpPowerBorder UBorder
---@field mpPowerIcon UImage
---@field mpLockImage UImage
---@field mpLevelText UTextBlock
---@field mpHighlightImage UImage
---@field mpNewFlagWidget UNewFlagWidget
UWeaponSelectButtonWidget = {}

---@param pTex UTexture2D
function UWeaponSelectButtonWidget:OnTextureLoaded(pTex) end
function UWeaponSelectButtonWidget:OnButtonSelected() end
function UWeaponSelectButtonWidget:OnButtonDoubleClicked() end
---@return UWeaponsScreen
function UWeaponSelectButtonWidget:GetWeaponsScreen() end
---@return UButton
function UWeaponSelectButtonWidget:GetButton() end


---@class UWeaponSkinItemTileWidget : UBaseItemTile
---@field mpStatusLockedText UTextBlock
UWeaponSkinItemTileWidget = {}



---@class UWeaponSkinListWidget : UScrollingSelectionWidget
UWeaponSkinListWidget = {}

---@param ItemId FDbItemId
function UWeaponSkinListWidget:SelectSkinById(ItemId) end
---@param ItemId FDbItemId
---@param Grantable FGrantable
function UWeaponSkinListWidget:OnWeaponSkinSelected(ItemId, Grantable) end
function UWeaponSkinListWidget:OnActionPressed() end


---@class UWeaponSkinManagerComponent : UBaseCustomizationComponent
---@field mpSelectedSkinIndexList TArray<int32>
---@field mpEquippedSkins TArray<UTeenWeaponSkinDataAsset>
---@field mDefaultSkins TMap<EWeaponTypeEnum, FLoadoutItem>
UWeaponSkinManagerComponent = {}

---@param pWeaponSkin TArray<UTeenWeaponSkinDataAsset>
function UWeaponSkinManagerComponent:ServerDebugEquipWeaponSkins(pWeaponSkin) end
---@param pWeaponSkin TArray<UTeenWeaponSkinDataAsset>
function UWeaponSkinManagerComponent:MulticastAllDebugEquipWeaponSkins(pWeaponSkin) end
---@param weaponType EWeaponTypeEnum
---@param skin int32
function UWeaponSkinManagerComponent:DoServerSetSelectedSkinForWeapon(weaponType, skin) end


---@class UWeaponSpawnableAnimInstance : UAnimInstance
---@field mFrontEndRotation FRotator
---@field mbIsInFrontEnd boolean
---@field mpOwnerWeapon AWeaponBase
UWeaponSpawnableAnimInstance = {}

---@param DeltaTime float
function UWeaponSpawnableAnimInstance:UpdateAnimData(DeltaTime) end
---@return UAnimSequence
function UWeaponSpawnableAnimInstance:GetOwnerFrontEndOverrideAnimation() end
---@return FWeaponAnimInstanceData
function UWeaponSpawnableAnimInstance:GetOwnerAnimData() end


---@class UWeaponStigmaButton : UUserWidget
---@field DamageType EDamageType
---@field StigmaData TMap<EDamageType, FStigmaData>
---@field mpButton UButton
---@field mpGlow UImage
---@field mpStigmaIcon UImage
---@field mpStigmaBorder UImage
---@field mpStigmaText UTextBlock
---@field mpNewFlagWidget UNewFlagWidget
UWeaponStigmaButton = {}

function UWeaponStigmaButton:OnButtonPressed() end


---@class UWeaponsScreen : UBaseScreen
---@field ButtonClass TSubclassOf<UWeaponSelectButtonWidget>
---@field StigmaTextures TMap<EDamageType, UTexture2D>
---@field mpBurnButton UWeaponStigmaButton
---@field mpHolyButton UWeaponStigmaButton
---@field mpOccultButton UWeaponStigmaButton
---@field mpShockButton UWeaponStigmaButton
---@field mpWeaponBox UHorizontalBox
---@field mpStyleBox UHorizontalBox
---@field mpWeaponNameText UTextBlock
---@field mpWeaponStyleText UTextBlock
---@field mpWeaponModBox UHorizontalBox
---@field mpWeaponModText UTextBlock
---@field mpDescriptionBorder UBorder
---@field mpWeaponDescriptionText URichTextBlock
---@field mpWeaponExpWidget UWeaponExpWidget
---@field mpSkinsButton UActionButton
---@field mpModsButton UActionButton
---@field mpStigmaBackground UImage
---@field mpCraftTimeTitleText UTextBlock
---@field mpCraftTimeAmountText UTextBlock
---@field mpWeaponAmmoTitleText UTextBlock
---@field mpWeaponAmmoAmountText UTextBlock
---@field mSelectedStigma EDamageType
---@field mSelectedWeapon EWeaponTypeEnum
UWeaponsScreen = {}

---@param weaponType EWeaponTypeEnum
---@param bForced boolean
function UWeaponsScreen:SelectWeapon(weaponType, bForced) end
---@param DamageType EDamageType
function UWeaponsScreen:SelectStigma(DamageType) end
function UWeaponsScreen:PopulateWeaponTypes() end
function UWeaponsScreen:OnSkinsPressed() end
function UWeaponsScreen:OnShockPressed() end
function UWeaponsScreen:OnOccultPressed() end
function UWeaponsScreen:OnModsPressed() end
function UWeaponsScreen:OnHolyPressed() end
function UWeaponsScreen:OnBurnPressed() end
---@param bSkins boolean
function UWeaponsScreen:DoCustomizeWeapon(bSkins) end


---@class UWheelItemData : UObject
---@field mpItemIcon UTexture2D
---@field mpItemName FText
UWheelItemData = {}



---@class UWheelItemData_WeaponSelection : UWheelItemData
---@field mWeaponType EWeaponTypeEnum
---@field mbBlockedByAugment boolean
UWheelItemData_WeaponSelection = {}



---@class UWidgetTemplate : UUserWidget
UWidgetTemplate = {}


---@class UWinLoseScreen : UBaseScreen
UWinLoseScreen = {}


---@class UWolfAnimInstance : UEvilCharAnimInstance
---@field mWolfAnimInstanceData FWolfAnimInstanceData
---@field mpOwnerWerewolfChar AWerewolfChar
---@field mbLocoTransitionComplete boolean
UWolfAnimInstance = {}

---@return boolean
function UWolfAnimInstance:ShouldUseCounterRotationArms() end
---@return FRotator
function UWolfAnimInstance:GetCounterRotationArms() end
---@param Notify UAnimNotify
function UWolfAnimInstance:AnimNotify_RightHandStep(Notify) end
---@param Notify UAnimNotify
function UWolfAnimInstance:AnimNotify_LocoTransitionStarted(Notify) end
---@param Notify UAnimNotify
function UWolfAnimInstance:AnimNotify_LocoTransitionComplete(Notify) end
---@param Notify UAnimNotify
function UWolfAnimInstance:AnimNotify_LeftHandStep(Notify) end
---@param Notify UAnimNotify
function UWolfAnimInstance:AnimNotify_HowlingLeft(Notify) end


---@class UWorldEffectsManager : UActorComponent
---@field mRandomSeed int32
---@field mpCachedExponentialHeightFogActor AExponentialHeightFog
---@field mManagedFXComponents TArray<FManagedFXComponent>
---@field mLocalViewState FLocalViewState
UWorldEffectsManager = {}

---@param pWorldContext UObject
---@param Visibility FEffectVisibility
---@param pOwningTPChar ATPChar
---@return boolean
function UWorldEffectsManager:ShouldEffectBeVisible(pWorldContext, Visibility, pOwningTPChar) end
function UWorldEffectsManager:SetRandomSeed() end
---@param pComponent USceneComponent
function UWorldEffectsManager:RemoveManagedFXComponent(pComponent) end
---@param pWorldEffectsTrigger AWorldEffectsTrigger
function UWorldEffectsManager:MulticastAllWorldEffectsTrigger(pWorldEffectsTrigger) end
---@return int32
function UWorldEffectsManager:GetRandomSeed() end
---@param pWorldContext UObject
---@return UWorldEffectsManager
function UWorldEffectsManager:GetInstance(pWorldContext) end
---@param pWorldEffectsTrigger AWorldEffectsTrigger
function UWorldEffectsManager:DoServerGetRandomSeed(pWorldEffectsTrigger) end
---@param pWorldEffectsTrigger AWorldEffectsTrigger
function UWorldEffectsManager:DoServerActivateWorldEffectsTrigger(pWorldEffectsTrigger) end
---@param pComponent USceneComponent
---@param Visibility FEffectVisibility
---@param pOwningTPChar ATPChar
function UWorldEffectsManager:AddManagedFXComponent(pComponent, Visibility, pOwningTPChar) end


---@class UYesNoModalWidget : UBaseModal
---@field mpMessageText URichTextBlock
---@field mpYesButton UBoxUserButton
---@field mpNoButton UBoxUserButton
UYesNoModalWidget = {}

---@param messageText FText
function UYesNoModalWidget:SetMessageText(messageText) end
---@param yesText FText
---@param noText FText
function UYesNoModalWidget:SetButtonText(yesText, noText) end
function UYesNoModalWidget:OnYesPressed() end
function UYesNoModalWidget:OnNoPressed() end


---@class UYesNoToastWidget : UBaseToast
---@field mpConfirmButton UButton
---@field mpDeclineButton UButton
UYesNoToastWidget = {}

function UYesNoToastWidget:OnDeclinePressed() end
function UYesNoToastWidget:OnConfirmPressed() end


